  I0111 00:35:31.364871      23 e2e.go:109] Starting e2e run "42ca63fb-bb74-4f2d-9cb2-4a383aaf716a" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1736555730 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0111 00:35:31.710923 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:35:31.712192 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0111 00:35:31.733809 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0111 00:35:31.736626 23 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-05b4ccc2' (0 seconds elapsed)
  I0111 00:35:31.736684 23 e2e.go:245] e2e test version: v1.32.0
  I0111 00:35:31.738966 23 e2e.go:254] kube-apiserver version: v1.32.0+k3s1
  I0111 00:35:31.739237 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:35:31.742739 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 01/11/25 00:35:31.925
  I0111 00:35:31.925416 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 00:35:31.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:35:32.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:35:32.123
  I0111 00:35:32.267748 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 create -f -'
  I0111 00:35:32.665419 23 builder.go:146] stderr: ""
  I0111 00:35:32.665463 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0111 00:35:32.665537 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 create -f -'
  I0111 00:35:33.451173 23 builder.go:146] stderr: ""
  I0111 00:35:33.451212 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/11/25 00:35:33.451
  I0111 00:35:34.482487 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:34.482536 23 framework.go:733] Found 0 / 1
  I0111 00:35:35.513374 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:35.513437 23 framework.go:733] Found 0 / 1
  I0111 00:35:36.507910 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:36.507981 23 framework.go:733] Found 0 / 1
  I0111 00:35:37.533922 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:37.533972 23 framework.go:733] Found 0 / 1
  I0111 00:35:38.454461 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:38.454573 23 framework.go:733] Found 0 / 1
  I0111 00:35:39.460238 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:39.460277 23 framework.go:733] Found 0 / 1
  I0111 00:35:40.466617 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:40.466667 23 framework.go:733] Found 0 / 1
  I0111 00:35:41.518471 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:41.518583 23 framework.go:733] Found 0 / 1
  I0111 00:35:42.522921 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:42.523021 23 framework.go:733] Found 0 / 1
  I0111 00:35:43.460056 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:43.460262 23 framework.go:733] Found 0 / 1
  I0111 00:35:44.454831 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:44.454886 23 framework.go:733] Found 0 / 1
  I0111 00:35:45.455957 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:45.456000 23 framework.go:733] Found 0 / 1
  I0111 00:35:46.456157 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:46.456334 23 framework.go:733] Found 0 / 1
  I0111 00:35:47.482769 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:47.482827 23 framework.go:733] Found 0 / 1
  I0111 00:35:48.457067 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:48.457115 23 framework.go:733] Found 0 / 1
  I0111 00:35:49.455217 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:49.455356 23 framework.go:733] Found 0 / 1
  I0111 00:35:50.455462 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:50.455603 23 framework.go:733] Found 1 / 1
  I0111 00:35:50.455630 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0111 00:35:50.458431 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:35:50.458513 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0111 00:35:50.458562 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 describe pod agnhost-primary-6kn4p'
  I0111 00:35:50.556312 23 builder.go:146] stderr: ""
  I0111 00:35:50.556396 23 builder.go:147] stdout: "Name:             agnhost-primary-6kn4p\nNamespace:        kubectl-9521\nPriority:         0\nService Account:  default\nNode:             ip-172-31-22-167.us-east-2.compute.internal/172.31.22.167\nStart Time:       Sat, 11 Jan 2025 00:35:33 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.1.3\nIPs:\n  IP:           10.42.1.3\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://b847da974a8246189326d9e26d7c866e5631b05eee3cd460ae5060a3207024cc\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 11 Jan 2025 00:35:49 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bqsdt (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bqsdt:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  17s   default-scheduler  Successfully assigned kubectl-9521/agnhost-primary-6kn4p to ip-172-31-22-167.us-east-2.compute.internal\n  Normal  Pulling    15s   kubelet            Pulling image \"registry.k8s.io/e2e-test-images/agnhost:2.53\"\n  Normal  Pulled     2s    kubelet            Successfully pulled image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" in 13.21s (13.21s including waiting). Image size: 54468442 bytes.\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0111 00:35:50.556470 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 describe rc agnhost-primary'
  I0111 00:35:50.640864 23 builder.go:146] stderr: ""
  I0111 00:35:50.640925 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9521\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  18s   replication-controller  Created pod: agnhost-primary-6kn4p\n"
  I0111 00:35:50.640977 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 describe service agnhost-primary'
  I0111 00:35:50.743913 23 builder.go:146] stderr: ""
  I0111 00:35:50.745402 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9521\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.233.127\nIPs:                      10.43.233.127\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.3:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0111 00:35:50.752716 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 describe node ip-172-31-16-105.us-east-2.compute.internal'
  I0111 00:35:50.887177 23 builder.go:146] stderr: ""
  I0111 00:35:50.887357 23 builder.go:147] stdout: "Name:               ip-172-31-16-105.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-16-105.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=k3s\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.16.105\n                    etcd.k3s.cattle.io/local-snapshots-timestamp: 2025-01-11T00:09:21Z\n                    etcd.k3s.cattle.io/node-address: 172.31.16.105\n                    etcd.k3s.cattle.io/node-name: ip-172-31-16-105.us-east-2.compute.internal-dfe42664\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"e6:d1:05:1d:9e:02\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.16.105\n                    k3s.io/external-ip: 18.217.201.159\n                    k3s.io/hostname: ip-172-31-16-105\n                    k3s.io/internal-ip: 172.31.16.105\n                    k3s.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--server\",\"https://18.117.144.76:6443\",\"--token\",\"********\",\"--n...\n                    k3s.io/node-config-hash: FHMWGTJ4XHO6XPPTOOPPCWQ4BH4VQBMVW6XAJEGACARYNDM5Z5LA====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 11 Jan 2025 00:09:18 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-16-105.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 11 Jan 2025 00:35:41 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  EtcdIsVoter      True    Sat, 11 Jan 2025 00:34:22 +0000   Sat, 11 Jan 2025 00:09:22 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure   False   Sat, 11 Jan 2025 00:35:21 +0000   Sat, 11 Jan 2025 00:09:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 11 Jan 2025 00:35:21 +0000   Sat, 11 Jan 2025 00:09:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 11 Jan 2025 00:35:21 +0000   Sat, 11 Jan 2025 00:09:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 11 Jan 2025 00:35:21 +0000   Sat, 11 Jan 2025 00:09:20 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.16.105\n  ExternalIP:  18.217.201.159\n  Hostname:    ip-172-31-16-105\nCapacity:\n  cpu:                2\n  ephemeral-storage:  20937708Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3925368Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  20368202327\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3925368Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2d067c0ca03889e83d9b19df333807\n  System UUID:                ec2d067c-0ca0-3889-e83d-9b19df333807\n  Boot ID:                    b9472636-c46d-461b-b4da-83710f347e98\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.23-k3s2\n  Kubelet Version:            v1.32.0+k3s1\n  Kube-Proxy Version:         v1.32.0+k3s1\nPodCIDR:                      10.42.2.0/24\nPodCIDRs:                     10.42.2.0/24\nProviderID:                   k3s://ip-172-31-16-105.us-east-2.compute.internal\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 svclb-traefik-05b4ccc2-smhqh                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\n  sonobuoy                    sonobuoy-e2e-job-eb8d697247014ae0                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         33s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8    0 (0%)        0 (0%)      0 (0%)           0 (0%)         33s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:\n  Type     Reason                          Age                From                   Message\n  ----     ------                          ----               ----                   -------\n  Normal   Starting                        26m                kube-proxy             \n  Normal   Starting                        26m                kubelet                Starting kubelet.\n  Warning  CgroupV1                        26m                kubelet                cgroup v1 support is in maintenance mode, please migrate to cgroup v2\n  Normal   NodeHasSufficientMemory         26m (x2 over 26m)  kubelet                Node ip-172-31-16-105.us-east-2.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure           26m (x2 over 26m)  kubelet                Node ip-172-31-16-105.us-east-2.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID            26m (x2 over 26m)  kubelet                Node ip-172-31-16-105.us-east-2.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced         26m                kubelet                Updated Node Allocatable limit across pods\n  Normal   RegisteredNode                  26m                node-controller        Node ip-172-31-16-105.us-east-2.compute.internal event: Registered Node ip-172-31-16-105.us-east-2.compute.internal in Controller\n  Normal   Synced                          26m                cloud-node-controller  Node synced successfully\n  Normal   NodeReady                       26m                kubelet                Node ip-172-31-16-105.us-east-2.compute.internal status is now: NodeReady\n  Normal   NodePasswordValidationComplete  26m                k3s-supervisor         Deferred node password secret validation complete\n"
  I0111 00:35:50.887427 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-9521 describe namespace kubectl-9521'
  I0111 00:35:50.998916 23 builder.go:146] stderr: ""
  I0111 00:35:50.998975 23 builder.go:147] stdout: "Name:         kubectl-9521\nLabels:       e2e-framework=kubectl\n              e2e-run=42ca63fb-bb74-4f2d-9cb2-4a383aaf716a\n              kubernetes.io/metadata.name=kubectl-9521\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0111 00:35:50.999314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9521" for this suite. @ 01/11/25 00:35:51.008
• [19.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/11/25 00:35:51.027
  I0111 00:35:51.027992 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context-test @ 01/11/25 00:35:51.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:35:51.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:35:51.138
  I0111 00:35:59.243127 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7567" for this suite. @ 01/11/25 00:35:59.248
• [8.231 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/11/25 00:35:59.258
  I0111 00:35:59.258916 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-runtime @ 01/11/25 00:35:59.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:35:59.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:35:59.298
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/11/25 00:35:59.323
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/11/25 00:36:19.435
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/11/25 00:36:19.438
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/11/25 00:36:19.446
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/11/25 00:36:19.447
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/11/25 00:36:19.518
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/11/25 00:36:22.562
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/11/25 00:36:23.569
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/11/25 00:36:23.575
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/11/25 00:36:23.576
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/11/25 00:36:23.649
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/11/25 00:36:24.671
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/11/25 00:36:26.688
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/11/25 00:36:26.694
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/11/25 00:36:26.694
  I0111 00:36:26.834592 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9408" for this suite. @ 01/11/25 00:36:26.84
• [27.617 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/11/25 00:36:26.877
  I0111 00:36:26.877693 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 00:36:26.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:36:26.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:36:26.969
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/11/25 00:36:26.972
  I0111 00:36:26.973464 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:36:29.636178 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:36:37.034546 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7266" for this suite. @ 01/11/25 00:36:37.041
• [10.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/11/25 00:36:37.055
  I0111 00:36:37.055480 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 00:36:37.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:36:37.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:36:37.11
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/11/25 00:36:37.168
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 00:36:37.178
  I0111 00:36:37.290611 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:37.290712 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:38.186940 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:38.186986 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:39.187399 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:39.187455 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:40.186535 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:40.186689 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:41.186094 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:41.186246 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:42.225047 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:42.225092 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:43.192564 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0111 00:36:43.192615 23 fixtures.go:131] Node ip-172-31-22-167.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:44.187701 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 00:36:44.187746 23 fixtures.go:131] Node ip-172-31-29-145.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:45.192240 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 00:36:45.192284 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/11/25 00:36:45.196
  I0111 00:36:45.295212 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 00:36:45.295376 23 fixtures.go:131] Node ip-172-31-29-145.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:46.229609 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 00:36:46.229655 23 fixtures.go:131] Node ip-172-31-29-145.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 00:36:47.228156 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 00:36:47.228197 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/11/25 00:36:47.228
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 00:36:47.234
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-214, will wait for the garbage collector to delete the pods @ 01/11/25 00:36:47.234
  I0111 00:36:47.299338 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.636524ms
  I0111 00:36:47.500584 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 201.243274ms
  I0111 00:36:51.406105 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 00:36:51.406152 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 00:36:51.428769 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7706"},"items":null}

  I0111 00:36:51.434508 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7706"},"items":null}

  I0111 00:36:51.454936 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-214" for this suite. @ 01/11/25 00:36:51.476
• [14.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/11/25 00:36:51.515
  I0111 00:36:51.515402 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 00:36:51.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:36:51.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:36:51.565
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 00:36:51.569
  STEP: Saw pod success @ 01/11/25 00:36:55.652
  I0111 00:36:55.655322 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-64a2c051-e994-4c8a-86fc-808d61a5a84b container client-container: <nil>
  STEP: delete the pod @ 01/11/25 00:36:55.669
  I0111 00:36:55.711473 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7046" for this suite. @ 01/11/25 00:36:55.717
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/11/25 00:36:55.74
  I0111 00:36:55.740974 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename prestop @ 01/11/25 00:36:55.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:36:55.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:36:55.792
  STEP: Creating server pod server in namespace prestop-4497 @ 01/11/25 00:36:55.808
  STEP: Waiting for pods to come up. @ 01/11/25 00:36:55.823
  STEP: Creating tester pod tester in namespace prestop-4497 @ 01/11/25 00:36:57.841
  STEP: Deleting pre-stop pod @ 01/11/25 00:36:59.891
  I0111 00:37:04.918358 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/11/25 00:37:04.919
  I0111 00:37:04.963782 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4497" for this suite. @ 01/11/25 00:37:04.97
• [9.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/11/25 00:37:04.99
  I0111 00:37:04.990875 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename endpointslice @ 01/11/25 00:37:04.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:37:05.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:37:05.059
  STEP: getting /apis @ 01/11/25 00:37:05.069
  STEP: getting /apis/discovery.k8s.io @ 01/11/25 00:37:05.08
  STEP: getting /apis/discovery.k8s.iov1 @ 01/11/25 00:37:05.084
  STEP: creating @ 01/11/25 00:37:05.086
  STEP: getting @ 01/11/25 00:37:05.15
  STEP: listing @ 01/11/25 00:37:05.155
  STEP: watching @ 01/11/25 00:37:05.165
  I0111 00:37:05.165741 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/11/25 00:37:05.169
  STEP: cluster-wide watching @ 01/11/25 00:37:05.175
  I0111 00:37:05.175707 23 endpointslice.go:459] starting watch
  STEP: patching @ 01/11/25 00:37:05.177
  STEP: updating @ 01/11/25 00:37:05.197
  I0111 00:37:05.216195 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0111 00:37:05.216254 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/11/25 00:37:05.216
  STEP: deleting a collection @ 01/11/25 00:37:05.242
  I0111 00:37:05.283757 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-98" for this suite. @ 01/11/25 00:37:05.287
• [0.324 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/11/25 00:37:05.315
  I0111 00:37:05.315323 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 00:37:05.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:37:05.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:37:05.385
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/11/25 00:37:05.393
  STEP: Saw pod success @ 01/11/25 00:37:13.457
  I0111 00:37:13.472005 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-97b1bab8-3618-4c2f-90a6-e967d9b5972b container test-container: <nil>
  STEP: delete the pod @ 01/11/25 00:37:13.498
  I0111 00:37:13.529954 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6347" for this suite. @ 01/11/25 00:37:13.536
• [8.275 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/11/25 00:37:13.594
  I0111 00:37:13.596900 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 00:37:13.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:37:13.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:37:13.651
  STEP: Creating pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796 @ 01/11/25 00:37:13.659
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 00:37:15.712
  I0111 00:37:15.715473 23 container_probe.go:1749] Initial restart count of pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf is 0
  I0111 00:37:15.718550 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:17.724327 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:19.730968 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:21.734218 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:23.738999 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:25.742403 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:27.746661 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:29.750524 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:31.755786 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:33.759635 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:35.763454 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:37.774453 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:39.779225 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:41.784249 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:43.797368 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:45.802354 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:47.808045 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:49.812459 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:51.817259 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:53.826066 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:55.829932 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:57.834471 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:37:59.837928 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:01.843300 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:03.847228 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:05.850718 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:07.855796 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:09.869536 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:11.875205 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:13.880281 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:15.884588 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:17.888568 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:19.892430 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:21.897233 23 container_probe.go:1759] Get pod test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf in namespace container-probe-3796
  I0111 00:38:21.897280 23 container_probe.go:1763] Restart count of pod container-probe-3796/test-grpc-5162a3a9-04d1-4344-8ee1-99d7d1512acf is now 1 (1m6.181749923s elapsed)
  STEP: deleting the pod @ 01/11/25 00:38:21.897
  I0111 00:38:21.935314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3796" for this suite. @ 01/11/25 00:38:21.953
• [68.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 01/11/25 00:38:21.972
  I0111 00:38:21.972371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 00:38:21.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:38:22.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:38:22.023
  STEP: creating the pod @ 01/11/25 00:38:22.032
  I0111 00:38:22.032657 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 create -f -'
  I0111 00:38:22.262775 23 builder.go:146] stderr: ""
  I0111 00:38:22.262822 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/11/25 00:38:26.283
  I0111 00:38:26.283407 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 label pods pause testing-label=testing-label-value'
  I0111 00:38:26.414617 23 builder.go:146] stderr: ""
  I0111 00:38:26.414773 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/11/25 00:38:26.414
  I0111 00:38:26.414876 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 get pod pause -L testing-label'
  I0111 00:38:26.554330 23 builder.go:146] stderr: ""
  I0111 00:38:26.554464 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/11/25 00:38:26.554
  I0111 00:38:26.555077 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 label pods pause testing-label-'
  I0111 00:38:26.668439 23 builder.go:146] stderr: ""
  I0111 00:38:26.668490 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/11/25 00:38:26.668
  I0111 00:38:26.668693 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 get pod pause -L testing-label'
  I0111 00:38:26.788947 23 builder.go:146] stderr: ""
  I0111 00:38:26.788985 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    \n"
  STEP: using delete to clean up resources @ 01/11/25 00:38:26.789
  I0111 00:38:26.789095 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 delete --grace-period=0 --force -f -'
  I0111 00:38:26.904119 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 00:38:26.904170 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0111 00:38:26.904225 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 get rc,svc -l name=pause --no-headers'
  I0111 00:38:27.039584 23 builder.go:146] stderr: "No resources found in kubectl-5645 namespace.\n"
  I0111 00:38:27.039642 23 builder.go:147] stdout: ""
  I0111 00:38:27.039725 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5645 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0111 00:38:27.165354 23 builder.go:146] stderr: ""
  I0111 00:38:27.165400 23 builder.go:147] stdout: ""
  I0111 00:38:27.165603 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5645" for this suite. @ 01/11/25 00:38:27.172
• [5.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/11/25 00:38:27.201
  I0111 00:38:27.202014 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 00:38:27.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:38:27.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:38:27.261
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/11/25 00:38:27.275
  STEP: Saw pod success @ 01/11/25 00:38:31.327
  I0111 00:38:31.330426 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-25d7b0bf-9ef8-4ae5-87f1-0345f147f47b container test-container: <nil>
  STEP: delete the pod @ 01/11/25 00:38:31.341
  I0111 00:38:31.375996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9283" for this suite. @ 01/11/25 00:38:31.381
• [4.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 01/11/25 00:38:31.407
  I0111 00:38:31.407951 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 00:38:31.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:38:31.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:38:31.464
  STEP: Looking for a node to schedule job pod @ 01/11/25 00:38:31.469
  STEP: Creating a job @ 01/11/25 00:38:31.482
  STEP: Ensuring job fails @ 01/11/25 00:38:31.517
  I0111 00:38:37.554012 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6071" for this suite. @ 01/11/25 00:38:37.56
• [6.182 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 01/11/25 00:38:37.589
  I0111 00:38:37.590122 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 00:38:37.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:38:37.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:38:37.647
  STEP: creating Agnhost RC @ 01/11/25 00:38:37.651
  I0111 00:38:37.653080 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5022 create -f -'
  I0111 00:38:37.892705 23 builder.go:146] stderr: ""
  I0111 00:38:37.892750 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/11/25 00:38:37.892
  I0111 00:38:38.896625 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:38:38.896666 23 framework.go:733] Found 0 / 1
  I0111 00:38:39.898860 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:38:39.898900 23 framework.go:733] Found 1 / 1
  I0111 00:38:39.898920 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/11/25 00:38:39.898
  I0111 00:38:39.902305 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:38:39.902358 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0111 00:38:39.902411 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5022 patch pod agnhost-primary-tjcbt -p {"metadata":{"annotations":{"x":"y"}}}'
  I0111 00:38:40.082052 23 builder.go:146] stderr: ""
  I0111 00:38:40.082101 23 builder.go:147] stdout: "pod/agnhost-primary-tjcbt patched\n"
  STEP: checking annotations @ 01/11/25 00:38:40.082
  I0111 00:38:40.103167 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 00:38:40.103205 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0111 00:38:40.103323 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5022" for this suite. @ 01/11/25 00:38:40.113
• [2.544 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/11/25 00:38:40.133
  I0111 00:38:40.133733 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 00:38:40.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:38:40.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:38:40.202
  STEP: Creating pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106 @ 01/11/25 00:38:40.213
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 00:38:42.264
  I0111 00:38:42.266902 23 container_probe.go:1749] Initial restart count of pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 is 0
  I0111 00:38:42.270604 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:44.280084 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:46.284951 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:48.290943 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:50.305526 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:52.329895 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:54.338304 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:56.357094 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:38:58.362006 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:00.367591 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:02.375740 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:04.385462 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:06.395199 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:08.404735 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:10.415614 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:12.432281 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:14.436322 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:16.450323 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:18.461531 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:20.470958 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:22.482135 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:24.490796 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:26.495557 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:28.499428 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:30.507294 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:32.510960 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:34.515240 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:36.519494 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:38.523207 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:40.533903 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:42.538833 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:44.543109 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:46.547832 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:48.552137 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:50.557078 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:52.562553 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:54.566342 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:56.571197 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:39:58.575127 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:00.582301 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:02.586882 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:04.591363 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:06.599430 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:08.603353 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:10.608068 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:12.617496 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:14.621253 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:16.632535 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:18.636312 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:20.641515 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:22.647249 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:24.651110 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:26.654959 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:28.658903 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:30.662746 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:32.665937 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:34.670630 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:36.675721 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:38.680941 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:40.685980 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:42.690081 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:44.696262 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:46.699739 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:48.703380 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:50.707360 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:52.712215 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:54.717398 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:56.721531 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:40:58.726195 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:00.730646 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:02.736330 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:04.740190 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:06.744547 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:08.749815 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:10.755737 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:12.759407 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:14.764323 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:16.769074 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:18.772536 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:20.777322 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:22.780924 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:24.785706 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:26.791003 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:28.801556 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:30.806381 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:32.809983 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:34.814760 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:36.818703 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:38.822109 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:40.827461 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:42.831196 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:44.835099 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:46.838989 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:48.842638 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:50.849790 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:52.855541 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:54.858664 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:56.863589 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:41:58.866466 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:00.873623 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:02.879478 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:04.882886 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:06.886860 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:08.890415 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:10.895395 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:12.900582 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:14.904851 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:16.908979 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:18.913559 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:20.918770 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:22.922306 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:24.928799 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:26.939191 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:28.945056 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:30.949262 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:32.954147 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:34.958278 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:36.963998 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:38.972586 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  I0111 00:42:40.977080 23 container_probe.go:1759] Get pod test-webserver-9ab2ff8d-461c-4df0-8e61-1a70ed250f25 in namespace container-probe-2106
  STEP: deleting the pod @ 01/11/25 00:42:42.978
  I0111 00:42:43.031713 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2106" for this suite. @ 01/11/25 00:42:43.036
• [242.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/11/25 00:42:43.049
  I0111 00:42:43.049465 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/11/25 00:42:43.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:42:43.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:42:43.095
  I0111 00:42:43.098835 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:42:49.501530 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8551" for this suite. @ 01/11/25 00:42:49.509
• [6.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/11/25 00:42:49.525
  I0111 00:42:49.525469 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/11/25 00:42:49.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:42:49.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:42:49.618
  STEP: creating a target pod @ 01/11/25 00:42:49.621
  STEP: adding an ephemeral container @ 01/11/25 00:42:51.67
  STEP: checking pod container endpoints @ 01/11/25 00:42:53.699
  I0111 00:42:53.699216 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6177 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 00:42:53.699237 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 00:42:53.699297 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6177/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0111 00:42:53.755719 23 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/11/25 00:42:53.767
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/11/25 00:42:53.773
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/11/25 00:42:53.799
  I0111 00:42:53.802989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6177" for this suite. @ 01/11/25 00:42:53.806
• [4.297 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/11/25 00:42:53.822
  I0111 00:42:53.822786 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 00:42:53.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:42:53.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:42:53.879
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/11/25 00:42:53.882
  STEP: Saw pod success @ 01/11/25 00:42:57.924
  I0111 00:42:57.927383 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-0db8b00c-9f93-46e6-b355-8e187725d165 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 00:42:57.96
  I0111 00:42:58.013211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9232" for this suite. @ 01/11/25 00:42:58.021
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 01/11/25 00:42:58.042
  I0111 00:42:58.042760 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 00:42:58.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:42:58.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:42:58.108
  STEP: Creating a test headless service @ 01/11/25 00:42:58.111
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-637.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-637.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 193.128.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.128.193_udp@PTR;check="$$(dig +tcp +noall +answer +search 193.128.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.128.193_tcp@PTR;sleep 1; done
   @ 01/11/25 00:42:58.177
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-637.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-637.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-637.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-637.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-637.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 193.128.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.128.193_udp@PTR;check="$$(dig +tcp +noall +answer +search 193.128.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.128.193_tcp@PTR;sleep 1; done
   @ 01/11/25 00:42:58.177
  STEP: creating a pod to probe DNS @ 01/11/25 00:42:58.178
  STEP: submitting the pod to kubernetes @ 01/11/25 00:42:58.178
  STEP: retrieving the pod @ 01/11/25 00:43:08.249
  STEP: looking for the results for each expected name from probers @ 01/11/25 00:43:08.252
  I0111 00:43:08.260412 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.263706 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.267210 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.271713 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.289107 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.293162 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.296402 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.299636 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local from pod dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d: the server could not find the requested resource (get pods dns-test-c4de861e-7d93-445d-b8be-01851d98860d)
  I0111 00:43:08.311802 23 dns_common.go:506] Lookups using dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d failed for: [agnhost_udp@dns-test-service.dns-637.svc.cluster.local agnhost_tcp@dns-test-service.dns-637.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local jessie_udp@dns-test-service.dns-637.svc.cluster.local jessie_tcp@dns-test-service.dns-637.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-637.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-637.svc.cluster.local]

  I0111 00:43:08.317653 23 dns_common.go:514] Pod client logs for webserver: 
  I0111 00:43:08.323368 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0111 00:43:08.328776 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0111 00:43:13.332445 23 dns_common.go:546] DNS probes using dns-637/dns-test-c4de861e-7d93-445d-b8be-01851d98860d succeeded

  STEP: deleting the pod @ 01/11/25 00:43:13.332
  STEP: deleting the test service @ 01/11/25 00:43:13.407
  STEP: deleting the test headless service @ 01/11/25 00:43:13.496
  I0111 00:43:13.534106 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-637" for this suite. @ 01/11/25 00:43:13.547
• [15.514 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/11/25 00:43:13.556
  I0111 00:43:13.556910 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 00:43:13.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:13.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:13.654
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 00:43:13.656
  STEP: Saw pod success @ 01/11/25 00:43:17.681
  I0111 00:43:17.689459 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-95f5c03c-9ce7-425e-9b44-cc8f66e7f1b1 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 00:43:17.697
  I0111 00:43:17.752920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-0" for this suite. @ 01/11/25 00:43:17.766
• [4.224 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/11/25 00:43:17.781
  I0111 00:43:17.781429 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 00:43:17.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:17.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:17.843
  I0111 00:43:21.909562 23 delete.go:62] Deleting pod "var-expansion-9588517c-69d6-498c-9087-f6d382adb206" in namespace "var-expansion-5674"
  I0111 00:43:21.930034 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-9588517c-69d6-498c-9087-f6d382adb206" to be fully deleted
  I0111 00:43:23.942039 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5674" for this suite. @ 01/11/25 00:43:23.951
• [6.189 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/11/25 00:43:23.97
  I0111 00:43:23.970781 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename endpointslice @ 01/11/25 00:43:23.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:24.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:24.023
  I0111 00:43:24.039345 23 endpointslice.go:1045] Endpoints addresses: [18.117.144.76 18.217.201.159 3.141.33.17] , ports: [6443]
  I0111 00:43:24.039556 23 endpointslice.go:1075] EndpointSlices addresses: [18.117.144.76 18.217.201.159 3.141.33.17] , ports: [6443]
  I0111 00:43:24.039874 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3685" for this suite. @ 01/11/25 00:43:24.048
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 01/11/25 00:43:24.076
  I0111 00:43:24.077017 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/11/25 00:43:24.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:24.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:24.138
  STEP: getting /apis @ 01/11/25 00:43:24.153
  STEP: getting /apis/admissionregistration.k8s.io @ 01/11/25 00:43:24.16
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/11/25 00:43:24.163
  STEP: creating @ 01/11/25 00:43:24.166
  STEP: getting @ 01/11/25 00:43:24.216
  STEP: listing @ 01/11/25 00:43:24.227
  STEP: watching @ 01/11/25 00:43:24.238
  I0111 00:43:24.238356 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 01/11/25 00:43:24.239
  STEP: updating @ 01/11/25 00:43:24.248
  I0111 00:43:24.259600 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 01/11/25 00:43:24.259
  STEP: deleting a collection @ 01/11/25 00:43:24.282
  I0111 00:43:24.310399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2715" for this suite. @ 01/11/25 00:43:24.313
• [0.250 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/11/25 00:43:24.327
  I0111 00:43:24.327768 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 00:43:24.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:24.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:24.377
  STEP: creating the pod @ 01/11/25 00:43:24.381
  STEP: submitting the pod to kubernetes @ 01/11/25 00:43:24.381
  STEP: verifying QOS class is set on the pod @ 01/11/25 00:43:24.411
  I0111 00:43:24.424998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1899" for this suite. @ 01/11/25 00:43:24.434
• [0.143 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/11/25 00:43:24.471
  I0111 00:43:24.471179 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 00:43:24.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:24.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:24.543
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/11/25 00:43:24.548
  STEP: When a replicaset with a matching selector is created @ 01/11/25 00:43:26.622
  STEP: Then the orphan pod is adopted @ 01/11/25 00:43:26.631
  STEP: When the matched label of one of its pods change @ 01/11/25 00:43:27.637
  I0111 00:43:27.639983 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/11/25 00:43:27.657
  I0111 00:43:27.696799 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3116" for this suite. @ 01/11/25 00:43:27.713
• [3.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/11/25 00:43:27.737
  I0111 00:43:27.737546 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/11/25 00:43:27.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:43:27.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:43:27.792
  I0111 00:43:27.795870 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0111 00:44:27.796401 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 00:44:27.800846 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/11/25 00:44:27.8
  I0111 00:44:28.036379 23 taints.go:463] Pod1 is running on ip-172-31-22-167.us-east-2.compute.internal. Tainting Node
  I0111 00:44:30.286016 23 taints.go:471] Pod2 is running on ip-172-31-22-167.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/11/25 00:44:30.286
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/11/25 00:44:30.314
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/11/25 00:44:30.333
  I0111 00:44:36.304647 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0111 00:44:56.318061 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/11/25 00:44:56.377
  I0111 00:44:56.383281 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6446" for this suite. @ 01/11/25 00:44:56.407
• [88.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 01/11/25 00:44:56.455
  I0111 00:44:56.455518 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename csinodes @ 01/11/25 00:44:56.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:44:56.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:44:56.619
  STEP: Creating initial csiNode "e2e-csinode-qkf6x" @ 01/11/25 00:44:56.623
  STEP: Getting initial csiNode "e2e-csinode-qkf6x" @ 01/11/25 00:44:56.633
  STEP: Patching initial csiNode: "e2e-csinode-qkf6x" @ 01/11/25 00:44:56.656
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-qkf6x=patched" @ 01/11/25 00:44:56.676
  STEP: Delete initial csiNode: "e2e-csinode-qkf6x" @ 01/11/25 00:44:56.685
  STEP: Confirm deletion of csiNode "e2e-csinode-qkf6x" @ 01/11/25 00:44:56.729
  STEP: Creating replacement csiNode "e2e-csinode-5bzhh" @ 01/11/25 00:44:56.74
  STEP: Getting replacement csiNode "e2e-csinode-5bzhh" @ 01/11/25 00:44:56.755
  STEP: Updating replacement csiNode "e2e-csinode-5bzhh" @ 01/11/25 00:44:56.762
  STEP: DeleteCollection of CSINodes with "e2e-csinode-5bzhh=updated" label @ 01/11/25 00:44:56.791
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-5bzhh=updated" @ 01/11/25 00:44:56.808
  I0111 00:44:56.850442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-1471" for this suite. @ 01/11/25 00:44:56.856
• [0.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/11/25 00:44:56.878
  I0111 00:44:56.878869 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 00:44:56.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:44:56.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:44:56.93
  STEP: set up a multi version CRD @ 01/11/25 00:44:56.937
  I0111 00:44:56.937658 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: rename a version @ 01/11/25 00:45:02.337
  STEP: check the new version name is served @ 01/11/25 00:45:02.376
  STEP: check the old version name is removed @ 01/11/25 00:45:03.953
  STEP: check the other version is not changed @ 01/11/25 00:45:04.743
  I0111 00:45:08.198564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1260" for this suite. @ 01/11/25 00:45:08.218
• [11.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/11/25 00:45:08.243
  I0111 00:45:08.243279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 00:45:08.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:08.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:08.302
  I0111 00:45:08.306200 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  W0111 00:45:10.855690      23 warnings.go:70] unknown field "alpha"
  W0111 00:45:10.855725      23 warnings.go:70] unknown field "beta"
  W0111 00:45:10.855732      23 warnings.go:70] unknown field "delta"
  W0111 00:45:10.855738      23 warnings.go:70] unknown field "epsilon"
  W0111 00:45:10.855768      23 warnings.go:70] unknown field "gamma"
  I0111 00:45:11.436540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6126" for this suite. @ 01/11/25 00:45:11.456
• [3.233 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/11/25 00:45:11.476
  I0111 00:45:11.476354 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 00:45:11.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:11.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:11.549
  I0111 00:45:11.640690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5745" for this suite. @ 01/11/25 00:45:11.644
• [0.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/11/25 00:45:11.656
  I0111 00:45:11.656884 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 00:45:11.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:11.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:11.697
  STEP: Creating configMap with name projected-configmap-test-volume-map-fb0d2bf1-698b-4eda-9cb8-8fdc42e79a54 @ 01/11/25 00:45:11.707
  STEP: Creating a pod to test consume configMaps @ 01/11/25 00:45:11.72
  STEP: Saw pod success @ 01/11/25 00:45:15.769
  I0111 00:45:15.773368 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-1d616892-487e-4aa3-af78-de60b3451c3d container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 00:45:15.782
  I0111 00:45:15.823924 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5208" for this suite. @ 01/11/25 00:45:15.831
• [4.215 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 01/11/25 00:45:15.871
  I0111 00:45:15.871866 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 00:45:15.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:15.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:15.932
  STEP: fetching services @ 01/11/25 00:45:15.94
  I0111 00:45:15.946818 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1515" for this suite. @ 01/11/25 00:45:15.952
• [0.118 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/11/25 00:45:15.99
  I0111 00:45:15.990112 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption @ 01/11/25 00:45:15.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:16.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:16.039
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/11/25 00:45:16.045
  STEP: Waiting for the pdb to be processed @ 01/11/25 00:45:16.056
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/11/25 00:45:18.077
  STEP: Waiting for all pods to be running @ 01/11/25 00:45:18.077
  I0111 00:45:18.083473 23 disruption.go:680] pods: 0 < 3
  I0111 00:45:20.092931 23 disruption.go:691] running pods: 1 < 3
  STEP: locating a running pod @ 01/11/25 00:45:22.083
  STEP: Updating the pdb to allow a pod to be evicted @ 01/11/25 00:45:22.093
  STEP: Waiting for the pdb to be processed @ 01/11/25 00:45:22.119
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/11/25 00:45:24.122
  STEP: Waiting for all pods to be running @ 01/11/25 00:45:24.122
  STEP: Waiting for the pdb to observed all healthy pods @ 01/11/25 00:45:24.129
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/11/25 00:45:24.203
  STEP: Waiting for the pdb to be processed @ 01/11/25 00:45:24.26
  STEP: Waiting for all pods to be running @ 01/11/25 00:45:26.264
  STEP: locating a running pod @ 01/11/25 00:45:26.276
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/11/25 00:45:26.295
  STEP: Waiting for the pdb to be deleted @ 01/11/25 00:45:26.314
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/11/25 00:45:26.321
  STEP: Waiting for all pods to be running @ 01/11/25 00:45:26.321
  I0111 00:45:26.421854 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8008" for this suite. @ 01/11/25 00:45:26.427
• [10.521 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 01/11/25 00:45:26.51
  I0111 00:45:26.510953 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 00:45:26.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:26.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:26.575
  STEP: Creating Indexed job @ 01/11/25 00:45:26.578
  STEP: Ensuring job reaches completions @ 01/11/25 00:45:26.591
  STEP: Ensuring pods with index for job exist @ 01/11/25 00:45:34.641
  I0111 00:45:34.654687 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-124" for this suite. @ 01/11/25 00:45:34.66
• [8.160 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/11/25 00:45:34.67
  I0111 00:45:34.670743 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubelet-test @ 01/11/25 00:45:34.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:34.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:34.733
  STEP: Waiting for pod completion @ 01/11/25 00:45:34.772
  I0111 00:45:38.808926 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4979" for this suite. @ 01/11/25 00:45:38.812
• [4.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 01/11/25 00:45:38.827
  I0111 00:45:38.827858 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 00:45:38.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:38.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:38.888
  STEP: creating a Service @ 01/11/25 00:45:38.905
  STEP: watching for the Service to be added @ 01/11/25 00:45:38.944
  I0111 00:45:38.946564 23 service.go:3425] Found Service test-service-cmmsv in namespace services-1291 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30666}]
  I0111 00:45:38.946743 23 service.go:3432] Service test-service-cmmsv created
  STEP: Getting /status @ 01/11/25 00:45:38.946
  I0111 00:45:38.950468 23 service.go:3443] Service test-service-cmmsv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/11/25 00:45:38.95
  STEP: watching for the Service to be patched @ 01/11/25 00:45:38.968
  I0111 00:45:38.971345 23 service.go:3466] observed Service test-service-cmmsv in namespace services-1291 with annotations: map[] & LoadBalancer: {[]}
  I0111 00:45:38.972169 23 service.go:3469] Found Service test-service-cmmsv in namespace services-1291 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001568150 []}]}
  I0111 00:45:38.972288 23 service.go:3476] Service test-service-cmmsv has service status patched
  STEP: updating the ServiceStatus @ 01/11/25 00:45:38.972
  I0111 00:45:38.987899 23 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/11/25 00:45:38.988
  I0111 00:45:38.989605 23 service.go:3507] Observed Service test-service-cmmsv in namespace services-1291 with annotations: map[] & Conditions: []
  I0111 00:45:38.989647 23 service.go:3518] Observed Service test-service-cmmsv in namespace services-1291 with annotations: map[patchedstatus:true] & Conditions: []
  I0111 00:45:38.989682 23 service.go:3514] Found Service test-service-cmmsv in namespace services-1291 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0111 00:45:38.989698 23 service.go:3525] Service test-service-cmmsv has service status updated
  STEP: patching the service @ 01/11/25 00:45:38.989
  STEP: watching for the Service to be patched @ 01/11/25 00:45:39.016
  I0111 00:45:39.021007 23 service.go:3548] observed Service test-service-cmmsv in namespace services-1291 with labels: map[test-service-static:true]
  I0111 00:45:39.021902 23 service.go:3548] observed Service test-service-cmmsv in namespace services-1291 with labels: map[test-service-static:true]
  I0111 00:45:39.021993 23 service.go:3548] observed Service test-service-cmmsv in namespace services-1291 with labels: map[test-service-static:true]
  I0111 00:45:39.022482 23 service.go:3551] Found Service test-service-cmmsv in namespace services-1291 with labels: map[test-service:patched test-service-static:true]
  I0111 00:45:39.022544 23 service.go:3558] Service test-service-cmmsv patched
  STEP: deleting the service @ 01/11/25 00:45:39.022
  STEP: watching for the Service to be deleted @ 01/11/25 00:45:39.071
  I0111 00:45:39.074396 23 service.go:3582] Observed event: ADDED
  I0111 00:45:39.074452 23 service.go:3582] Observed event: MODIFIED
  I0111 00:45:39.074466 23 service.go:3582] Observed event: MODIFIED
  I0111 00:45:39.074608 23 service.go:3582] Observed event: MODIFIED
  I0111 00:45:39.074648 23 service.go:3578] Found Service test-service-cmmsv in namespace services-1291 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0111 00:45:39.074680 23 service.go:3587] Service test-service-cmmsv deleted
  I0111 00:45:39.074801 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1291" for this suite. @ 01/11/25 00:45:39.078
• [0.261 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/11/25 00:45:39.088
  I0111 00:45:39.088573 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 00:45:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:39.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:39.144
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6597 @ 01/11/25 00:45:39.147
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/11/25 00:45:39.192
  STEP: creating service externalsvc in namespace services-6597 @ 01/11/25 00:45:39.192
  STEP: creating replication controller externalsvc in namespace services-6597 @ 01/11/25 00:45:39.251
  I0111 00:45:39.269784      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6597, replica count: 2
  I0111 00:45:42.320967      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/11/25 00:45:42.325
  I0111 00:45:42.377652 23 resource.go:361] Creating new exec pod
  I0111 00:45:44.418328 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-6597 exec execpodszhv6 -- /bin/sh -x -c nslookup nodeport-service.services-6597.svc.cluster.local'
  I0111 00:45:44.629812 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-6597.svc.cluster.local\n"
  I0111 00:45:44.629859 23 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-6597.svc.cluster.local\tcanonical name = externalsvc.services-6597.svc.cluster.local.\nName:\texternalsvc.services-6597.svc.cluster.local\nAddress: 10.43.225.66\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6597, will wait for the garbage collector to delete the pods @ 01/11/25 00:45:44.63
  I0111 00:45:44.700110 23 resources.go:139] Deleting ReplicationController externalsvc took: 16.793139ms
  I0111 00:45:44.801117 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.004311ms
  I0111 00:45:47.661726 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0111 00:45:47.710130 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6597" for this suite. @ 01/11/25 00:45:47.718
• [8.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/11/25 00:45:47.737
  I0111 00:45:47.737913 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename events @ 01/11/25 00:45:47.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:47.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:47.842
  STEP: Create set of events @ 01/11/25 00:45:47.846
  STEP: get a list of Events with a label in the current namespace @ 01/11/25 00:45:47.897
  STEP: delete a list of events @ 01/11/25 00:45:47.9
  I0111 00:45:47.900338 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/11/25 00:45:47.939
  I0111 00:45:47.960946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9432" for this suite. @ 01/11/25 00:45:47.966
• [0.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/11/25 00:45:47.981
  I0111 00:45:47.981444 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename chunking @ 01/11/25 00:45:47.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:45:48.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:45:48.032
  STEP: creating a large number of resources @ 01/11/25 00:45:48.036
  STEP: retrieving the first page @ 01/11/25 00:46:05.697
  I0111 00:46:05.737539 23 chunking.go:163] Retrieved 40/40 results with rv 11277 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 01/11/25 00:46:05.737
  I0111 00:46:25.746817 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:46:45.746426 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:47:05.743258 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:47:25.742897 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:47:45.745656 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:48:05.743357 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:48:25.746812 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:48:45.746966 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:49:05.744100 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:49:25.746477 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:49:45.745856 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:50:05.751462 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:50:25.748376 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:50:45.743588 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:51:05.744987 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:51:25.746388 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:51:45.746153 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:52:05.745443 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:52:25.747516 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:52:45.747797 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:53:05.745979 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:53:25.744400 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:53:45.743798 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:54:05.747310 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:54:25.747019 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:54:45.748148 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:55:05.745612 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEyNzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0111 00:55:25.742777 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0111 00:55:25.742813 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/11/25 00:55:25.742
  STEP: retrieving all remaining pages @ 01/11/25 00:55:25.747
  I0111 00:55:25.750722 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0111 00:55:25.754591 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0111 00:55:25.758186 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0111 00:55:25.763565 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0111 00:55:25.768285 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0111 00:55:25.771502 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0111 00:55:25.774681 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMyMzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0111 00:55:25.778278 23 chunking.go:221] Retrieved 40/40 results with rv 13233 and continue 
  I0111 00:55:25.778460 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8669" for this suite. @ 01/11/25 00:55:25.782
• [577.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/11/25 00:55:25.792
  I0111 00:55:25.792589 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/11/25 00:55:25.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:25.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:25.867
  STEP: create the container to handle the HTTPGet hook request. @ 01/11/25 00:55:25.883
  STEP: create the pod with lifecycle hook @ 01/11/25 00:55:31.94
  STEP: check poststart hook @ 01/11/25 00:55:33.992
  STEP: delete the pod with lifecycle hook @ 01/11/25 00:55:34.024
  I0111 00:55:36.053505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8360" for this suite. @ 01/11/25 00:55:36.057
• [10.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/11/25 00:55:36.067
  I0111 00:55:36.067183 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 00:55:36.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:36.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:36.116
  STEP: Create a Replicaset @ 01/11/25 00:55:36.122
  STEP: Verify that the required pods have come up. @ 01/11/25 00:55:36.132
  I0111 00:55:36.136236 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0111 00:55:41.163571 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 00:55:41.163
  STEP: Getting /status @ 01/11/25 00:55:41.163
  I0111 00:55:41.173580 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/11/25 00:55:41.173
  I0111 00:55:41.197637 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/11/25 00:55:41.197
  I0111 00:55:41.200592 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0111 00:55:41.201143 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.201651 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.202580 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.202729 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-9610 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0111 00:55:41.202820 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/11/25 00:55:41.206
  I0111 00:55:41.206074 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0111 00:55:41.242425 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/11/25 00:55:41.242
  I0111 00:55:41.246771 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0111 00:55:41.246891 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.247005 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.247315 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.247355 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-9610 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 00:55:41.247454 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0111 00:55:41.247533 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-9610 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0111 00:55:41.247553 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0111 00:55:41.247674 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9610" for this suite. @ 01/11/25 00:55:41.252
• [5.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/11/25 00:55:41.27
  I0111 00:55:41.270519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename csi-storageclass @ 01/11/25 00:55:41.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:41.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:41.341
  STEP: Creating a StorageClass @ 01/11/25 00:55:41.364
  STEP: Get StorageClass "e2e-mppz2" @ 01/11/25 00:55:41.379
  STEP: Patching the StorageClass "e2e-mppz2" @ 01/11/25 00:55:41.387
  STEP: Delete StorageClass "e2e-mppz2" @ 01/11/25 00:55:41.407
  STEP: Confirm deletion of StorageClass "e2e-mppz2" @ 01/11/25 00:55:41.419
  STEP: Create a replacement StorageClass @ 01/11/25 00:55:41.426
  STEP: Updating StorageClass "e2e-v2-22jxp" @ 01/11/25 00:55:41.441
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-22jxp=updated" @ 01/11/25 00:55:41.458
  STEP: Deleting StorageClass "e2e-v2-22jxp" via DeleteCollection @ 01/11/25 00:55:41.462
  STEP: Confirm deletion of StorageClass "e2e-v2-22jxp" @ 01/11/25 00:55:41.474
  I0111 00:55:41.478339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5598" for this suite. @ 01/11/25 00:55:41.482
• [0.229 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/11/25 00:55:41.499
  I0111 00:55:41.499449 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubelet-test @ 01/11/25 00:55:41.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:41.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:41.577
  I0111 00:55:45.626442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8214" for this suite. @ 01/11/25 00:55:45.631
• [4.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/11/25 00:55:45.643
  I0111 00:55:45.643684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 00:55:45.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:45.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:45.685
  STEP: Setting up server cert @ 01/11/25 00:55:45.79
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 00:55:46.166
  STEP: Deploying the webhook pod @ 01/11/25 00:55:46.178
  STEP: Wait for the deployment to be ready @ 01/11/25 00:55:46.209
  I0111 00:55:46.229278 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/11/25 00:55:48.243
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 00:55:48.27
  I0111 00:55:49.270742 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/11/25 00:55:49.49
  STEP: Creating a configMap that should be mutated @ 01/11/25 00:55:49.508
  STEP: Deleting the collection of validation webhooks @ 01/11/25 00:55:49.551
  STEP: Creating a configMap that should not be mutated @ 01/11/25 00:55:49.655
  I0111 00:55:49.803638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8576" for this suite. @ 01/11/25 00:55:49.815
  STEP: Destroying namespace "webhook-markers-7021" for this suite. @ 01/11/25 00:55:49.835
• [4.211 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 01/11/25 00:55:49.854
  I0111 00:55:49.855043 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 00:55:49.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:55:49.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:55:49.917
  STEP: Creating service test in namespace statefulset-9300 @ 01/11/25 00:55:49.923
  STEP: Looking for a node to schedule stateful set and pod @ 01/11/25 00:55:49.942
  STEP: Creating pod with conflicting port in namespace statefulset-9300 @ 01/11/25 00:55:49.955
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9300 @ 01/11/25 00:55:49.994
  STEP: Creating statefulset with conflicting port in namespace statefulset-9300 @ 01/11/25 00:55:52.002
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9300 @ 01/11/25 00:55:52.018
  I0111 00:55:52.047419 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-9300, name: ss-0, uid: bafa5f36-0bc4-4585-9bd6-98952c79aa0a, status phase: Pending. Waiting for statefulset controller to delete.
  I0111 00:55:52.086612 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-9300, name: ss-0, uid: bafa5f36-0bc4-4585-9bd6-98952c79aa0a, status phase: Failed. Waiting for statefulset controller to delete.
  I0111 00:55:52.117902 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-9300, name: ss-0, uid: bafa5f36-0bc4-4585-9bd6-98952c79aa0a, status phase: Failed. Waiting for statefulset controller to delete.
  I0111 00:55:52.127546 23 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-9300
  STEP: Removing pod with conflicting port in namespace statefulset-9300 @ 01/11/25 00:55:52.127
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9300 and will be in running state @ 01/11/25 00:55:52.228
  I0111 00:55:54.245119 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9300
  I0111 00:55:54.248020 23 rest.go:152] Scaling statefulset ss to 0
  I0111 00:56:04.276836 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 00:56:04.282087 23 rest.go:90] Deleting statefulset ss
  I0111 00:56:04.310879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9300" for this suite. @ 01/11/25 00:56:04.314
• [14.473 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/11/25 00:56:04.328
  I0111 00:56:04.328175 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 00:56:04.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:04.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:04.4
  STEP: creating secret secrets-887/secret-test-2e2abde1-8761-491f-ac13-91a09496bf60 @ 01/11/25 00:56:04.403
  STEP: Creating a pod to test consume secrets @ 01/11/25 00:56:04.414
  STEP: Saw pod success @ 01/11/25 00:56:08.451
  I0111 00:56:08.456498 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-e40d888f-bd4a-44cd-a8e9-7da5d4ab779b container env-test: <nil>
  STEP: delete the pod @ 01/11/25 00:56:08.482
  I0111 00:56:08.526371 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-887" for this suite. @ 01/11/25 00:56:08.539
• [4.229 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/11/25 00:56:08.556
  I0111 00:56:08.556990 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 00:56:08.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:08.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:08.614
  STEP: create the deployment @ 01/11/25 00:56:08.626
  W0111 00:56:08.641156      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/11/25 00:56:08.641
  STEP: delete the deployment @ 01/11/25 00:56:08.663
  STEP: wait for all rs to be garbage collected @ 01/11/25 00:56:08.712
  STEP: expected 0 pods, got 2 pods @ 01/11/25 00:56:08.818
  STEP: Gathering metrics @ 01/11/25 00:56:09.221
  W0111 00:56:09.225809      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 00:56:09.225852 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 00:56:09.226038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9198" for this suite. @ 01/11/25 00:56:09.23
• [0.684 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/11/25 00:56:09.241
  I0111 00:56:09.241437 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 00:56:09.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:09.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:09.312
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/11/25 00:56:09.318
  I0111 00:56:09.319296 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:56:11.134788 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 00:56:18.605886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3036" for this suite. @ 01/11/25 00:56:18.629
• [9.407 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/11/25 00:56:18.648
  I0111 00:56:18.648631 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/11/25 00:56:18.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:18.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:18.696
  STEP: create the container to handle the HTTPGet hook request. @ 01/11/25 00:56:18.715
  STEP: create the pod with lifecycle hook @ 01/11/25 00:56:24.775
  STEP: delete the pod with lifecycle hook @ 01/11/25 00:56:26.812
  STEP: check prestop hook @ 01/11/25 00:56:28.854
  I0111 00:56:28.869672 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3248" for this suite. @ 01/11/25 00:56:28.876
• [10.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/11/25 00:56:28.887
  I0111 00:56:28.887300 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 00:56:28.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:28.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:28.941
  STEP: Creating a ResourceQuota with best effort scope @ 01/11/25 00:56:28.944
  STEP: Ensuring ResourceQuota status is calculated @ 01/11/25 00:56:28.959
  STEP: Creating a ResourceQuota with not best effort scope @ 01/11/25 00:56:30.963
  STEP: Ensuring ResourceQuota status is calculated @ 01/11/25 00:56:30.972
  STEP: Creating a best-effort pod @ 01/11/25 00:56:32.977
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/11/25 00:56:33.015
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/11/25 00:56:35.021
  STEP: Deleting the pod @ 01/11/25 00:56:37.025
  STEP: Ensuring resource quota status released the pod usage @ 01/11/25 00:56:37.059
  STEP: Creating a not best-effort pod @ 01/11/25 00:56:39.063
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/11/25 00:56:39.087
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/11/25 00:56:41.092
  STEP: Deleting the pod @ 01/11/25 00:56:43.096
  STEP: Ensuring resource quota status released the pod usage @ 01/11/25 00:56:43.133
  I0111 00:56:45.138273 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8203" for this suite. @ 01/11/25 00:56:45.142
• [16.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/11/25 00:56:45.156
  I0111 00:56:45.156950 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption @ 01/11/25 00:56:45.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:45.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:45.2
  STEP: Waiting for the pdb to be processed @ 01/11/25 00:56:45.222
  STEP: Waiting for all pods to be running @ 01/11/25 00:56:47.297
  I0111 00:56:47.334991 23 disruption.go:691] running pods: 0 < 3
  I0111 00:56:49.303314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2822" for this suite. @ 01/11/25 00:56:49.307
• [4.166 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/11/25 00:56:49.323
  I0111 00:56:49.323097 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 00:56:49.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:49.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:49.394
  STEP: Setting up server cert @ 01/11/25 00:56:49.462
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 00:56:49.868
  STEP: Deploying the webhook pod @ 01/11/25 00:56:49.882
  STEP: Wait for the deployment to be ready @ 01/11/25 00:56:49.918
  I0111 00:56:49.944187 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/11/25 00:56:51.971
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 00:56:52.012
  I0111 00:56:53.012357 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/11/25 00:56:53.018
  STEP: create a configmap that should be updated by the webhook @ 01/11/25 00:56:53.064
  I0111 00:56:53.211119 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1745" for this suite. @ 01/11/25 00:56:53.218
  STEP: Destroying namespace "webhook-markers-2801" for this suite. @ 01/11/25 00:56:53.234
• [3.945 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/11/25 00:56:53.268
  I0111 00:56:53.269230 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 00:56:53.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:53.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:53.3
  STEP: Creating configMap with name configmap-test-volume-map-ceb7cbd1-0a61-40a4-8a45-ff7643f3e7ae @ 01/11/25 00:56:53.304
  STEP: Creating a pod to test consume configMaps @ 01/11/25 00:56:53.319
  STEP: Saw pod success @ 01/11/25 00:56:57.347
  I0111 00:56:57.349796 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-configmaps-2c12866e-efab-46e8-aeaa-3daa5f7eea71 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 00:56:57.37
  I0111 00:56:57.399493 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8987" for this suite. @ 01/11/25 00:56:57.404
• [4.156 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/11/25 00:56:57.425
  I0111 00:56:57.425385 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 00:56:57.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:56:57.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:56:57.481
  STEP: Counting existing ResourceQuota @ 01/11/25 00:56:57.485
  STEP: Creating a ResourceQuota @ 01/11/25 00:57:02.497
  STEP: Ensuring resource quota status is calculated @ 01/11/25 00:57:02.508
  STEP: Creating a ReplicationController @ 01/11/25 00:57:04.513
  STEP: Ensuring resource quota status captures replication controller creation @ 01/11/25 00:57:04.551
  STEP: Deleting a ReplicationController @ 01/11/25 00:57:06.555
  STEP: Ensuring resource quota status released usage @ 01/11/25 00:57:06.565
  I0111 00:57:08.568707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1243" for this suite. @ 01/11/25 00:57:08.571
• [11.155 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/11/25 00:57:08.581
  I0111 00:57:08.581501 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 00:57:08.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:08.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:08.629
  I0111 00:57:08.633848 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  W0111 00:57:08.634583      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0038602a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0111 00:57:11.186060      23 warnings.go:70] unknown field "alpha"
  W0111 00:57:11.186102      23 warnings.go:70] unknown field "beta"
  W0111 00:57:11.186110      23 warnings.go:70] unknown field "delta"
  W0111 00:57:11.186117      23 warnings.go:70] unknown field "epsilon"
  W0111 00:57:11.186124      23 warnings.go:70] unknown field "gamma"
  I0111 00:57:11.763692 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3396" for this suite. @ 01/11/25 00:57:11.767
• [3.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/11/25 00:57:11.778
  I0111 00:57:11.778877 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 00:57:11.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:11.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:11.884
  STEP: Creating configMap with name configmap-test-volume-67586bbf-3d64-458b-8592-6228cad731aa @ 01/11/25 00:57:11.888
  STEP: Creating a pod to test consume configMaps @ 01/11/25 00:57:11.905
  STEP: Saw pod success @ 01/11/25 00:57:15.948
  I0111 00:57:15.953263 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-8f733de6-4b9a-487f-99bb-794c6a271d60 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 00:57:15.977
  I0111 00:57:16.020501 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1488" for this suite. @ 01/11/25 00:57:16.025
• [4.259 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/11/25 00:57:16.038
  I0111 00:57:16.038988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 00:57:16.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:16.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:16.094
  STEP: Setting up server cert @ 01/11/25 00:57:16.186
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 00:57:16.502
  STEP: Deploying the webhook pod @ 01/11/25 00:57:16.519
  STEP: Wait for the deployment to be ready @ 01/11/25 00:57:16.56
  I0111 00:57:16.577188 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/11/25 00:57:18.589
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 00:57:18.616
  I0111 00:57:19.617617 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0111 00:57:19.622918 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/11/25 00:57:20.142
  STEP: Creating a custom resource that should be denied by the webhook @ 01/11/25 00:57:20.181
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/11/25 00:57:22.199
  STEP: Updating the custom resource with disallowed data should be denied @ 01/11/25 00:57:22.21
  STEP: Deleting the custom resource should be denied @ 01/11/25 00:57:22.234
  STEP: Remove the offending key and value from the custom resource data @ 01/11/25 00:57:22.252
  STEP: Deleting the updated custom resource should be successful @ 01/11/25 00:57:22.271
  I0111 00:57:22.982217 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5995" for this suite. @ 01/11/25 00:57:22.987
  STEP: Destroying namespace "webhook-markers-7020" for this suite. @ 01/11/25 00:57:22.996
• [6.972 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/11/25 00:57:23.013
  I0111 00:57:23.014167 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 00:57:23.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:23.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:23.068
  STEP: Setting up server cert @ 01/11/25 00:57:23.152
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 00:57:23.468
  STEP: Deploying the webhook pod @ 01/11/25 00:57:23.494
  STEP: Wait for the deployment to be ready @ 01/11/25 00:57:23.522
  I0111 00:57:23.539204 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/11/25 00:57:25.546
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 00:57:25.569
  I0111 00:57:26.570619 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/11/25 00:57:26.577
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/11/25 00:57:26.608
  STEP: Creating a dummy validating-webhook-configuration object @ 01/11/25 00:57:26.632
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/11/25 00:57:26.651
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/11/25 00:57:26.664
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/11/25 00:57:26.694
  I0111 00:57:26.893275 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1042" for this suite. @ 01/11/25 00:57:26.898
  STEP: Destroying namespace "webhook-markers-5955" for this suite. @ 01/11/25 00:57:26.916
• [3.926 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/11/25 00:57:26.938
  I0111 00:57:26.938348 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename events @ 01/11/25 00:57:26.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:27.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:27.03
  STEP: creating a test event @ 01/11/25 00:57:27.036
  STEP: listing all events in all namespaces @ 01/11/25 00:57:27.046
  STEP: patching the test event @ 01/11/25 00:57:27.054
  STEP: fetching the test event @ 01/11/25 00:57:27.068
  STEP: updating the test event @ 01/11/25 00:57:27.072
  STEP: getting the test event @ 01/11/25 00:57:27.086
  STEP: deleting the test event @ 01/11/25 00:57:27.089
  STEP: listing all events in all namespaces @ 01/11/25 00:57:27.098
  I0111 00:57:27.111289 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2535" for this suite. @ 01/11/25 00:57:27.118
• [0.201 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/11/25 00:57:27.139
  I0111 00:57:27.139689 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subpath @ 01/11/25 00:57:27.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:27.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:27.23
  STEP: Setting up data @ 01/11/25 00:57:27.236
  STEP: Creating pod pod-subpath-test-projected-899h @ 01/11/25 00:57:27.261
  STEP: Creating a pod to test atomic-volume-subpath @ 01/11/25 00:57:27.261
  STEP: Saw pod success @ 01/11/25 00:57:51.331
  I0111 00:57:51.333296 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-subpath-test-projected-899h container test-container-subpath-projected-899h: <nil>
  STEP: delete the pod @ 01/11/25 00:57:51.342
  STEP: Deleting pod pod-subpath-test-projected-899h @ 01/11/25 00:57:51.373
  I0111 00:57:51.373283 23 delete.go:62] Deleting pod "pod-subpath-test-projected-899h" in namespace "subpath-1414"
  I0111 00:57:51.375737 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1414" for this suite. @ 01/11/25 00:57:51.379
• [24.255 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/11/25 00:57:51.395
  I0111 00:57:51.395283 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 00:57:51.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:51.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:51.438
  STEP: Creating configMap with name configmap-test-volume-a2b128b8-f187-4989-9936-dcad7e8bc3a3 @ 01/11/25 00:57:51.442
  STEP: Creating a pod to test consume configMaps @ 01/11/25 00:57:51.452
  STEP: Saw pod success @ 01/11/25 00:57:55.492
  I0111 00:57:55.495533 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-73341316-af34-42b5-84c7-6f7bf4680e8c container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 00:57:55.501
  I0111 00:57:55.558540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9405" for this suite. @ 01/11/25 00:57:55.564
• [4.184 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/11/25 00:57:55.58
  I0111 00:57:55.580502 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 00:57:55.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:57:55.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:57:55.673
  STEP: creating a ReplicationController @ 01/11/25 00:57:55.681
  STEP: waiting for RC to be added @ 01/11/25 00:57:55.695
  STEP: waiting for available Replicas @ 01/11/25 00:57:55.695
  STEP: patching ReplicationController @ 01/11/25 00:57:59.002
  STEP: waiting for RC to be modified @ 01/11/25 00:57:59.024
  STEP: patching ReplicationController status @ 01/11/25 00:57:59.024
  STEP: waiting for RC to be modified @ 01/11/25 00:57:59.039
  STEP: waiting for available Replicas @ 01/11/25 00:57:59.04
  STEP: fetching ReplicationController status @ 01/11/25 00:57:59.06
  STEP: patching ReplicationController scale @ 01/11/25 00:57:59.063
  STEP: waiting for RC to be modified @ 01/11/25 00:57:59.072
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/11/25 00:57:59.073
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/11/25 00:58:02.787
  STEP: updating ReplicationController status @ 01/11/25 00:58:02.792
  STEP: waiting for RC to be modified @ 01/11/25 00:58:02.812
  STEP: listing all ReplicationControllers @ 01/11/25 00:58:02.812
  STEP: checking that ReplicationController has expected values @ 01/11/25 00:58:02.819
  STEP: deleting ReplicationControllers by collection @ 01/11/25 00:58:02.82
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/11/25 00:58:02.862
  I0111 00:58:02.954352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 00:58:02.954654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9152" for this suite. @ 01/11/25 00:58:02.957
• [7.389 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/11/25 00:58:02.969
  I0111 00:58:02.969028 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 00:58:02.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:02.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:03.006
  E0111 00:58:03.955399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:04.955680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:05.956008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:06.956106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:07.068651 23 delete.go:62] Deleting pod "var-expansion-06f21c26-04ef-413c-b374-425d272d6d66" in namespace "var-expansion-2970"
  I0111 00:58:07.086840 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-06f21c26-04ef-413c-b374-425d272d6d66" to be fully deleted
  E0111 00:58:07.957158      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:08.957499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:09.098978 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2970" for this suite. @ 01/11/25 00:58:09.104
• [6.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/11/25 00:58:09.114
  I0111 00:58:09.114171 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubelet-test @ 01/11/25 00:58:09.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:09.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:09.206
  E0111 00:58:09.958159      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:10.958389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:11.258844 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7161" for this suite. @ 01/11/25 00:58:11.266
• [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/11/25 00:58:11.294
  I0111 00:58:11.294850 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 00:58:11.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:11.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:11.333
  STEP: create the rc @ 01/11/25 00:58:11.366
  W0111 00:58:11.380503      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0111 00:58:11.959322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:12.959507      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:13.959666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:14.960316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:15.961469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:16.961398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/11/25 00:58:17.466
  STEP: wait for the rc to be deleted @ 01/11/25 00:58:17.651
  E0111 00:58:17.962101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:18.962207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:19.138525 23 garbage_collector.go:670] 85 pods remaining
  I0111 00:58:19.138571 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0111 00:58:19.138582 23 garbage_collector.go:678] 
  E0111 00:58:19.963245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:20.079766 23 garbage_collector.go:670] 74 pods remaining
  I0111 00:58:20.080001 23 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0111 00:58:20.080073 23 garbage_collector.go:678] 
  E0111 00:58:20.964307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:21.185249 23 garbage_collector.go:670] 56 pods remaining
  I0111 00:58:21.185434 23 garbage_collector.go:677] 54 pods has nil DeletionTimestamp
  I0111 00:58:21.185514 23 garbage_collector.go:678] 
  E0111 00:58:21.965219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:22.541725 23 garbage_collector.go:670] 49 pods remaining
  I0111 00:58:22.541775 23 garbage_collector.go:677] 42 pods has nil DeletionTimestamp
  I0111 00:58:22.541786 23 garbage_collector.go:678] 
  E0111 00:58:22.965665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:23.323976 23 garbage_collector.go:670] 37 pods remaining
  I0111 00:58:23.324033 23 garbage_collector.go:677] 29 pods has nil DeletionTimestamp
  I0111 00:58:23.324044 23 garbage_collector.go:678] 
  E0111 00:58:23.965883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:24.344063 23 garbage_collector.go:670] 24 pods remaining
  I0111 00:58:24.344244 23 garbage_collector.go:677] 23 pods has nil DeletionTimestamp
  I0111 00:58:24.344331 23 garbage_collector.go:678] 
  I0111 00:58:24.903334 23 garbage_collector.go:670] 9 pods remaining
  I0111 00:58:24.903370 23 garbage_collector.go:677] 9 pods has nil DeletionTimestamp
  I0111 00:58:24.903381 23 garbage_collector.go:678] 
  E0111 00:58:24.966512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:25.674126 23 garbage_collector.go:670] 0 pods remaining
  I0111 00:58:25.674391 23 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0111 00:58:25.674468 23 garbage_collector.go:678] 
  E0111 00:58:25.966393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/11/25 00:58:26.665
  W0111 00:58:26.817693      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 00:58:26.817871 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 00:58:26.820075 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 00:58:26.966428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-1731" for this suite. @ 01/11/25 00:58:27.025
• [15.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/11/25 00:58:27.06
  I0111 00:58:27.060060 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 00:58:27.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:27.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:27.281
  STEP: Creating secret with name secret-test-0d860045-06eb-408e-91bb-ef915c7961d9 @ 01/11/25 00:58:27.585
  STEP: Creating a pod to test consume secrets @ 01/11/25 00:58:27.711
  E0111 00:58:27.967077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:28.967483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:29.968462      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:30.968665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:31.968672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:32.968834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:33.968908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 00:58:34.032
  I0111 00:58:34.036624 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-secrets-02e89b4a-7006-446b-95e5-b6c1c0d48d85 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 00:58:34.123
  I0111 00:58:34.810169 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5540" for this suite. @ 01/11/25 00:58:34.819
  STEP: Destroying namespace "secret-namespace-154" for this suite. @ 01/11/25 00:58:34.84
• [7.833 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/11/25 00:58:34.893
  I0111 00:58:34.893037 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 00:58:34.893
  E0111 00:58:34.969634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:35.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:35.15
  STEP: Creating secret with name secret-test-ce36b40b-002a-467e-9ec6-7207f8993b78 @ 01/11/25 00:58:35.158
  STEP: Creating a pod to test consume secrets @ 01/11/25 00:58:35.212
  E0111 00:58:35.969789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:36.970432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:37.970639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:38.970852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 00:58:39.564
  I0111 00:58:39.655622 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-d9eb7d17-e4f7-413e-b917-a2889f46042a container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 00:58:39.71
  I0111 00:58:39.893063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 00:58:39.972001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-5555" for this suite. @ 01/11/25 00:58:40.041
• [5.395 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 01/11/25 00:58:40.288
  I0111 00:58:40.288762 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 00:58:40.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:40.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:40.536
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/11/25 00:58:40.554
  I0111 00:58:40.554747 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3988 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0111 00:58:40.834102 23 builder.go:146] stderr: ""
  I0111 00:58:40.834168 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/11/25 00:58:40.834
  E0111 00:58:40.972164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:40.988167 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3988 delete pods e2e-test-httpd-pod'
  E0111 00:58:41.972246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:42.972323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:43.068599 23 builder.go:146] stderr: ""
  I0111 00:58:43.068707 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0111 00:58:43.068843 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3988" for this suite. @ 01/11/25 00:58:43.147
• [2.977 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/11/25 00:58:43.266
  I0111 00:58:43.266285 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 00:58:43.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:43.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:43.423
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 00:58:43.427
  E0111 00:58:43.973000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:44.973668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:45.974577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:46.974679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 00:58:47.887
  I0111 00:58:47.930599 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-db50e5fa-06f4-484e-b7a5-69a2c091c964 container client-container: <nil>
  E0111 00:58:47.975479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 01/11/25 00:58:48.012
  I0111 00:58:48.238331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7361" for this suite. @ 01/11/25 00:58:48.246
• [5.162 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/11/25 00:58:48.428
  I0111 00:58:48.428255 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename endpointslice @ 01/11/25 00:58:48.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:48.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:48.589
  E0111 00:58:48.976239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:49.977497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:50.981001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:51.981213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/11/25 00:58:52.01
  STEP: referencing matching pods with named port @ 01/11/25 00:58:52.145
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/11/25 00:58:52.169
  STEP: recreating EndpointSlices after they've been deleted @ 01/11/25 00:58:52.35
  I0111 00:58:52.496762 23 endpointslice.go:938] EndpointSlice for Service endpointslice-7106/example-named-port not found
  E0111 00:58:52.982194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:53.982581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:58:54.501182 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7106" for this suite. @ 01/11/25 00:58:54.505
• [6.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/11/25 00:58:54.517
  I0111 00:58:54.517072 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 00:58:54.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:54.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:54.565
  I0111 00:58:54.674137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6389" for this suite. @ 01/11/25 00:58:54.677
• [0.182 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 01/11/25 00:58:54.699
  I0111 00:58:54.699020 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename volumeattachment @ 01/11/25 00:58:54.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:54.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:54.746
  STEP: Create VolumeAttachment "va-e2e-d4v92" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.778
  STEP: Get VolumeAttachment "va-e2e-d4v92" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.788
  STEP: Patch VolumeAttachment "va-e2e-d4v92" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.792
  STEP: List VolumeAttachments with "va-e2e-d4v92=patched" label @ 01/11/25 00:58:54.807
  STEP: Delete VolumeAttachment "va-e2e-d4v92" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.811
  STEP: Confirm deletion of VolumeAttachment "va-e2e-d4v92" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.822
  STEP: Create VolumeAttachment "va-e2e-p4l6s" on node "ip-172-31-22-167.us-east-2.compute.internal" @ 01/11/25 00:58:54.888
  STEP: Update the VolumeAttachment "va-e2e-p4l6s" on node "ip-172-31-22-167.us-east-2.compute.internal" with label "va-e2e=updated" @ 01/11/25 00:58:54.902
  STEP: Create VolumeAttachment "va-e2e-q2tgk" on node "ip-172-31-22-7.us-east-2.compute.internal" @ 01/11/25 00:58:54.979
  E0111 00:58:54.982550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Update the VolumeAttachment "va-e2e-q2tgk" on node "ip-172-31-22-7.us-east-2.compute.internal" with label "va-e2e=updated" @ 01/11/25 00:58:55.004
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/11/25 00:58:55.016
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/11/25 00:58:55.034
  I0111 00:58:55.037315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-334" for this suite. @ 01/11/25 00:58:55.079
• [0.392 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/11/25 00:58:55.091
  I0111 00:58:55.091648 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 00:58:55.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:55.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:55.139
  STEP: Creating projection with secret that has name projected-secret-test-map-8bbb46a0-41cc-4b64-a297-fa9268973221 @ 01/11/25 00:58:55.143
  STEP: Creating a pod to test consume secrets @ 01/11/25 00:58:55.154
  E0111 00:58:55.982800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:56.983019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:57.983474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:58:58.983352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 00:58:59.198
  I0111 00:58:59.200929 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-projected-secrets-a702f0d3-b366-4f89-9d7e-aa60eb2a8486 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 00:58:59.207
  I0111 00:58:59.244385 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-379" for this suite. @ 01/11/25 00:58:59.248
• [4.179 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/11/25 00:58:59.27
  I0111 00:58:59.270939 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 00:58:59.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 00:58:59.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 00:58:59.327
  STEP: Creating pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569 @ 01/11/25 00:58:59.331
  E0111 00:58:59.984197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:00.984678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 00:59:01.361
  I0111 00:59:01.366934 23 container_probe.go:1749] Initial restart count of pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a is 0
  I0111 00:59:01.370665 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:01.985307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:02.985461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:03.384940 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:03.986538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:04.986650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:05.389712 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:05.987579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:06.988448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:07.393829 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:07.989554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:08.989888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:09.396696 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:09.989988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:10.990291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:11.402868 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:11.990705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:12.991028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:13.409408 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:13.992086      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:14.992302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:15.413045 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:15.992428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:16.992664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:17.416630 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:17.993672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:18.993990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:19.421191 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:19.994533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:20.995216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:21.425992 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:21.995226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:22.995563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:23.431634 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:23.996388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:24.997669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:25.481072 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:25.998822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:26.999902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:27.484316 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:28.000827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:29.001008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:29.487121 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:30.002649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:31.003131      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:31.491145 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:32.003812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:33.003985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:33.494195 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:34.006985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:35.007762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:35.507326 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:36.007834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:37.008146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:37.510162 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:38.009234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:39.009546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:39.514179 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:40.010592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:41.011299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:41.519388 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:42.011915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:43.012459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:43.524264 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:44.012526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:45.012614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:45.528040 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:46.013668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:47.013968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:47.530981 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:48.015290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:49.015409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:49.534811 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:50.016291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:51.016645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:51.541048 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:52.017676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:53.017796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:53.544013 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:54.018712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:55.019317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:55.546919 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:56.019284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:57.019529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:57.550576 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 00:59:58.019651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 00:59:59.020015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 00:59:59.554527 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:00.025762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:01.023500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:01.559752 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:02.023134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:03.024266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:03.564826 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:04.023807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:05.024427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:05.568843 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:06.025392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:07.025447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:07.573602 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:08.030210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:09.027966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:09.577863 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:10.028635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:11.028401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:11.582563 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:12.029256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:13.029241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:13.585539 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:14.029797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:15.029994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:15.589410 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:16.031328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:17.032105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:17.593540 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:18.033062      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:19.033489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:19.596484 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:20.034248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:21.034541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:21.599941 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:22.035564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:23.036282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:23.603595 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:24.036492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:25.036597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:25.607480 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:26.036879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:27.037060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:27.611215 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:28.037713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:29.038319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:29.614752 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:30.039601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:31.038650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:31.618805 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:32.038776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:33.039048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:33.622917 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:34.039429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:35.040332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:35.631995 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:36.040622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:37.040990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:37.635419 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:38.041618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:39.041774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:39.639459 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:40.042152      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:41.042226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:41.643615 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:42.043234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:43.043391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:43.646923 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:44.044291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:45.044407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:45.651331 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:46.044509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:47.044720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:47.655428 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:48.044834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:49.045025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:49.660116 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:50.045625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:51.045917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:51.663689 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:52.046174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:53.046621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:53.667358 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:54.046872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:55.047140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:55.671189 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:56.047638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:57.048471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:57.675525 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:00:58.049104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:00:59.049244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:00:59.680553 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:00.050073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:01.050183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:01.693224 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:02.050742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:03.051080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:03.703309 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:04.051478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:05.051418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:05.708646 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:06.052784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:07.053041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:07.712964 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:08.052924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:09.053110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:09.717282 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:10.053940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:11.054185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:11.721389 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:12.055274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:13.055599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:13.727383 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:14.056362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:15.057007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:15.731891 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:16.057319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:17.057630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:17.734778 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:18.057946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:19.058137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:19.739331 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:20.059039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:21.059319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:21.745038 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:22.059409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:23.059520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:23.757203 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:24.060588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:25.060859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:25.760179 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:26.061519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:27.061850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:27.764882 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:28.062610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:29.062873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:29.769346 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:30.063909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:31.063890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:31.774163 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:32.064398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:33.064618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:33.777756 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:34.064739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:35.064997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:35.786588 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:36.065736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:37.066561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:37.790006 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:38.067414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:39.067504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:39.793554 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:40.067662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:41.067792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:41.798446 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:42.068066      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:43.068440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:43.801486 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:44.068914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:45.069117      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:45.805712 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:46.069936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:47.070343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:47.809440 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:48.070838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:49.071628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:49.819045 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:50.072313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:51.072683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:51.822674 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:52.072827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:53.072974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:53.830797 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:54.073148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:55.073454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:55.834276 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:56.074382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:57.074598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:57.838376 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:01:58.074678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:01:59.074896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:01:59.844568 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:00.075194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:01.075374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:01.862451 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:02.076613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:03.077555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:03.866035 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:04.078591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:05.078575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:05.869672 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:06.079131      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:07.079349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:07.873346 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:08.079872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:09.080235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:09.876200 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:10.080741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:11.081067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:11.881582 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:12.081061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:13.081458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:13.885983 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:14.082411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:15.082723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:15.890049 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:16.083556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:17.083641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:17.893744 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:18.084553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:19.084622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:19.901757 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:20.085099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:21.085219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:21.910962 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:22.086307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:23.086374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:23.914380 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:24.087664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:25.087375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:25.919234 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:26.088324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:27.088671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:27.926540 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:28.088985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:29.089106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:29.936389 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:30.089741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:31.089966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:31.940349 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:32.091106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:33.090750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:33.943358 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:34.091375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:35.092316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:35.946298 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:36.092618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:37.092990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:37.949317 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:38.093522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:39.093803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:39.953438 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:40.094188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:41.095157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:41.957054 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:42.095534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:43.095590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:43.963720 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:44.095972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:45.096331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:45.966731 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:46.096822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:47.096944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:47.972075 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:48.097423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:49.097633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:49.978874 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:50.098123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:51.098274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:51.982038 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:52.099381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:53.099450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:53.985742 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:54.100006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:55.100199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:55.988959 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:56.100260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:57.100804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:57.992318 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:02:58.102530      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:02:59.102876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:02:59.996188 23 container_probe.go:1759] Get pod test-grpc-e5d6e34a-99c1-4c36-be3f-14b2a5c2719a in namespace container-probe-569
  E0111 01:03:00.104078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:01.104386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/11/25 01:03:01.996
  I0111 01:03:02.037892 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-569" for this suite. @ 01/11/25 01:03:02.053
• [242.809 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/11/25 01:03:02.079
  I0111 01:03:02.079782 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:03:02.083
  E0111 01:03:02.104839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:03:02.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:03:02.138
  I0111 01:03:02.158500 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-488" for this suite. @ 01/11/25 01:03:02.176
• [0.126 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/11/25 01:03:02.205
  I0111 01:03:02.205665 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename limitrange @ 01/11/25 01:03:02.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:03:02.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:03:02.256
  STEP: Creating a LimitRange @ 01/11/25 01:03:02.262
  STEP: Setting up watch @ 01/11/25 01:03:02.263
  STEP: Submitting a LimitRange @ 01/11/25 01:03:02.373
  STEP: Verifying LimitRange creation was observed @ 01/11/25 01:03:02.395
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/11/25 01:03:02.395
  I0111 01:03:02.404331 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0111 01:03:02.404385 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/11/25 01:03:02.404
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/11/25 01:03:02.425
  I0111 01:03:02.430664 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0111 01:03:02.431209 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/11/25 01:03:02.431
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/11/25 01:03:02.468
  I0111 01:03:02.487859 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0111 01:03:02.487908 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/11/25 01:03:02.487
  STEP: Failing to create a Pod with more than max resources @ 01/11/25 01:03:02.491
  STEP: Updating a LimitRange @ 01/11/25 01:03:02.5
  STEP: Verifying LimitRange updating is effective @ 01/11/25 01:03:02.524
  E0111 01:03:03.105903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:04.105787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 01/11/25 01:03:04.527
  STEP: Failing to create a Pod with more than max resources @ 01/11/25 01:03:04.543
  STEP: Deleting a LimitRange @ 01/11/25 01:03:04.546
  STEP: Verifying the LimitRange was deleted @ 01/11/25 01:03:04.572
  E0111 01:03:05.106697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:06.106838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:07.107249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:08.108301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:09.108528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:03:09.576977 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/11/25 01:03:09.577
  I0111 01:03:09.594110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8581" for this suite. @ 01/11/25 01:03:09.616
• [7.429 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/11/25 01:03:09.635
  I0111 01:03:09.635152 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:03:09.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:03:09.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:03:09.687
  STEP: Creating projection with secret that has name projected-secret-test-map-75445210-3661-43b8-9bb7-796c63fda5e7 @ 01/11/25 01:03:09.691
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:03:09.708
  E0111 01:03:10.109291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:11.109453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:12.110679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:13.110772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:03:13.762
  I0111 01:03:13.765572 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-secrets-799830a3-27dc-4d73-9693-ea862305dc47 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:03:13.779
  I0111 01:03:13.815300 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6825" for this suite. @ 01/11/25 01:03:13.82
• [4.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 01/11/25 01:03:13.832
  I0111 01:03:13.833065 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 01:03:13.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:03:13.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:03:13.881
  STEP: Creating service test in namespace statefulset-7322 @ 01/11/25 01:03:13.885
  STEP: Creating a new StatefulSet @ 01/11/25 01:03:13.898
  I0111 01:03:13.937909 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E0111 01:03:14.111198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:15.111330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:16.111603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:17.112494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:18.112509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:19.113288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:20.112801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:21.113051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:22.113411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:23.113796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:03:23.923607 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:03:23.923675 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:03:23.923692 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/11/25 01:03:23.933
  I0111 01:03:23.946831 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/11/25 01:03:23.946
  E0111 01:03:24.114926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:25.115152      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:26.115403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:27.116568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:28.116544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:29.117501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:30.117707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:31.117838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:32.118206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:33.118342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/11/25 01:03:33.975
  STEP: Performing a canary update @ 01/11/25 01:03:33.975
  I0111 01:03:34.029122 23 statefulset.go:2510] Updating stateful set ss2
  I0111 01:03:34.050369 23 wait.go:74] Waiting for Pod statefulset-7322/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0111 01:03:34.120356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:35.119387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:36.119591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:37.119822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:38.120413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:39.120588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:40.120667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:41.120776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:42.121100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:43.121626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/11/25 01:03:44.039
  E0111 01:03:44.122586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:03:44.208845 23 wait.go:40] Found 1 stateful pods, waiting for 3
  E0111 01:03:45.123706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:46.123587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:47.123394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:48.124350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:49.124533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:50.124609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:51.125623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:52.126638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:53.127292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:54.127292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:03:54.191181 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:03:54.191217 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:03:54.191249 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/11/25 01:03:54.196
  I0111 01:03:54.213905 23 statefulset.go:2510] Updating stateful set ss2
  I0111 01:03:54.232453 23 wait.go:74] Waiting for Pod statefulset-7322/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0111 01:03:55.128033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:56.128136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:57.128451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:58.128411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:03:59.128666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:00.129019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:01.129750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:02.129979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:03.130088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:04.130977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:04.237869 23 statefulset.go:2510] Updating stateful set ss2
  I0111 01:04:04.261562 23 wait.go:56] Waiting for StatefulSet statefulset-7322/ss2 to complete update
  I0111 01:04:04.261623 23 wait.go:63] Waiting for Pod statefulset-7322/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0111 01:04:05.131404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:06.131470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:07.131610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:08.131755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:09.131886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:10.132030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:11.132281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:12.132641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:13.133123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:14.133597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:14.245702 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7322
  I0111 01:04:14.248148 23 rest.go:152] Scaling statefulset ss2 to 0
  E0111 01:04:15.134997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:16.135276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:17.136313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:18.136640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:19.136763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:20.136846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:21.137054      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:22.137276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:23.137412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:24.137625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:24.268585 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 01:04:24.271499 23 rest.go:90] Deleting statefulset ss2
  I0111 01:04:24.297705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7322" for this suite. @ 01/11/25 01:04:24.304
• [70.491 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/11/25 01:04:24.323
  I0111 01:04:24.323613 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:04:24.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:24.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:24.387
  STEP: Creating the pod @ 01/11/25 01:04:24.39
  E0111 01:04:25.137797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:26.138017      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:26.935786 23 pod_client.go:173] Successfully updated pod "labelsupdate28709be7-a45d-4ead-86f3-c4a2827d0132"
  E0111 01:04:27.138378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:28.138821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:29.138818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:30.139027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:30.966074 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2607" for this suite. @ 01/11/25 01:04:30.969
• [6.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/11/25 01:04:30.987
  I0111 01:04:30.987413 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:04:30.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:31.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:31.036
  STEP: Setting up server cert @ 01/11/25 01:04:31.126
  E0111 01:04:31.140021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:04:31.553
  STEP: Deploying the webhook pod @ 01/11/25 01:04:31.569
  STEP: Wait for the deployment to be ready @ 01/11/25 01:04:31.607
  I0111 01:04:31.634155 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:04:32.140289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:33.140557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:04:33.644
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:04:33.666
  E0111 01:04:34.140695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:34.667280 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/11/25 01:04:34.672
  STEP: create a pod that should be denied by the webhook @ 01/11/25 01:04:34.713
  STEP: create a pod that causes the webhook to hang @ 01/11/25 01:04:34.73
  E0111 01:04:35.141287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:36.141987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:37.141679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:38.141777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:39.142109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:40.144382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:41.144186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:42.144354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:43.144594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:44.144883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 01/11/25 01:04:44.738
  STEP: create a configmap that should be admitted by the webhook @ 01/11/25 01:04:44.753
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/11/25 01:04:44.771
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/11/25 01:04:44.782
  STEP: create a namespace that bypass the webhook @ 01/11/25 01:04:44.787
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/11/25 01:04:44.83
  I0111 01:04:45.054066 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3608" for this suite. @ 01/11/25 01:04:45.063
  STEP: Destroying namespace "webhook-markers-5794" for this suite. @ 01/11/25 01:04:45.074
  STEP: Destroying namespace "exempted-namespace-1667" for this suite. @ 01/11/25 01:04:45.084
• [14.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/11/25 01:04:45.104
  I0111 01:04:45.104300 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 01:04:45.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:45.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:45.136
  STEP: apply creating a deployment @ 01/11/25 01:04:45.143
  E0111 01:04:45.145635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:45.175259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4953" for this suite. @ 01/11/25 01:04:45.181
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/11/25 01:04:45.191
  I0111 01:04:45.191031 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 01:04:45.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:45.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:45.245
  STEP: Create a ReplicaSet @ 01/11/25 01:04:45.25
  STEP: Verify that the required pods have come up @ 01/11/25 01:04:45.262
  I0111 01:04:45.268164 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0111 01:04:46.146709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:47.146401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:48.146790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:49.147742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:50.147531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:50.291042 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/11/25 01:04:50.291
  I0111 01:04:50.299487 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/11/25 01:04:50.299
  STEP: DeleteCollection of the ReplicaSets @ 01/11/25 01:04:50.306
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/11/25 01:04:50.317
  I0111 01:04:50.323124 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-169" for this suite. @ 01/11/25 01:04:50.329
• [5.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/11/25 01:04:50.406
  I0111 01:04:50.406655 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:04:50.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:50.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:50.47
  STEP: Read namespace status @ 01/11/25 01:04:50.475
  I0111 01:04:50.480107 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/11/25 01:04:50.48
  I0111 01:04:50.494989 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/11/25 01:04:50.495
  I0111 01:04:50.534349 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0111 01:04:50.534673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6865" for this suite. @ 01/11/25 01:04:50.542
• [0.153 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/11/25 01:04:50.559
  I0111 01:04:50.559704 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename init-container @ 01/11/25 01:04:50.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:50.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:50.603
  STEP: creating the pod @ 01/11/25 01:04:50.606
  I0111 01:04:50.606804 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0111 01:04:51.148301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:52.150343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:53.150517      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:54.150655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:04:54.337103 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7693" for this suite. @ 01/11/25 01:04:54.341
• [3.797 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/11/25 01:04:54.356
  I0111 01:04:54.356976 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:04:54.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:54.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:54.408
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:04:54.415
  E0111 01:04:55.151227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:56.151331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:57.152286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:04:58.152729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:04:58.452
  I0111 01:04:58.455732 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod downwardapi-volume-93f62593-35b0-4fcf-9b6b-5914f66a7753 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:04:58.482
  I0111 01:04:58.513835 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6178" for this suite. @ 01/11/25 01:04:58.517
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 01/11/25 01:04:58.539
  I0111 01:04:58.539222 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 01:04:58.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:04:58.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:04:58.594
  STEP: Creating service test in namespace statefulset-8777 @ 01/11/25 01:04:58.598
  STEP: Creating statefulset ss in namespace statefulset-8777 @ 01/11/25 01:04:58.612
  I0111 01:04:58.642614 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0111 01:04:59.153465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:00.153648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:01.153894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:02.153995      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:03.154016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:04.154985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:05.155221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:06.155347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:07.155398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:08.156340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:08.633464 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/11/25 01:05:08.643
  STEP: updating a scale subresource @ 01/11/25 01:05:08.646
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/11/25 01:05:08.662
  STEP: Patch a scale subresource @ 01/11/25 01:05:08.664
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/11/25 01:05:08.685
  I0111 01:05:08.710403 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8777
  I0111 01:05:08.716248 23 rest.go:152] Scaling statefulset ss to 0
  E0111 01:05:09.157534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:10.157763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:11.157899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:12.158068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:13.158281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:14.158557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:15.161756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:16.160290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:17.160580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:18.160730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:18.807555 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 01:05:18.809949 23 rest.go:90] Deleting statefulset ss
  I0111 01:05:18.825744 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8777" for this suite. @ 01/11/25 01:05:18.83
• [20.304 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/11/25 01:05:18.844
  I0111 01:05:18.844847 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:05:18.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:05:18.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:05:18.909
  STEP: Creating projection with secret that has name projected-secret-test-64d368de-d854-4bc4-a147-9854cc6b986f @ 01/11/25 01:05:18.925
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:05:18.972
  E0111 01:05:19.161002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:20.161439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:21.163079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:22.163225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:05:23.027
  I0111 01:05:23.030160 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-secrets-ac0b8178-c4bf-4b46-8dae-e06a872b1f0f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:05:23.036
  I0111 01:05:23.073021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6616" for this suite. @ 01/11/25 01:05:23.078
• [4.262 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/11/25 01:05:23.106
  I0111 01:05:23.106384 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pv @ 01/11/25 01:05:23.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:05:23.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:05:23.14
  STEP: Creating initial PV and PVC @ 01/11/25 01:05:23.149
  I0111 01:05:23.150102 23 pv.go:394] Creating a PV followed by a PVC
  E0111 01:05:23.164291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5077" @ 01/11/25 01:05:23.19
  STEP: Listing PVCs in namespace "pv-5077" @ 01/11/25 01:05:23.208
  STEP: Patching the PV "pv-5077-5wfcj" @ 01/11/25 01:05:23.22
  STEP: Patching the PVC "pvc-rgkjj" @ 01/11/25 01:05:23.24
  STEP: Getting PV "pv-5077-5wfcj" @ 01/11/25 01:05:23.252
  STEP: Getting PVC "pvc-rgkjj" @ 01/11/25 01:05:23.261
  STEP: Deleting PVC "pvc-rgkjj" @ 01/11/25 01:05:23.266
  STEP: Confirm deletion of PVC "pvc-rgkjj" @ 01/11/25 01:05:23.351
  E0111 01:05:24.165537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:25.165753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5077-5wfcj" @ 01/11/25 01:05:25.37
  STEP: Confirm deletion of PV "pv-5077-5wfcj" @ 01/11/25 01:05:25.386
  E0111 01:05:26.165884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:27.166028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 01/11/25 01:05:27.392
  I0111 01:05:27.392528 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5077-dzrcd" @ 01/11/25 01:05:27.416
  STEP: Updating the PVC "pvc-brzk5" @ 01/11/25 01:05:27.453
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-brzk5=updated" @ 01/11/25 01:05:27.464
  STEP: Deleting PVC "pvc-brzk5" via DeleteCollection @ 01/11/25 01:05:27.479
  STEP: Confirm deletion of PVC "pvc-brzk5" @ 01/11/25 01:05:27.509
  E0111 01:05:28.166225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:29.166285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5077-dzrcd" via DeleteCollection @ 01/11/25 01:05:29.518
  STEP: Confirm deletion of PV "pv-5077-dzrcd" @ 01/11/25 01:05:29.529
  E0111 01:05:30.166797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:31.167116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:31.547951 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0111 01:05:31.547993 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-brzk5"
  I0111 01:05:31.550234 23 pv.go:193] Deleting PersistentVolume "pv-5077-dzrcd"
  I0111 01:05:31.552614 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5077" for this suite. @ 01/11/25 01:05:31.557
• [8.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/11/25 01:05:31.572
  I0111 01:05:31.572623 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-runtime @ 01/11/25 01:05:31.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:05:31.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:05:31.618
  STEP: create the container @ 01/11/25 01:05:31.624
  W0111 01:05:31.653618      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/11/25 01:05:31.654
  E0111 01:05:32.167238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:33.168166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:34.169237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/11/25 01:05:34.686
  STEP: the container should be terminated @ 01/11/25 01:05:34.69
  STEP: the termination message should be set @ 01/11/25 01:05:34.691
  I0111 01:05:34.691253 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/11/25 01:05:34.691
  I0111 01:05:34.715310 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3036" for this suite. @ 01/11/25 01:05:34.719
• [3.161 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 01/11/25 01:05:34.734
  I0111 01:05:34.734368 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 01:05:34.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:05:34.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:05:34.781
  STEP: Creating service test in namespace statefulset-6497 @ 01/11/25 01:05:34.786
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/11/25 01:05:34.8
  STEP: Creating stateful set ss in namespace statefulset-6497 @ 01/11/25 01:05:34.822
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6497 @ 01/11/25 01:05:34.848
  I0111 01:05:34.892333 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0111 01:05:35.169810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:36.170187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:37.171197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:38.171583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:39.171479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:40.171680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:41.171818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:42.172345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:43.172707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:44.173024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:44.852426 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/11/25 01:05:44.852
  I0111 01:05:44.855010 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 01:05:45.032883 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:05:45.032935 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:05:45.032952 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 01:05:45.036150 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0111 01:05:45.173354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:46.173469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:47.173679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:48.174114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:49.174062      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:50.174220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:51.174332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:52.174676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:53.174795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:05:54.175163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:55.037600 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0111 01:05:55.037647 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0111 01:05:55.065052 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999646s
  E0111 01:05:55.178387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:56.068740 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.995824083s
  E0111 01:05:56.178009      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:57.072349 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.992475318s
  E0111 01:05:57.178580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:58.076203 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.988304547s
  E0111 01:05:58.179392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:05:59.080531 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.98406199s
  E0111 01:05:59.179730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:00.089880 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.980659432s
  E0111 01:06:00.180579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:01.095201 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.97081955s
  E0111 01:06:01.181383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:02.102104 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.965057692s
  E0111 01:06:02.182155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:03.110002 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.958101467s
  E0111 01:06:03.183242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:04.115739 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 951.237235ms
  E0111 01:06:04.184341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6497 @ 01/11/25 01:06:05.116
  I0111 01:06:05.119661 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0111 01:06:05.184651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:05.339625 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:06:05.339706 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:06:05.339721 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 01:06:05.344224 23 wait.go:40] Found 1 stateful pods, waiting for 3
  E0111 01:06:06.185816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:07.185444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:08.186333      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:09.186551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:10.186817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:11.187077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:12.187718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:13.188043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:14.188435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:15.189327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:15.346521 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:06:15.346773 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:06:15.346814 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/11/25 01:06:15.346
  STEP: Scale down will halt with unhealthy stateful pod @ 01/11/25 01:06:15.346
  I0111 01:06:15.354589 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 01:06:15.548599 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:06:15.548827 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:06:15.548847 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 01:06:15.548902 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 01:06:15.700075 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:06:15.700118 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:06:15.700134 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 01:06:15.700192 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 01:06:15.874697 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:06:15.874739 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:06:15.874754 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 01:06:15.874768 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0111 01:06:15.894112 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0111 01:06:16.190060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:17.190252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:18.190518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:19.190785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:20.190877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:21.191042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:22.191292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:23.191356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:24.191413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:25.191743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:25.881516 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0111 01:06:25.881809 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0111 01:06:25.881829 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0111 01:06:25.982624 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999613s
  E0111 01:06:26.192511      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:26.988393 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.918339039s
  E0111 01:06:27.192500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:27.993162 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.912231362s
  E0111 01:06:28.193380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:28.997312 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.907961834s
  E0111 01:06:29.193486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:30.008584 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.902880534s
  E0111 01:06:30.193824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:31.013970 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.891834175s
  E0111 01:06:31.194617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:32.017796 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.88705162s
  E0111 01:06:32.194894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:33.023129 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.883593976s
  E0111 01:06:33.195656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:34.031375 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.878108594s
  E0111 01:06:34.196853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:35.035584 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 869.917476ms
  E0111 01:06:35.197800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6497 @ 01/11/25 01:06:36.036
  I0111 01:06:36.041023 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0111 01:06:36.198516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:06:36.200659 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:06:36.200706 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:06:36.200722 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 01:06:36.200788 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 01:06:36.331664 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:06:36.331727 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:06:36.331757 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 01:06:36.331809 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6497 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 01:06:36.451202 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:06:36.451255 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:06:36.451272 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 01:06:36.451287 23 rest.go:152] Scaling statefulset ss to 0
  E0111 01:06:37.199533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:38.200210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:39.200900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:40.201375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:41.201319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:42.201786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:43.202016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:44.202324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:45.202869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:46.203207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/11/25 01:06:46.481
  I0111 01:06:46.481347 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6497
  I0111 01:06:46.483978 23 rest.go:152] Scaling statefulset ss to 0
  I0111 01:06:46.488792 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 01:06:46.490896 23 rest.go:90] Deleting statefulset ss
  I0111 01:06:46.509063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6497" for this suite. @ 01/11/25 01:06:46.517
• [71.808 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/11/25 01:06:46.543
  I0111 01:06:46.543037 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 01:06:46.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:06:46.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:06:46.622
  E0111 01:06:47.203446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:48.203558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:49.203738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:50.203897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:51.203861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:52.204378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:53.205075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:54.205210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:55.205358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:56.205688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:57.206341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:58.207722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:06:59.207522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:00.208379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:01.208524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:02.208693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:03.209165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:04.209417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:05.209465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:06.210470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:07.211578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:08.212345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:09.212555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:10.213474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:11.214259      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:12.214510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:13.214646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:14.214774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:15.215497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:16.216801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:17.217141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:18.217922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:19.219190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:20.219354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:21.220520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:22.220559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:23.221027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:24.221264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:25.221930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:26.222951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:27.223210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:28.223762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:29.224034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:30.224165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:31.225014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:32.225495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:33.226831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:34.226443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:35.226653      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:36.227933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:37.228605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:38.230554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:39.230981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:40.231827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:41.232329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:42.232440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:43.233382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:44.233970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:45.234623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:46.234890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:07:46.658368 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8748" for this suite. @ 01/11/25 01:07:46.661
• [60.129 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 01/11/25 01:07:46.671
  I0111 01:07:46.671444 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption @ 01/11/25 01:07:46.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:07:46.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:07:46.714
  I0111 01:07:46.765959 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 01:07:47.235914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:48.236181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:49.237133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:50.237407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:51.237556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:52.238522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:53.238683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:54.238859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:55.239237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:56.239595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:57.239721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:58.239827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:07:59.240011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:00.240537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:01.241797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:02.242115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:03.243193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:04.243278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:05.244304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:06.244578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:07.247296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:08.247286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:09.250444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:10.248406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:11.249304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:12.249050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:13.249684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:14.249822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:15.250676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:16.250816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:17.251081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:18.251330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:19.251594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:20.251711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:21.252134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:22.252552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:23.253415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:24.253568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:25.254647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:26.254830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:27.255423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:28.256318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:29.256909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:30.257163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:31.257867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:32.258143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:33.258376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:34.258509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:35.259234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:36.259274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:37.260264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:38.260560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:39.261702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:40.261923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:41.262503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:42.263181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:43.263420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:44.264456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:45.265107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:46.265332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:46.791432 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/11/25 01:08:46.799
  I0111 01:08:46.799380 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/11/25 01:08:46.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:46.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:46.851
  I0111 01:08:46.927088 23 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0111 01:08:46.930922 23 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 01/11/25 01:08:47.022
  STEP: Removing a custom resource @ 01/11/25 01:08:47.029
  STEP: Removing a custom resource @ 01/11/25 01:08:47.036
  STEP: Removing a custom resource @ 01/11/25 01:08:47.043
  I0111 01:08:47.050368 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1299" for this suite. @ 01/11/25 01:08:47.053
  I0111 01:08:47.061809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7355" for this suite. @ 01/11/25 01:08:47.154
• [60.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/11/25 01:08:47.17
  I0111 01:08:47.170819 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 01:08:47.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:47.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:47.25
  E0111 01:08:47.265996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:47.281960 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0111 01:08:47.295105 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0111 01:08:47.406483 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:08:47.406645 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:08:48.266277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:48.304007 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0111 01:08:48.304046 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:08:49.266542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:49.309847 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 01:08:49.309889 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0111 01:08:49.309912 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0111 01:08:49.334806 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0111 01:08:50.267183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:51.267384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:52.268348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:52.373075 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0111 01:08:52.394161 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0111 01:08:52.395557 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0111 01:08:53.269398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:54.269715      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:54.400473 23 daemon_set.go:1198] Pod daemon-set-qljff is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 01:08:54.41
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5758, will wait for the garbage collector to delete the pods @ 01/11/25 01:08:54.411
  I0111 01:08:54.475550 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.221536ms
  I0111 01:08:54.576012 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.447089ms
  E0111 01:08:55.271406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:56.181813 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:08:56.181863 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 01:08:56.185046 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20015"},"items":null}

  I0111 01:08:56.196295 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20015"},"items":null}

  I0111 01:08:56.223399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5758" for this suite. @ 01/11/25 01:08:56.226
• [9.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 01/11/25 01:08:56.242
  I0111 01:08:56.242813 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:08:56.245
  E0111 01:08:56.271492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:56.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:56.296
  STEP: creating a collection of services @ 01/11/25 01:08:56.303
  I0111 01:08:56.303393 23 service.go:3635] Creating e2e-svc-a-s79qp
  I0111 01:08:56.332124 23 service.go:3635] Creating e2e-svc-b-6pr2h
  I0111 01:08:56.357297 23 service.go:3635] Creating e2e-svc-c-sg89x
  STEP: deleting service collection @ 01/11/25 01:08:56.409
  I0111 01:08:56.466304 23 service.go:3670] Collection of services has been deleted
  I0111 01:08:56.466481 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8600" for this suite. @ 01/11/25 01:08:56.47
• [0.238 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 01/11/25 01:08:56.483
  I0111 01:08:56.484020 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename volumeattachment @ 01/11/25 01:08:56.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:56.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:56.531
  STEP: Create VolumeAttachment "va-e2e-775jn" on node "ip-172-31-29-145.us-east-2.compute.internal" @ 01/11/25 01:08:56.57
  STEP: Patch VolumeAttachment "va-e2e-775jn" on node "ip-172-31-29-145.us-east-2.compute.internal" @ 01/11/25 01:08:56.591
  STEP: Reading "va-e2e-775jn" Status @ 01/11/25 01:08:56.609
  STEP: Patching "va-e2e-775jn" Status @ 01/11/25 01:08:56.615
  I0111 01:08:56.629964 23 volume_attachment.go:224] "va-e2e-775jn" Status.Attached: true
  STEP: Updating "va-e2e-775jn" Status @ 01/11/25 01:08:56.63
  I0111 01:08:56.647132 23 volume_attachment.go:240] "va-e2e-775jn" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-775jn" on node "ip-172-31-29-145.us-east-2.compute.internal" @ 01/11/25 01:08:56.647
  STEP: Confirm deletion of VolumeAttachment "va-e2e-775jn" on node "ip-172-31-29-145.us-east-2.compute.internal" @ 01/11/25 01:08:56.667
  I0111 01:08:56.671265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6997" for this suite. @ 01/11/25 01:08:56.675
• [0.206 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/11/25 01:08:56.691
  I0111 01:08:56.692047 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/11/25 01:08:56.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:56.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:56.764
  STEP: fetching the /apis discovery document @ 01/11/25 01:08:56.773
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/11/25 01:08:56.776
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/11/25 01:08:56.776
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/11/25 01:08:56.776
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/11/25 01:08:56.788
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/11/25 01:08:56.788
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/11/25 01:08:56.789
  I0111 01:08:56.789707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1888" for this suite. @ 01/11/25 01:08:56.799
• [0.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/11/25 01:08:56.816
  I0111 01:08:56.816733 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-pred @ 01/11/25 01:08:56.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:56.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:56.859
  I0111 01:08:56.865968 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0111 01:08:56.901417 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 01:08:56.904513 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-105.us-east-2.compute.internal before test
  I0111 01:08:56.907191 23 predicates.go:957] svclb-traefik-05b4ccc2-smhqh from kube-system started at 2025-01-11 00:09:20 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.907975 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:08:56.908032 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:08:56.908054 23 predicates.go:957] sonobuoy-e2e-job-eb8d697247014ae0 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.908070 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0111 01:08:56.908091 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:08:56.908106 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.908126 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:08:56.908136 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:08:56.908149 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-167.us-east-2.compute.internal before test
  I0111 01:08:56.910358 23 predicates.go:957] svclb-traefik-05b4ccc2-g4lb9 from kube-system started at 2025-01-11 00:44:56 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.910498 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:08:56.910666 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:08:56.910687 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-9zc6w from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.910703 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:08:56.910713 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:08:56.910724 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-7.us-east-2.compute.internal before test
  I0111 01:08:56.913902 23 predicates.go:957] coredns-ff8999cc5-fc7lk from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.913932 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0111 01:08:56.913949 23 predicates.go:957] helm-install-traefik-crd-mfrtb from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.913958 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0111 01:08:56.913968 23 predicates.go:957] helm-install-traefik-p9ht5 from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.913977 23 predicates.go:959] 	Container helm ready: false, restart count 1
  I0111 01:08:56.913987 23 predicates.go:957] local-path-provisioner-698b58967b-mgc2t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.913997 23 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0111 01:08:56.914008 23 predicates.go:957] metrics-server-8584b5786c-6f52t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.914018 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0111 01:08:56.914089 23 predicates.go:957] svclb-traefik-05b4ccc2-pbl78 from kube-system started at 2025-01-11 00:06:01 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.914141 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:08:56.914202 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:08:56.914251 23 predicates.go:957] traefik-857c696d79-qnj97 from kube-system started at 2025-01-11 00:06:00 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.914299 23 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0111 01:08:56.914352 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-bqsp8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.914419 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:08:56.914508 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:08:56.914636 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-29-145.us-east-2.compute.internal before test
  I0111 01:08:56.917044 23 predicates.go:957] svclb-traefik-05b4ccc2-vvq59 from kube-system started at 2025-01-11 00:11:49 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.917072 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:08:56.917084 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:08:56.917096 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-11 00:35:12 +0000 UTC (1 container statuses recorded)
  I0111 01:08:56.917106 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0111 01:08:56.917116 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-g2ggm from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:08:56.917125 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:08:56.917135 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/11/25 01:08:56.917
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18197e0fa29ecf1a], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 01/11/25 01:08:56.967
  E0111 01:08:57.272436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:08:57.950369 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2017" for this suite. @ 01/11/25 01:08:57.953
• [1.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/11/25 01:08:57.968
  I0111 01:08:57.968909 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 01:08:57.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:08:58.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:08:58.009
  I0111 01:08:58.021154 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:08:58.272496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:08:59.272797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/11/25 01:08:59.773
  I0111 01:08:59.775930 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-5815 --namespace=crd-publish-openapi-5815 create -f -'
  E0111 01:09:00.273048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:01.273316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:01.906837 23 builder.go:146] stderr: ""
  I0111 01:09:01.906896 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6399-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0111 01:09:01.907268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-5815 --namespace=crd-publish-openapi-5815 delete e2e-test-crd-publish-openapi-6399-crds test-cr'
  E0111 01:09:02.274155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:02.438934 23 builder.go:146] stderr: ""
  I0111 01:09:02.441307 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6399-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0111 01:09:02.441384 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-5815 --namespace=crd-publish-openapi-5815 apply -f -'
  I0111 01:09:02.817746 23 builder.go:146] stderr: ""
  I0111 01:09:02.817800 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6399-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0111 01:09:02.817853 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-5815 --namespace=crd-publish-openapi-5815 delete e2e-test-crd-publish-openapi-6399-crds test-cr'
  I0111 01:09:02.989210 23 builder.go:146] stderr: ""
  I0111 01:09:02.989267 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6399-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/11/25 01:09:02.989
  I0111 01:09:02.989361 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-5815 explain e2e-test-crd-publish-openapi-6399-crds'
  I0111 01:09:03.092538 23 builder.go:146] stderr: ""
  I0111 01:09:03.092580 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6399-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0111 01:09:03.274296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:04.274762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:04.798658 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5815" for this suite. @ 01/11/25 01:09:04.805
• [6.851 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/11/25 01:09:04.82
  I0111 01:09:04.820481 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename runtimeclass @ 01/11/25 01:09:04.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:04.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:04.856
  I0111 01:09:04.876355 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3605" for this suite. @ 01/11/25 01:09:04.906
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/11/25 01:09:04.917
  I0111 01:09:04.917765 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:09:04.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:05.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:05.033
  STEP: creating all guestbook components @ 01/11/25 01:09:05.036
  I0111 01:09:05.036758 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0111 01:09:05.036944 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  I0111 01:09:05.208626 23 builder.go:146] stderr: ""
  I0111 01:09:05.208757 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0111 01:09:05.208894 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0111 01:09:05.208997 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  E0111 01:09:05.275614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:05.400192 23 builder.go:146] stderr: ""
  I0111 01:09:05.400234 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0111 01:09:05.400375 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0111 01:09:05.400481 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  I0111 01:09:05.587535 23 builder.go:146] stderr: ""
  I0111 01:09:05.587580 23 builder.go:147] stdout: "service/frontend created\n"
  I0111 01:09:05.587747 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0111 01:09:05.587884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  I0111 01:09:05.719944 23 builder.go:146] stderr: ""
  I0111 01:09:05.719984 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0111 01:09:05.720047 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0111 01:09:05.720186 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  I0111 01:09:05.872972 23 builder.go:146] stderr: ""
  I0111 01:09:05.873015 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0111 01:09:05.873084 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0111 01:09:05.873232 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 create -f -'
  I0111 01:09:06.053282 23 builder.go:146] stderr: ""
  I0111 01:09:06.053339 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/11/25 01:09:06.053
  I0111 01:09:06.053455 23 kubectl.go:2269] Waiting for all frontend pods to be Running.
  E0111 01:09:06.276461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:07.277371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:08.277689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:09.277791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:10.277851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:11.104771 23 kubectl.go:2273] Waiting for frontend to serve content.
  I0111 01:09:11.118443 23 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0111 01:09:11.153161 23 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.16
  I0111 01:09:11.160958 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  E0111 01:09:11.278753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:11.311244 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:11.311372 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.312
  I0111 01:09:11.312216 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  I0111 01:09:11.483321 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:11.483356 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.483
  I0111 01:09:11.483448 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  I0111 01:09:11.672121 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:11.672168 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.672
  I0111 01:09:11.672306 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  I0111 01:09:11.808137 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:11.808196 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.808
  I0111 01:09:11.808332 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  I0111 01:09:11.962507 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:11.962553 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/11/25 01:09:11.962
  I0111 01:09:11.962685 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3274 delete --grace-period=0 --force -f -'
  I0111 01:09:12.113183 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:09:12.113228 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0111 01:09:12.113357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3274" for this suite. @ 01/11/25 01:09:12.151
• [7.264 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/11/25 01:09:12.182
  I0111 01:09:12.182235 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:09:12.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:12.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:12.248
  STEP: Counting existing ResourceQuota @ 01/11/25 01:09:12.253
  E0111 01:09:12.279341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:13.280579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:14.281228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:15.282190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:16.283203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 01:09:17.264
  STEP: Ensuring resource quota status is calculated @ 01/11/25 01:09:17.282
  E0111 01:09:17.283839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:18.285808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:19.286228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 01/11/25 01:09:19.29
  STEP: Creating a NodePort Service @ 01/11/25 01:09:19.322
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/11/25 01:09:19.376
  STEP: Ensuring resource quota status captures service creation @ 01/11/25 01:09:19.449
  E0111 01:09:20.286367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:21.286476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 01/11/25 01:09:21.456
  STEP: Ensuring resource quota status released usage @ 01/11/25 01:09:21.571
  E0111 01:09:22.286656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:23.286788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:23.577452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7515" for this suite. @ 01/11/25 01:09:23.582
• [11.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/11/25 01:09:23.594
  I0111 01:09:23.594652 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:09:23.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:23.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:23.703
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/11/25 01:09:23.706
  E0111 01:09:24.287533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:25.287816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:26.287942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:27.288230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:09:27.755
  I0111 01:09:27.762951 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-c3eac50e-3d98-4500-973c-572965c195ae container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:09:27.791
  I0111 01:09:27.827531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3786" for this suite. @ 01/11/25 01:09:27.832
• [4.269 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/11/25 01:09:27.863
  I0111 01:09:27.863995 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:09:27.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:27.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:27.913
  STEP: Setting up server cert @ 01/11/25 01:09:28.02
  E0111 01:09:28.288256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:09:28.7
  STEP: Deploying the webhook pod @ 01/11/25 01:09:28.721
  STEP: Wait for the deployment to be ready @ 01/11/25 01:09:28.765
  I0111 01:09:28.808608 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:09:29.288344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:30.288503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:09:30.822
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:09:30.847
  E0111 01:09:31.289220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:31.848908 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/11/25 01:09:31.86
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/11/25 01:09:31.861
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/11/25 01:09:31.9
  E0111 01:09:32.289580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/11/25 01:09:32.914
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/11/25 01:09:32.915
  E0111 01:09:33.290403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 01/11/25 01:09:33.993
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/11/25 01:09:33.993
  E0111 01:09:34.290694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:35.291733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:36.291854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:37.292320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:38.292625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/11/25 01:09:39.072
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/11/25 01:09:39.072
  E0111 01:09:39.293245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:40.293824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:41.293706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:42.293694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:43.294190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:44.294618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:09:44.312017 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7896" for this suite. @ 01/11/25 01:09:44.317
  STEP: Destroying namespace "webhook-markers-4406" for this suite. @ 01/11/25 01:09:44.338
• [16.495 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 01/11/25 01:09:44.358
  I0111 01:09:44.358892 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:09:44.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:44.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:44.414
  STEP: creating an Endpoint @ 01/11/25 01:09:44.422
  STEP: waiting for available Endpoint @ 01/11/25 01:09:44.438
  STEP: listing all Endpoints @ 01/11/25 01:09:44.441
  STEP: updating the Endpoint @ 01/11/25 01:09:44.457
  STEP: fetching the Endpoint @ 01/11/25 01:09:44.498
  STEP: patching the Endpoint @ 01/11/25 01:09:44.504
  STEP: fetching the Endpoint @ 01/11/25 01:09:44.527
  STEP: deleting the Endpoint by Collection @ 01/11/25 01:09:44.53
  STEP: waiting for Endpoint deletion @ 01/11/25 01:09:44.544
  STEP: fetching the Endpoint @ 01/11/25 01:09:44.545
  I0111 01:09:44.550303 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6769" for this suite. @ 01/11/25 01:09:44.555
• [0.207 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 01/11/25 01:09:44.566
  I0111 01:09:44.566140 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption @ 01/11/25 01:09:44.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:09:44.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:09:44.624
  I0111 01:09:44.670568 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 01:09:45.294875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:46.295243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:47.295380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:48.295472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:49.296048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:50.296380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:51.297140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:52.297263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:53.297833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:54.297800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:55.299344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:56.299673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:57.300210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:58.300430      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:09:59.300604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:00.300867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:01.301053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:02.301360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:03.301717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:04.301751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:05.301882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:06.302266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:07.302416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:08.302745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:09.303261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:10.303472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:11.303616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:12.304411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:13.304520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:14.304830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:15.304933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:16.305713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:17.306174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:18.306461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:19.306911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:20.307031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:21.307262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:22.308652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:23.308415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:24.308577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:25.308703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:26.308806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:27.308977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:28.309106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:29.309224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:30.310324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:31.310445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:32.310913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:33.311808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:34.312367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:35.312619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:36.312694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:37.313079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:38.313202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:39.313373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:40.313608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:41.314182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:42.314329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:43.314737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:44.314920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:10:44.675503 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/11/25 01:10:44.678
  STEP: Adding a custom resource @ 01/11/25 01:10:44.678
  I0111 01:10:44.718825 23 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0111 01:10:44.745347 23 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:10:44.745
  I0111 01:10:44.824099 23 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0111 01:10:44.850777 23 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:10:44.851
  I0111 01:10:44.940089 23 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0111 01:10:44.973242 23 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:10:44.973
  I0111 01:10:45.068372 23 preemption.go:255] Created pod: pod3-0-sched-preemption-medium-priority
  I0111 01:10:45.134387 23 preemption.go:255] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/11/25 01:10:45.134
  E0111 01:10:45.316035      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:46.316353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:47.316414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:48.316657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/11/25 01:10:49.244
  E0111 01:10:49.317103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:50.317545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:51.318063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:52.318329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:53.318422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/11/25 01:10:53.457
  STEP: Removing a custom resource @ 01/11/25 01:10:53.489
  STEP: Removing a custom resource @ 01/11/25 01:10:53.516
  STEP: Removing a custom resource @ 01/11/25 01:10:53.542
  I0111 01:10:53.579811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2645" for this suite. @ 01/11/25 01:10:53.584
• [69.037 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 01/11/25 01:10:53.603
  I0111 01:10:53.603221 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 01:10:53.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:10:53.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:10:53.68
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/11/25 01:10:53.684
  I0111 01:10:53.710882 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8618  adec2f5c-2a8c-4446-9fd7-ecdde17d89c2 21019 0 2025-01-11 01:10:53 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-11 01:10:53 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lltxp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lltxp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0111 01:10:54.318596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:55.318804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/11/25 01:10:55.739
  I0111 01:10:55.739158 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8618 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:10:55.739198 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:10:55.739354 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-8618/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/11/25 01:10:55.803
  I0111 01:10:55.803233 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8618 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:10:55.803257 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:10:55.803354 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-8618/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0111 01:10:55.869255 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0111 01:10:55.922510 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8618" for this suite. @ 01/11/25 01:10:55.929
• [2.342 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 01/11/25 01:10:55.946
  I0111 01:10:55.946896 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename containers @ 01/11/25 01:10:55.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:10:55.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:10:55.996
  STEP: Creating a pod to test override all @ 01/11/25 01:10:55.999
  E0111 01:10:56.320760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:57.320806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:58.321875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:10:59.323007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:11:00.101
  I0111 01:11:00.137823 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod client-containers-89be3948-5c3b-4098-b350-87de913f38e5 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:11:00.168
  I0111 01:11:00.253191 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8652" for this suite. @ 01/11/25 01:11:00.265
• [4.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/11/25 01:11:00.29
  I0111 01:11:00.290449 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:11:00.291
  E0111 01:11:00.322952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:11:00.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:11:00.377
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-4980885e-d6ef-4519-83f9-ea9156594753 @ 01/11/25 01:11:00.411
  STEP: Creating the pod @ 01/11/25 01:11:00.446
  E0111 01:11:01.323068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:02.323269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-4980885e-d6ef-4519-83f9-ea9156594753 @ 01/11/25 01:11:02.543
  STEP: waiting to observe update in volume @ 01/11/25 01:11:02.553
  E0111 01:11:03.323386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:04.323768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:05.324597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:06.324891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:07.325011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:08.325169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:09.325576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:10.325753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:11.325929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:12.326022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:13.326184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:14.326448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:15.326595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:16.326763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:17.327271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:18.327250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:19.327376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:20.327597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:21.328113      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:22.328688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:23.328569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:24.328974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:25.329159      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:26.329563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:27.330007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:28.330180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:29.331939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:30.331813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:31.332042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:32.332932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:33.333790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:34.333970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:35.333988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:36.334226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:37.335033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:38.335252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:39.335355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:40.335788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:41.335719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:42.335888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:43.336051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:44.336180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:45.336345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:46.336423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:47.336582      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:48.336691      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:49.336815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:50.337101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:51.337126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:52.337432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:53.337410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:54.337558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:55.338439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:56.338650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:57.339510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:58.340329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:11:59.341084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:00.341887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:01.342120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:02.342423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:03.342709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:04.342951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:05.343083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:06.343251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:07.344294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:08.344630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:09.344869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:10.344978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:11.345111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:12.345251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:13.346323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:14.346460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:15.347526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:16.348188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:16.911238 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4621" for this suite. @ 01/11/25 01:12:16.921
• [76.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/11/25 01:12:16.933
  I0111 01:12:16.933249 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-runtime @ 01/11/25 01:12:16.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:16.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:16.989
  STEP: create the container @ 01/11/25 01:12:16.998
  W0111 01:12:17.058407      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/11/25 01:12:17.058
  E0111 01:12:17.348302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:18.349000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:19.349568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/11/25 01:12:20.107
  STEP: the container should be terminated @ 01/11/25 01:12:20.111
  STEP: the termination message should be set @ 01/11/25 01:12:20.111
  I0111 01:12:20.111769 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/11/25 01:12:20.111
  I0111 01:12:20.151526 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7242" for this suite. @ 01/11/25 01:12:20.157
• [3.237 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/11/25 01:12:20.17
  I0111 01:12:20.170789 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:12:20.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:20.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:20.212
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2145 @ 01/11/25 01:12:20.215
  STEP: changing the ExternalName service to type=NodePort @ 01/11/25 01:12:20.237
  STEP: creating replication controller externalname-service in namespace services-2145 @ 01/11/25 01:12:20.278
  I0111 01:12:20.306882      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2145, replica count: 2
  E0111 01:12:20.350292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:21.350432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:22.350853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:23.351369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:23.359418      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:12:23.359560 23 resource.go:361] Creating new exec pod
  E0111 01:12:24.351273      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:25.351363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:26.351479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:26.426811 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0111 01:12:26.610978 23 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.162.69) 80 port [tcp/http] succeeded!\n"
  I0111 01:12:26.611128 23 builder.go:147] stdout: "externalname-service-qdr7c"
  I0111 01:12:26.611227 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.162.69 80'
  I0111 01:12:26.738522 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.162.69 80\nConnection to 10.43.162.69 80 port [tcp/http] succeeded!\n"
  I0111 01:12:26.738579 23 builder.go:147] stdout: "externalname-service-qdr7c"
  I0111 01:12:26.738725 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.7 30212'
  I0111 01:12:26.917603 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.7 30212\nConnection to 172.31.22.7 30212 port [tcp/*] succeeded!\n"
  I0111 01:12:26.917654 23 builder.go:147] stdout: "externalname-service-qdr7c"
  I0111 01:12:26.917893 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.145 30212'
  I0111 01:12:27.085057 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.145 30212\nConnection to 172.31.29.145 30212 port [tcp/*] succeeded!\n"
  I0111 01:12:27.085135 23 builder.go:147] stdout: ""
  E0111 01:12:27.352461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:27.918004 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.145 30212'
  I0111 01:12:28.110925 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.29.145 30212\nConnection to 172.31.29.145 30212 port [tcp/*] succeeded!\n"
  I0111 01:12:28.110986 23 builder.go:147] stdout: ""
  E0111 01:12:28.353388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:28.918031 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2145 exec execpod29vg8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.145 30212'
  I0111 01:12:29.109099 23 builder.go:146] stderr: "+ + ncecho -v hostName -t -w\n 2 172.31.29.145 30212\nConnection to 172.31.29.145 30212 port [tcp/*] succeeded!\n"
  I0111 01:12:29.109254 23 builder.go:147] stdout: "externalname-service-pvx2v"
  I0111 01:12:29.109802 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0111 01:12:29.181502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2145" for this suite. @ 01/11/25 01:12:29.185
• [9.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/11/25 01:12:29.2
  I0111 01:12:29.200676 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:12:29.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:29.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:29.262
  STEP: creating service in namespace services-6888 @ 01/11/25 01:12:29.268
  STEP: creating service affinity-clusterip-transition in namespace services-6888 @ 01/11/25 01:12:29.268
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6888 @ 01/11/25 01:12:29.321
  E0111 01:12:29.354500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:29.355188      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-6888, replica count: 3
  E0111 01:12:30.354755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:31.355545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:32.356332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:32.407409      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:12:32.423798 23 resource.go:361] Creating new exec pod
  E0111 01:12:33.356468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:34.356564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:35.356871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:35.479405 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-6888 exec execpod-affinity6lljh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0111 01:12:35.620745 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.43.213.218) 80 port [tcp/http] succeeded!\n"
  I0111 01:12:35.620798 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:12:35.620870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-6888 exec execpod-affinity6lljh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.218 80'
  I0111 01:12:35.792935 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.213.218 80\nConnection to 10.43.213.218 80 port [tcp/http] succeeded!\n"
  I0111 01:12:35.792983 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:12:35.811079 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-6888 exec execpod-affinity6lljh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.213.218:80/ ; done'
  I0111 01:12:36.053879 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n"
  I0111 01:12:36.054067 23 builder.go:147] stdout: "\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-s5bkz\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-s5bkz\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-srf99\naffinity-clusterip-transition-srf99"
  I0111 01:12:36.054102 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054118 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054134 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054147 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054160 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054177 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054191 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054204 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054220 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054235 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054248 23 service.go:242] Received response from host: affinity-clusterip-transition-s5bkz
  I0111 01:12:36.054262 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.054277 23 service.go:242] Received response from host: affinity-clusterip-transition-s5bkz
  I0111 01:12:36.054293 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054305 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.054318 23 service.go:242] Received response from host: affinity-clusterip-transition-srf99
  I0111 01:12:36.067018 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-6888 exec execpod-affinity6lljh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.213.218:80/ ; done'
  I0111 01:12:36.345307 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.213.218:80/\n"
  I0111 01:12:36.345365 23 builder.go:147] stdout: "\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs\naffinity-clusterip-transition-prlqs"
  I0111 01:12:36.345451 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345464 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345476 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345487 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345498 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345509 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345521 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345532 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345543 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345553 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345567 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345577 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345587 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345598 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345619 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345635 23 service.go:242] Received response from host: affinity-clusterip-transition-prlqs
  I0111 01:12:36.345712 23 service.go:4203] Cleaning up the exec pod
  E0111 01:12:36.357671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6888, will wait for the garbage collector to delete the pods @ 01/11/25 01:12:36.409
  I0111 01:12:36.500125 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 34.897072ms
  I0111 01:12:36.600889 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.76327ms
  E0111 01:12:37.359240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:38.358920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:39.359823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:39.679705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6888" for this suite. @ 01/11/25 01:12:39.683
• [10.498 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 01/11/25 01:12:39.698
  I0111 01:12:39.698639 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:12:39.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:39.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:39.772
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/11/25 01:12:39.775
  I0111 01:12:39.776029 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-909 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0111 01:12:39.880770 23 builder.go:146] stderr: ""
  I0111 01:12:39.880816 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/11/25 01:12:39.88
  E0111 01:12:40.360964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:41.361153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:42.361501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:43.361593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:44.361797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/11/25 01:12:44.933
  I0111 01:12:44.934008 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-909 get pod e2e-test-httpd-pod -o json'
  I0111 01:12:45.071737 23 builder.go:146] stderr: ""
  I0111 01:12:45.071889 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-01-11T01:12:39Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-909\",\n        \"resourceVersion\": \"21733\",\n        \"uid\": \"49ab137c-0d63-43e7-840a-dbc424a8b382\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-846kq\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-22-167.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-846kq\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-11T01:12:41Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-11T01:12:39Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-11T01:12:41Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-11T01:12:41Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-11T01:12:39Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://46fe398ff1233f2562b98c67f61cb5fc34530901a853a9a14594bb0fa8cd352e\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-11T01:12:40Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-846kq\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.22.167\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.22.167\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.100\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.100\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-11T01:12:39Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/11/25 01:12:45.071
  I0111 01:12:45.072020 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-909 replace -f -'
  I0111 01:12:45.326510 23 builder.go:146] stderr: ""
  I0111 01:12:45.326573 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/11/25 01:12:45.326
  I0111 01:12:45.361726 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-909 delete pods e2e-test-httpd-pod'
  E0111 01:12:45.361854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:46.362141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:47.362215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:47.450907 23 builder.go:146] stderr: ""
  I0111 01:12:47.451097 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0111 01:12:47.451225 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-909" for this suite. @ 01/11/25 01:12:47.46
• [7.784 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/11/25 01:12:47.482
  I0111 01:12:47.482329 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:12:47.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:47.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:47.559
  STEP: creating a ConfigMap @ 01/11/25 01:12:47.564
  STEP: fetching the ConfigMap @ 01/11/25 01:12:47.591
  STEP: patching the ConfigMap @ 01/11/25 01:12:47.602
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/11/25 01:12:47.62
  STEP: deleting the ConfigMap by collection with a label selector @ 01/11/25 01:12:47.632
  STEP: listing all ConfigMaps in test namespace @ 01/11/25 01:12:47.666
  I0111 01:12:47.677124 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7564" for this suite. @ 01/11/25 01:12:47.682
• [0.220 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/11/25 01:12:47.703
  I0111 01:12:47.703050 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:12:47.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:47.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:47.745
  STEP: Setting up server cert @ 01/11/25 01:12:47.904
  E0111 01:12:48.363665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:12:48.486
  STEP: Deploying the webhook pod @ 01/11/25 01:12:48.498
  STEP: Wait for the deployment to be ready @ 01/11/25 01:12:48.53
  I0111 01:12:48.560019 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:12:49.364444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:50.363336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:12:50.57
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:12:50.604
  E0111 01:12:51.363391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:51.605096 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/11/25 01:12:51.618
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/11/25 01:12:51.62
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/11/25 01:12:51.62
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/11/25 01:12:51.62
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/11/25 01:12:51.622
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/11/25 01:12:51.622
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/11/25 01:12:51.623
  I0111 01:12:51.743554 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8348" for this suite. @ 01/11/25 01:12:51.764
  STEP: Destroying namespace "webhook-markers-2950" for this suite. @ 01/11/25 01:12:51.778
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 01/11/25 01:12:51.791
  I0111 01:12:51.791371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename containers @ 01/11/25 01:12:51.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:51.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:51.849
  E0111 01:12:52.364240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:53.364502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:12:53.916657 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2423" for this suite. @ 01/11/25 01:12:53.921
• [2.146 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/11/25 01:12:53.94
  I0111 01:12:53.940180 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:12:53.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:53.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:53.982
  STEP: Creating a pod to test downward api env vars @ 01/11/25 01:12:53.986
  E0111 01:12:54.364723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:55.364862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:56.365669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:57.365920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:12:58.034
  I0111 01:12:58.038356 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-c9beb599-d1b7-4401-9772-65dcd67e6a27 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:12:58.047
  I0111 01:12:58.087879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9048" for this suite. @ 01/11/25 01:12:58.102
• [4.181 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/11/25 01:12:58.12
  I0111 01:12:58.121017 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 01:12:58.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:12:58.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:12:58.191
  I0111 01:12:58.252049 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 01:12:58.252
  E0111 01:12:58.367173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:12:59.367504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:00.279162 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/11/25 01:13:00.301
  E0111 01:13:00.368365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:01.368860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:02.355677 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7195",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71c3f340-91cb-4fc9-a878-dbade7e83151",
      ResourceVersion: (string) (len=5) "22009",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872154780,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 01:13:02.372540 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7195",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84a31203-3f6e-485e-9c05-0cecb2a9a83d",
      ResourceVersion: (string) (len=5) "21998",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872154780,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "71c3f340-91cb-4fc9-a878-dbade7e83151",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 31 63 33 66 33  34 30 2d 39 31 63 62 2d  |\"71c3f340-91cb-|
              00000120  34 66 63 39 2d 61 38 37  38 2d 64 62 61 64 65 37  |4fc9-a878-dbade7|
              00000130  65 38 33 31 35 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e83151\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0111 01:13:02.373151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:02.399630 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-n46ht" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-n46ht",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-7195",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b6233cf-3b6f-4401-a693-6b922df2214d",
      ResourceVersion: (string) (len=5) "21997",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872154780,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "84a31203-3f6e-485e-9c05-0cecb2a9a83d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  61 33 31 32 30 33 2d 33  |d\":\"84a31203-3|
              00000090  66 36 65 2d 34 38 35 65  2d 39 63 30 35 2d 30 63  |f6e-485e-9c05-0c|
              000000a0  65 63 62 32 61 39 61 38  33 64 5c 22 7d 22 3a 7b  |ecb2a9a83d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  34 5c 22 7d 22 3a 7b 22  |.42.1.104\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gdv7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gdv7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872154780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872154780,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872154781,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://87276ad7569836b4affca6254eb88dec3844d2895de9cfdb9b2ed56c258aac1f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6gdv7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:13:02.414129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7195" for this suite. @ 01/11/25 01:13:02.424
• [4.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/11/25 01:13:02.443
  I0111 01:13:02.443544 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename init-container @ 01/11/25 01:13:02.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:02.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:02.559
  STEP: creating the pod @ 01/11/25 01:13:02.579
  I0111 01:13:02.579677 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0111 01:13:03.373919      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:04.374133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:05.374216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:06.374749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:06.825196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4601" for this suite. @ 01/11/25 01:13:06.831
• [4.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 01/11/25 01:13:06.85
  I0111 01:13:06.850349 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 01:13:06.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:06.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:06.898
  STEP: Creating a test headless service @ 01/11/25 01:13:06.904
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5380.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-5380.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 01/11/25 01:13:06.916
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5380.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5380.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/11/25 01:13:06.916
  STEP: creating a pod to probe DNS @ 01/11/25 01:13:06.916
  STEP: submitting the pod to kubernetes @ 01/11/25 01:13:06.916
  E0111 01:13:07.374936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:08.375239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 01:13:08.976
  STEP: looking for the results for each expected name from probers @ 01/11/25 01:13:08.984
  I0111 01:13:09.015715 23 dns_common.go:546] DNS probes using dns-5380/dns-test-284f943f-de23-4ac3-8ea7-17b0e877bf45 succeeded

  STEP: deleting the pod @ 01/11/25 01:13:09.015
  STEP: deleting the test headless service @ 01/11/25 01:13:09.092
  I0111 01:13:09.142331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5380" for this suite. @ 01/11/25 01:13:09.166
• [2.333 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/11/25 01:13:09.183
  I0111 01:13:09.183697 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:13:09.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:09.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:09.234
  STEP: Creating configMap with name projected-configmap-test-volume-b224dd7f-e4b2-4450-9120-bcd0ae941918 @ 01/11/25 01:13:09.237
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:13:09.255
  E0111 01:13:09.375659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:10.375688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:11.376136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:12.376522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:13:13.306
  I0111 01:13:13.309030 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-cef7a85f-9613-4360-b51f-29e3a673df01 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:13:13.319
  I0111 01:13:13.365447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6408" for this suite. @ 01/11/25 01:13:13.371
  E0111 01:13:13.376567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/11/25 01:13:13.4
  I0111 01:13:13.400240 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sysctl @ 01/11/25 01:13:13.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:13.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:13.472
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/11/25 01:13:13.478
  I0111 01:13:13.486220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5960" for this suite. @ 01/11/25 01:13:13.491
• [0.114 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/11/25 01:13:13.513
  I0111 01:13:13.513393 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/11/25 01:13:13.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:13.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:13.578
  STEP: Creating 50 configmaps @ 01/11/25 01:13:13.581
  E0111 01:13:14.377491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 01/11/25 01:13:14.398
  I0111 01:13:14.442635 23 resource.go:87] Pod name wrapped-volume-race-7a49bf8d-1ae9-4df3-997a-d97c0c164ba2: Found 0 pods out of 5
  E0111 01:13:15.377712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:16.378642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:17.378863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:18.380382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:19.380330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:19.462990 23 resource.go:87] Pod name wrapped-volume-race-7a49bf8d-1ae9-4df3-997a-d97c0c164ba2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/11/25 01:13:19.463
  STEP: Creating RC which spawns configmap-volume pods @ 01/11/25 01:13:19.485
  I0111 01:13:19.524578 23 resource.go:87] Pod name wrapped-volume-race-94fa3d74-66c5-4640-91b6-ab273ef0398f: Found 1 pods out of 5
  E0111 01:13:20.380419      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:21.380930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:22.381048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:23.381138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:24.381723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:24.531398 23 resource.go:87] Pod name wrapped-volume-race-94fa3d74-66c5-4640-91b6-ab273ef0398f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/11/25 01:13:24.531
  STEP: Creating RC which spawns configmap-volume pods @ 01/11/25 01:13:24.553
  I0111 01:13:24.604577 23 resource.go:87] Pod name wrapped-volume-race-aa50213d-5e32-476f-ae74-86ac582b9761: Found 1 pods out of 5
  E0111 01:13:25.381570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:26.382427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:27.382676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:28.382914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:29.383164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:29.611870 23 resource.go:87] Pod name wrapped-volume-race-aa50213d-5e32-476f-ae74-86ac582b9761: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/11/25 01:13:29.612
  STEP: deleting ReplicationController wrapped-volume-race-aa50213d-5e32-476f-ae74-86ac582b9761 in namespace emptydir-wrapper-9750, will wait for the garbage collector to delete the pods @ 01/11/25 01:13:29.645
  I0111 01:13:29.722619 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-aa50213d-5e32-476f-ae74-86ac582b9761 took: 21.59294ms
  I0111 01:13:29.923285 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-aa50213d-5e32-476f-ae74-86ac582b9761 pods took: 200.661453ms
  E0111 01:13:30.383599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:31.384983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-94fa3d74-66c5-4640-91b6-ab273ef0398f in namespace emptydir-wrapper-9750, will wait for the garbage collector to delete the pods @ 01/11/25 01:13:32.024
  I0111 01:13:32.091467 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-94fa3d74-66c5-4640-91b6-ab273ef0398f took: 11.521596ms
  I0111 01:13:32.192434 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-94fa3d74-66c5-4640-91b6-ab273ef0398f pods took: 100.926365ms
  E0111 01:13:32.385233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:33.385720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:34.386795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:35.387032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7a49bf8d-1ae9-4df3-997a-d97c0c164ba2 in namespace emptydir-wrapper-9750, will wait for the garbage collector to delete the pods @ 01/11/25 01:13:35.693
  I0111 01:13:35.771527 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-7a49bf8d-1ae9-4df3-997a-d97c0c164ba2 took: 19.229975ms
  I0111 01:13:35.880446 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-7a49bf8d-1ae9-4df3-997a-d97c0c164ba2 pods took: 108.896951ms
  E0111 01:13:36.387841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:37.387983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 01/11/25 01:13:37.581
  I0111 01:13:38.367946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9750" for this suite. @ 01/11/25 01:13:38.371
• [24.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 01/11/25 01:13:38.383
  I0111 01:13:38.383592 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:13:38.384
  E0111 01:13:38.388435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:38.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:38.43
  STEP: Creating a pod to test service account token:  @ 01/11/25 01:13:38.434
  E0111 01:13:39.388721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:40.389048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:41.389760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:42.389884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:13:42.493
  I0111 01:13:42.496662 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod test-pod-45959144-02da-490d-a663-76b5c2e1d27d container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:13:42.505
  I0111 01:13:42.564865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2061" for this suite. @ 01/11/25 01:13:42.579
• [4.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 01/11/25 01:13:42.598
  I0111 01:13:42.598374 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 01:13:42.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:13:42.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:13:42.641
  STEP: Creating service test in namespace statefulset-6164 @ 01/11/25 01:13:42.646
  STEP: Creating a new StatefulSet @ 01/11/25 01:13:42.661
  I0111 01:13:42.691014 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E0111 01:13:43.390906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:44.391636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:45.391482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:46.392097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:47.395039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:48.394999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:49.395199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:50.395254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:51.396305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:52.396451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:13:52.692713 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:13:52.692755 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:13:52.692770 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0111 01:13:52.713471 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6164 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 01:13:52.932632 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:13:52.932682 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:13:52.932699 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0111 01:13:53.397102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:54.397240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:55.397525      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:56.398132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:57.398239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:58.398345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:13:59.398668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:00.399042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:01.399137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:02.399341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/11/25 01:14:02.952
  I0111 01:14:02.987688 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/11/25 01:14:02.987
  E0111 01:14:03.400456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:04.401631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:05.400912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:06.401467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:07.401881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:08.402107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:09.402327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:10.402588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:11.403048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:12.403232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 01/11/25 01:14:13.005
  I0111 01:14:13.014869 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6164 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 01:14:13.214846 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:14:13.214972 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:14:13.214998 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0111 01:14:13.403878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:14.404311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:15.404680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:16.404887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:17.405001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:18.406593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:19.406554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:20.406638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:21.408248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:22.408626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 01/11/25 01:14:23.234
  I0111 01:14:23.234207 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6164 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0111 01:14:23.409259      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:14:23.410614 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 01:14:23.410675 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 01:14:23.410691 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0111 01:14:24.410038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:25.410263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:26.411108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:27.411261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:28.412315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:29.413000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:30.413327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:31.413543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:32.413665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:33.414415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:14:33.447080 23 statefulset.go:2510] Updating stateful set ss2
  E0111 01:14:34.414716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:35.414737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:36.415290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:37.415410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:38.415457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:39.415609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:40.415822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:41.416270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:42.416404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:43.416574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 01/11/25 01:14:43.453
  I0111 01:14:43.456664 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-6164 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 01:14:43.574619 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 01:14:43.574663 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 01:14:43.574679 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0111 01:14:44.417859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:45.422177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:46.420586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:47.420687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:48.421994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:49.421698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:50.421790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:51.422312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:52.422463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:53.422924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:14:53.592615 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6164
  I0111 01:14:53.595775 23 rest.go:152] Scaling statefulset ss2 to 0
  E0111 01:14:54.423410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:55.423599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:56.424382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:57.424718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:58.427101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:14:59.427253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:00.428367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:01.428777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:02.428891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:03.429298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:15:03.617038 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 01:15:03.632775 23 rest.go:90] Deleting statefulset ss2
  I0111 01:15:03.701213 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6164" for this suite. @ 01/11/25 01:15:03.713
• [81.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/11/25 01:15:03.733
  I0111 01:15:03.733408 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/11/25 01:15:03.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:03.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:03.829
  I0111 01:15:03.851338 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6576" for this suite. @ 01/11/25 01:15:03.857
• [0.151 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 01/11/25 01:15:03.885
  I0111 01:15:03.885038 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 01:15:03.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:03.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:03.942
  STEP: Creating a job @ 01/11/25 01:15:03.949
  STEP: Ensuring job reaches completions @ 01/11/25 01:15:03.972
  E0111 01:15:04.429822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:05.429502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:06.430408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:07.430586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:08.430773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:09.430645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:10.430835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:11.430877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:12.431168      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:13.431403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:15:14.039852 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5775" for this suite. @ 01/11/25 01:15:14.056
• [10.197 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/11/25 01:15:14.082
  I0111 01:15:14.082717 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:15:14.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:14.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:14.127
  STEP: Setting up server cert @ 01/11/25 01:15:14.218
  E0111 01:15:14.431907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:15:14.688
  STEP: Deploying the webhook pod @ 01/11/25 01:15:14.709
  STEP: Wait for the deployment to be ready @ 01/11/25 01:15:14.748
  I0111 01:15:14.781225 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:15:15.432309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:16.433356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:15:16.796
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:15:16.819
  E0111 01:15:17.434572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:15:17.819442 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0111 01:15:17.825331 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6358-crds.webhook.example.com via the AdmissionRegistration API @ 01/11/25 01:15:18.34
  STEP: Creating a custom resource while v1 is storage version @ 01/11/25 01:15:18.369
  E0111 01:15:18.434759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:19.438591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/11/25 01:15:20.408
  E0111 01:15:20.438847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching the custom resource while v2 is storage version @ 01/11/25 01:15:20.44
  I0111 01:15:21.185065 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5407" for this suite. @ 01/11/25 01:15:21.188
  STEP: Destroying namespace "webhook-markers-2280" for this suite. @ 01/11/25 01:15:21.203
• [7.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/11/25 01:15:21.213
  I0111 01:15:21.213566 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 01:15:21.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:21.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:21.261
  I0111 01:15:21.265378 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:15:21.439879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:22.440005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:23.441512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:24.441375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:15:24.446609 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3402" for this suite. @ 01/11/25 01:15:24.451
• [3.254 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/11/25 01:15:24.468
  I0111 01:15:24.468519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-pred @ 01/11/25 01:15:24.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:24.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:24.508
  I0111 01:15:24.512290 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0111 01:15:24.570262 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 01:15:24.574444 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-105.us-east-2.compute.internal before test
  I0111 01:15:24.579324 23 predicates.go:957] svclb-traefik-05b4ccc2-smhqh from kube-system started at 2025-01-11 00:09:20 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.579361 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:15:24.579372 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:15:24.579385 23 predicates.go:957] sonobuoy-e2e-job-eb8d697247014ae0 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.579394 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0111 01:15:24.579402 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:15:24.579415 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.579427 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:15:24.579438 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:15:24.579449 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-167.us-east-2.compute.internal before test
  I0111 01:15:24.583409 23 predicates.go:957] svclb-traefik-05b4ccc2-g4lb9 from kube-system started at 2025-01-11 00:44:56 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.583525 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:15:24.583542 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:15:24.583559 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-9zc6w from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.583572 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:15:24.583868 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:15:24.583883 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-7.us-east-2.compute.internal before test
  I0111 01:15:24.590635 23 predicates.go:957] coredns-ff8999cc5-fc7lk from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.590674 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0111 01:15:24.590688 23 predicates.go:957] helm-install-traefik-crd-mfrtb from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.590718 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0111 01:15:24.590732 23 predicates.go:957] helm-install-traefik-p9ht5 from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.590743 23 predicates.go:959] 	Container helm ready: false, restart count 1
  I0111 01:15:24.590756 23 predicates.go:957] local-path-provisioner-698b58967b-mgc2t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.590949 23 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0111 01:15:24.590961 23 predicates.go:957] metrics-server-8584b5786c-6f52t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.590970 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0111 01:15:24.591186 23 predicates.go:957] svclb-traefik-05b4ccc2-pbl78 from kube-system started at 2025-01-11 00:06:01 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.591273 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:15:24.591421 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:15:24.591502 23 predicates.go:957] traefik-857c696d79-qnj97 from kube-system started at 2025-01-11 00:06:00 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.591569 23 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0111 01:15:24.591731 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-bqsp8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.591764 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:15:24.591775 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:15:24.591836 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-29-145.us-east-2.compute.internal before test
  I0111 01:15:24.596761 23 predicates.go:957] svclb-traefik-05b4ccc2-vvq59 from kube-system started at 2025-01-11 00:11:49 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.596797 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:15:24.596808 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:15:24.596837 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-11 00:35:12 +0000 UTC (1 container statuses recorded)
  I0111 01:15:24.596846 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0111 01:15:24.596859 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-g2ggm from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:15:24.596869 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:15:24.596880 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-16-105.us-east-2.compute.internal @ 01/11/25 01:15:24.633
  STEP: verifying the node has the label node ip-172-31-22-167.us-east-2.compute.internal @ 01/11/25 01:15:24.699
  STEP: verifying the node has the label node ip-172-31-22-7.us-east-2.compute.internal @ 01/11/25 01:15:24.725
  STEP: verifying the node has the label node ip-172-31-29-145.us-east-2.compute.internal @ 01/11/25 01:15:24.788
  I0111 01:15:24.803669 23 predicates.go:372] Pod coredns-ff8999cc5-fc7lk requesting resource cpu=100m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803756 23 predicates.go:372] Pod local-path-provisioner-698b58967b-mgc2t requesting resource cpu=0m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803770 23 predicates.go:372] Pod metrics-server-8584b5786c-6f52t requesting resource cpu=100m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803781 23 predicates.go:372] Pod svclb-traefik-05b4ccc2-g4lb9 requesting resource cpu=0m on Node ip-172-31-22-167.us-east-2.compute.internal
  I0111 01:15:24.803791 23 predicates.go:372] Pod svclb-traefik-05b4ccc2-pbl78 requesting resource cpu=0m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803844 23 predicates.go:372] Pod svclb-traefik-05b4ccc2-smhqh requesting resource cpu=0m on Node ip-172-31-16-105.us-east-2.compute.internal
  I0111 01:15:24.803854 23 predicates.go:372] Pod svclb-traefik-05b4ccc2-vvq59 requesting resource cpu=0m on Node ip-172-31-29-145.us-east-2.compute.internal
  I0111 01:15:24.803864 23 predicates.go:372] Pod traefik-857c696d79-qnj97 requesting resource cpu=0m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803878 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-29-145.us-east-2.compute.internal
  I0111 01:15:24.803929 23 predicates.go:372] Pod sonobuoy-e2e-job-eb8d697247014ae0 requesting resource cpu=0m on Node ip-172-31-16-105.us-east-2.compute.internal
  I0111 01:15:24.803942 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-9zc6w requesting resource cpu=0m on Node ip-172-31-22-167.us-east-2.compute.internal
  I0111 01:15:24.803956 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-bqsp8 requesting resource cpu=0m on Node ip-172-31-22-7.us-east-2.compute.internal
  I0111 01:15:24.803966 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-g2ggm requesting resource cpu=0m on Node ip-172-31-29-145.us-east-2.compute.internal
  I0111 01:15:24.804017 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8 requesting resource cpu=0m on Node ip-172-31-16-105.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/11/25 01:15:24.804
  I0111 01:15:24.804107 23 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-29-145.us-east-2.compute.internal
  I0111 01:15:24.826249 23 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-16-105.us-east-2.compute.internal
  I0111 01:15:24.862542 23 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-22-167.us-east-2.compute.internal
  I0111 01:15:24.943915 23 predicates.go:382] Creating a pod which consumes cpu=1260m on Node ip-172-31-22-7.us-east-2.compute.internal
  E0111 01:15:25.443698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:26.444421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/11/25 01:15:27.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4.18197e69fbd7667d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2145/filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4 to ip-172-31-22-167.us-east-2.compute.internal] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4.18197e6a1f0346c0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4.18197e6a23bef705], Reason = [Created], Message = [Created container: filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4.18197e6a2b919ca1], Reason = [Started], Message = [Started container filler-pod-b0878ba9-44ab-4d36-bf27-e83a074e49a4] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb.18197e69f95594b2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2145/filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb to ip-172-31-16-105.us-east-2.compute.internal] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb.18197e6a1cf3263c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb.18197e6a22195194], Reason = [Created], Message = [Created container: filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb.18197e6a28e2a666], Reason = [Started], Message = [Started container filler-pod-e1af70cf-9c54-4950-88a1-702fd0d27fcb] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b.18197e69f83c713e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2145/filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b to ip-172-31-29-145.us-east-2.compute.internal] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b.18197e6a4f6c3f55], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b.18197e6a54515c1f], Reason = [Created], Message = [Created container: filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b.18197e6a5b5c42be], Reason = [Started], Message = [Started container filler-pod-fe9eb155-eb90-4003-a74b-822ff4ed055b] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26.18197e69fe8d7baf], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2145/filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26 to ip-172-31-22-7.us-east-2.compute.internal] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26.18197e6a26442ab9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26.18197e6a2b4f5164], Reason = [Created], Message = [Created container: filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26.18197e6a30c8be52], Reason = [Started], Message = [Started container filler-pod-ffb97d88-e123-40ec-8a7b-949559e80e26] @ 01/11/25 01:15:27.044
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18197e6a775fd772], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 01/11/25 01:15:27.083
  E0111 01:15:27.444418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-16-105.us-east-2.compute.internal @ 01/11/25 01:15:28.072
  STEP: verifying the node doesn't have the label node @ 01/11/25 01:15:28.102
  STEP: removing the label node off the node ip-172-31-22-167.us-east-2.compute.internal @ 01/11/25 01:15:28.107
  STEP: verifying the node doesn't have the label node @ 01/11/25 01:15:28.165
  STEP: removing the label node off the node ip-172-31-22-7.us-east-2.compute.internal @ 01/11/25 01:15:28.169
  STEP: verifying the node doesn't have the label node @ 01/11/25 01:15:28.192
  STEP: removing the label node off the node ip-172-31-29-145.us-east-2.compute.internal @ 01/11/25 01:15:28.205
  STEP: verifying the node doesn't have the label node @ 01/11/25 01:15:28.242
  I0111 01:15:28.253362 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2145" for this suite. @ 01/11/25 01:15:28.258
• [3.808 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/11/25 01:15:28.276
  I0111 01:15:28.276337 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context-test @ 01/11/25 01:15:28.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:28.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:28.315
  E0111 01:15:28.447657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:29.446036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:30.446983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:31.447207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:15:32.399119 23 security_context.go:538] Got logs for pod "busybox-privileged-false-114e2cad-acb3-49c5-b7a2-e9a584f173d6": "ip: RTNETLINK answers: Operation not permitted\n"
  I0111 01:15:32.399346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9041" for this suite. @ 01/11/25 01:15:32.405
• [4.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/11/25 01:15:32.43
  I0111 01:15:32.430363 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename cronjob @ 01/11/25 01:15:32.431
  E0111 01:15:32.447939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:15:32.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:15:32.464
  STEP: Creating a ReplaceConcurrent cronjob @ 01/11/25 01:15:32.468
  STEP: Ensuring a job is scheduled @ 01/11/25 01:15:32.495
  E0111 01:15:33.448652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:34.449513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:35.449571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:36.449746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:37.449835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:38.449961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:39.450955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:40.451795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:41.452073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:42.452177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:43.452560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:44.452784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:45.453586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:46.454303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:47.455150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:48.455213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:49.455329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:50.456511      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:51.457649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:52.457853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:53.458086      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:54.458331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:55.459366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:56.460100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:57.460477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:58.461926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:15:59.462198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:00.462408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/11/25 01:16:00.501
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/11/25 01:16:00.506
  STEP: Ensuring the job is replaced with a new one @ 01/11/25 01:16:00.516
  E0111 01:16:01.462745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:02.463227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:03.463400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:04.464270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:05.464584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:06.464969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:07.465722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:08.465873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:09.466109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:10.466215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:11.466345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:12.466363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:13.466548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:14.467452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:15.468345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:16.469336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:17.469465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:18.469757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:19.469856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:20.470332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:21.471309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:22.471886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:23.472552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:24.473041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:25.472780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:26.473425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:27.473989      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:28.474101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:29.476303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:30.476793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:31.477435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:32.477870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:33.478033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:34.478140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:35.478276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:36.479077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:37.479223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:38.479384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:39.480329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:40.480566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:41.481358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:42.481532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:43.481900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:44.482694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:45.483124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:46.483306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:47.483821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:48.484324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:49.485232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:50.485493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:51.485851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:52.485953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:53.486194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:54.486370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:55.486453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:56.488450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:57.488578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:58.488859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:16:59.489523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:00.489959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/11/25 01:17:00.527
  I0111 01:17:00.549921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9297" for this suite. @ 01/11/25 01:17:00.557
• [88.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/11/25 01:17:00.585
  I0111 01:17:00.585267 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:17:00.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:17:00.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:17:00.644
  STEP: creating service endpoint-test2 in namespace services-393 @ 01/11/25 01:17:00.648
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-393 to expose endpoints map[] @ 01/11/25 01:17:00.687
  I0111 01:17:00.701840 23 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0111 01:17:01.490355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:01.743993 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-393 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-393 @ 01/11/25 01:17:01.744
  E0111 01:17:02.491169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:03.491423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-393 to expose endpoints map[pod1:[80]] @ 01/11/25 01:17:03.856
  I0111 01:17:03.871989 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-393 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/11/25 01:17:03.872
  I0111 01:17:03.872227 23 resource.go:361] Creating new exec pod
  E0111 01:17:04.492319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:05.492564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:06.492994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:06.917600 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0111 01:17:07.062517 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.228.155) 80 port [tcp/http] succeeded!\n"
  I0111 01:17:07.062571 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:17:07.063269 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.228.155 80'
  I0111 01:17:07.221504 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.228.155 80\nConnection to 10.43.228.155 80 port [tcp/http] succeeded!\n"
  I0111 01:17:07.221563 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-393 @ 01/11/25 01:17:07.221
  E0111 01:17:07.493654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:08.493931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-393 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/11/25 01:17:09.274
  I0111 01:17:09.318613 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-393 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/11/25 01:17:09.318
  E0111 01:17:09.493882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:10.318916 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0111 01:17:10.494723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:10.496192 23 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.228.155) 80 port [tcp/http] succeeded!\n"
  I0111 01:17:10.496234 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:17:10.496320 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.228.155 80'
  I0111 01:17:10.696849 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.228.155 80\nConnection to 10.43.228.155 80 port [tcp/http] succeeded!\n"
  I0111 01:17:10.697418 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-393 @ 01/11/25 01:17:10.697
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-393 to expose endpoints map[pod2:[80]] @ 01/11/25 01:17:10.768
  I0111 01:17:10.806438 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-393 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/11/25 01:17:10.806
  E0111 01:17:11.495586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:11.807760 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0111 01:17:11.991107 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.228.155) 80 port [tcp/http] succeeded!\n"
  I0111 01:17:11.991167 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:17:11.991415 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-393 exec execpodm2lb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.228.155 80'
  I0111 01:17:12.141467 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.228.155 80\nConnection to 10.43.228.155 80 port [tcp/http] succeeded!\n"
  I0111 01:17:12.141519 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-393 @ 01/11/25 01:17:12.141
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-393 to expose endpoints map[] @ 01/11/25 01:17:12.195
  I0111 01:17:12.224206 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-393 exposes endpoints map[]
  I0111 01:17:12.281711 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-393" for this suite. @ 01/11/25 01:17:12.286
• [11.719 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/11/25 01:17:12.304
  I0111 01:17:12.304244 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl-logs @ 01/11/25 01:17:12.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:17:12.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:17:12.354
  STEP: creating a pod @ 01/11/25 01:17:12.359
  I0111 01:17:12.360003 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0111 01:17:12.472897 23 builder.go:146] stderr: ""
  I0111 01:17:12.472940 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/11/25 01:17:12.473
  I0111 01:17:12.473162 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0111 01:17:12.496171      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:13.496361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:14.483097 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/11/25 01:17:14.483
  I0111 01:17:14.483215 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator'
  E0111 01:17:14.496708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:14.625816 23 builder.go:146] stderr: ""
  I0111 01:17:14.625871 23 builder.go:147] stdout: "I0111 01:17:13.302033       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/rz2 441\nI0111 01:17:13.502462       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/fz7g 406\nI0111 01:17:13.702810       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/zsf7 372\nI0111 01:17:13.902082       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/78t4 565\nI0111 01:17:14.102477       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/gqvx 327\nI0111 01:17:14.302817       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/zcgp 495\nI0111 01:17:14.502123       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/jsb 443\n"
  STEP: limiting log lines @ 01/11/25 01:17:14.626
  I0111 01:17:14.626268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator --tail=1'
  I0111 01:17:14.788754 23 builder.go:146] stderr: ""
  I0111 01:17:14.788803 23 builder.go:147] stdout: "I0111 01:17:14.702752       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gnf 318\n"
  I0111 01:17:14.788824 23 logs.go:180] got output "I0111 01:17:14.702752       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gnf 318\n"
  STEP: limiting log bytes @ 01/11/25 01:17:14.788
  I0111 01:17:14.789089 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator --limit-bytes=1'
  I0111 01:17:14.886893 23 builder.go:146] stderr: ""
  I0111 01:17:14.886938 23 builder.go:147] stdout: "I"
  I0111 01:17:14.886955 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/11/25 01:17:14.886
  I0111 01:17:14.887196 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator --tail=1 --timestamps'
  I0111 01:17:15.013209 23 builder.go:146] stderr: ""
  I0111 01:17:15.013968 23 builder.go:147] stdout: "2025-01-11T01:17:14.903702317Z I0111 01:17:14.902648       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/xg7 401\n"
  I0111 01:17:15.014192 23 logs.go:192] got output "2025-01-11T01:17:14.903702317Z I0111 01:17:14.902648       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/xg7 401\n"
  STEP: restricting to a time range @ 01/11/25 01:17:15.015
  E0111 01:17:15.497192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:16.497341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:17.498289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:17:17.516538 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator --since=1s'
  I0111 01:17:17.675313 23 builder.go:146] stderr: ""
  I0111 01:17:17.675421 23 builder.go:147] stdout: "I0111 01:17:16.702489       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/jlc 254\nI0111 01:17:16.902843       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/v7k 363\nI0111 01:17:17.102157       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/q6q 391\nI0111 01:17:17.302295       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lqd 249\nI0111 01:17:17.502632       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/26lb 402\n"
  I0111 01:17:17.675480 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 logs logs-generator logs-generator --since=24h'
  I0111 01:17:17.790998 23 builder.go:146] stderr: ""
  I0111 01:17:17.791102 23 builder.go:147] stdout: "I0111 01:17:13.302033       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/rz2 441\nI0111 01:17:13.502462       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/fz7g 406\nI0111 01:17:13.702810       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/zsf7 372\nI0111 01:17:13.902082       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/78t4 565\nI0111 01:17:14.102477       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/gqvx 327\nI0111 01:17:14.302817       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/zcgp 495\nI0111 01:17:14.502123       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/jsb 443\nI0111 01:17:14.702752       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/gnf 318\nI0111 01:17:14.902648       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/xg7 401\nI0111 01:17:15.103034       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/6mm 507\nI0111 01:17:15.302350       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/94c 259\nI0111 01:17:15.502719       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/xcf 311\nI0111 01:17:15.703051       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/gt8 443\nI0111 01:17:15.902366       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/4ds 366\nI0111 01:17:16.102682       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/zml 389\nI0111 01:17:16.302835       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/r59 398\nI0111 01:17:16.502146       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/rhs7 503\nI0111 01:17:16.702489       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/jlc 254\nI0111 01:17:16.902843       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/v7k 363\nI0111 01:17:17.102157       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/q6q 391\nI0111 01:17:17.302295       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/lqd 249\nI0111 01:17:17.502632       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/26lb 402\nI0111 01:17:17.702787       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/sftx 392\n"
  I0111 01:17:17.791221 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-logs-8806 delete pod logs-generator'
  I0111 01:17:18.378528 23 builder.go:146] stderr: ""
  I0111 01:17:18.378648 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0111 01:17:18.378779 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8806" for this suite. @ 01/11/25 01:17:18.394
• [6.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/11/25 01:17:18.431
  I0111 01:17:18.431357 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subpath @ 01/11/25 01:17:18.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:17:18.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:17:18.48
  STEP: Setting up data @ 01/11/25 01:17:18.483
  E0111 01:17:18.498248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-secret-hcrj @ 01/11/25 01:17:18.508
  STEP: Creating a pod to test atomic-volume-subpath @ 01/11/25 01:17:18.508
  E0111 01:17:19.498720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:20.498841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:21.499412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:22.500038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:23.499987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:24.500047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:25.500154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:26.501203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:27.501341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:28.501664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:29.502635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:30.503321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:31.505175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:32.504350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:33.504444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:34.504607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:35.505121      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:36.505784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:37.506325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:38.507250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:39.507786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:40.507924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:41.508318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:42.508881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:17:42.617
  I0111 01:17:42.620835 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-subpath-test-secret-hcrj container test-container-subpath-secret-hcrj: <nil>
  STEP: delete the pod @ 01/11/25 01:17:42.628
  STEP: Deleting pod pod-subpath-test-secret-hcrj @ 01/11/25 01:17:42.672
  I0111 01:17:42.672307 23 delete.go:62] Deleting pod "pod-subpath-test-secret-hcrj" in namespace "subpath-7405"
  I0111 01:17:42.690839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7405" for this suite. @ 01/11/25 01:17:42.696
• [24.279 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/11/25 01:17:42.711
  I0111 01:17:42.711243 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename watch @ 01/11/25 01:17:42.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:17:42.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:17:42.779
  STEP: creating a new configmap @ 01/11/25 01:17:42.787
  STEP: modifying the configmap once @ 01/11/25 01:17:42.803
  STEP: modifying the configmap a second time @ 01/11/25 01:17:42.82
  STEP: deleting the configmap @ 01/11/25 01:17:42.842
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/11/25 01:17:42.865
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/11/25 01:17:42.868
  I0111 01:17:42.868519 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6778  92f90267-dd4e-4bc1-ac5a-1be46699f425 24494 0 2025-01-11 01:17:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-11 01:17:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:17:42.868871 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6778  92f90267-dd4e-4bc1-ac5a-1be46699f425 24495 0 2025-01-11 01:17:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-11 01:17:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:17:42.868997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6778" for this suite. @ 01/11/25 01:17:42.874
• [0.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 01/11/25 01:17:42.89
  I0111 01:17:42.890604 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 01:17:42.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:17:42.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:17:42.984
  STEP: Looking for a node to schedule job pods @ 01/11/25 01:17:42.989
  STEP: Creating a job @ 01/11/25 01:17:42.994
  STEP: Waiting for all the pods to be ready @ 01/11/25 01:17:43.014
  E0111 01:17:43.509006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:44.509084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:45.510093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:46.511169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 01/11/25 01:17:47.074
  STEP: Evict all the Pods @ 01/11/25 01:17:47.082
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-xtsmp/job-530 @ 01/11/25 01:17:47.082
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-lww4x/job-530 @ 01/11/25 01:17:47.082
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-fjdjv/job-530 @ 01/11/25 01:17:47.082
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-xtsmp/job-530 to be deleted @ 01/11/25 01:17:47.19
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-fjdjv/job-530 to be deleted @ 01/11/25 01:17:47.192
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-lww4x/job-530 to be deleted @ 01/11/25 01:17:47.195
  E0111 01:17:47.511245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:48.511305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:49.511467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:50.513295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:51.513346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:52.513553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 01/11/25 01:17:53.223
  E0111 01:17:53.513576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:54.513689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:55.513771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:56.516189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:57.515702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:58.516362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:17:59.516550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:00.516814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:01.517879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:02.517975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:03.518761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:04.519129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:05.520047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:06.520767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:07.522750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:08.521460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:09.522064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:10.522287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:11.523412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:12.524496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:13.524496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:14.524771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:15.525758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:16.526358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:17.527252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:18.527435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:19.527536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:20.528292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:21.528760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:22.528868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:23.529016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:24.529271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:25.529407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:26.530313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:27.531292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:28.531267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:29.532204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:30.532229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:31.532664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:32.532897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:33.533341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:34.534287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:35.387902 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-530" for this suite. @ 01/11/25 01:18:35.403
• [52.532 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/11/25 01:18:35.424
  I0111 01:18:35.424715 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:18:35.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:18:35.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:18:35.501
  E0111 01:18:35.535271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:36.535584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:37.536446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:38.537018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:39.536951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:18:39.662
  I0111 01:18:39.675517 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod client-envvars-7c4e4eac-98fa-4723-8faf-a3a1b0f68ac9 container env3cont: <nil>
  STEP: delete the pod @ 01/11/25 01:18:39.689
  I0111 01:18:39.730969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-331" for this suite. @ 01/11/25 01:18:39.741
• [4.336 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/11/25 01:18:39.759
  I0111 01:18:39.759988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename conformance-tests @ 01/11/25 01:18:39.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:18:39.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:18:39.829
  STEP: Getting node addresses @ 01/11/25 01:18:39.836
  I0111 01:18:39.836288 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0111 01:18:39.844549 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5170" for this suite. @ 01/11/25 01:18:39.85
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/11/25 01:18:39.864
  I0111 01:18:39.865006 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 01:18:39.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:18:39.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:18:39.929
  STEP: Creating a pod to test substitution in container's args @ 01/11/25 01:18:39.934
  E0111 01:18:40.537200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:41.537432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:42.539101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:43.539227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:18:43.979
  I0111 01:18:43.982267 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod var-expansion-ff71817a-1e3d-47ef-bb70-f68b2a2c4c7c container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:18:43.996
  I0111 01:18:44.036139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-76" for this suite. @ 01/11/25 01:18:44.041
• [4.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/11/25 01:18:44.069
  I0111 01:18:44.069800 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svc-latency @ 01/11/25 01:18:44.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:18:44.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:18:44.128
  I0111 01:18:44.134209 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8873 @ 01/11/25 01:18:44.136
  I0111 01:18:44.160517      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8873, replica count: 1
  E0111 01:18:44.539827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:45.212284      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0111 01:18:45.540842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:46.212474      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:18:46.352369 23 service_latency.go:356] Created: latency-svc-jprsd
  I0111 01:18:46.381093 23 service_latency.go:363] Got endpoints: latency-svc-jprsd [68.207863ms]
  I0111 01:18:46.432761 23 service_latency.go:356] Created: latency-svc-9mrw9
  I0111 01:18:46.451733 23 service_latency.go:363] Got endpoints: latency-svc-9mrw9 [68.909495ms]
  I0111 01:18:46.475444 23 service_latency.go:356] Created: latency-svc-vbld8
  I0111 01:18:46.496604 23 service_latency.go:363] Got endpoints: latency-svc-vbld8 [111.294186ms]
  I0111 01:18:46.505093 23 service_latency.go:356] Created: latency-svc-s5tjp
  I0111 01:18:46.537519 23 service_latency.go:363] Got endpoints: latency-svc-s5tjp [154.480637ms]
  E0111 01:18:46.541255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:46.550431 23 service_latency.go:356] Created: latency-svc-c9qjf
  I0111 01:18:46.581063 23 service_latency.go:363] Got endpoints: latency-svc-c9qjf [197.788918ms]
  I0111 01:18:46.585411 23 service_latency.go:356] Created: latency-svc-ffbhx
  I0111 01:18:46.603255 23 service_latency.go:363] Got endpoints: latency-svc-ffbhx [217.827879ms]
  I0111 01:18:46.626809 23 service_latency.go:356] Created: latency-svc-zmtv2
  I0111 01:18:46.648171 23 service_latency.go:363] Got endpoints: latency-svc-zmtv2 [261.443712ms]
  I0111 01:18:46.657642 23 service_latency.go:356] Created: latency-svc-96xrf
  I0111 01:18:46.684192 23 service_latency.go:363] Got endpoints: latency-svc-96xrf [300.770656ms]
  I0111 01:18:46.697940 23 service_latency.go:356] Created: latency-svc-phcxn
  I0111 01:18:46.726302 23 service_latency.go:363] Got endpoints: latency-svc-phcxn [341.325181ms]
  I0111 01:18:46.737692 23 service_latency.go:356] Created: latency-svc-ccgbb
  I0111 01:18:46.761169 23 service_latency.go:363] Got endpoints: latency-svc-ccgbb [376.091476ms]
  I0111 01:18:46.776045 23 service_latency.go:356] Created: latency-svc-8gt9r
  I0111 01:18:46.793921 23 service_latency.go:363] Got endpoints: latency-svc-8gt9r [408.791044ms]
  I0111 01:18:46.804142 23 service_latency.go:356] Created: latency-svc-8csw2
  I0111 01:18:46.824853 23 service_latency.go:363] Got endpoints: latency-svc-8csw2 [439.409095ms]
  I0111 01:18:47.115826 23 service_latency.go:356] Created: latency-svc-242xq
  I0111 01:18:47.126161 23 service_latency.go:356] Created: latency-svc-j9kg6
  I0111 01:18:47.136719 23 service_latency.go:356] Created: latency-svc-99444
  I0111 01:18:47.136715 23 service_latency.go:356] Created: latency-svc-t48g6
  I0111 01:18:47.137394 23 service_latency.go:356] Created: latency-svc-6zrdm
  I0111 01:18:47.137512 23 service_latency.go:356] Created: latency-svc-6b9rs
  I0111 01:18:47.156826 23 service_latency.go:356] Created: latency-svc-9x27s
  I0111 01:18:47.156967 23 service_latency.go:356] Created: latency-svc-s5wpt
  I0111 01:18:47.157467 23 service_latency.go:356] Created: latency-svc-qcv8c
  I0111 01:18:47.157593 23 service_latency.go:356] Created: latency-svc-xngqh
  I0111 01:18:47.157691 23 service_latency.go:356] Created: latency-svc-npgpm
  I0111 01:18:47.165341 23 service_latency.go:356] Created: latency-svc-rdfx7
  I0111 01:18:47.167265 23 service_latency.go:356] Created: latency-svc-msqsh
  I0111 01:18:47.167939 23 service_latency.go:356] Created: latency-svc-9xmcs
  I0111 01:18:47.168075 23 service_latency.go:356] Created: latency-svc-9mt6c
  I0111 01:18:47.176749 23 service_latency.go:363] Got endpoints: latency-svc-6zrdm [382.667425ms]
  I0111 01:18:47.176945 23 service_latency.go:363] Got endpoints: latency-svc-242xq [791.122867ms]
  I0111 01:18:47.176966 23 service_latency.go:363] Got endpoints: latency-svc-j9kg6 [351.938583ms]
  I0111 01:18:47.177908 23 service_latency.go:363] Got endpoints: latency-svc-6b9rs [792.636634ms]
  I0111 01:18:47.187683 23 service_latency.go:363] Got endpoints: latency-svc-t48g6 [801.830943ms]
  I0111 01:18:47.207853 23 service_latency.go:363] Got endpoints: latency-svc-xngqh [669.762708ms]
  I0111 01:18:47.208585 23 service_latency.go:363] Got endpoints: latency-svc-qcv8c [711.923522ms]
  I0111 01:18:47.208687 23 service_latency.go:363] Got endpoints: latency-svc-99444 [626.568245ms]
  I0111 01:18:47.208704 23 service_latency.go:363] Got endpoints: latency-svc-s5wpt [756.911521ms]
  I0111 01:18:47.218512 23 service_latency.go:363] Got endpoints: latency-svc-npgpm [833.257777ms]
  I0111 01:18:47.229517 23 service_latency.go:363] Got endpoints: latency-svc-9mt6c [502.254548ms]
  I0111 01:18:47.229670 23 service_latency.go:363] Got endpoints: latency-svc-msqsh [545.424076ms]
  I0111 01:18:47.229687 23 service_latency.go:363] Got endpoints: latency-svc-9xmcs [581.363369ms]
  I0111 01:18:47.229702 23 service_latency.go:363] Got endpoints: latency-svc-9x27s [626.389052ms]
  I0111 01:18:47.238927 23 service_latency.go:363] Got endpoints: latency-svc-rdfx7 [477.585175ms]
  I0111 01:18:47.260183 23 service_latency.go:356] Created: latency-svc-b9qz5
  I0111 01:18:47.283579 23 service_latency.go:363] Got endpoints: latency-svc-b9qz5 [106.514907ms]
  I0111 01:18:47.298550 23 service_latency.go:356] Created: latency-svc-2p6r4
  I0111 01:18:47.321135 23 service_latency.go:363] Got endpoints: latency-svc-2p6r4 [143.599336ms]
  I0111 01:18:47.329264 23 service_latency.go:356] Created: latency-svc-nnwqs
  I0111 01:18:47.360347 23 service_latency.go:363] Got endpoints: latency-svc-nnwqs [182.997312ms]
  I0111 01:18:47.366594 23 service_latency.go:356] Created: latency-svc-527jl
  I0111 01:18:47.386171 23 service_latency.go:363] Got endpoints: latency-svc-527jl [208.115351ms]
  I0111 01:18:47.396925 23 service_latency.go:356] Created: latency-svc-66dg4
  I0111 01:18:47.417776 23 service_latency.go:363] Got endpoints: latency-svc-66dg4 [229.99176ms]
  I0111 01:18:47.436834 23 service_latency.go:356] Created: latency-svc-6ssxb
  I0111 01:18:47.458543 23 service_latency.go:363] Got endpoints: latency-svc-6ssxb [250.4832ms]
  I0111 01:18:47.469509 23 service_latency.go:356] Created: latency-svc-8vwj2
  I0111 01:18:47.500853 23 service_latency.go:363] Got endpoints: latency-svc-8vwj2 [292.05865ms]
  E0111 01:18:47.541742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:47.547233 23 service_latency.go:356] Created: latency-svc-cd4dm
  I0111 01:18:47.549452 23 service_latency.go:363] Got endpoints: latency-svc-cd4dm [339.507291ms]
  I0111 01:18:47.556593 23 service_latency.go:356] Created: latency-svc-nwhwf
  I0111 01:18:47.577142 23 service_latency.go:363] Got endpoints: latency-svc-nwhwf [368.056728ms]
  I0111 01:18:47.592600 23 service_latency.go:356] Created: latency-svc-lrmjw
  I0111 01:18:47.624149 23 service_latency.go:363] Got endpoints: latency-svc-lrmjw [405.584264ms]
  I0111 01:18:47.660240 23 service_latency.go:356] Created: latency-svc-2r8xn
  I0111 01:18:47.666352 23 service_latency.go:363] Got endpoints: latency-svc-2r8xn [436.423055ms]
  I0111 01:18:47.684087 23 service_latency.go:356] Created: latency-svc-jwprs
  I0111 01:18:47.710937 23 service_latency.go:363] Got endpoints: latency-svc-jwprs [480.297322ms]
  I0111 01:18:47.729083 23 service_latency.go:356] Created: latency-svc-jlr6t
  I0111 01:18:47.743188 23 service_latency.go:363] Got endpoints: latency-svc-jlr6t [513.373208ms]
  I0111 01:18:47.753629 23 service_latency.go:356] Created: latency-svc-sr5rk
  I0111 01:18:47.775962 23 service_latency.go:363] Got endpoints: latency-svc-sr5rk [545.408922ms]
  I0111 01:18:47.789315 23 service_latency.go:356] Created: latency-svc-qhbkn
  I0111 01:18:47.808464 23 service_latency.go:363] Got endpoints: latency-svc-qhbkn [569.267588ms]
  I0111 01:18:47.818283 23 service_latency.go:356] Created: latency-svc-8mgkt
  I0111 01:18:47.842163 23 service_latency.go:363] Got endpoints: latency-svc-8mgkt [558.524288ms]
  I0111 01:18:47.861858 23 service_latency.go:356] Created: latency-svc-8pzzc
  I0111 01:18:47.885461 23 service_latency.go:363] Got endpoints: latency-svc-8pzzc [564.176292ms]
  I0111 01:18:47.895324 23 service_latency.go:356] Created: latency-svc-m5jf8
  I0111 01:18:47.913822 23 service_latency.go:363] Got endpoints: latency-svc-m5jf8 [553.419485ms]
  I0111 01:18:47.929863 23 service_latency.go:356] Created: latency-svc-zx8zg
  I0111 01:18:47.951284 23 service_latency.go:363] Got endpoints: latency-svc-zx8zg [565.062303ms]
  I0111 01:18:47.966022 23 service_latency.go:356] Created: latency-svc-pskcf
  I0111 01:18:47.995536 23 service_latency.go:363] Got endpoints: latency-svc-pskcf [577.708577ms]
  I0111 01:18:48.015849 23 service_latency.go:356] Created: latency-svc-q2fck
  I0111 01:18:48.049762 23 service_latency.go:363] Got endpoints: latency-svc-q2fck [590.82323ms]
  I0111 01:18:48.055282 23 service_latency.go:356] Created: latency-svc-z8v4g
  I0111 01:18:48.069728 23 service_latency.go:363] Got endpoints: latency-svc-z8v4g [568.827097ms]
  I0111 01:18:48.088299 23 service_latency.go:356] Created: latency-svc-wvpfb
  I0111 01:18:48.107614 23 service_latency.go:363] Got endpoints: latency-svc-wvpfb [557.824894ms]
  I0111 01:18:48.122124 23 service_latency.go:356] Created: latency-svc-mh6lf
  I0111 01:18:48.147080 23 service_latency.go:363] Got endpoints: latency-svc-mh6lf [569.501671ms]
  I0111 01:18:48.159235 23 service_latency.go:356] Created: latency-svc-6tshr
  I0111 01:18:48.185625 23 service_latency.go:363] Got endpoints: latency-svc-6tshr [561.416514ms]
  I0111 01:18:48.197627 23 service_latency.go:356] Created: latency-svc-jq29l
  I0111 01:18:48.219498 23 service_latency.go:363] Got endpoints: latency-svc-jq29l [552.351213ms]
  I0111 01:18:48.234666 23 service_latency.go:356] Created: latency-svc-jhk9h
  I0111 01:18:48.244035 23 service_latency.go:363] Got endpoints: latency-svc-jhk9h [533.042766ms]
  I0111 01:18:48.283024 23 service_latency.go:356] Created: latency-svc-7wtfv
  I0111 01:18:48.294720 23 service_latency.go:363] Got endpoints: latency-svc-7wtfv [551.382355ms]
  I0111 01:18:48.323686 23 service_latency.go:356] Created: latency-svc-64q24
  I0111 01:18:48.361633 23 service_latency.go:363] Got endpoints: latency-svc-64q24 [585.518747ms]
  I0111 01:18:48.382498 23 service_latency.go:356] Created: latency-svc-jmxjm
  I0111 01:18:48.419795 23 service_latency.go:363] Got endpoints: latency-svc-jmxjm [611.263439ms]
  I0111 01:18:48.430169 23 service_latency.go:356] Created: latency-svc-dqhfm
  I0111 01:18:48.455634 23 service_latency.go:363] Got endpoints: latency-svc-dqhfm [613.422272ms]
  I0111 01:18:48.470802 23 service_latency.go:356] Created: latency-svc-7w2pz
  I0111 01:18:48.479689 23 service_latency.go:363] Got endpoints: latency-svc-7w2pz [593.940737ms]
  I0111 01:18:48.517755 23 service_latency.go:356] Created: latency-svc-d7tg5
  E0111 01:18:48.542272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:48.543923 23 service_latency.go:363] Got endpoints: latency-svc-d7tg5 [630.04767ms]
  I0111 01:18:48.566700 23 service_latency.go:356] Created: latency-svc-gkxqb
  I0111 01:18:48.580483 23 service_latency.go:363] Got endpoints: latency-svc-gkxqb [629.142838ms]
  I0111 01:18:48.603465 23 service_latency.go:356] Created: latency-svc-4tf45
  I0111 01:18:48.631027 23 service_latency.go:363] Got endpoints: latency-svc-4tf45 [635.181766ms]
  I0111 01:18:48.645445 23 service_latency.go:356] Created: latency-svc-497mn
  I0111 01:18:48.675309 23 service_latency.go:363] Got endpoints: latency-svc-497mn [625.489697ms]
  I0111 01:18:48.691821 23 service_latency.go:356] Created: latency-svc-lkkw5
  I0111 01:18:48.735326 23 service_latency.go:363] Got endpoints: latency-svc-lkkw5 [665.44249ms]
  I0111 01:18:48.735703 23 service_latency.go:356] Created: latency-svc-qwr26
  I0111 01:18:48.761913 23 service_latency.go:363] Got endpoints: latency-svc-qwr26 [654.104679ms]
  I0111 01:18:48.788013 23 service_latency.go:356] Created: latency-svc-gcfmm
  I0111 01:18:48.798744 23 service_latency.go:363] Got endpoints: latency-svc-gcfmm [651.439934ms]
  I0111 01:18:48.830465 23 service_latency.go:356] Created: latency-svc-nzgxg
  I0111 01:18:48.863156 23 service_latency.go:363] Got endpoints: latency-svc-nzgxg [676.203192ms]
  I0111 01:18:48.887862 23 service_latency.go:356] Created: latency-svc-2l25d
  I0111 01:18:48.900947 23 service_latency.go:356] Created: latency-svc-86ssk
  I0111 01:18:48.901443 23 service_latency.go:363] Got endpoints: latency-svc-2l25d [681.728614ms]
  I0111 01:18:48.953443 23 service_latency.go:363] Got endpoints: latency-svc-86ssk [709.358469ms]
  I0111 01:18:48.968344 23 service_latency.go:356] Created: latency-svc-8nmfx
  I0111 01:18:48.986373 23 service_latency.go:363] Got endpoints: latency-svc-8nmfx [691.534539ms]
  I0111 01:18:49.009796 23 service_latency.go:356] Created: latency-svc-8c2pn
  I0111 01:18:49.030244 23 service_latency.go:363] Got endpoints: latency-svc-8c2pn [668.055355ms]
  I0111 01:18:49.056316 23 service_latency.go:356] Created: latency-svc-jdzc4
  I0111 01:18:49.079578 23 service_latency.go:363] Got endpoints: latency-svc-jdzc4 [659.393166ms]
  I0111 01:18:49.091809 23 service_latency.go:356] Created: latency-svc-mr4lz
  I0111 01:18:49.122458 23 service_latency.go:363] Got endpoints: latency-svc-mr4lz [666.67077ms]
  I0111 01:18:49.137765 23 service_latency.go:356] Created: latency-svc-bbpj2
  I0111 01:18:49.167238 23 service_latency.go:363] Got endpoints: latency-svc-bbpj2 [687.49841ms]
  I0111 01:18:49.190199 23 service_latency.go:356] Created: latency-svc-gg9zd
  I0111 01:18:49.199210 23 service_latency.go:363] Got endpoints: latency-svc-gg9zd [655.151026ms]
  I0111 01:18:49.238987 23 service_latency.go:356] Created: latency-svc-kqc9h
  I0111 01:18:49.245425 23 service_latency.go:363] Got endpoints: latency-svc-kqc9h [664.886662ms]
  I0111 01:18:49.291234 23 service_latency.go:356] Created: latency-svc-fg7rd
  I0111 01:18:49.311169 23 service_latency.go:363] Got endpoints: latency-svc-fg7rd [679.876803ms]
  I0111 01:18:49.335711 23 service_latency.go:356] Created: latency-svc-v94kp
  I0111 01:18:49.367459 23 service_latency.go:363] Got endpoints: latency-svc-v94kp [691.978405ms]
  I0111 01:18:49.382699 23 service_latency.go:356] Created: latency-svc-6xv6s
  I0111 01:18:49.403710 23 service_latency.go:363] Got endpoints: latency-svc-6xv6s [668.327284ms]
  I0111 01:18:49.418461 23 service_latency.go:356] Created: latency-svc-7qdtr
  I0111 01:18:49.458771 23 service_latency.go:363] Got endpoints: latency-svc-7qdtr [696.635386ms]
  I0111 01:18:49.468201 23 service_latency.go:356] Created: latency-svc-flvqv
  I0111 01:18:49.500555 23 service_latency.go:363] Got endpoints: latency-svc-flvqv [701.667358ms]
  I0111 01:18:49.514523 23 service_latency.go:356] Created: latency-svc-cvcfm
  I0111 01:18:49.536816 23 service_latency.go:363] Got endpoints: latency-svc-cvcfm [673.485924ms]
  E0111 01:18:49.544390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:49.554346 23 service_latency.go:356] Created: latency-svc-5ms5j
  I0111 01:18:49.570841 23 service_latency.go:363] Got endpoints: latency-svc-5ms5j [669.29295ms]
  I0111 01:18:49.591269 23 service_latency.go:356] Created: latency-svc-nzsqq
  I0111 01:18:49.616456 23 service_latency.go:363] Got endpoints: latency-svc-nzsqq [662.481871ms]
  I0111 01:18:49.624662 23 service_latency.go:356] Created: latency-svc-zdn7b
  I0111 01:18:49.648975 23 service_latency.go:363] Got endpoints: latency-svc-zdn7b [662.544829ms]
  I0111 01:18:49.660630 23 service_latency.go:356] Created: latency-svc-cp5bx
  I0111 01:18:49.682359 23 service_latency.go:363] Got endpoints: latency-svc-cp5bx [651.991746ms]
  I0111 01:18:49.692958 23 service_latency.go:356] Created: latency-svc-4f2fn
  I0111 01:18:49.724646 23 service_latency.go:363] Got endpoints: latency-svc-4f2fn [645.012679ms]
  I0111 01:18:49.774716 23 service_latency.go:356] Created: latency-svc-p5f6w
  I0111 01:18:49.794898 23 service_latency.go:363] Got endpoints: latency-svc-p5f6w [672.374711ms]
  I0111 01:18:49.802243 23 service_latency.go:356] Created: latency-svc-lbpcw
  I0111 01:18:49.841757 23 service_latency.go:363] Got endpoints: latency-svc-lbpcw [674.369757ms]
  I0111 01:18:49.861115 23 service_latency.go:356] Created: latency-svc-hfwxj
  I0111 01:18:49.888412 23 service_latency.go:363] Got endpoints: latency-svc-hfwxj [688.736941ms]
  I0111 01:18:49.908062 23 service_latency.go:356] Created: latency-svc-njh7r
  I0111 01:18:49.979282 23 service_latency.go:363] Got endpoints: latency-svc-njh7r [733.326923ms]
  I0111 01:18:49.986218 23 service_latency.go:356] Created: latency-svc-gzhbv
  I0111 01:18:50.019237 23 service_latency.go:363] Got endpoints: latency-svc-gzhbv [708.015644ms]
  I0111 01:18:50.054101 23 service_latency.go:356] Created: latency-svc-wkx9v
  I0111 01:18:50.098123 23 service_latency.go:363] Got endpoints: latency-svc-wkx9v [730.603361ms]
  I0111 01:18:50.113703 23 service_latency.go:356] Created: latency-svc-chjrw
  I0111 01:18:50.136074 23 service_latency.go:363] Got endpoints: latency-svc-chjrw [732.308814ms]
  I0111 01:18:50.161203 23 service_latency.go:356] Created: latency-svc-xkzh5
  I0111 01:18:50.172868 23 service_latency.go:363] Got endpoints: latency-svc-xkzh5 [714.050309ms]
  I0111 01:18:50.194274 23 service_latency.go:356] Created: latency-svc-szm8n
  I0111 01:18:50.222461 23 service_latency.go:363] Got endpoints: latency-svc-szm8n [721.802858ms]
  I0111 01:18:50.242937 23 service_latency.go:356] Created: latency-svc-t7pcj
  I0111 01:18:50.271324 23 service_latency.go:363] Got endpoints: latency-svc-t7pcj [734.458663ms]
  I0111 01:18:50.294724 23 service_latency.go:356] Created: latency-svc-gsz4q
  I0111 01:18:50.311174 23 service_latency.go:363] Got endpoints: latency-svc-gsz4q [740.242671ms]
  I0111 01:18:50.322303 23 service_latency.go:356] Created: latency-svc-khkrr
  I0111 01:18:50.362686 23 service_latency.go:363] Got endpoints: latency-svc-khkrr [746.175756ms]
  I0111 01:18:50.370758 23 service_latency.go:356] Created: latency-svc-8xssz
  I0111 01:18:50.390383 23 service_latency.go:363] Got endpoints: latency-svc-8xssz [741.145919ms]
  I0111 01:18:50.412478 23 service_latency.go:356] Created: latency-svc-8cbpw
  I0111 01:18:50.430763 23 service_latency.go:356] Created: latency-svc-2jtvt
  I0111 01:18:50.477311 23 service_latency.go:363] Got endpoints: latency-svc-8cbpw [794.900739ms]
  I0111 01:18:50.477532 23 service_latency.go:363] Got endpoints: latency-svc-2jtvt [752.842121ms]
  I0111 01:18:50.485659 23 service_latency.go:356] Created: latency-svc-xhxmr
  I0111 01:18:50.518390 23 service_latency.go:363] Got endpoints: latency-svc-xhxmr [723.440671ms]
  I0111 01:18:50.525081 23 service_latency.go:356] Created: latency-svc-hqhv9
  I0111 01:18:50.539717 23 service_latency.go:363] Got endpoints: latency-svc-hqhv9 [697.574375ms]
  E0111 01:18:50.544515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:50.564297 23 service_latency.go:356] Created: latency-svc-lv265
  I0111 01:18:50.589470 23 service_latency.go:363] Got endpoints: latency-svc-lv265 [701.004712ms]
  I0111 01:18:50.601881 23 service_latency.go:356] Created: latency-svc-884pr
  I0111 01:18:50.627683 23 service_latency.go:363] Got endpoints: latency-svc-884pr [648.159092ms]
  I0111 01:18:50.637077 23 service_latency.go:356] Created: latency-svc-7jbbv
  I0111 01:18:50.660449 23 service_latency.go:363] Got endpoints: latency-svc-7jbbv [641.037573ms]
  I0111 01:18:50.668939 23 service_latency.go:356] Created: latency-svc-ns6pb
  I0111 01:18:50.705218 23 service_latency.go:363] Got endpoints: latency-svc-ns6pb [607.038809ms]
  I0111 01:18:50.713758 23 service_latency.go:356] Created: latency-svc-9qh4w
  I0111 01:18:50.741564 23 service_latency.go:363] Got endpoints: latency-svc-9qh4w [605.334252ms]
  I0111 01:18:50.759074 23 service_latency.go:356] Created: latency-svc-4rxht
  I0111 01:18:50.780319 23 service_latency.go:363] Got endpoints: latency-svc-4rxht [607.359371ms]
  I0111 01:18:50.823251 23 service_latency.go:356] Created: latency-svc-5v2ts
  I0111 01:18:50.823604 23 service_latency.go:363] Got endpoints: latency-svc-5v2ts [600.929638ms]
  I0111 01:18:50.860358 23 service_latency.go:356] Created: latency-svc-k7986
  I0111 01:18:50.880311 23 service_latency.go:363] Got endpoints: latency-svc-k7986 [608.933465ms]
  I0111 01:18:50.900606 23 service_latency.go:356] Created: latency-svc-wrflp
  I0111 01:18:50.938122 23 service_latency.go:363] Got endpoints: latency-svc-wrflp [626.783334ms]
  I0111 01:18:50.954805 23 service_latency.go:356] Created: latency-svc-zph55
  I0111 01:18:50.992815 23 service_latency.go:363] Got endpoints: latency-svc-zph55 [630.030948ms]
  I0111 01:18:51.011192 23 service_latency.go:356] Created: latency-svc-zsxw6
  I0111 01:18:51.057960 23 service_latency.go:363] Got endpoints: latency-svc-zsxw6 [667.173851ms]
  I0111 01:18:51.059549 23 service_latency.go:356] Created: latency-svc-24zdn
  I0111 01:18:51.078119 23 service_latency.go:363] Got endpoints: latency-svc-24zdn [600.756037ms]
  I0111 01:18:51.093766 23 service_latency.go:356] Created: latency-svc-kw7k2
  I0111 01:18:51.111290 23 service_latency.go:363] Got endpoints: latency-svc-kw7k2 [633.729091ms]
  I0111 01:18:51.130258 23 service_latency.go:356] Created: latency-svc-h7ccb
  I0111 01:18:51.173638 23 service_latency.go:363] Got endpoints: latency-svc-h7ccb [655.199549ms]
  I0111 01:18:51.174120 23 service_latency.go:356] Created: latency-svc-lgz92
  I0111 01:18:51.190444 23 service_latency.go:363] Got endpoints: latency-svc-lgz92 [650.675545ms]
  I0111 01:18:51.210261 23 service_latency.go:356] Created: latency-svc-4zfjg
  I0111 01:18:51.248710 23 service_latency.go:363] Got endpoints: latency-svc-4zfjg [659.192015ms]
  I0111 01:18:51.260274 23 service_latency.go:356] Created: latency-svc-sl2tb
  I0111 01:18:51.292259 23 service_latency.go:363] Got endpoints: latency-svc-sl2tb [664.401242ms]
  I0111 01:18:51.312638 23 service_latency.go:356] Created: latency-svc-klsdg
  I0111 01:18:51.331663 23 service_latency.go:363] Got endpoints: latency-svc-klsdg [671.167774ms]
  I0111 01:18:51.350706 23 service_latency.go:356] Created: latency-svc-mhqzm
  I0111 01:18:51.378062 23 service_latency.go:363] Got endpoints: latency-svc-mhqzm [672.570941ms]
  I0111 01:18:51.386988 23 service_latency.go:356] Created: latency-svc-7rz52
  I0111 01:18:51.410035 23 service_latency.go:363] Got endpoints: latency-svc-7rz52 [668.410314ms]
  I0111 01:18:51.426502 23 service_latency.go:356] Created: latency-svc-rl6ld
  I0111 01:18:51.452611 23 service_latency.go:363] Got endpoints: latency-svc-rl6ld [672.227855ms]
  I0111 01:18:51.464181 23 service_latency.go:356] Created: latency-svc-fhthd
  I0111 01:18:51.492981 23 service_latency.go:363] Got endpoints: latency-svc-fhthd [669.227396ms]
  I0111 01:18:51.504851 23 service_latency.go:356] Created: latency-svc-jp8hl
  I0111 01:18:51.527515 23 service_latency.go:363] Got endpoints: latency-svc-jp8hl [647.126865ms]
  I0111 01:18:51.544509 23 service_latency.go:356] Created: latency-svc-86c78
  E0111 01:18:51.544712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:51.569195 23 service_latency.go:363] Got endpoints: latency-svc-86c78 [630.040073ms]
  I0111 01:18:51.581693 23 service_latency.go:356] Created: latency-svc-rp7qx
  I0111 01:18:51.610408 23 service_latency.go:363] Got endpoints: latency-svc-rp7qx [617.450835ms]
  I0111 01:18:51.622395 23 service_latency.go:356] Created: latency-svc-7qp5k
  I0111 01:18:51.652166 23 service_latency.go:363] Got endpoints: latency-svc-7qp5k [592.901866ms]
  I0111 01:18:51.684360 23 service_latency.go:356] Created: latency-svc-wnbmq
  I0111 01:18:51.702927 23 service_latency.go:363] Got endpoints: latency-svc-wnbmq [624.750901ms]
  I0111 01:18:51.711891 23 service_latency.go:356] Created: latency-svc-5pbhm
  I0111 01:18:51.736973 23 service_latency.go:363] Got endpoints: latency-svc-5pbhm [625.633402ms]
  I0111 01:18:51.771693 23 service_latency.go:356] Created: latency-svc-b6dc6
  I0111 01:18:51.777625 23 service_latency.go:363] Got endpoints: latency-svc-b6dc6 [603.911089ms]
  I0111 01:18:51.809155 23 service_latency.go:356] Created: latency-svc-zlhqh
  I0111 01:18:51.824739 23 service_latency.go:363] Got endpoints: latency-svc-zlhqh [633.994125ms]
  I0111 01:18:51.836882 23 service_latency.go:356] Created: latency-svc-62tg7
  I0111 01:18:51.860002 23 service_latency.go:363] Got endpoints: latency-svc-62tg7 [611.18577ms]
  I0111 01:18:51.887827 23 service_latency.go:356] Created: latency-svc-r9dcr
  I0111 01:18:51.889309 23 service_latency.go:363] Got endpoints: latency-svc-r9dcr [596.940819ms]
  I0111 01:18:51.909706 23 service_latency.go:356] Created: latency-svc-qchb4
  I0111 01:18:51.933776 23 service_latency.go:363] Got endpoints: latency-svc-qchb4 [602.061652ms]
  I0111 01:18:51.945614 23 service_latency.go:356] Created: latency-svc-r64tm
  I0111 01:18:51.965715 23 service_latency.go:363] Got endpoints: latency-svc-r64tm [587.598701ms]
  I0111 01:18:51.985605 23 service_latency.go:356] Created: latency-svc-d5m2s
  I0111 01:18:52.010035 23 service_latency.go:363] Got endpoints: latency-svc-d5m2s [599.943371ms]
  I0111 01:18:52.032132 23 service_latency.go:356] Created: latency-svc-2vx5n
  I0111 01:18:52.057388 23 service_latency.go:363] Got endpoints: latency-svc-2vx5n [604.726586ms]
  I0111 01:18:52.075612 23 service_latency.go:356] Created: latency-svc-zpl6v
  I0111 01:18:52.100760 23 service_latency.go:363] Got endpoints: latency-svc-zpl6v [607.685273ms]
  I0111 01:18:52.106925 23 service_latency.go:356] Created: latency-svc-g5ktt
  I0111 01:18:52.148384 23 service_latency.go:356] Created: latency-svc-d4f8c
  I0111 01:18:52.152512 23 service_latency.go:363] Got endpoints: latency-svc-g5ktt [624.918349ms]
  I0111 01:18:52.179217 23 service_latency.go:356] Created: latency-svc-zz5m8
  I0111 01:18:52.201905 23 service_latency.go:363] Got endpoints: latency-svc-d4f8c [632.649556ms]
  I0111 01:18:52.230259 23 service_latency.go:356] Created: latency-svc-7fzpg
  I0111 01:18:52.258735 23 service_latency.go:363] Got endpoints: latency-svc-zz5m8 [648.273441ms]
  I0111 01:18:52.280138 23 service_latency.go:356] Created: latency-svc-ktgwp
  I0111 01:18:52.307743 23 service_latency.go:363] Got endpoints: latency-svc-7fzpg [655.367201ms]
  I0111 01:18:52.340302 23 service_latency.go:356] Created: latency-svc-5vsdc
  I0111 01:18:52.371424 23 service_latency.go:363] Got endpoints: latency-svc-ktgwp [668.439831ms]
  I0111 01:18:52.376457 23 service_latency.go:356] Created: latency-svc-lfz8m
  I0111 01:18:52.400215 23 service_latency.go:363] Got endpoints: latency-svc-5vsdc [662.926412ms]
  I0111 01:18:52.416482 23 service_latency.go:356] Created: latency-svc-s6mlc
  I0111 01:18:52.477264 23 service_latency.go:363] Got endpoints: latency-svc-lfz8m [699.568908ms]
  I0111 01:18:52.478414 23 service_latency.go:356] Created: latency-svc-wbpd2
  I0111 01:18:52.499197 23 service_latency.go:363] Got endpoints: latency-svc-s6mlc [674.310468ms]
  I0111 01:18:52.513220 23 service_latency.go:356] Created: latency-svc-9gr8f
  I0111 01:18:52.535225 23 service_latency.go:356] Created: latency-svc-d5752
  E0111 01:18:52.545202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:52.551167 23 service_latency.go:363] Got endpoints: latency-svc-wbpd2 [691.10291ms]
  I0111 01:18:52.566122 23 service_latency.go:356] Created: latency-svc-tdsb8
  I0111 01:18:52.601006 23 service_latency.go:363] Got endpoints: latency-svc-9gr8f [711.644287ms]
  I0111 01:18:52.607130 23 service_latency.go:356] Created: latency-svc-znr79
  I0111 01:18:52.636466 23 service_latency.go:356] Created: latency-svc-kpjsv
  I0111 01:18:52.653313 23 service_latency.go:363] Got endpoints: latency-svc-d5752 [719.478751ms]
  I0111 01:18:52.665884 23 service_latency.go:356] Created: latency-svc-gq7nj
  I0111 01:18:52.711897 23 service_latency.go:363] Got endpoints: latency-svc-tdsb8 [746.130683ms]
  I0111 01:18:52.713638 23 service_latency.go:356] Created: latency-svc-bh8lz
  I0111 01:18:52.734831 23 service_latency.go:356] Created: latency-svc-gllfx
  I0111 01:18:52.765976 23 service_latency.go:363] Got endpoints: latency-svc-znr79 [755.886047ms]
  I0111 01:18:52.801124 23 service_latency.go:363] Got endpoints: latency-svc-kpjsv [743.575348ms]
  I0111 01:18:52.803262 23 service_latency.go:356] Created: latency-svc-rts76
  I0111 01:18:52.811638 23 service_latency.go:356] Created: latency-svc-czqxb
  I0111 01:18:52.851133 23 service_latency.go:363] Got endpoints: latency-svc-gq7nj [750.327792ms]
  I0111 01:18:52.851870 23 service_latency.go:356] Created: latency-svc-vmsgv
  I0111 01:18:52.872134 23 service_latency.go:356] Created: latency-svc-rw7bq
  I0111 01:18:52.907977 23 service_latency.go:363] Got endpoints: latency-svc-bh8lz [755.418542ms]
  I0111 01:18:52.918944 23 service_latency.go:356] Created: latency-svc-vhpj2
  I0111 01:18:52.963286 23 service_latency.go:363] Got endpoints: latency-svc-gllfx [761.284719ms]
  I0111 01:18:52.977722 23 service_latency.go:356] Created: latency-svc-qbtdq
  I0111 01:18:53.000269 23 service_latency.go:363] Got endpoints: latency-svc-rts76 [741.442083ms]
  I0111 01:18:53.012010 23 service_latency.go:356] Created: latency-svc-9gqzm
  I0111 01:18:53.059883 23 service_latency.go:356] Created: latency-svc-tl2hz
  I0111 01:18:53.061235 23 service_latency.go:363] Got endpoints: latency-svc-czqxb [753.35931ms]
  I0111 01:18:53.097727 23 service_latency.go:363] Got endpoints: latency-svc-vmsgv [726.051738ms]
  I0111 01:18:53.099675 23 service_latency.go:356] Created: latency-svc-wk7m8
  I0111 01:18:53.133843 23 service_latency.go:356] Created: latency-svc-rg6dq
  I0111 01:18:53.160102 23 service_latency.go:363] Got endpoints: latency-svc-rw7bq [759.838409ms]
  I0111 01:18:53.183079 23 service_latency.go:356] Created: latency-svc-mdswp
  I0111 01:18:53.207988 23 service_latency.go:363] Got endpoints: latency-svc-vhpj2 [730.684843ms]
  I0111 01:18:53.222023 23 service_latency.go:356] Created: latency-svc-gp5kr
  I0111 01:18:53.253551 23 service_latency.go:356] Created: latency-svc-cd6hd
  I0111 01:18:53.255646 23 service_latency.go:363] Got endpoints: latency-svc-qbtdq [756.375109ms]
  I0111 01:18:53.280522 23 service_latency.go:356] Created: latency-svc-g2j76
  I0111 01:18:53.319106 23 service_latency.go:363] Got endpoints: latency-svc-9gqzm [767.884862ms]
  I0111 01:18:53.333551 23 service_latency.go:356] Created: latency-svc-zld6z
  I0111 01:18:53.360173 23 service_latency.go:363] Got endpoints: latency-svc-tl2hz [758.993904ms]
  I0111 01:18:53.371993 23 service_latency.go:356] Created: latency-svc-dnkgk
  I0111 01:18:53.404512 23 service_latency.go:363] Got endpoints: latency-svc-wk7m8 [751.152894ms]
  I0111 01:18:53.412082 23 service_latency.go:356] Created: latency-svc-8mv8d
  I0111 01:18:53.461397 23 service_latency.go:363] Got endpoints: latency-svc-rg6dq [749.446295ms]
  I0111 01:18:53.463948 23 service_latency.go:356] Created: latency-svc-p75jc
  I0111 01:18:53.484716 23 service_latency.go:356] Created: latency-svc-wpg5x
  I0111 01:18:53.508578 23 service_latency.go:363] Got endpoints: latency-svc-mdswp [742.3357ms]
  I0111 01:18:53.517841 23 service_latency.go:356] Created: latency-svc-495hc
  E0111 01:18:53.546233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:53.556325 23 service_latency.go:363] Got endpoints: latency-svc-gp5kr [755.145974ms]
  I0111 01:18:53.557233 23 service_latency.go:356] Created: latency-svc-xk6g9
  I0111 01:18:53.615284 23 service_latency.go:363] Got endpoints: latency-svc-cd6hd [763.960685ms]
  I0111 01:18:53.615812 23 service_latency.go:356] Created: latency-svc-zkw4j
  I0111 01:18:53.654637 23 service_latency.go:363] Got endpoints: latency-svc-g2j76 [746.503905ms]
  I0111 01:18:53.657995 23 service_latency.go:356] Created: latency-svc-xs68p
  I0111 01:18:53.702416 23 service_latency.go:363] Got endpoints: latency-svc-zld6z [739.080113ms]
  I0111 01:18:53.703987 23 service_latency.go:356] Created: latency-svc-q9775
  I0111 01:18:53.725173 23 service_latency.go:356] Created: latency-svc-gsv4w
  I0111 01:18:53.748734 23 service_latency.go:363] Got endpoints: latency-svc-dnkgk [748.413509ms]
  I0111 01:18:53.794114 23 service_latency.go:356] Created: latency-svc-5pb8c
  I0111 01:18:53.801851 23 service_latency.go:363] Got endpoints: latency-svc-8mv8d [740.382748ms]
  I0111 01:18:53.812122 23 service_latency.go:356] Created: latency-svc-br7qk
  I0111 01:18:53.847579 23 service_latency.go:363] Got endpoints: latency-svc-p75jc [749.774209ms]
  I0111 01:18:53.856660 23 service_latency.go:356] Created: latency-svc-2ds4j
  I0111 01:18:53.912721 23 service_latency.go:363] Got endpoints: latency-svc-wpg5x [752.572288ms]
  I0111 01:18:53.915140 23 service_latency.go:356] Created: latency-svc-jq245
  I0111 01:18:53.926400 23 service_latency.go:356] Created: latency-svc-wvh5b
  I0111 01:18:53.949186 23 service_latency.go:363] Got endpoints: latency-svc-495hc [741.125976ms]
  I0111 01:18:53.960648 23 service_latency.go:356] Created: latency-svc-mkdqf
  I0111 01:18:53.982314 23 service_latency.go:356] Created: latency-svc-s64vn
  I0111 01:18:54.036765 23 service_latency.go:363] Got endpoints: latency-svc-xk6g9 [781.070494ms]
  I0111 01:18:54.052499 23 service_latency.go:363] Got endpoints: latency-svc-zkw4j [733.341198ms]
  I0111 01:18:54.060990 23 service_latency.go:356] Created: latency-svc-brlqq
  I0111 01:18:54.090463 23 service_latency.go:356] Created: latency-svc-6r5kv
  I0111 01:18:54.099038 23 service_latency.go:363] Got endpoints: latency-svc-xs68p [738.81173ms]
  I0111 01:18:54.159976 23 service_latency.go:363] Got endpoints: latency-svc-q9775 [755.4144ms]
  I0111 01:18:54.162955 23 service_latency.go:356] Created: latency-svc-lr26w
  I0111 01:18:54.185782 23 service_latency.go:356] Created: latency-svc-xkxmm
  I0111 01:18:54.200942 23 service_latency.go:363] Got endpoints: latency-svc-gsv4w [739.342065ms]
  I0111 01:18:54.224155 23 service_latency.go:356] Created: latency-svc-k59fz
  I0111 01:18:54.272761 23 service_latency.go:363] Got endpoints: latency-svc-5pb8c [763.997586ms]
  I0111 01:18:54.274486 23 service_latency.go:356] Created: latency-svc-9pqcg
  I0111 01:18:54.297360 23 service_latency.go:363] Got endpoints: latency-svc-br7qk [740.869888ms]
  I0111 01:18:54.312594 23 service_latency.go:356] Created: latency-svc-w9nfk
  I0111 01:18:54.334665 23 service_latency.go:356] Created: latency-svc-vkmws
  I0111 01:18:54.358799 23 service_latency.go:363] Got endpoints: latency-svc-2ds4j [743.217406ms]
  I0111 01:18:54.389451 23 service_latency.go:356] Created: latency-svc-6x9mp
  I0111 01:18:54.403028 23 service_latency.go:363] Got endpoints: latency-svc-jq245 [748.337789ms]
  I0111 01:18:54.420921 23 service_latency.go:356] Created: latency-svc-jcjv4
  I0111 01:18:54.451286 23 service_latency.go:356] Created: latency-svc-9s9md
  I0111 01:18:54.452583 23 service_latency.go:363] Got endpoints: latency-svc-wvh5b [749.947225ms]
  I0111 01:18:54.506728 23 service_latency.go:363] Got endpoints: latency-svc-mkdqf [757.719827ms]
  E0111 01:18:54.546362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:18:54.551136 23 service_latency.go:363] Got endpoints: latency-svc-s64vn [748.885888ms]
  I0111 01:18:54.600877 23 service_latency.go:363] Got endpoints: latency-svc-brlqq [753.13266ms]
  I0111 01:18:54.651364 23 service_latency.go:363] Got endpoints: latency-svc-6r5kv [738.173948ms]
  I0111 01:18:54.708798 23 service_latency.go:363] Got endpoints: latency-svc-lr26w [759.167135ms]
  I0111 01:18:54.751641 23 service_latency.go:363] Got endpoints: latency-svc-xkxmm [714.655039ms]
  I0111 01:18:54.801219 23 service_latency.go:363] Got endpoints: latency-svc-k59fz [748.672051ms]
  I0111 01:18:54.850723 23 service_latency.go:363] Got endpoints: latency-svc-9pqcg [751.49657ms]
  I0111 01:18:54.900731 23 service_latency.go:363] Got endpoints: latency-svc-w9nfk [740.591205ms]
  I0111 01:18:54.945946 23 service_latency.go:363] Got endpoints: latency-svc-vkmws [744.894042ms]
  I0111 01:18:54.997698 23 service_latency.go:363] Got endpoints: latency-svc-6x9mp [724.750282ms]
  I0111 01:18:55.057978 23 service_latency.go:363] Got endpoints: latency-svc-jcjv4 [760.442113ms]
  I0111 01:18:55.095690 23 service_latency.go:363] Got endpoints: latency-svc-9s9md [736.674782ms]
  I0111 01:18:55.096026 23 service_latency.go:114] Latencies: [68.909495ms 106.514907ms 111.294186ms 143.599336ms 154.480637ms 182.997312ms 197.788918ms 208.115351ms 217.827879ms 229.99176ms 250.4832ms 261.443712ms 292.05865ms 300.770656ms 339.507291ms 341.325181ms 351.938583ms 368.056728ms 376.091476ms 382.667425ms 405.584264ms 408.791044ms 436.423055ms 439.409095ms 477.585175ms 480.297322ms 502.254548ms 513.373208ms 533.042766ms 545.408922ms 545.424076ms 551.382355ms 552.351213ms 553.419485ms 557.824894ms 558.524288ms 561.416514ms 564.176292ms 565.062303ms 568.827097ms 569.267588ms 569.501671ms 577.708577ms 581.363369ms 585.518747ms 587.598701ms 590.82323ms 592.901866ms 593.940737ms 596.940819ms 599.943371ms 600.756037ms 600.929638ms 602.061652ms 603.911089ms 604.726586ms 605.334252ms 607.038809ms 607.359371ms 607.685273ms 608.933465ms 611.18577ms 611.263439ms 613.422272ms 617.450835ms 624.750901ms 624.918349ms 625.489697ms 625.633402ms 626.389052ms 626.568245ms 626.783334ms 629.142838ms 630.030948ms 630.040073ms 630.04767ms 632.649556ms 633.729091ms 633.994125ms 635.181766ms 641.037573ms 645.012679ms 647.126865ms 648.159092ms 648.273441ms 650.675545ms 651.439934ms 651.991746ms 654.104679ms 655.151026ms 655.199549ms 655.367201ms 659.192015ms 659.393166ms 662.481871ms 662.544829ms 662.926412ms 664.401242ms 664.886662ms 665.44249ms 666.67077ms 667.173851ms 668.055355ms 668.327284ms 668.410314ms 668.439831ms 669.227396ms 669.29295ms 669.762708ms 671.167774ms 672.227855ms 672.374711ms 672.570941ms 673.485924ms 674.310468ms 674.369757ms 676.203192ms 679.876803ms 681.728614ms 687.49841ms 688.736941ms 691.10291ms 691.534539ms 691.978405ms 696.635386ms 697.574375ms 699.568908ms 701.004712ms 701.667358ms 708.015644ms 709.358469ms 711.644287ms 711.923522ms 714.050309ms 714.655039ms 719.478751ms 721.802858ms 723.440671ms 724.750282ms 726.051738ms 730.603361ms 730.684843ms 732.308814ms 733.326923ms 733.341198ms 734.458663ms 736.674782ms 738.173948ms 738.81173ms 739.080113ms 739.342065ms 740.242671ms 740.382748ms 740.591205ms 740.869888ms 741.125976ms 741.145919ms 741.442083ms 742.3357ms 743.217406ms 743.575348ms 744.894042ms 746.130683ms 746.175756ms 746.503905ms 748.337789ms 748.413509ms 748.672051ms 748.885888ms 749.446295ms 749.774209ms 749.947225ms 750.327792ms 751.152894ms 751.49657ms 752.572288ms 752.842121ms 753.13266ms 753.35931ms 755.145974ms 755.4144ms 755.418542ms 755.886047ms 756.375109ms 756.911521ms 757.719827ms 758.993904ms 759.167135ms 759.838409ms 760.442113ms 761.284719ms 763.960685ms 763.997586ms 767.884862ms 781.070494ms 791.122867ms 792.636634ms 794.900739ms 801.830943ms 833.257777ms]
  I0111 01:18:55.096276 23 service_latency.go:118] 50 %ile: 666.67077ms
  I0111 01:18:55.096363 23 service_latency.go:119] 90 %ile: 755.4144ms
  I0111 01:18:55.096417 23 service_latency.go:120] 99 %ile: 801.830943ms
  I0111 01:18:55.096498 23 service_latency.go:121] Total sample count: 200
  I0111 01:18:55.096719 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8873" for this suite. @ 01/11/25 01:18:55.104
• [11.050 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/11/25 01:18:55.12
  I0111 01:18:55.120279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:18:55.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:18:55.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:18:55.206
  STEP: Counting existing ResourceQuota @ 01/11/25 01:18:55.212
  E0111 01:18:55.547039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:56.547588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:57.548209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:58.548404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:18:59.548534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 01:19:00.217
  STEP: Ensuring resource quota status is calculated @ 01/11/25 01:19:00.232
  E0111 01:19:00.549014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:01.549440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 01/11/25 01:19:02.256
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/11/25 01:19:02.336
  E0111 01:19:02.550036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:03.550323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/11/25 01:19:04.343
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/11/25 01:19:04.345
  STEP: Ensuring a pod cannot update its resource requirements @ 01/11/25 01:19:04.348
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/11/25 01:19:04.359
  E0111 01:19:04.550712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:05.551080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/11/25 01:19:06.363
  STEP: Ensuring resource quota status released the pod usage @ 01/11/25 01:19:06.424
  E0111 01:19:06.551630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:07.551975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:08.437736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9790" for this suite. @ 01/11/25 01:19:08.464
• [13.372 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/11/25 01:19:08.493
  I0111 01:19:08.493105 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context @ 01/11/25 01:19:08.493
  E0111 01:19:08.551885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:08.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:08.588
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/11/25 01:19:08.59
  E0111 01:19:09.552288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:10.552415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:11.553400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:12.553904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:19:12.683
  I0111 01:19:12.720521 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod security-context-ec19a8b1-ff07-4ef2-b637-4c28648350c0 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:19:12.766
  I0111 01:19:12.858373 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6182" for this suite. @ 01/11/25 01:19:12.898
• [4.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/11/25 01:19:12.936
  I0111 01:19:12.938364 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename runtimeclass @ 01/11/25 01:19:12.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:13.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:13.011
  I0111 01:19:13.141602 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3258" for this suite. @ 01/11/25 01:19:13.16
• [0.261 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/11/25 01:19:13.191
  I0111 01:19:13.192072 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 01:19:13.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:13.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:13.322
  STEP: Creating a pod to test substitution in volume subpath @ 01/11/25 01:19:13.33
  E0111 01:19:13.554380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:14.558812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:15.557386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:16.558588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:19:17.394
  I0111 01:19:17.398574 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod var-expansion-34e31393-fd50-4ec8-b877-a279bae1206d container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:19:17.403
  I0111 01:19:17.448281 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-847" for this suite. @ 01/11/25 01:19:17.454
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/11/25 01:19:17.488
  I0111 01:19:17.488342 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 01:19:17.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:17.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:17.53
  E0111 01:19:17.559347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:17.566923 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 01:19:17.567
  E0111 01:19:18.559417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:19.560628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:19.601659 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0111 01:19:20.560466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:21.561396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:21.605932 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0111 01:19:21.628501 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0111 01:19:22.564003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:23.562060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:23.642994 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0111 01:19:23.657346 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0111 01:19:23.673854 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0111 01:19:23.694706 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0111 01:19:23.694903 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0111 01:19:24.562071      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:25.562240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:25.707929 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0111 01:19:25.714154 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0111 01:19:25.720223 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0111 01:19:25.720303 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:26.562270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:27.562641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:27.730457 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0111 01:19:27.730727 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:28.563752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:29.564468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:29.730173 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0111 01:19:29.730260 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:30.564508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:31.564629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:31.735437 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0111 01:19:31.735640 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:32.565730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:33.565997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:33.734994 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0111 01:19:33.735093 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:34.566251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:35.566321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:35.767256 23 deployment.go:95] 
  I0111 01:19:35.767476 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 1, 19, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 1, 19, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 01:19:36.566978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:37.567251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:37.729431 23 deployment.go:95] 
  I0111 01:19:37.729482 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0111 01:19:37.749435 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7897",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "298b66aa-52fb-4b74-a584-4596e6f94430",
      ResourceVersion: (string) (len=5) "27285",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 01:19:37.757340 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7897",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aceeb8f7-135d-4baf-aa1e-e5b2e7e308cb",
      ResourceVersion: (string) (len=5) "27275",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155163,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298b66aa-52fb-4b74-a584-4596e6f94430",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 38 62 36 36  61 61 2d 35 32 66 62 2d  |\"298b66aa-52fb-|
              00000120  34 62 37 34 2d 61 35 38  34 2d 34 35 39 36 65 36  |4b74-a584-4596e6|
              00000130  66 39 34 34 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f94430\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:19:37.759327 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0111 01:19:37.759636 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7897",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9842d015-4495-420b-ab6e-93c60ad8d610",
      ResourceVersion: (string) (len=5) "27284",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298b66aa-52fb-4b74-a584-4596e6f94430",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 39 38 62 36 36 61 61  2d 35 32 66 62 2d 34 62  |298b66aa-52fb-4b|
              000000c0  37 34 2d 61 35 38 34 2d  34 35 39 36 65 36 66 39  |74-a584-4596e6f9|
              000000d0  34 34 33 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4430\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:19:37.761003 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7897",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae51237a-1b0a-48e9-ab32-8380c439fe36",
      ResourceVersion: (string) (len=5) "27223",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155161,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298b66aa-52fb-4b74-a584-4596e6f94430",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 38 62 36 36  61 61 2d 35 32 66 62 2d  |\"298b66aa-52fb-|
              00000120  34 62 37 34 2d 61 35 38  34 2d 34 35 39 36 65 36  |4b74-a584-4596e6|
              00000130  66 39 34 34 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f94430\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:19:37.770869 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-p294k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-p294k",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7897",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75f9a93d-7fe1-40a9-a119-74a6b6e4ffe5",
      ResourceVersion: (string) (len=5) "27237",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155163,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "aceeb8f7-135d-4baf-aa1e-e5b2e7e308cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  65 65 62 38 66 37 2d 31  |d\":\"aceeb8f7-1|
              00000090  33 35 64 2d 34 62 61 66  2d 61 61 31 65 2d 65 35  |35d-4baf-aa1e-e5|
              000000a0  62 32 65 37 65 33 30 38  63 62 5c 22 7d 22 3a 7b  |b2e7e308cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 33  32 5c 22 7d 22 3a 7b 22  |.42.1.132\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6mgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6mgn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155163,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155163,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872155164,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4dbf473964287d40d3b3717e10578882dc14a8f5d26503ee6af1e02c9bcb8060",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x6mgn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:19:37.773210 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7897" for this suite. @ 01/11/25 01:19:37.778
• [20.300 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/11/25 01:19:37.788
  I0111 01:19:37.788872 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:19:37.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:37.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:37.839
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/11/25 01:19:37.844
  E0111 01:19:38.567275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:39.568290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:40.569359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:41.570437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:19:41.903
  I0111 01:19:41.906796 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-33d5026c-b5f0-41cd-851f-81ab5f176639 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:19:41.912
  I0111 01:19:41.951390 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5376" for this suite. @ 01/11/25 01:19:41.956
• [4.187 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/11/25 01:19:41.976
  I0111 01:19:41.976193 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename proxy @ 01/11/25 01:19:41.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:42.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:42.092
  I0111 01:19:42.096189 23 proxy.go:293] Creating pod...
  E0111 01:19:42.572629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:43.572702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:44.141473 23 proxy.go:317] Creating service...
  I0111 01:19:44.161040 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/DELETE
  I0111 01:19:44.169297 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0111 01:19:44.169351 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/GET
  I0111 01:19:44.196903 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0111 01:19:44.196948 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/HEAD
  I0111 01:19:44.201272 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0111 01:19:44.201446 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/OPTIONS
  I0111 01:19:44.204902 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0111 01:19:44.205061 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/PATCH
  I0111 01:19:44.208520 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0111 01:19:44.208562 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/POST
  I0111 01:19:44.211579 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0111 01:19:44.211623 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/pods/agnhost/proxy/some/path/with/PUT
  I0111 01:19:44.214163 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0111 01:19:44.214205 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/DELETE
  I0111 01:19:44.217860 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0111 01:19:44.217903 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/GET
  I0111 01:19:44.221324 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0111 01:19:44.221365 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/HEAD
  I0111 01:19:44.225079 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0111 01:19:44.225121 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/OPTIONS
  I0111 01:19:44.243788 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0111 01:19:44.243836 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/PATCH
  I0111 01:19:44.249148 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0111 01:19:44.249191 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/POST
  I0111 01:19:44.253667 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0111 01:19:44.253713 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5367/services/test-service/proxy/some/path/with/PUT
  I0111 01:19:44.257607 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0111 01:19:44.257836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5367" for this suite. @ 01/11/25 01:19:44.264
• [2.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 01/11/25 01:19:44.275
  I0111 01:19:44.275543 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:19:44.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:44.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:44.332
  STEP: Creating a Serviceaccount "e2e-sa-nvv79" in namespace "svcaccounts-412" @ 01/11/25 01:19:44.342
  STEP: Creating a ServiceaccountToken "e2e-sa-nvv79" in namespace "svcaccounts-412" @ 01/11/25 01:19:44.361
  STEP: Creating a TokenReview for "e2e-sa-nvv79" in namespace "svcaccounts-412" @ 01/11/25 01:19:44.376
  I0111 01:19:44.379622 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-412" for this suite. @ 01/11/25 01:19:44.383
• [0.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/11/25 01:19:44.4
  I0111 01:19:44.400194 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-pred @ 01/11/25 01:19:44.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:44.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:44.443
  I0111 01:19:44.459697 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0111 01:19:44.493641 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 01:19:44.497063 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-105.us-east-2.compute.internal before test
  I0111 01:19:44.502995 23 predicates.go:957] svclb-traefik-05b4ccc2-smhqh from kube-system started at 2025-01-11 00:09:20 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.503032 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:19:44.503044 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:19:44.503136 23 predicates.go:957] sonobuoy-e2e-job-eb8d697247014ae0 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.503148 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0111 01:19:44.503157 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:19:44.503168 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.503179 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:19:44.503189 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:19:44.503200 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-167.us-east-2.compute.internal before test
  I0111 01:19:44.506551 23 predicates.go:957] svclb-traefik-05b4ccc2-g4lb9 from kube-system started at 2025-01-11 00:44:56 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.506594 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:19:44.506605 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:19:44.506653 23 predicates.go:957] agnhost from proxy-5367 started at 2025-01-11 01:19:42 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.506669 23 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0111 01:19:44.506682 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-9zc6w from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.506718 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:19:44.506744 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:19:44.506756 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-7.us-east-2.compute.internal before test
  E0111 01:19:44.573020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:44.606154 23 predicates.go:957] coredns-ff8999cc5-fc7lk from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.606193 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0111 01:19:44.606300 23 predicates.go:957] helm-install-traefik-crd-mfrtb from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.606401 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0111 01:19:44.606416 23 predicates.go:957] helm-install-traefik-p9ht5 from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.606426 23 predicates.go:959] 	Container helm ready: false, restart count 1
  I0111 01:19:44.606439 23 predicates.go:957] local-path-provisioner-698b58967b-mgc2t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.606639 23 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0111 01:19:44.606724 23 predicates.go:957] metrics-server-8584b5786c-6f52t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.606912 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0111 01:19:44.606933 23 predicates.go:957] svclb-traefik-05b4ccc2-pbl78 from kube-system started at 2025-01-11 00:06:01 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.606944 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:19:44.606956 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:19:44.606967 23 predicates.go:957] traefik-857c696d79-qnj97 from kube-system started at 2025-01-11 00:06:00 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.607005 23 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0111 01:19:44.607027 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-bqsp8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.607046 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:19:44.607188 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 01:19:44.607203 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-29-145.us-east-2.compute.internal before test
  I0111 01:19:44.611115 23 predicates.go:957] svclb-traefik-05b4ccc2-vvq59 from kube-system started at 2025-01-11 00:11:49 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.611146 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 01:19:44.611156 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 01:19:44.611169 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-11 00:35:12 +0000 UTC (1 container statuses recorded)
  I0111 01:19:44.611179 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0111 01:19:44.611192 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-g2ggm from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 01:19:44.611200 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 01:19:44.611209 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/11/25 01:19:44.611
  E0111 01:19:45.573090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:46.573268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/11/25 01:19:46.654
  STEP: Trying to apply a random label on the found node. @ 01/11/25 01:19:46.696
  STEP: verifying the node has the label kubernetes.io/e2e-95eade9a-acce-4018-aecd-1f755c8353ce 42 @ 01/11/25 01:19:46.735
  STEP: Trying to relaunch the pod, now with labels. @ 01/11/25 01:19:46.744
  E0111 01:19:47.575423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:48.576427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-95eade9a-acce-4018-aecd-1f755c8353ce off the node ip-172-31-22-167.us-east-2.compute.internal @ 01/11/25 01:19:48.813
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-95eade9a-acce-4018-aecd-1f755c8353ce @ 01/11/25 01:19:48.835
  I0111 01:19:48.843179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2902" for this suite. @ 01/11/25 01:19:48.848
• [4.459 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/11/25 01:19:48.859
  I0111 01:19:48.859734 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:19:48.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:48.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:48.916
  STEP: Creating namespace "e2e-ns-829r5" @ 01/11/25 01:19:48.921
  I0111 01:19:49.045382 23 namespace.go:411] Namespace "e2e-ns-829r5-2924" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-829r5-2924" @ 01/11/25 01:19:49.045
  I0111 01:19:49.067038 23 namespace.go:434] Namespace "e2e-ns-829r5-2924" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-829r5-2924" @ 01/11/25 01:19:49.067
  I0111 01:19:49.085524 23 namespace.go:463] Namespace "e2e-ns-829r5-2924" has []v1.FinalizerName{"kubernetes"}
  I0111 01:19:49.085858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-909" for this suite. @ 01/11/25 01:19:49.092
  STEP: Destroying namespace "e2e-ns-829r5-2924" for this suite. @ 01/11/25 01:19:49.105
• [0.276 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/11/25 01:19:49.136
  I0111 01:19:49.136325 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:19:49.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:49.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:49.205
  STEP: Setting up server cert @ 01/11/25 01:19:49.366
  E0111 01:19:49.577377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:19:49.846
  STEP: Deploying the webhook pod @ 01/11/25 01:19:49.858
  STEP: Wait for the deployment to be ready @ 01/11/25 01:19:49.891
  I0111 01:19:49.905349 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:19:50.577678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:51.578455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:19:51.916
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:19:51.947
  E0111 01:19:52.578547      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:52.947842 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/11/25 01:19:52.969
  STEP: create the configmap with a random name @ 01/11/25 01:19:53.021
  STEP: verify the configmap is mutated @ 01/11/25 01:19:53.048
  STEP: create the configmap with 'skip-me' name @ 01/11/25 01:19:53.048
  I0111 01:19:53.212126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5342" for this suite. @ 01/11/25 01:19:53.219
  STEP: Destroying namespace "webhook-markers-3567" for this suite. @ 01/11/25 01:19:53.242
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/11/25 01:19:53.285
  I0111 01:19:53.285324 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 01:19:53.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:53.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:53.328
  I0111 01:19:53.332212 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-45ce18d9-6dac-421b-a7e2-8e93187ee5d0
  I0111 01:19:53.366325 23 resource.go:87] Pod name my-hostname-basic-45ce18d9-6dac-421b-a7e2-8e93187ee5d0: Found 1 pods out of 1
  I0111 01:19:53.366364 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-45ce18d9-6dac-421b-a7e2-8e93187ee5d0" is running
  E0111 01:19:53.579202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:54.579225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:55.580354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:56.580568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:19:57.426426 23 replica_set.go:220] Pod "my-hostname-basic-45ce18d9-6dac-421b-a7e2-8e93187ee5d0-t9tpz" is running (conditions: [])
  I0111 01:19:57.426475 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/11/25 01:19:57.426
  I0111 01:19:57.465986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6256" for this suite. @ 01/11/25 01:19:57.473
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/11/25 01:19:57.493
  I0111 01:19:57.493028 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-webhook @ 01/11/25 01:19:57.493
  E0111 01:19:57.581251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:19:57.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:19:57.588
  STEP: Setting up server cert @ 01/11/25 01:19:57.592
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/11/25 01:19:58.17
  STEP: Deploying the custom resource conversion webhook pod @ 01/11/25 01:19:58.189
  STEP: Wait for the deployment to be ready @ 01/11/25 01:19:58.23
  I0111 01:19:58.280150 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0111 01:19:58.582201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:19:59.582517      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:20:00.297
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:20:00.326
  E0111 01:20:00.583246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:20:01.326878 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0111 01:20:01.347701 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:20:01.583484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:02.584506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:03.589807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/11/25 01:20:03.987
  STEP: v2 custom resource should be converted @ 01/11/25 01:20:04.006
  E0111 01:20:04.590316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:20:04.711764 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6203" for this suite. @ 01/11/25 01:20:04.734
• [7.280 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/11/25 01:20:04.775
  I0111 01:20:04.775756 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:20:04.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:04.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:04.834
  STEP: Setting up server cert @ 01/11/25 01:20:04.932
  E0111 01:20:05.590547      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:20:05.674
  STEP: Deploying the webhook pod @ 01/11/25 01:20:05.7
  STEP: Wait for the deployment to be ready @ 01/11/25 01:20:05.743
  I0111 01:20:05.781237 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:20:06.591254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:07.591230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:20:07.792
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:20:07.834
  E0111 01:20:08.591340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:20:08.835309 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/11/25 01:20:08.859
  STEP: create a pod @ 01/11/25 01:20:08.886
  E0111 01:20:09.592028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:10.592263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/11/25 01:20:10.947
  I0111 01:20:10.947546 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=webhook-4290 attach --namespace=webhook-4290 to-be-attached-pod -i -c=container1'
  I0111 01:20:11.089167 23 builder.go:135] rc: 1
  I0111 01:20:11.242877 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4290" for this suite. @ 01/11/25 01:20:11.248
  STEP: Destroying namespace "webhook-markers-8084" for this suite. @ 01/11/25 01:20:11.296
• [6.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/11/25 01:20:11.313
  I0111 01:20:11.313500 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:20:11.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:11.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:11.389
  STEP: Updating Namespace "namespaces-1711" @ 01/11/25 01:20:11.396
  I0111 01:20:11.431920 23 namespace.go:389] Namespace "namespaces-1711" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"42ca63fb-bb74-4f2d-9cb2-4a383aaf716a", "kubernetes.io/metadata.name":"namespaces-1711", "namespaces-1711":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0111 01:20:11.432299 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1711" for this suite. @ 01/11/25 01:20:11.438
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/11/25 01:20:11.462
  I0111 01:20:11.462328 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 01:20:11.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:11.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:11.516
  STEP: Creating a pod to test substitution in container's command @ 01/11/25 01:20:11.52
  E0111 01:20:11.592696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:12.595205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:13.597759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:14.598197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:15.598692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:20:15.6
  I0111 01:20:15.614343 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod var-expansion-1d1060ce-0d17-4479-8793-478d68a40000 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:20:15.621
  I0111 01:20:15.681468 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-569" for this suite. @ 01/11/25 01:20:15.694
• [4.256 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/11/25 01:20:15.718
  I0111 01:20:15.718433 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/11/25 01:20:15.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:15.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:15.774
  I0111 01:20:15.778364 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 01:20:16.406945 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9620" for this suite. @ 01/11/25 01:20:16.436
• [0.759 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/11/25 01:20:16.504
  I0111 01:20:16.504603 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename server-version @ 01/11/25 01:20:16.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:16.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:16.567
  STEP: Request ServerVersion @ 01/11/25 01:20:16.571
  STEP: Confirm major version @ 01/11/25 01:20:16.573
  I0111 01:20:16.573260 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/11/25 01:20:16.573
  I0111 01:20:16.573298 23 server_version.go:58] cleanMinorVersion: 32
  I0111 01:20:16.573314 23 server_version.go:62] Minor version: 32
  I0111 01:20:16.573485 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6863" for this suite. @ 01/11/25 01:20:16.579
  E0111 01:20:16.599028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/11/25 01:20:16.6
  I0111 01:20:16.600283 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename init-container @ 01/11/25 01:20:16.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:16.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:16.684
  STEP: creating the pod @ 01/11/25 01:20:16.723
  I0111 01:20:16.723944 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0111 01:20:17.599611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:18.599727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:19.600305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:20.600628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:21.601590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:22.601936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:23.602098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:24.602777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:25.603137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:26.603756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:27.604293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:28.604480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:29.604612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:30.604846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:31.605515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:32.605724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:33.606340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:34.606762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:35.606657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:36.606863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:37.607591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:38.608191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:39.608122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:40.608541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:41.608493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:42.608689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:43.608904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:44.609105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:45.609261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:46.610218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:47.610773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:48.610920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:49.611082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:50.611237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:51.611302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:52.612498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:53.613016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:54.613611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:55.613819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:56.614228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:57.614586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:20:58.614830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:20:59.600913 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-f97cbb36-a65e-4529-801b-0874c75fbe35", GenerateName:"", Namespace:"init-container-7374", SelfLink:"", UID:"fc754998-84cb-4c59-aab7-12dd2cf8774d", ResourceVersion:"28077", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"723931873"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013cc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 20, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013d58), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-7qpfb", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000def920), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7qpfb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7qpfb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-7qpfb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0040c53f8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-29-145.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004bbc000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040c5470)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040c5490)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0040c5498), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0040c549c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003e4bf40), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 11, 1, 20, 18, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.29.145", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.29.145"}}, PodIP:"10.42.3.80", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.80"}}, StartTime:time.Date(2025, time.January, 11, 1, 20, 16, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002d5c00)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002d5ce0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://37d88efd6eb11b81e226a824b1b30383a1ff4f36bd8911c133422a480868c608", Started:(*bool)(0xc0040c554a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7qpfb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003e4bf60)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000def980), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040c555d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7qpfb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001490000)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000def960), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040c551f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-7qpfb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003e4bf50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0111 01:20:59.601084 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 01:20:59.615087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "init-container-7374" for this suite. @ 01/11/25 01:20:59.615
• [43.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/11/25 01:20:59.637
  I0111 01:20:59.637264 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 01:20:59.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:20:59.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:20:59.682
  I0111 01:20:59.697409 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0111 01:20:59.717737 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0111 01:21:00.615328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:01.615734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:02.615578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:03.616327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:04.617233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:21:04.725356 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 01:21:04.725
  I0111 01:21:04.725682 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0111 01:21:04.748655 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0111 01:21:04.792599 23 deployment.go:223] deployment "test-rolling-update-deployment" doesn't have the required revision set
  E0111 01:21:05.617014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:06.617465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:21:06.801349 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0111 01:21:06.803976 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0111 01:21:06.816319 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0182bde9-8e98-47b4-8c3b-bc5f19f4177b",
      ResourceVersion: (string) (len=5) "28159",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155264,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 01:21:06.831658 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d8ad999-9a00-4d0b-bc07-227f7af71938",
      ResourceVersion: (string) (len=5) "28148",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155264,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0182bde9-8e98-47b4-8c3b-bc5f19f4177b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 31 38 32 62 64  65 39 2d 38 65 39 38 2d  |\"0182bde9-8e98-|
              00000120  34 37 62 34 2d 38 63 33  62 2d 62 63 35 66 31 39  |47b4-8c3b-bc5f19|
              00000130  66 34 31 37 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f4177b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:21:06.833457 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0111 01:21:06.833770 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "984ed877-4a0e-4b1f-b3c7-6a19b0d7adee",
      ResourceVersion: (string) (len=5) "28158",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0182bde9-8e98-47b4-8c3b-bc5f19f4177b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155259,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 31 38 32 62 64 65  |"uid\":\"0182bde|
              000000b0  39 2d 38 65 39 38 2d 34  37 62 34 2d 38 63 33 62  |9-8e98-47b4-8c3b|
              000000c0  2d 62 63 35 66 31 39 66  34 31 37 37 62 5c 22 7d  |-bc5f19f4177b\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:21:06.841030 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-jr8rh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-jr8rh",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-285",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7a66472-07eb-485e-9c20-889082fdf854",
      ResourceVersion: (string) (len=5) "28147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155264,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "2d8ad999-9a00-4d0b-bc07-227f7af71938",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 64  38 61 64 39 39 39 2d 39  |d\":\"2d8ad999-9|
              00000090  61 30 30 2d 34 64 30 62  2d 62 63 30 37 2d 32 32  |a00-4d0b-bc07-22|
              000000a0  37 66 37 61 66 37 31 39  33 38 5c 22 7d 22 3a 7b  |7f7af71938\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  31 5c 22 7d 22 3a 7b 22  |.42.1.141\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pkvn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pkvn7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872155264,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872155264,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872155265,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d5a3da433adf720694f63736bbcba77bc716f49b22b90a9d3d3cd06f758b00b2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pkvn7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:21:06.843707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-285" for this suite. @ 01/11/25 01:21:06.849
• [7.230 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/11/25 01:21:06.867
  I0111 01:21:06.867514 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:21:06.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:21:06.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:21:06.919
  STEP: Create set of pods @ 01/11/25 01:21:06.926
  I0111 01:21:06.978750 23 pods.go:871] created test-pod-1
  I0111 01:21:07.001217 23 pods.go:871] created test-pod-2
  I0111 01:21:07.047556 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/11/25 01:21:07.051
  E0111 01:21:07.617993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:08.618842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 01/11/25 01:21:09.161
  I0111 01:21:09.164683 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0111 01:21:09.618949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:21:10.169312 23 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0111 01:21:10.619388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:21:11.167999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4119" for this suite. @ 01/11/25 01:21:11.178
• [4.333 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 01/11/25 01:21:11.201
  I0111 01:21:11.201754 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption @ 01/11/25 01:21:11.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:21:11.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:21:11.27
  I0111 01:21:11.312531 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 01:21:11.619886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:12.622922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:13.623165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:14.623497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:15.623709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:16.624353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:17.625074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:18.625422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:19.625551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:20.625556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:21.625637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:22.625767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:23.626259      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:24.627103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:25.627739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:26.628334      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:27.629051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:28.629215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:29.629873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:30.630684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:31.630916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:32.631207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:33.631221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:34.631358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:35.632023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:36.632289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:37.632421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:38.633345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:39.634010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:40.634325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:41.634819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:42.634954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:43.635241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:44.636297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:45.636486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:46.636625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:47.636887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:48.637126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:49.637507      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:50.637602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:51.638241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:52.638560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:53.638786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:54.639038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:55.639786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:56.640520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:57.640607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:58.640866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:21:59.641849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:00.642320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:01.642840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:02.643006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:03.643260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:04.644300      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:05.644438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:06.644551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:07.644725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:08.644762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:09.645443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:10.645608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:22:11.316580 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/11/25 01:22:11.324
  STEP: Adding a custom resource @ 01/11/25 01:22:11.324
  I0111 01:22:11.401933 23 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0111 01:22:11.434101 23 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:22:11.434
  I0111 01:22:11.541618 23 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0111 01:22:11.568284 23 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:22:11.568
  E0111 01:22:11.648154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:22:11.685265 23 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0111 01:22:11.708970 23 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/11/25 01:22:11.709
  I0111 01:22:12.121261 23 preemption.go:168] Created pod: pod3-0-sched-preemption-medium-priority
  I0111 01:22:12.217210 23 preemption.go:168] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/11/25 01:22:12.217
  E0111 01:22:12.646426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:13.646574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/11/25 01:22:14.291
  E0111 01:22:14.647022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:15.646808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:16.647258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:17.647667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/11/25 01:22:18.412
  STEP: Removing a custom resource @ 01/11/25 01:22:18.446
  STEP: Removing a custom resource @ 01/11/25 01:22:18.484
  STEP: Removing a custom resource @ 01/11/25 01:22:18.526
  I0111 01:22:18.555635 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-626" for this suite. @ 01/11/25 01:22:18.559
• [67.373 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/11/25 01:22:18.574
  I0111 01:22:18.574921 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename cronjob @ 01/11/25 01:22:18.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:22:18.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:22:18.642
  E0111 01:22:18.648225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ForbidConcurrent cronjob @ 01/11/25 01:22:18.648
  STEP: Ensuring a job is scheduled @ 01/11/25 01:22:18.672
  E0111 01:22:19.648543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:20.648655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:21.649189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:22.649385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:23.652234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:24.651279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:25.652334      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:26.652452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:27.653142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:28.653268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:29.653425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:30.653529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:31.654477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:32.654754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:33.654872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:34.655190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:35.655439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:36.655752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:37.656650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:38.656956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:39.657790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:40.658116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:41.658473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:42.658609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:43.658705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:44.659031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:45.659233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:46.660317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:47.660455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:48.660544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:49.661093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:50.661228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:51.661451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:52.661934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:53.662081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:54.662203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:55.663103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:56.664058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:57.664099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:58.664225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:22:59.664845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:00.664500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/11/25 01:23:00.678
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/11/25 01:23:00.682
  STEP: Ensuring no more jobs are scheduled @ 01/11/25 01:23:00.695
  STEP: Removing cronjob @ 01/11/25 01:23:00.703
  I0111 01:23:00.718809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7011" for this suite. @ 01/11/25 01:23:00.726
• [42.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/11/25 01:23:00.74
  I0111 01:23:00.740681 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:23:00.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:00.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:00.836
  STEP: create deployment with httpd image @ 01/11/25 01:23:00.84
  I0111 01:23:00.840398 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-8805 create -f -'
  I0111 01:23:01.009438 23 builder.go:146] stderr: ""
  I0111 01:23:01.009582 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/11/25 01:23:01.009
  I0111 01:23:01.009682 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-8805 diff -f -'
  I0111 01:23:01.295168 23 builder.go:135] rc: 1
  I0111 01:23:01.295272 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-8805 delete -f -'
  I0111 01:23:01.446121 23 builder.go:146] stderr: ""
  I0111 01:23:01.446184 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0111 01:23:01.446592 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8805" for this suite. @ 01/11/25 01:23:01.46
• [0.755 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/11/25 01:23:01.495
  I0111 01:23:01.495974 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/11/25 01:23:01.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:01.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:01.591
  I0111 01:23:01.638155 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 01:23:01.673604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "aggregateddiscovery-224" for this suite. @ 01/11/25 01:23:01.676
• [0.199 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/11/25 01:23:01.696
  I0111 01:23:01.696091 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:23:01.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:01.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:01.758
  STEP: creating service in namespace services-8888 @ 01/11/25 01:23:01.776
  STEP: creating service affinity-nodeport in namespace services-8888 @ 01/11/25 01:23:01.776
  STEP: creating replication controller affinity-nodeport in namespace services-8888 @ 01/11/25 01:23:01.833
  I0111 01:23:01.869277      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8888, replica count: 3
  E0111 01:23:02.674474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:03.675170      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:04.677421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:23:04.922266      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:23:04.951634 23 resource.go:361] Creating new exec pod
  E0111 01:23:05.677924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:06.678055      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:07.679139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:23:07.991629 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8888 exec execpod-affinityvdcx5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0111 01:23:08.156369 23 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport (10.43.112.250) 80 port [tcp/http] succeeded!\n"
  I0111 01:23:08.156427 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:23:08.156496 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8888 exec execpod-affinityvdcx5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.112.250 80'
  I0111 01:23:08.364027 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.112.250 80\nConnection to 10.43.112.250 80 port [tcp/http] succeeded!\n"
  I0111 01:23:08.364071 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:23:08.364299 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8888 exec execpod-affinityvdcx5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.145 32596'
  I0111 01:23:08.505110 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.145 32596\nConnection to 172.31.29.145 32596 port [tcp/*] succeeded!\n"
  I0111 01:23:08.505158 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:23:08.505492 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8888 exec execpod-affinityvdcx5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.7 32596'
  I0111 01:23:08.666105 23 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.22.7 32596\n+ echo hostName\nConnection to 172.31.22.7 32596 port [tcp/*] succeeded!\n"
  I0111 01:23:08.666152 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:23:08.666222 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8888 exec execpod-affinityvdcx5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.105:32596/ ; done'
  E0111 01:23:08.679623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:23:08.928061 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:32596/\n"
  I0111 01:23:08.928117 23 builder.go:147] stdout: "\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj\naffinity-nodeport-xz2cj"
  I0111 01:23:08.928139 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928153 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928163 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928174 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928186 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928196 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928205 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928215 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928226 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928238 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928262 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928274 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928286 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928297 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928318 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928332 23 service.go:242] Received response from host: affinity-nodeport-xz2cj
  I0111 01:23:08.928402 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8888, will wait for the garbage collector to delete the pods @ 01/11/25 01:23:08.973
  I0111 01:23:09.059614 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 24.082965ms
  I0111 01:23:09.160463 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.846641ms
  E0111 01:23:09.681172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:10.679999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:11.680966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:23:12.455944 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8888" for this suite. @ 01/11/25 01:23:12.46
• [10.777 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/11/25 01:23:12.473
  I0111 01:23:12.473519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pod-network-test @ 01/11/25 01:23:12.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:12.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:12.533
  STEP: Performing setup for networking test in namespace pod-network-test-3509 @ 01/11/25 01:23:12.547
  STEP: creating a selector @ 01/11/25 01:23:12.547
  STEP: Creating the service pods in kubernetes @ 01/11/25 01:23:12.547
  I0111 01:23:12.547802 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0111 01:23:12.681783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:13.682033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:14.682327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:15.682446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:16.682684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:17.683700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:18.684809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:19.685448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:20.686880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:21.687898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:22.688307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:23.688476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:24.688900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:25.688968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:26.689155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/11/25 01:23:26.843
  E0111 01:23:27.689775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:28.690386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:23:28.877869 23 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0111 01:23:28.877909 23 networking.go:42] Breadth first check of 10.42.2.53 on host 172.31.16.105...
  I0111 01:23:28.883962 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.149:9080/dial?request=hostname&protocol=http&host=10.42.2.53&port=8083&tries=1'] Namespace:pod-network-test-3509 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:23:28.884053 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:23:28.884287 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3509/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.53%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 01:23:28.941602 23 utils.go:356] Waiting for responses: map[]
  I0111 01:23:28.941790 23 utils.go:360] reached 10.42.2.53 after 0/1 tries
  I0111 01:23:28.941818 23 networking.go:42] Breadth first check of 10.42.1.148 on host 172.31.22.167...
  I0111 01:23:28.954649 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.149:9080/dial?request=hostname&protocol=http&host=10.42.1.148&port=8083&tries=1'] Namespace:pod-network-test-3509 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:23:28.955448 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:23:28.955860 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3509/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.148%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 01:23:29.000786 23 utils.go:356] Waiting for responses: map[]
  I0111 01:23:29.000867 23 utils.go:360] reached 10.42.1.148 after 0/1 tries
  I0111 01:23:29.000882 23 networking.go:42] Breadth first check of 10.42.0.60 on host 172.31.22.7...
  I0111 01:23:29.007604 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.149:9080/dial?request=hostname&protocol=http&host=10.42.0.60&port=8083&tries=1'] Namespace:pod-network-test-3509 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:23:29.008029 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:23:29.008116 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3509/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.60%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 01:23:29.059155 23 utils.go:356] Waiting for responses: map[]
  I0111 01:23:29.059361 23 utils.go:360] reached 10.42.0.60 after 0/1 tries
  I0111 01:23:29.059429 23 networking.go:42] Breadth first check of 10.42.3.87 on host 172.31.29.145...
  I0111 01:23:29.066752 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.149:9080/dial?request=hostname&protocol=http&host=10.42.3.87&port=8083&tries=1'] Namespace:pod-network-test-3509 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:23:29.066963 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:23:29.067232 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3509/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.149%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.87%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 01:23:29.125676 23 utils.go:356] Waiting for responses: map[]
  I0111 01:23:29.126323 23 utils.go:360] reached 10.42.3.87 after 0/1 tries
  I0111 01:23:29.126351 23 networking.go:53] Going to retry 0 out of 4 pods....
  I0111 01:23:29.126605 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3509" for this suite. @ 01/11/25 01:23:29.137
• [16.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/11/25 01:23:29.152
  I0111 01:23:29.152218 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:23:29.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:29.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:29.195
  STEP: Creating configMap with name projected-configmap-test-volume-map-531d5c2e-4b03-4036-bd68-2a438d4a63c4 @ 01/11/25 01:23:29.199
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:23:29.214
  E0111 01:23:29.690282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:30.690561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:31.691473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:32.691664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:23:33.27
  I0111 01:23:33.278933 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-projected-configmaps-00b51659-edd9-4bf9-9a58-e8ca8a2f7793 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:23:33.301
  I0111 01:23:33.343904 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-844" for this suite. @ 01/11/25 01:23:33.35
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/11/25 01:23:33.372
  I0111 01:23:33.372142 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subpath @ 01/11/25 01:23:33.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:33.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:33.446
  STEP: Setting up data @ 01/11/25 01:23:33.451
  STEP: Creating pod pod-subpath-test-downwardapi-wvpf @ 01/11/25 01:23:33.499
  STEP: Creating a pod to test atomic-volume-subpath @ 01/11/25 01:23:33.499
  E0111 01:23:33.692435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:34.692612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:35.693024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:36.693339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:37.693818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:38.694128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:39.694809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:40.694943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:41.695116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:42.695704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:43.695632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:44.695719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:45.695906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:46.696187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:47.696293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:48.696859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:49.697138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:50.697394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:51.697943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:52.698102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:53.699090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:54.699283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:55.700247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:56.700481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:23:57.62
  I0111 01:23:57.624388 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-subpath-test-downwardapi-wvpf container test-container-subpath-downwardapi-wvpf: <nil>
  STEP: delete the pod @ 01/11/25 01:23:57.634
  STEP: Deleting pod pod-subpath-test-downwardapi-wvpf @ 01/11/25 01:23:57.689
  I0111 01:23:57.689638 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-wvpf" in namespace "subpath-4513"
  I0111 01:23:57.699029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 01:23:57.700985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "subpath-4513" for this suite. @ 01/11/25 01:23:57.703
• [24.343 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/11/25 01:23:57.716
  I0111 01:23:57.716303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:23:57.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:23:57.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:23:57.766
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:23:57.77
  E0111 01:23:58.701248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:23:59.701547      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:00.701588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:01.701693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:24:01.831
  I0111 01:24:01.845359 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-6e2ab793-4f0c-44d1-aecc-769bf486c5a5 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:24:01.916
  I0111 01:24:01.956092 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-420" for this suite. @ 01/11/25 01:24:01.974
• [4.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 01/11/25 01:24:02.026
  I0111 01:24:02.026465 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-selectable-fields @ 01/11/25 01:24:02.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:02.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:02.234
  STEP: Setting up server cert @ 01/11/25 01:24:02.288
  E0111 01:24:02.702445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/11/25 01:24:03.175
  STEP: Deploying the custom resource conversion webhook pod @ 01/11/25 01:24:03.212
  STEP: Wait for the deployment to be ready @ 01/11/25 01:24:03.276
  I0111 01:24:03.312826 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0111 01:24:03.703219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:04.703400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:24:05.325
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:24:05.351
  E0111 01:24:05.704338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:06.352681 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 01/11/25 01:24:06.363
  I0111 01:24:06.363526 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:24:06.704945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 01/11/25 01:24:06.892
  E0111 01:24:07.705437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:08.705381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 01/11/25 01:24:08.974
  STEP: Registering informers with field selectors @ 01/11/25 01:24:08.984
  STEP: Creating custom resources @ 01/11/25 01:24:08.984
  STEP: Listing v2 custom resources with field selector host=host1 @ 01/11/25 01:24:09.036
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 01/11/25 01:24:09.041
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 01/11/25 01:24:09.044
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 01/11/25 01:24:09.051
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 01/11/25 01:24:09.053
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 01/11/25 01:24:09.059
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 01/11/25 01:24:09.059
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 01/11/25 01:24:09.059
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 01/11/25 01:24:09.059
  STEP: Deleting one custom resources to ensure that deletions are observed @ 01/11/25 01:24:09.059
  STEP: Updating one custom resources to ensure that deletions are observed @ 01/11/25 01:24:09.105
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 01/11/25 01:24:09.133
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 01/11/25 01:24:09.137
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 01/11/25 01:24:09.14
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 01/11/25 01:24:09.146
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 01/11/25 01:24:09.146
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 01/11/25 01:24:09.146
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 01/11/25 01:24:09.146
  E0111 01:24:09.706135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:09.808539 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-7962" for this suite. @ 01/11/25 01:24:09.823
• [7.840 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/11/25 01:24:09.866
  I0111 01:24:09.866831 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:24:09.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:09.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:09.924
  STEP: creating a Pod with a static label @ 01/11/25 01:24:09.931
  STEP: watching for Pod to be ready @ 01/11/25 01:24:09.948
  I0111 01:24:09.951505 23 pods.go:945] observed Pod pod-test in namespace pods-5108 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0111 01:24:09.963864 23 pods.go:945] observed Pod pod-test in namespace pods-5108 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  }]
  I0111 01:24:10.007348 23 pods.go:945] observed Pod pod-test in namespace pods-5108 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  }]
  E0111 01:24:10.708081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:11.528854 23 pods.go:948] Found Pod pod-test in namespace pods-5108 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 01:24:09 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/11/25 01:24:11.643
  STEP: getting the Pod and ensuring that it's patched @ 01/11/25 01:24:11.668
  STEP: replacing the Pod's status Ready condition to False @ 01/11/25 01:24:11.68
  E0111 01:24:11.708754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/11/25 01:24:11.721
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/11/25 01:24:11.721
  STEP: watching for the Pod to be deleted @ 01/11/25 01:24:11.748
  I0111 01:24:11.751539 23 pods.go:1058] observed event type MODIFIED
  E0111 01:24:12.708821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:12.894007 23 pods.go:1058] observed event type MODIFIED
  I0111 01:24:13.552298 23 pods.go:1058] observed event type MODIFIED
  I0111 01:24:13.687010 23 pods.go:1058] observed event type MODIFIED
  E0111 01:24:13.709547      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:14.533351 23 pods.go:1058] observed event type MODIFIED
  I0111 01:24:14.548303 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5108" for this suite. @ 01/11/25 01:24:14.558
• [4.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/11/25 01:24:14.584
  I0111 01:24:14.584618 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:24:14.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:14.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:14.661
  STEP: creating the pod @ 01/11/25 01:24:14.669
  STEP: submitting the pod to kubernetes @ 01/11/25 01:24:14.669
  E0111 01:24:14.710169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:15.710225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/11/25 01:24:16.708
  E0111 01:24:16.711639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 01/11/25 01:24:16.711
  I0111 01:24:17.240523 23 pod_client.go:173] Successfully updated pod "pod-update-f4a60b3a-4a25-42f3-ae3a-a8a3ceb43432"
  STEP: verifying the updated pod is in kubernetes @ 01/11/25 01:24:17.244
  I0111 01:24:17.251954 23 pods.go:391] Pod update OK
  I0111 01:24:17.252340 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-897" for this suite. @ 01/11/25 01:24:17.271
• [2.718 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/11/25 01:24:17.302
  I0111 01:24:17.302759 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-runtime @ 01/11/25 01:24:17.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:17.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:17.383
  STEP: create the container @ 01/11/25 01:24:17.386
  W0111 01:24:17.406777      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/11/25 01:24:17.406
  E0111 01:24:17.711904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:18.712892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:19.713113      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/11/25 01:24:20.451
  STEP: the container should be terminated @ 01/11/25 01:24:20.457
  STEP: the termination message should be set @ 01/11/25 01:24:20.458
  I0111 01:24:20.458063 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/11/25 01:24:20.458
  I0111 01:24:20.496405 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3156" for this suite. @ 01/11/25 01:24:20.5
• [3.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/11/25 01:24:20.524
  I0111 01:24:20.524733 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:24:20.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:20.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:20.599
  STEP: Creating configMap with name configmap-test-upd-90890a7d-46f4-4c71-9b19-2e5dea80ab2e @ 01/11/25 01:24:20.613
  STEP: Creating the pod @ 01/11/25 01:24:20.623
  E0111 01:24:20.714384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:21.716960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 01/11/25 01:24:22.667
  STEP: Waiting for pod with binary data @ 01/11/25 01:24:22.676
  I0111 01:24:22.693849 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1288" for this suite. @ 01/11/25 01:24:22.706
  E0111 01:24:22.717946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [2.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/11/25 01:24:22.721
  I0111 01:24:22.721687 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 01:24:22.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:22.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:22.773
  STEP: Creating simple DaemonSet "daemon-set" @ 01/11/25 01:24:22.843
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 01:24:22.86
  I0111 01:24:22.963330 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:24:22.963369 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:24:23.718048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:23.882512 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:24:23.882674 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:24:24.718240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:24.874843 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 01:24:24.874958 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:24:25.718350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:25.890193 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 01:24:25.890334 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/11/25 01:24:25.894
  I0111 01:24:25.990778 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 01:24:25.990946 23 fixtures.go:131] Node ip-172-31-22-167.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:24:26.718527      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:26.961884 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 01:24:26.961929 23 fixtures.go:131] Node ip-172-31-22-167.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:24:27.718656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:27.940708 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 01:24:27.941070 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 01:24:27.952
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8955, will wait for the garbage collector to delete the pods @ 01/11/25 01:24:27.952
  I0111 01:24:28.040595 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 27.246268ms
  I0111 01:24:28.241326 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.730494ms
  E0111 01:24:28.719498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:29.653670 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:24:29.654024 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 01:24:29.659372 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29759"},"items":null}

  I0111 01:24:29.664778 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29759"},"items":null}

  I0111 01:24:29.686042 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8955" for this suite. @ 01/11/25 01:24:29.691
• [6.982 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/11/25 01:24:29.704
  I0111 01:24:29.704403 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:24:29.706
  E0111 01:24:29.720338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:29.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:29.797
  E0111 01:24:30.720422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:31.721183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:32.721331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:33.721470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:34.721593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:35.721730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:36.722107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:37.722699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:38.723234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:39.724392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:40.724524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:41.725254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:42.725347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:43.725464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:44.725829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:45.726278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:46.727190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/11/25 01:24:46.818
  E0111 01:24:47.727327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:48.727751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:49.728318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:50.728956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:51.729637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 01:24:51.822
  STEP: Ensuring resource quota status is calculated @ 01/11/25 01:24:51.84
  E0111 01:24:52.730415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:53.730542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/11/25 01:24:53.844
  STEP: Ensuring resource quota status captures configMap creation @ 01/11/25 01:24:53.876
  E0111 01:24:54.730744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:55.730888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/11/25 01:24:55.881
  STEP: Ensuring resource quota status released usage @ 01/11/25 01:24:55.895
  E0111 01:24:56.731597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:57.731724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:24:57.899353 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5095" for this suite. @ 01/11/25 01:24:57.906
• [28.219 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/11/25 01:24:57.923
  I0111 01:24:57.923102 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubelet-test @ 01/11/25 01:24:57.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:57.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:57.97
  I0111 01:24:58.055639 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4055" for this suite. @ 01/11/25 01:24:58.061
• [0.182 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/11/25 01:24:58.105
  I0111 01:24:58.105108 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/11/25 01:24:58.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:24:58.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:24:58.201
  STEP: create the container to handle the HTTPGet hook request. @ 01/11/25 01:24:58.215
  E0111 01:24:58.732281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:24:59.732401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/11/25 01:25:00.272
  E0111 01:25:00.733073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:01.733862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 01/11/25 01:25:02.309
  E0111 01:25:02.734446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:03.735655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 01/11/25 01:25:04.342
  I0111 01:25:04.372038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4896" for this suite. @ 01/11/25 01:25:04.387
• [6.311 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 01/11/25 01:25:04.417
  I0111 01:25:04.417569 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:25:04.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:04.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:04.565
  STEP: Starting the proxy @ 01/11/25 01:25:04.585
  I0111 01:25:04.586091 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-6728 proxy --unix-socket=/tmp/kubectl-proxy-unix1449259865/test'
  STEP: retrieving proxy /api/ output @ 01/11/25 01:25:04.685
  I0111 01:25:04.686342 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6728" for this suite. @ 01/11/25 01:25:04.694
• [0.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/11/25 01:25:04.714
  I0111 01:25:04.714377 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/11/25 01:25:04.715
  E0111 01:25:04.735823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:04.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:04.761
  I0111 01:25:04.765746 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:25:05.736675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:06.737528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:07.737692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:08.049552 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7933" for this suite. @ 01/11/25 01:25:08.054
• [3.367 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 01/11/25 01:25:08.081
  I0111 01:25:08.081470 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 01:25:08.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:08.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:08.127
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/11/25 01:25:08.139
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/11/25 01:25:08.139
  STEP: creating a pod to probe DNS @ 01/11/25 01:25:08.139
  STEP: submitting the pod to kubernetes @ 01/11/25 01:25:08.139
  E0111 01:25:08.737851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:09.738291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:10.738432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:11.738551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:12.739339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:13.739574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:14.740566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:15.740824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:16.741565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:17.741612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 01:25:18.215
  STEP: looking for the results for each expected name from probers @ 01/11/25 01:25:18.221
  I0111 01:25:18.250193 23 dns_common.go:546] DNS probes using dns-7679/dns-test-3998a629-b745-4ee8-be9f-d58923c84fa5 succeeded

  STEP: deleting the pod @ 01/11/25 01:25:18.25
  I0111 01:25:18.292054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7679" for this suite. @ 01/11/25 01:25:18.305
• [10.249 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/11/25 01:25:18.334
  I0111 01:25:18.334782 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/11/25 01:25:18.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:18.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:18.393
  I0111 01:25:18.396276 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:25:18.742289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:19.742612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:20.743110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:21.493977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-853" for this suite. @ 01/11/25 01:25:21.498
• [3.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/11/25 01:25:21.516
  I0111 01:25:21.516112 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:25:21.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:21.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:21.567
  STEP: creating a replication controller @ 01/11/25 01:25:21.576
  I0111 01:25:21.576944 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 create -f -'
  E0111 01:25:21.743806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:22.173176 23 builder.go:146] stderr: ""
  I0111 01:25:22.173217 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/11/25 01:25:22.173
  I0111 01:25:22.173307 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 01:25:22.283275 23 builder.go:146] stderr: ""
  I0111 01:25:22.283316 23 builder.go:147] stdout: "update-demo-nautilus-dc52m update-demo-nautilus-vrpzj "
  I0111 01:25:22.283370 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-dc52m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 01:25:22.351825 23 builder.go:146] stderr: ""
  I0111 01:25:22.351863 23 builder.go:147] stdout: ""
  I0111 01:25:22.351874 23 kubectl.go:2499] update-demo-nautilus-dc52m is created but not running
  E0111 01:25:22.744283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:23.744426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:24.744532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:25.744767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:26.745614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:27.352257 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 01:25:27.503513 23 builder.go:146] stderr: ""
  I0111 01:25:27.503674 23 builder.go:147] stdout: "update-demo-nautilus-dc52m update-demo-nautilus-vrpzj "
  I0111 01:25:27.503730 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-dc52m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 01:25:27.606454 23 builder.go:146] stderr: ""
  I0111 01:25:27.606531 23 builder.go:147] stdout: "true"
  I0111 01:25:27.606585 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-dc52m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 01:25:27.677125 23 builder.go:146] stderr: ""
  I0111 01:25:27.677297 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 01:25:27.677314 23 kubectl.go:2390] validating pod update-demo-nautilus-dc52m
  I0111 01:25:27.694011 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 01:25:27.694093 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 01:25:27.694112 23 kubectl.go:2517] update-demo-nautilus-dc52m is verified up and running
  I0111 01:25:27.694164 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-vrpzj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0111 01:25:27.747199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:27.761083 23 builder.go:146] stderr: ""
  I0111 01:25:27.761150 23 builder.go:147] stdout: ""
  I0111 01:25:27.761161 23 kubectl.go:2499] update-demo-nautilus-vrpzj is created but not running
  E0111 01:25:28.748231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:29.749826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:30.747932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:31.748026      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:32.748226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:32.761283 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 01:25:32.842295 23 builder.go:146] stderr: ""
  I0111 01:25:32.842366 23 builder.go:147] stdout: "update-demo-nautilus-dc52m update-demo-nautilus-vrpzj "
  I0111 01:25:32.842459 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-dc52m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 01:25:32.908666 23 builder.go:146] stderr: ""
  I0111 01:25:32.908718 23 builder.go:147] stdout: "true"
  I0111 01:25:32.908773 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-dc52m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 01:25:32.989986 23 builder.go:146] stderr: ""
  I0111 01:25:32.990117 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 01:25:32.990136 23 kubectl.go:2390] validating pod update-demo-nautilus-dc52m
  I0111 01:25:32.994266 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 01:25:32.994348 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 01:25:32.994364 23 kubectl.go:2517] update-demo-nautilus-dc52m is verified up and running
  I0111 01:25:32.994420 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-vrpzj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 01:25:33.105100 23 builder.go:146] stderr: ""
  I0111 01:25:33.105164 23 builder.go:147] stdout: "true"
  I0111 01:25:33.105220 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods update-demo-nautilus-vrpzj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 01:25:33.170936 23 builder.go:146] stderr: ""
  I0111 01:25:33.170976 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 01:25:33.170993 23 kubectl.go:2390] validating pod update-demo-nautilus-vrpzj
  I0111 01:25:33.178330 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 01:25:33.178391 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 01:25:33.178407 23 kubectl.go:2517] update-demo-nautilus-vrpzj is verified up and running
  STEP: using delete to clean up resources @ 01/11/25 01:25:33.178
  I0111 01:25:33.178592 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 delete --grace-period=0 --force -f -'
  I0111 01:25:33.272660 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 01:25:33.272728 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0111 01:25:33.272774 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get rc,svc -l name=update-demo --no-headers'
  I0111 01:25:33.410021 23 builder.go:146] stderr: "No resources found in kubectl-3509 namespace.\n"
  I0111 01:25:33.410077 23 builder.go:147] stdout: ""
  I0111 01:25:33.410164 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-3509 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0111 01:25:33.512379 23 builder.go:146] stderr: ""
  I0111 01:25:33.512431 23 builder.go:147] stdout: ""
  I0111 01:25:33.512664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3509" for this suite. @ 01/11/25 01:25:33.517
• [12.025 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/11/25 01:25:33.541
  I0111 01:25:33.541604 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 01:25:33.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:33.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:33.593
  STEP: Creating simple DaemonSet "daemon-set" @ 01/11/25 01:25:33.652
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 01:25:33.669
  E0111 01:25:33.749189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:33.762103 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:25:33.762142 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 01:25:34.676955 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:25:34.676994 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:25:34.750072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:35.680116 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 01:25:35.680155 23 fixtures.go:131] Node ip-172-31-22-167.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:25:35.750770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:36.677271 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 01:25:36.677313 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 01/11/25 01:25:36.679
  I0111 01:25:36.682770 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/11/25 01:25:36.682
  I0111 01:25:36.700037 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/11/25 01:25:36.7
  I0111 01:25:36.702273 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0111 01:25:36.702407 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.702732 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.702925 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.703238 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.703460 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.703497 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8916 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0111 01:25:36.703519 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/11/25 01:25:36.703
  STEP: watching for the daemon set status to be patched @ 01/11/25 01:25:36.713
  I0111 01:25:36.715544 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0111 01:25:36.715731 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.715923 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.716024 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.716287 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.716382 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.716412 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8916 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0111 01:25:36.716506 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0111 01:25:36.716590 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8916 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0111 01:25:36.716626 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 01:25:36.729
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8916, will wait for the garbage collector to delete the pods @ 01/11/25 01:25:36.729
  E0111 01:25:36.751237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:36.799241 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.65854ms
  I0111 01:25:36.900299 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.05568ms
  E0111 01:25:37.752108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:38.108867 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:25:38.108921 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 01:25:38.113256 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30310"},"items":null}

  I0111 01:25:38.117529 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30310"},"items":null}

  I0111 01:25:38.162243 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8916" for this suite. @ 01/11/25 01:25:38.166
• [4.646 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/11/25 01:25:38.187
  I0111 01:25:38.188007 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 01:25:38.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:38.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:38.236
  I0111 01:25:38.245675 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:25:38.751740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:39.752078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/11/25 01:25:40.385
  I0111 01:25:40.385833 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-8241 --namespace=crd-publish-openapi-8241 create -f -'
  I0111 01:25:40.513724 23 builder.go:146] stderr: ""
  I0111 01:25:40.513775 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0111 01:25:40.514061 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-8241 --namespace=crd-publish-openapi-8241 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
  I0111 01:25:40.664758 23 builder.go:146] stderr: ""
  I0111 01:25:40.665293 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0111 01:25:40.665556 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-8241 --namespace=crd-publish-openapi-8241 apply -f -'
  E0111 01:25:40.753092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:40.773595 23 builder.go:146] stderr: ""
  I0111 01:25:40.773637 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0111 01:25:40.773747 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-8241 --namespace=crd-publish-openapi-8241 delete e2e-test-crd-publish-openapi-1409-crds test-cr'
  I0111 01:25:40.903119 23 builder.go:146] stderr: ""
  I0111 01:25:40.903157 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1409-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/11/25 01:25:40.903
  I0111 01:25:40.903388 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-8241 explain e2e-test-crd-publish-openapi-1409-crds'
  I0111 01:25:41.004141 23 builder.go:146] stderr: ""
  I0111 01:25:41.004264 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1409-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0111 01:25:41.753781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:42.636495 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8241" for this suite. @ 01/11/25 01:25:42.645
• [4.473 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/11/25 01:25:42.661
  I0111 01:25:42.661539 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:25:42.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:42.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:42.693
  STEP: creating service in namespace services-3206 @ 01/11/25 01:25:42.734
  STEP: creating service affinity-nodeport-transition in namespace services-3206 @ 01/11/25 01:25:42.734
  E0111 01:25:42.756190      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3206 @ 01/11/25 01:25:42.769
  I0111 01:25:42.797894      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3206, replica count: 3
  E0111 01:25:43.755009      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:44.755728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:45.756544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:45.852513      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:25:45.861495 23 resource.go:361] Creating new exec pod
  E0111 01:25:46.756487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:47.756569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:48.757237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:48.892306 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0111 01:25:49.060014 23 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition (10.43.101.82) 80 port [tcp/http] succeeded!\n"
  I0111 01:25:49.060066 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:25:49.060153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.101.82 80'
  I0111 01:25:49.185837 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.101.82 80\n+ echo hostName\nConnection to 10.43.101.82 80 port [tcp/http] succeeded!\n"
  I0111 01:25:49.185884 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:25:49.186094 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.167 31483'
  I0111 01:25:49.302214 23 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 172.31.22.167 31483\nConnection to 172.31.22.167 31483 port [tcp/*] succeeded!\n"
  I0111 01:25:49.302278 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:25:49.302767 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.145 31483'
  I0111 01:25:49.442205 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.145 31483\nConnection to 172.31.29.145 31483 port [tcp/*] succeeded!\n"
  I0111 01:25:49.442278 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:25:49.465445 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.105:31483/ ; done'
  E0111 01:25:49.757916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:49.760760 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n"
  I0111 01:25:49.760951 23 builder.go:147] stdout: "\naffinity-nodeport-transition-t9dgs\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-t9dgs\naffinity-nodeport-transition-t9dgs\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-t9dgs\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-zcj2r\naffinity-nodeport-transition-t9dgs"
  I0111 01:25:49.760989 23 service.go:242] Received response from host: affinity-nodeport-transition-t9dgs
  I0111 01:25:49.761045 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761059 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:49.761076 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761088 23 service.go:242] Received response from host: affinity-nodeport-transition-t9dgs
  I0111 01:25:49.761645 23 service.go:242] Received response from host: affinity-nodeport-transition-t9dgs
  I0111 01:25:49.761662 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761672 23 service.go:242] Received response from host: affinity-nodeport-transition-t9dgs
  I0111 01:25:49.761724 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:49.761739 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761749 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761759 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761809 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:49.761822 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:49.761842 23 service.go:242] Received response from host: affinity-nodeport-transition-zcj2r
  I0111 01:25:49.761854 23 service.go:242] Received response from host: affinity-nodeport-transition-t9dgs
  I0111 01:25:49.774363 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3206 exec execpod-affinityf96f5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.105:31483/ ; done'
  I0111 01:25:50.095659 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.105:31483/\n"
  I0111 01:25:50.095832 23 builder.go:147] stdout: "\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd\naffinity-nodeport-transition-jr4cd"
  I0111 01:25:50.095864 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095885 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095904 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095921 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095938 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095955 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.095966 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.096332 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098045 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098440 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098633 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098656 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098747 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098836 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098919 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.098937 23 service.go:242] Received response from host: affinity-nodeport-transition-jr4cd
  I0111 01:25:50.099270 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3206, will wait for the garbage collector to delete the pods @ 01/11/25 01:25:50.129
  I0111 01:25:50.191389 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.845627ms
  I0111 01:25:50.292237 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.847604ms
  E0111 01:25:50.758537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:51.758638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:52.759258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:25:53.356071 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3206" for this suite. @ 01/11/25 01:25:53.359
• [10.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/11/25 01:25:53.368
  I0111 01:25:53.369005 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-watch @ 01/11/25 01:25:53.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:25:53.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:25:53.473
  I0111 01:25:53.481342 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:25:53.760429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:54.760730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:55.761465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 01/11/25 01:25:56.054
  I0111 01:25:56.072634 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:25:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:25:56Z]] name:name1 resourceVersion:30537 uid:13156a09-e0c1-4bff-8407-f0771bb7a433] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:25:56.763265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:57.763267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:58.763373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:25:59.763639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:00.763841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:01.763888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:02.764362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:03.764542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:04.764769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:05.765812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 01/11/25 01:26:06.073
  I0111 01:26:06.088033 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:26:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:26:06Z]] name:name2 resourceVersion:30601 uid:568958ec-d064-4ae5-894a-5ff159867ff6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:26:06.767123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:07.767167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:08.767411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:09.768465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:10.768767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:11.769733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:12.770701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:13.770808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:14.771020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:15.771300      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 01/11/25 01:26:16.088
  I0111 01:26:16.103292 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:25:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:26:16Z]] name:name1 resourceVersion:30636 uid:13156a09-e0c1-4bff-8407-f0771bb7a433] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:26:16.772923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:17.773182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:18.773350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:19.773534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:20.773686      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:21.774100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:22.774299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:23.774348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:24.774454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:25.774804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 01/11/25 01:26:26.104
  I0111 01:26:26.114905 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:26:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:26:26Z]] name:name2 resourceVersion:30672 uid:568958ec-d064-4ae5-894a-5ff159867ff6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:26:26.776013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:27.776059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:28.776506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:29.776833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:30.776983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:31.777574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:32.777702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:33.777901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:34.778156      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:35.778346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 01/11/25 01:26:36.116
  I0111 01:26:36.126970 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:25:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:26:16Z]] name:name1 resourceVersion:30708 uid:13156a09-e0c1-4bff-8407-f0771bb7a433] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:26:36.778993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:37.779476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:38.779539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:39.779775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:40.780410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:41.780614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:42.780877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:43.780827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:44.780931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:45.781087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 01/11/25 01:26:46.127
  I0111 01:26:46.137484 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-11T01:26:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-11T01:26:26Z]] name:name2 resourceVersion:30743 uid:568958ec-d064-4ae5-894a-5ff159867ff6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0111 01:26:46.781919      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:47.782044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:48.782319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:49.782434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:50.782580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:51.782730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:52.782839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:53.783172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:54.783252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:55.784282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:26:56.666193 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-736" for this suite. @ 01/11/25 01:26:56.671
• [63.319 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/11/25 01:26:56.688
  I0111 01:26:56.688639 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:26:56.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:26:56.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:26:56.752
  E0111 01:26:56.785295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:57.785965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:26:58.786277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 01/11/25 01:26:58.833
  I0111 01:26:58.833891 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3624 pod-service-account-76825e31-f925-4ed4-b242-998d284b0b1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/11/25 01:26:58.985
  I0111 01:26:58.985091 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3624 pod-service-account-76825e31-f925-4ed4-b242-998d284b0b1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/11/25 01:26:59.124
  I0111 01:26:59.124176 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3624 pod-service-account-76825e31-f925-4ed4-b242-998d284b0b1d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0111 01:26:59.338288 23 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-3624"
  I0111 01:26:59.340902 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3624" for this suite. @ 01/11/25 01:26:59.344
• [2.667 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/11/25 01:26:59.356
  I0111 01:26:59.356468 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 01:26:59.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:26:59.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:26:59.404
  STEP: Creating pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758 @ 01/11/25 01:26:59.407
  E0111 01:26:59.786430      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:00.786554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 01:27:01.46
  I0111 01:27:01.467137 23 container_probe.go:1749] Initial restart count of pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 is 0
  I0111 01:27:01.478258 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:01.786623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:02.787523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:03.485416 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:03.787930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:04.788094      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:05.488890 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:05.788169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:06.788301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:07.491992 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:07.789589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:08.790072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:09.495134 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:09.790578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:10.790696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:11.500221 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:11.792234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:12.791983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:13.504342 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:13.792801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:14.793044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:15.507785 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:15.793112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:16.793248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:17.512167 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:17.793831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:18.794096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:19.514931 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:19.794252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:20.795918      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:21.518274 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:21.795560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:22.796434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:23.523425 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:23.796807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:24.797239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:25.528003 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:25.797318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:26.797640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:27.531496 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:27.799592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:28.800233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:29.536290 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:29.800867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:30.800840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:31.544584 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:31.801349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:32.801816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:33.548321 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:33.802784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:34.802797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:35.552849 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:35.803796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:36.803918      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:37.556377 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:37.804758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:38.804967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:39.563917 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:39.805090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:40.805546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:41.567649 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:41.808092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:42.808487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:43.570789 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:43.809295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:44.810577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:45.576398 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:45.812953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:46.813265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:47.580090 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:47.813388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:48.814773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:49.583424 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  E0111 01:27:49.813712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:50.813923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:51.591471 23 container_probe.go:1759] Get pod busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 in namespace container-probe-9758
  I0111 01:27:51.591515 23 container_probe.go:1763] Restart count of pod container-probe-9758/busybox-f9fb7192-196b-4064-87cc-79fa4a8f0437 is now 1 (50.124332664s elapsed)
  STEP: deleting the pod @ 01/11/25 01:27:51.591
  I0111 01:27:51.624395 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9758" for this suite. @ 01/11/25 01:27:51.632
• [52.293 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/11/25 01:27:51.65
  I0111 01:27:51.650385 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:27:51.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:27:51.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:27:51.707
  STEP: Creating the pod @ 01/11/25 01:27:51.716
  E0111 01:27:51.815452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:52.815699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:53.815797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:54.288209 23 pod_client.go:173] Successfully updated pod "annotationupdate538828a6-0401-46cf-a4a9-865bafbb7905"
  E0111 01:27:54.816751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:55.816986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:27:56.298982 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1502" for this suite. @ 01/11/25 01:27:56.302
• [4.661 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/11/25 01:27:56.311
  I0111 01:27:56.311547 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename ingress @ 01/11/25 01:27:56.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:27:56.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:27:56.347
  STEP: getting /apis @ 01/11/25 01:27:56.35
  STEP: getting /apis/networking.k8s.io @ 01/11/25 01:27:56.354
  STEP: getting /apis/networking.k8s.iov1 @ 01/11/25 01:27:56.355
  STEP: creating @ 01/11/25 01:27:56.356
  STEP: getting @ 01/11/25 01:27:56.409
  STEP: listing @ 01/11/25 01:27:56.412
  STEP: watching @ 01/11/25 01:27:56.415
  I0111 01:27:56.415240 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/11/25 01:27:56.416
  STEP: cluster-wide watching @ 01/11/25 01:27:56.424
  I0111 01:27:56.424187 23 ingress.go:198] starting watch
  STEP: patching @ 01/11/25 01:27:56.426
  STEP: updating @ 01/11/25 01:27:56.44
  I0111 01:27:56.457238 23 ingress.go:221] waiting for watch events with expected annotations
  I0111 01:27:56.457293 23 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I0111 01:27:56.457501 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/11/25 01:27:56.457
  STEP: updating /status @ 01/11/25 01:27:56.467
  STEP: get /status @ 01/11/25 01:27:56.538
  STEP: deleting @ 01/11/25 01:27:56.542
  STEP: deleting a collection @ 01/11/25 01:27:56.567
  I0111 01:27:56.587567 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8320" for this suite. @ 01/11/25 01:27:56.591
• [0.289 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/11/25 01:27:56.6
  I0111 01:27:56.600512 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:27:56.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:27:56.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:27:56.66
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/11/25 01:27:56.669
  E0111 01:27:56.817813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:57.817940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:58.818417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:27:59.818636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:28:00.732
  I0111 01:28:00.737577 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-9fad1df7-20fd-44e2-aa1c-eb7b503c289e container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:28:00.746
  I0111 01:28:00.777063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2459" for this suite. @ 01/11/25 01:28:00.78
• [4.196 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/11/25 01:28:00.796
  I0111 01:28:00.796992 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:28:00.797
  E0111 01:28:00.819325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:28:00.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:28:00.827
  STEP: Creating the pod @ 01/11/25 01:28:00.83
  E0111 01:28:01.820518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:02.820324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:03.404477 23 pod_client.go:173] Successfully updated pod "annotationupdate7f1f7d1f-ff63-4f89-9101-5b01a882eb79"
  E0111 01:28:03.821273      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:04.821302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:05.420207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1258" for this suite. @ 01/11/25 01:28:05.425
• [4.638 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/11/25 01:28:05.435
  I0111 01:28:05.435205 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 01:28:05.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:28:05.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:28:05.478
  STEP: create the rc @ 01/11/25 01:28:05.524
  W0111 01:28:05.538450      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0111 01:28:05.822000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:06.822405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:07.825036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:08.831418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:09.832166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:10.833633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/11/25 01:28:11.659
  E0111 01:28:11.836476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 01/11/25 01:28:11.943
  E0111 01:28:12.836613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:13.836936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:14.837131      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:15.837227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:16.837256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/11/25 01:28:17.111
  E0111 01:28:17.837678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:18.837847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:19.837898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:20.838026      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:21.838059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:22.838360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:23.838706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:24.839372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:25.840367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:26.841207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:27.841437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:28.841544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:29.841672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:30.841950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:31.842080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:32.842149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:33.842390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:34.842674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:35.842969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:36.843541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:37.844351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:38.844482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:39.845094      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:40.846359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:41.846969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:42.847386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:43.847836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:44.848027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:45.847903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:46.848091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/11/25 01:28:47.125
  W0111 01:28:47.131887      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 01:28:47.131932 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 01:28:47.132038 23 delete.go:95] Deleting pod "simpletest.rc-2c2mj" in namespace "gc-8063"
  I0111 01:28:47.164429 23 delete.go:95] Deleting pod "simpletest.rc-2gg8w" in namespace "gc-8063"
  I0111 01:28:47.240117 23 delete.go:95] Deleting pod "simpletest.rc-2tqdn" in namespace "gc-8063"
  I0111 01:28:47.272965 23 delete.go:95] Deleting pod "simpletest.rc-2zbh7" in namespace "gc-8063"
  I0111 01:28:47.341438 23 delete.go:95] Deleting pod "simpletest.rc-45kbb" in namespace "gc-8063"
  I0111 01:28:47.401218 23 delete.go:95] Deleting pod "simpletest.rc-56x6c" in namespace "gc-8063"
  I0111 01:28:47.460132 23 delete.go:95] Deleting pod "simpletest.rc-59rsb" in namespace "gc-8063"
  I0111 01:28:47.499295 23 delete.go:95] Deleting pod "simpletest.rc-5b5vt" in namespace "gc-8063"
  I0111 01:28:47.551755 23 delete.go:95] Deleting pod "simpletest.rc-5tsfd" in namespace "gc-8063"
  I0111 01:28:47.593049 23 delete.go:95] Deleting pod "simpletest.rc-66lrv" in namespace "gc-8063"
  I0111 01:28:47.638531 23 delete.go:95] Deleting pod "simpletest.rc-68mvs" in namespace "gc-8063"
  I0111 01:28:47.693281 23 delete.go:95] Deleting pod "simpletest.rc-7hv6m" in namespace "gc-8063"
  I0111 01:28:47.766321 23 delete.go:95] Deleting pod "simpletest.rc-7ljxt" in namespace "gc-8063"
  I0111 01:28:47.803430 23 delete.go:95] Deleting pod "simpletest.rc-7sf6c" in namespace "gc-8063"
  E0111 01:28:47.848920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:47.873008 23 delete.go:95] Deleting pod "simpletest.rc-89cwv" in namespace "gc-8063"
  I0111 01:28:47.904056 23 delete.go:95] Deleting pod "simpletest.rc-8mjcm" in namespace "gc-8063"
  I0111 01:28:47.971711 23 delete.go:95] Deleting pod "simpletest.rc-8zmv2" in namespace "gc-8063"
  I0111 01:28:48.024775 23 delete.go:95] Deleting pod "simpletest.rc-965jr" in namespace "gc-8063"
  I0111 01:28:48.083633 23 delete.go:95] Deleting pod "simpletest.rc-984w7" in namespace "gc-8063"
  I0111 01:28:48.172836 23 delete.go:95] Deleting pod "simpletest.rc-9db7h" in namespace "gc-8063"
  I0111 01:28:48.223717 23 delete.go:95] Deleting pod "simpletest.rc-9dqp8" in namespace "gc-8063"
  I0111 01:28:48.272335 23 delete.go:95] Deleting pod "simpletest.rc-9hzrl" in namespace "gc-8063"
  I0111 01:28:48.335689 23 delete.go:95] Deleting pod "simpletest.rc-9mc4d" in namespace "gc-8063"
  I0111 01:28:48.420547 23 delete.go:95] Deleting pod "simpletest.rc-9ncsn" in namespace "gc-8063"
  I0111 01:28:48.477743 23 delete.go:95] Deleting pod "simpletest.rc-b2f6f" in namespace "gc-8063"
  I0111 01:28:48.545045 23 delete.go:95] Deleting pod "simpletest.rc-blzgm" in namespace "gc-8063"
  I0111 01:28:48.642598 23 delete.go:95] Deleting pod "simpletest.rc-bm7m7" in namespace "gc-8063"
  I0111 01:28:48.717550 23 delete.go:95] Deleting pod "simpletest.rc-bmsxc" in namespace "gc-8063"
  I0111 01:28:48.756754 23 delete.go:95] Deleting pod "simpletest.rc-bwpfm" in namespace "gc-8063"
  E0111 01:28:48.849917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:48.865786 23 delete.go:95] Deleting pod "simpletest.rc-c5bt7" in namespace "gc-8063"
  I0111 01:28:48.950126 23 delete.go:95] Deleting pod "simpletest.rc-cn7gq" in namespace "gc-8063"
  I0111 01:28:49.037880 23 delete.go:95] Deleting pod "simpletest.rc-cqvfs" in namespace "gc-8063"
  I0111 01:28:49.112333 23 delete.go:95] Deleting pod "simpletest.rc-cw6p5" in namespace "gc-8063"
  I0111 01:28:49.239572 23 delete.go:95] Deleting pod "simpletest.rc-cx5jm" in namespace "gc-8063"
  I0111 01:28:49.290073 23 delete.go:95] Deleting pod "simpletest.rc-d7jfb" in namespace "gc-8063"
  I0111 01:28:49.332823 23 delete.go:95] Deleting pod "simpletest.rc-djlz6" in namespace "gc-8063"
  I0111 01:28:49.431483 23 delete.go:95] Deleting pod "simpletest.rc-ds8n8" in namespace "gc-8063"
  I0111 01:28:49.498292 23 delete.go:95] Deleting pod "simpletest.rc-fkv4j" in namespace "gc-8063"
  I0111 01:28:49.581114 23 delete.go:95] Deleting pod "simpletest.rc-fltmv" in namespace "gc-8063"
  I0111 01:28:49.651816 23 delete.go:95] Deleting pod "simpletest.rc-ggvxl" in namespace "gc-8063"
  I0111 01:28:49.700807 23 delete.go:95] Deleting pod "simpletest.rc-gnnc8" in namespace "gc-8063"
  I0111 01:28:49.763199 23 delete.go:95] Deleting pod "simpletest.rc-h6q4g" in namespace "gc-8063"
  E0111 01:28:49.849891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:49.899658 23 delete.go:95] Deleting pod "simpletest.rc-h7r9r" in namespace "gc-8063"
  I0111 01:28:50.032594 23 delete.go:95] Deleting pod "simpletest.rc-hcpq9" in namespace "gc-8063"
  I0111 01:28:50.153466 23 delete.go:95] Deleting pod "simpletest.rc-hwsvf" in namespace "gc-8063"
  I0111 01:28:50.202551 23 delete.go:95] Deleting pod "simpletest.rc-jb8zp" in namespace "gc-8063"
  I0111 01:28:50.301563 23 delete.go:95] Deleting pod "simpletest.rc-jfmkv" in namespace "gc-8063"
  I0111 01:28:50.381857 23 delete.go:95] Deleting pod "simpletest.rc-jgwkw" in namespace "gc-8063"
  I0111 01:28:50.521357 23 delete.go:95] Deleting pod "simpletest.rc-jkfpk" in namespace "gc-8063"
  I0111 01:28:50.692835 23 delete.go:95] Deleting pod "simpletest.rc-jnzw4" in namespace "gc-8063"
  E0111 01:28:50.850650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:50.873475 23 delete.go:95] Deleting pod "simpletest.rc-jqnnj" in namespace "gc-8063"
  I0111 01:28:50.981671 23 delete.go:95] Deleting pod "simpletest.rc-jtjbr" in namespace "gc-8063"
  I0111 01:28:51.116379 23 delete.go:95] Deleting pod "simpletest.rc-jzb4q" in namespace "gc-8063"
  I0111 01:28:51.162716 23 delete.go:95] Deleting pod "simpletest.rc-k5x57" in namespace "gc-8063"
  I0111 01:28:51.194571 23 delete.go:95] Deleting pod "simpletest.rc-kmmzj" in namespace "gc-8063"
  I0111 01:28:51.230643 23 delete.go:95] Deleting pod "simpletest.rc-kq2v9" in namespace "gc-8063"
  I0111 01:28:51.342435 23 delete.go:95] Deleting pod "simpletest.rc-ld58s" in namespace "gc-8063"
  I0111 01:28:51.401701 23 delete.go:95] Deleting pod "simpletest.rc-ld8lw" in namespace "gc-8063"
  I0111 01:28:51.480022 23 delete.go:95] Deleting pod "simpletest.rc-lhfp7" in namespace "gc-8063"
  I0111 01:28:51.620726 23 delete.go:95] Deleting pod "simpletest.rc-lq7dd" in namespace "gc-8063"
  I0111 01:28:51.688296 23 delete.go:95] Deleting pod "simpletest.rc-lr8x4" in namespace "gc-8063"
  I0111 01:28:51.733631 23 delete.go:95] Deleting pod "simpletest.rc-lv5gt" in namespace "gc-8063"
  I0111 01:28:51.773185 23 delete.go:95] Deleting pod "simpletest.rc-lwflk" in namespace "gc-8063"
  I0111 01:28:51.823912 23 delete.go:95] Deleting pod "simpletest.rc-lzqgj" in namespace "gc-8063"
  E0111 01:28:51.851344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:51.895942 23 delete.go:95] Deleting pod "simpletest.rc-m6nfr" in namespace "gc-8063"
  I0111 01:28:52.149648 23 delete.go:95] Deleting pod "simpletest.rc-mxnrn" in namespace "gc-8063"
  I0111 01:28:52.529944 23 delete.go:95] Deleting pod "simpletest.rc-n6vht" in namespace "gc-8063"
  I0111 01:28:52.845880 23 delete.go:95] Deleting pod "simpletest.rc-n7q7q" in namespace "gc-8063"
  E0111 01:28:52.851581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:53.014580 23 delete.go:95] Deleting pod "simpletest.rc-nvp44" in namespace "gc-8063"
  I0111 01:28:53.077998 23 delete.go:95] Deleting pod "simpletest.rc-nwshp" in namespace "gc-8063"
  I0111 01:28:53.244426 23 delete.go:95] Deleting pod "simpletest.rc-p69cv" in namespace "gc-8063"
  I0111 01:28:53.359595 23 delete.go:95] Deleting pod "simpletest.rc-p6h5j" in namespace "gc-8063"
  I0111 01:28:53.438789 23 delete.go:95] Deleting pod "simpletest.rc-ptzlf" in namespace "gc-8063"
  I0111 01:28:53.478158 23 delete.go:95] Deleting pod "simpletest.rc-q8jzc" in namespace "gc-8063"
  I0111 01:28:53.577887 23 delete.go:95] Deleting pod "simpletest.rc-qlbg5" in namespace "gc-8063"
  I0111 01:28:53.660277 23 delete.go:95] Deleting pod "simpletest.rc-r6zqh" in namespace "gc-8063"
  I0111 01:28:53.753902 23 delete.go:95] Deleting pod "simpletest.rc-r7cj9" in namespace "gc-8063"
  I0111 01:28:53.829719 23 delete.go:95] Deleting pod "simpletest.rc-rpbtk" in namespace "gc-8063"
  E0111 01:28:53.852180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:53.888025 23 delete.go:95] Deleting pod "simpletest.rc-rr48k" in namespace "gc-8063"
  I0111 01:28:53.952626 23 delete.go:95] Deleting pod "simpletest.rc-rtg2m" in namespace "gc-8063"
  I0111 01:28:54.020489 23 delete.go:95] Deleting pod "simpletest.rc-rtvs5" in namespace "gc-8063"
  I0111 01:28:54.110391 23 delete.go:95] Deleting pod "simpletest.rc-shlxl" in namespace "gc-8063"
  I0111 01:28:54.161225 23 delete.go:95] Deleting pod "simpletest.rc-ssc4v" in namespace "gc-8063"
  I0111 01:28:54.202501 23 delete.go:95] Deleting pod "simpletest.rc-ssdcn" in namespace "gc-8063"
  I0111 01:28:54.243183 23 delete.go:95] Deleting pod "simpletest.rc-t7ggz" in namespace "gc-8063"
  I0111 01:28:54.272607 23 delete.go:95] Deleting pod "simpletest.rc-t94nv" in namespace "gc-8063"
  I0111 01:28:54.348531 23 delete.go:95] Deleting pod "simpletest.rc-tskcl" in namespace "gc-8063"
  I0111 01:28:54.381848 23 delete.go:95] Deleting pod "simpletest.rc-vdq69" in namespace "gc-8063"
  I0111 01:28:54.475028 23 delete.go:95] Deleting pod "simpletest.rc-vnw8n" in namespace "gc-8063"
  I0111 01:28:54.511174 23 delete.go:95] Deleting pod "simpletest.rc-vpgls" in namespace "gc-8063"
  I0111 01:28:54.585908 23 delete.go:95] Deleting pod "simpletest.rc-wclp9" in namespace "gc-8063"
  I0111 01:28:54.628552 23 delete.go:95] Deleting pod "simpletest.rc-wj6fh" in namespace "gc-8063"
  I0111 01:28:54.690201 23 delete.go:95] Deleting pod "simpletest.rc-x8m5d" in namespace "gc-8063"
  I0111 01:28:54.729527 23 delete.go:95] Deleting pod "simpletest.rc-x949p" in namespace "gc-8063"
  I0111 01:28:54.807618 23 delete.go:95] Deleting pod "simpletest.rc-xcg9w" in namespace "gc-8063"
  E0111 01:28:54.853005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:28:54.914548 23 delete.go:95] Deleting pod "simpletest.rc-xg9s7" in namespace "gc-8063"
  I0111 01:28:54.997252 23 delete.go:95] Deleting pod "simpletest.rc-xgl44" in namespace "gc-8063"
  I0111 01:28:55.088484 23 delete.go:95] Deleting pod "simpletest.rc-xh4km" in namespace "gc-8063"
  I0111 01:28:55.148091 23 delete.go:95] Deleting pod "simpletest.rc-xzcpq" in namespace "gc-8063"
  I0111 01:28:55.184666 23 delete.go:95] Deleting pod "simpletest.rc-zlbqt" in namespace "gc-8063"
  I0111 01:28:55.254047 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8063" for this suite. @ 01/11/25 01:28:55.27
• [49.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/11/25 01:28:55.337
  I0111 01:28:55.337320 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:28:55.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:28:55.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:28:55.414
  STEP: Creating a pod to test downward api env vars @ 01/11/25 01:28:55.431
  E0111 01:28:55.860249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:56.858873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:57.859536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:28:58.859653      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:28:59.519
  I0111 01:28:59.521460 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-aa12b31b-156f-415a-a110-3a3dd98f2396 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:28:59.526
  I0111 01:28:59.559635 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4674" for this suite. @ 01/11/25 01:28:59.564
• [4.256 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/11/25 01:28:59.595
  I0111 01:28:59.599259 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 01:28:59.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:28:59.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:28:59.671
  STEP: set up a multi version CRD @ 01/11/25 01:28:59.675
  I0111 01:28:59.675768 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:28:59.860344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:00.861512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:01.862407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:02.862859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:03.863030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:04.866883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 01/11/25 01:29:04.947
  STEP: check the unserved version gets removed @ 01/11/25 01:29:04.986
  E0111 01:29:05.866426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 01/11/25 01:29:06.379
  E0111 01:29:06.867744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:07.868724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:08.869224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:09.783681 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1113" for this suite. @ 01/11/25 01:29:09.792
• [10.235 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/11/25 01:29:09.833
  I0111 01:29:09.833418 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:29:09.842
  E0111 01:29:09.869545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:29:09.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:29:09.937
  STEP: creating service multi-endpoint-test in namespace services-794 @ 01/11/25 01:29:09.943
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-794 to expose endpoints map[] @ 01/11/25 01:29:09.988
  I0111 01:29:10.014803 23 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0111 01:29:10.869954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:11.030266 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-794 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-794 @ 01/11/25 01:29:11.03
  E0111 01:29:11.870591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:12.870734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-794 to expose endpoints map[pod1:[100]] @ 01/11/25 01:29:13.064
  I0111 01:29:13.074408 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-794 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-794 @ 01/11/25 01:29:13.074
  E0111 01:29:13.871200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:14.872278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-794 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/11/25 01:29:15.121
  I0111 01:29:15.137276 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-794 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/11/25 01:29:15.137
  I0111 01:29:15.137491 23 resource.go:361] Creating new exec pod
  E0111 01:29:15.872050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:16.872186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:17.872301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:18.177000 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-794 exec execpodzqdcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0111 01:29:18.327035 23 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.43.158.51) 80 port [tcp/http] succeeded!\n"
  I0111 01:29:18.327235 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:29:18.327458 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-794 exec execpodzqdcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.158.51 80'
  I0111 01:29:18.470827 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.158.51 80\nConnection to 10.43.158.51 80 port [tcp/http] succeeded!\n"
  I0111 01:29:18.470892 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:29:18.471585 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-794 exec execpodzqdcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0111 01:29:18.664460 23 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test (10.43.158.51) 81 port [tcp/*] succeeded!\n"
  I0111 01:29:18.664509 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:29:18.664588 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-794 exec execpodzqdcx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.158.51 81'
  I0111 01:29:18.787002 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.43.158.51 81\nConnection to 10.43.158.51 81 port [tcp/*] succeeded!\n"
  I0111 01:29:18.787099 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-794 @ 01/11/25 01:29:18.787
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-794 to expose endpoints map[pod2:[101]] @ 01/11/25 01:29:18.836
  I0111 01:29:18.852695 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-794 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-794 @ 01/11/25 01:29:18.852
  E0111 01:29:18.872559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-794 to expose endpoints map[] @ 01/11/25 01:29:18.942
  I0111 01:29:19.011331 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-794 exposes endpoints map[]
  I0111 01:29:19.097923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-794" for this suite. @ 01/11/25 01:29:19.123
• [9.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 01/11/25 01:29:19.154
  I0111 01:29:19.154420 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 01:29:19.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:29:19.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:29:19.247
  STEP: Creating a job @ 01/11/25 01:29:19.267
  STEP: Ensuring active pods == parallelism @ 01/11/25 01:29:19.29
  E0111 01:29:19.873082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:20.873257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 01/11/25 01:29:21.305
  I0111 01:29:21.850575 23 pod_client.go:173] Successfully updated pod "adopt-release-7mgl9"
  STEP: Checking that the Job readopts the Pod @ 01/11/25 01:29:21.85
  E0111 01:29:21.874156      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:22.874404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 01/11/25 01:29:23.86
  E0111 01:29:23.875273      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:24.402442 23 pod_client.go:173] Successfully updated pod "adopt-release-7mgl9"
  STEP: Checking that the Job releases the Pod @ 01/11/25 01:29:24.402
  E0111 01:29:24.876349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:25.876484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:26.411552 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8999" for this suite. @ 01/11/25 01:29:26.416
• [7.282 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/11/25 01:29:26.436
  I0111 01:29:26.436881 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:29:26.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:29:26.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:29:26.496
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:29:26.5
  E0111 01:29:26.877351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:27.877596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:28.878123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:29.878423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:29:30.55
  I0111 01:29:30.554210 23 output.go:207] Trying to get logs from node ip-172-31-16-105.us-east-2.compute.internal pod downwardapi-volume-b5399284-c5ab-4e48-a475-5bf437f618ca container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:29:30.592
  I0111 01:29:30.646861 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6172" for this suite. @ 01/11/25 01:29:30.652
• [4.235 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/11/25 01:29:30.671
  I0111 01:29:30.671875 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:29:30.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:29:30.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:29:30.746
  STEP: Creating resourceQuota "e2e-rq-status-tk9n6" @ 01/11/25 01:29:30.781
  I0111 01:29:30.824910 23 resource_quota.go:1102] Resource quota "e2e-rq-status-tk9n6" reports spec: hard cpu limit of 500m
  I0111 01:29:30.824954 23 resource_quota.go:1104] Resource quota "e2e-rq-status-tk9n6" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-tk9n6" /status @ 01/11/25 01:29:30.824
  STEP: Confirm /status for "e2e-rq-status-tk9n6" resourceQuota via watch @ 01/11/25 01:29:30.853
  I0111 01:29:30.855985 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-tk9n6" in namespace "resourcequota-1216" with hard status: v1.ResourceList(nil)
  I0111 01:29:30.856292 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-tk9n6" in namespace "resourcequota-1216" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0111 01:29:30.856327 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-tk9n6" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/11/25 01:29:30.863
  E0111 01:29:30.878811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:30.883173 23 resource_quota.go:1152] Resource quota "e2e-rq-status-tk9n6" reports spec: hard cpu limit of 1
  I0111 01:29:30.883225 23 resource_quota.go:1153] Resource quota "e2e-rq-status-tk9n6" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-tk9n6" /status @ 01/11/25 01:29:30.883
  STEP: Confirm /status for "e2e-rq-status-tk9n6" resourceQuota via watch @ 01/11/25 01:29:30.905
  I0111 01:29:30.907308 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-tk9n6" in namespace "resourcequota-1216" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0111 01:29:30.907364 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-tk9n6" in namespace "resourcequota-1216" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0111 01:29:30.907384 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-tk9n6" /status was patched
  STEP: Get "e2e-rq-status-tk9n6" /status @ 01/11/25 01:29:30.907
  I0111 01:29:30.911733 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-tk9n6" reports status: hard cpu of 1
  I0111 01:29:30.911779 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-tk9n6" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-tk9n6" /status before checking Spec is unchanged @ 01/11/25 01:29:30.915
  I0111 01:29:30.927238 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-tk9n6" reports status: hard cpu of 2
  I0111 01:29:30.927358 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-tk9n6" reports status: hard memory of 2Gi
  I0111 01:29:30.928948 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-tk9n6" in namespace "resourcequota-1216" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0111 01:29:30.934413 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a767e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:31.879235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:32.879331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:33.880297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:34.880488      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:35.881183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:35.942401 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:36.881679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:37.882682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:38.883034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:39.884104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:40.884247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:40.932469 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d00f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:41.885253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:42.885582      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:43.885785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:44.886109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:45.886850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:45.933302 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:46.887551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:47.887539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:48.888295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:49.888490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:50.888668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:50.933370 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d05b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:51.889451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:52.889662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:53.889927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:54.890184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:55.890423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:29:55.945632 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76e70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76eb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a76f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:29:56.890772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:57.891047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:58.891508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:29:59.891475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:00.892386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:00.932719 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:01.892529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:02.892635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:03.892754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:04.892871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:05.893011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:05.936213 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0ba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:06.893278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:07.893503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:08.893623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:09.893803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:10.893920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:10.940893 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d0ff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:11.894860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:12.894998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:13.895444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:14.896350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:15.896625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:15.934049 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a77350), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a773b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a773f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:16.897164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:17.898108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:18.898222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:19.898963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:20.899257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:20.936727 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d17b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:21.899319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:22.900339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:23.900747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:24.900783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:25.901236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:25.932812 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-tk9n6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tk9n6", GenerateName:"", Namespace:"resourcequota-1216", SelfLink:"", UID:"28dff5b3-966f-40d2-814c-b71f3bfeb056", ResourceVersion:"33408", Generation:0, CreationTimestamp:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tk9n6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1c98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 11, 1, 29, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007d1cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0111 01:30:26.901943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:27.902151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:28.902507      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:29.902835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:30.902994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:30.938069 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-tk9n6" Spec was unchanged and /status reset
  I0111 01:30:30.938212 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1216" for this suite. @ 01/11/25 01:30:30.942
• [60.300 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/11/25 01:30:30.972
  I0111 01:30:30.972321 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 01:30:30.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:30:31.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:30:31.027
  I0111 01:30:31.030994 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:30:31.904040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:32.904123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0111 01:30:33.609975      23 warnings.go:70] unknown field "alpha"
  W0111 01:30:33.610003      23 warnings.go:70] unknown field "beta"
  W0111 01:30:33.610011      23 warnings.go:70] unknown field "delta"
  W0111 01:30:33.610017      23 warnings.go:70] unknown field "epsilon"
  W0111 01:30:33.610023      23 warnings.go:70] unknown field "gamma"
  E0111 01:30:33.904721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:30:34.175226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5057" for this suite. @ 01/11/25 01:30:34.18
• [3.226 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/11/25 01:30:34.198
  I0111 01:30:34.198231 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 01:30:34.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:30:34.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:30:34.253
  STEP: Creating secret with name s-test-opt-del-8ff23715-8d28-4cad-97c3-2b62cc0fd6d9 @ 01/11/25 01:30:34.288
  STEP: Creating secret with name s-test-opt-upd-b25c0204-35ab-43d3-985c-82d235048c0d @ 01/11/25 01:30:34.305
  STEP: Creating the pod @ 01/11/25 01:30:34.315
  E0111 01:30:34.905032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:35.905241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-8ff23715-8d28-4cad-97c3-2b62cc0fd6d9 @ 01/11/25 01:30:36.397
  STEP: Updating secret s-test-opt-upd-b25c0204-35ab-43d3-985c-82d235048c0d @ 01/11/25 01:30:36.414
  STEP: Creating secret with name s-test-opt-create-96888ba1-41cc-4350-926e-11660ec1c1d6 @ 01/11/25 01:30:36.428
  STEP: waiting to observe update in volume @ 01/11/25 01:30:36.453
  E0111 01:30:36.905555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:37.905731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:38.906059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:39.906188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:40.906223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:41.907369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:42.907329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:43.907479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:44.907854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:45.908350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:46.908481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:47.908610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:48.909570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:49.909673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:50.910248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:51.910388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:52.911263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:53.911567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:54.911632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:55.912331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:56.913125      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:57.913660      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:58.914154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:30:59.914392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:00.915211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:01.916397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:02.916382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:03.917139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:04.916594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:05.916799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:06.917742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:07.918044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:08.918179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:09.918393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:10.920100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:11.920316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:12.920436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:13.920545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:14.922147      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:15.922423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:16.923213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:17.923402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:18.924143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:19.929825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:20.929993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:21.930121      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:22.931048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:23.931234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:24.932045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:25.935025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:26.933182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:27.933502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:28.934175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:29.934466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:30.934955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:31.935211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:32.936018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:33.936280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:34.936885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:35.937022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:36.937918      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:37.938163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:38.938800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:39.938808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:40.938927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:41.939271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:42.939920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:43.940076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:44.940855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:45.940944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:46.941261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:47.941566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:48.942348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:49.943305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:50.944294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:51.947085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:52.947072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:53.946728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:54.946758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:55.946891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:31:56.947314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:31:56.957239 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6551" for this suite. @ 01/11/25 01:31:56.975
• [82.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/11/25 01:31:57.021
  I0111 01:31:57.021187 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 01:31:57.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:31:57.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:31:57.083
  STEP: Creating simple DaemonSet "daemon-set" @ 01/11/25 01:31:57.207
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 01:31:57.225
  I0111 01:31:57.271353 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 01:31:57.271477 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:31:57.950985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:31:58.251151 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0111 01:31:58.251312 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:31:58.952081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:31:59.243873 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 01:31:59.244066 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/11/25 01:31:59.249
  STEP: DeleteCollection of the DaemonSets @ 01/11/25 01:31:59.253
  STEP: Verify that ReplicaSets have been deleted @ 01/11/25 01:31:59.275
  I0111 01:31:59.320563 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34066"},"items":null}

  I0111 01:31:59.344679 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34067"},"items":[{"metadata":{"name":"daemon-set-9tc7p","generateName":"daemon-set-","namespace":"daemonsets-3046","uid":"c552f625-efaa-4fd0-9ee2-033db211485e","resourceVersion":"34057","creationTimestamp":"2025-01-11T01:31:57Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1af4f41d-e255-4a74-8e1e-836a6e8e0373","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1af4f41d-e255-4a74-8e1e-836a6e8e0373\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.88\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4p6z4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4p6z4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-7.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-7.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"}],"hostIP":"172.31.22.7","hostIPs":[{"ip":"172.31.22.7"}],"podIP":"10.42.0.88","podIPs":[{"ip":"10.42.0.88"}],"startTime":"2025-01-11T01:31:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-11T01:31:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://abe95ace0f1831db4b4bf6ffae977e412cbf9d987b6e6b41df3a56268982cc39","started":true,"volumeMounts":[{"name":"kube-api-access-4p6z4","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-c4jxx","generateName":"daemon-set-","namespace":"daemonsets-3046","uid":"09735022-d694-4225-9b1e-63a0db9cb9bc","resourceVersion":"34060","creationTimestamp":"2025-01-11T01:31:57Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1af4f41d-e255-4a74-8e1e-836a6e8e0373","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1af4f41d-e255-4a74-8e1e-836a6e8e0373\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k4lmq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k4lmq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-29-145.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-29-145.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"}],"hostIP":"172.31.29.145","hostIPs":[{"ip":"172.31.29.145"}],"podIP":"10.42.3.124","podIPs":[{"ip":"10.42.3.124"}],"startTime":"2025-01-11T01:31:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-11T01:31:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8c05b9174423fed4daf0e0949d72fe50c89feac96efce8e886631f7353a3c8c5","started":true,"volumeMounts":[{"name":"kube-api-access-k4lmq","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-d689b","generateName":"daemon-set-","namespace":"daemonsets-3046","uid":"a329df26-32fc-441f-8d8a-f0646e21dfd3","resourceVersion":"34049","creationTimestamp":"2025-01-11T01:31:57Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1af4f41d-e255-4a74-8e1e-836a6e8e0373","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1af4f41d-e255-4a74-8e1e-836a6e8e0373\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.198\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qz69l","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qz69l","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-167.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-167.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"}],"hostIP":"172.31.22.167","hostIPs":[{"ip":"172.31.22.167"}],"podIP":"10.42.1.198","podIPs":[{"ip":"10.42.1.198"}],"startTime":"2025-01-11T01:31:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-11T01:31:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cd6f0d9939a23a6d6d82c2ded9a750d2ff0993068a5bc52f28bd7897c1133b75","started":true,"volumeMounts":[{"name":"kube-api-access-qz69l","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-v2td9","generateName":"daemon-set-","namespace":"daemonsets-3046","uid":"5cc07aac-a427-4b76-b543-5543984b0f1a","resourceVersion":"34066","creationTimestamp":"2025-01-11T01:31:57Z","deletionTimestamp":"2025-01-11T01:32:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1af4f41d-e255-4a74-8e1e-836a6e8e0373","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1af4f41d-e255-4a74-8e1e-836a6e8e0373\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-01-11T01:31:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.83\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vlkdq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vlkdq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-16-105.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-16-105.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-11T01:31:57Z"}],"hostIP":"172.31.16.105","hostIPs":[{"ip":"172.31.16.105"}],"podIP":"10.42.2.83","podIPs":[{"ip":"10.42.2.83"}],"startTime":"2025-01-11T01:31:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-11T01:31:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f4ef3451949b88be31bc7ab8649b92f7ae7e88c46bbea72bab9124130380a42a","started":true,"volumeMounts":[{"name":"kube-api-access-vlkdq","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0111 01:31:59.384026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3046" for this suite. @ 01/11/25 01:31:59.463
• [2.453 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/11/25 01:31:59.474
  I0111 01:31:59.474864 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:31:59.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:31:59.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:31:59.576
  STEP: creating the pod @ 01/11/25 01:31:59.58
  STEP: setting up watch @ 01/11/25 01:31:59.58
  STEP: submitting the pod to kubernetes @ 01/11/25 01:31:59.685
  STEP: verifying the pod is in kubernetes @ 01/11/25 01:31:59.725
  STEP: verifying pod creation was observed @ 01/11/25 01:31:59.778
  E0111 01:31:59.954428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:00.954901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/11/25 01:32:01.829
  STEP: verifying pod deletion was observed @ 01/11/25 01:32:01.872
  E0111 01:32:01.956419      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:02.956428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:03.956801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:32:04.795274 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9533" for this suite. @ 01/11/25 01:32:04.816
• [5.378 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/11/25 01:32:04.87
  I0111 01:32:04.871018 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename discovery @ 01/11/25 01:32:04.877
  E0111 01:32:04.957174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:32:04.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:32:04.964
  STEP: Setting up server cert @ 01/11/25 01:32:04.968
  E0111 01:32:05.957510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:32:05.989039 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0111 01:32:05.990166 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0111 01:32:05.990203 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0111 01:32:05.990215 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0111 01:32:05.990358 23 discovery.go:139] Checking APIGroup: apps
  I0111 01:32:05.991594 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0111 01:32:05.991626 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0111 01:32:05.991638 23 discovery.go:154] apps/v1 matches apps/v1
  I0111 01:32:05.991717 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0111 01:32:05.992896 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0111 01:32:05.992930 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0111 01:32:05.992958 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0111 01:32:05.993075 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0111 01:32:05.994226 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0111 01:32:05.994255 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0111 01:32:05.994267 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0111 01:32:05.994319 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0111 01:32:05.995971 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0111 01:32:05.996095 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0111 01:32:05.996142 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0111 01:32:05.996156 23 discovery.go:139] Checking APIGroup: autoscaling
  I0111 01:32:05.997698 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0111 01:32:05.998154 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0111 01:32:05.998170 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0111 01:32:05.998181 23 discovery.go:139] Checking APIGroup: batch
  I0111 01:32:05.999438 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0111 01:32:05.999466 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0111 01:32:05.999477 23 discovery.go:154] batch/v1 matches batch/v1
  I0111 01:32:05.999487 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0111 01:32:06.000550 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0111 01:32:06.000577 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0111 01:32:06.000588 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0111 01:32:06.000601 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0111 01:32:06.001770 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0111 01:32:06.001797 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0111 01:32:06.001827 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0111 01:32:06.001930 23 discovery.go:139] Checking APIGroup: policy
  I0111 01:32:06.003155 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0111 01:32:06.003199 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0111 01:32:06.003228 23 discovery.go:154] policy/v1 matches policy/v1
  I0111 01:32:06.003241 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0111 01:32:06.004301 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0111 01:32:06.004340 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0111 01:32:06.004352 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0111 01:32:06.004363 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0111 01:32:06.005318 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0111 01:32:06.005345 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0111 01:32:06.005357 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0111 01:32:06.005386 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0111 01:32:06.007051 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0111 01:32:06.007122 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0111 01:32:06.007134 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0111 01:32:06.007157 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0111 01:32:06.008141 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0111 01:32:06.008170 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0111 01:32:06.008182 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0111 01:32:06.008192 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0111 01:32:06.009434 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0111 01:32:06.009464 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0111 01:32:06.009518 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0111 01:32:06.009558 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0111 01:32:06.010985 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0111 01:32:06.011249 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0111 01:32:06.011272 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0111 01:32:06.011287 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0111 01:32:06.012494 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0111 01:32:06.012522 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0111 01:32:06.012533 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0111 01:32:06.012545 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0111 01:32:06.013714 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0111 01:32:06.013756 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0111 01:32:06.013824 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0111 01:32:06.013837 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0111 01:32:06.014853 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0111 01:32:06.014891 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0111 01:32:06.014904 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0111 01:32:06.014915 23 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0111 01:32:06.015778 23 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0111 01:32:06.015806 23 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0111 01:32:06.015835 23 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0111 01:32:06.015847 23 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0111 01:32:06.016983 23 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0111 01:32:06.017165 23 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0111 01:32:06.017191 23 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0111 01:32:06.017204 23 discovery.go:139] Checking APIGroup: traefik.containo.us
  I0111 01:32:06.018086 23 discovery.go:147] PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  I0111 01:32:06.018112 23 discovery.go:148] Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  I0111 01:32:06.018123 23 discovery.go:154] traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  I0111 01:32:06.018135 23 discovery.go:139] Checking APIGroup: traefik.io
  I0111 01:32:06.019181 23 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0111 01:32:06.019209 23 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0111 01:32:06.019220 23 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0111 01:32:06.019231 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0111 01:32:06.020070 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0111 01:32:06.020095 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0111 01:32:06.020108 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0111 01:32:06.020213 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5280" for this suite. @ 01/11/25 01:32:06.024
• [1.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/11/25 01:32:06.035
  I0111 01:32:06.035841 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 01:32:06.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:32:06.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:32:06.104
  STEP: Creating secret with name secret-test-4700411f-eca9-427e-9b8e-c35357baf815 @ 01/11/25 01:32:06.108
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:32:06.119
  E0111 01:32:06.958319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:07.958768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:08.958851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:09.959109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:32:10.196
  I0111 01:32:10.201488 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-c826cc84-5121-4fb7-a551-4f3cde0497d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:32:10.209
  I0111 01:32:10.259245 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7315" for this suite. @ 01/11/25 01:32:10.264
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/11/25 01:32:10.283
  I0111 01:32:10.283343 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:32:10.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:32:10.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:32:10.375
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:32:10.38
  E0111 01:32:10.959788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:11.960082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:12.960044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:13.960200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:32:14.415
  I0111 01:32:14.422283 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-fcfe8076-6edd-4ea7-b1aa-87876291bd6a container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:32:14.438
  I0111 01:32:14.482871 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8540" for this suite. @ 01/11/25 01:32:14.488
• [4.233 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/11/25 01:32:14.516
  I0111 01:32:14.516578 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:32:14.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:32:14.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:32:14.589
  STEP: Creating configMap with name configmap-test-upd-d8a95295-9c88-433e-9557-8a5498e6c9e6 @ 01/11/25 01:32:14.601
  STEP: Creating the pod @ 01/11/25 01:32:14.62
  E0111 01:32:14.960595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:15.960706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-d8a95295-9c88-433e-9557-8a5498e6c9e6 @ 01/11/25 01:32:16.675
  STEP: waiting to observe update in volume @ 01/11/25 01:32:16.685
  E0111 01:32:16.961274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:17.962694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:18.963304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:19.964014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:20.967093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:21.967451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:22.968099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:23.968201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:24.968734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:25.969002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:26.970103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:27.969989      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:28.970757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:29.970893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:30.971203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:31.972147      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:32.972249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:33.972405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:34.973405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:35.974031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:36.974683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:37.975119      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:38.975781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:39.975867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:40.976856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:41.976986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:42.977656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:43.977797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:44.978209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:45.978596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:46.979358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:47.979418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:48.980073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:49.980217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:50.981602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:51.981795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:52.982663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:53.983329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:54.983324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:55.983435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:56.983988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:57.984087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:58.984257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:32:59.984411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:00.985501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:01.987892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:02.986795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:03.986898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:04.987215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:05.987250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:06.987868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:07.988302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:08.989359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:09.991666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:10.992142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:11.992242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:12.992830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:13.992928      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:14.993245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:15.993901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:16.994889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:17.995298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:18.996487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:20.000453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:21.000560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:22.000809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:23.001145      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:24.004235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:25.004389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:26.005090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:27.005136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:28.005604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:29.005803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:30.005963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:31.006368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:33:31.066567 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-322" for this suite. @ 01/11/25 01:33:31.078
• [76.578 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 01/11/25 01:33:31.094
  I0111 01:33:31.094951 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/11/25 01:33:31.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:31.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:31.211
  STEP: Setting up the test @ 01/11/25 01:33:31.221
  STEP: Creating hostNetwork=false pod @ 01/11/25 01:33:31.221
  E0111 01:33:32.006616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:33.006984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/11/25 01:33:33.272
  E0111 01:33:34.008282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:35.007888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/11/25 01:33:35.306
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/11/25 01:33:35.306
  I0111 01:33:35.306519 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.306560 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.306687 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0111 01:33:35.366930 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.367019 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.367073 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.367224 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0111 01:33:35.447651 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.447711 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.447725 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.447791 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0111 01:33:35.512234 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.512326 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.512348 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.512417 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0111 01:33:35.612255 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/11/25 01:33:35.612
  I0111 01:33:35.612418 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.612437 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.612498 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0111 01:33:35.680962 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.681061 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.681076 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.681141 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0111 01:33:35.723536 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/11/25 01:33:35.723
  I0111 01:33:35.723692 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.723709 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.723823 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0111 01:33:35.787197 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.787257 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.787272 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.787338 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0111 01:33:35.829920 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.830043 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.830077 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.830143 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0111 01:33:35.871757 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.871926 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:33:35.871947 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:33:35.872014 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0111 01:33:35.911521 23 exec_util.go:108] Exec stderr: ""
  I0111 01:33:35.912121 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7241" for this suite. @ 01/11/25 01:33:35.915
• [4.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/11/25 01:33:35.933
  I0111 01:33:35.933088 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename watch @ 01/11/25 01:33:35.933
  E0111 01:33:36.008287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:36.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:36.022
  STEP: creating a watch on configmaps @ 01/11/25 01:33:36.025
  STEP: creating a new configmap @ 01/11/25 01:33:36.03
  STEP: modifying the configmap once @ 01/11/25 01:33:36.044
  STEP: closing the watch once it receives two notifications @ 01/11/25 01:33:36.063
  I0111 01:33:36.063647 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9558  87dc8185-03ac-466f-b2ac-9aefedfcbda4 34601 0 2025-01-11 01:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-11 01:33:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:33:36.064156 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9558  87dc8185-03ac-466f-b2ac-9aefedfcbda4 34602 0 2025-01-11 01:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-11 01:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/11/25 01:33:36.064
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/11/25 01:33:36.077
  STEP: deleting the configmap @ 01/11/25 01:33:36.078
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/11/25 01:33:36.089
  I0111 01:33:36.090394 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9558  87dc8185-03ac-466f-b2ac-9aefedfcbda4 34603 0 2025-01-11 01:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-11 01:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:33:36.090652 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9558  87dc8185-03ac-466f-b2ac-9aefedfcbda4 34604 0 2025-01-11 01:33:36 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-11 01:33:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:33:36.090774 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9558" for this suite. @ 01/11/25 01:33:36.096
• [0.188 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/11/25 01:33:36.121
  I0111 01:33:36.121768 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-webhook @ 01/11/25 01:33:36.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:36.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:36.228
  STEP: Setting up server cert @ 01/11/25 01:33:36.231
  E0111 01:33:37.008564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/11/25 01:33:37.025
  STEP: Deploying the custom resource conversion webhook pod @ 01/11/25 01:33:37.045
  STEP: Wait for the deployment to be ready @ 01/11/25 01:33:37.093
  I0111 01:33:37.126150 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0111 01:33:38.009080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:39.009277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:33:39.138
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:33:39.165
  E0111 01:33:40.009364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:33:40.166519 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0111 01:33:40.175766 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:33:41.009521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:42.010438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/11/25 01:33:42.77
  STEP: Create a v2 custom resource @ 01/11/25 01:33:42.804
  STEP: List CRs in v1 @ 01/11/25 01:33:42.819
  STEP: List CRs in v2 @ 01/11/25 01:33:42.834
  E0111 01:33:43.011216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:33:43.558769 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6953" for this suite. @ 01/11/25 01:33:43.574
• [7.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/11/25 01:33:43.592
  I0111 01:33:43.592962 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:33:43.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:43.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:43.647
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/11/25 01:33:43.655
  E0111 01:33:44.011793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:45.012054      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:46.013068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:47.013402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:33:47.737
  I0111 01:33:47.744247 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-0041a3f6-e0d9-4d65-866b-4d00eeeb7809 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:33:47.751
  I0111 01:33:47.801976 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3196" for this suite. @ 01/11/25 01:33:47.814
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/11/25 01:33:47.841
  I0111 01:33:47.841348 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:33:47.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:47.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:47.887
  STEP: Creating a test namespace @ 01/11/25 01:33:47.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:47.993
  STEP: Creating a service in the namespace @ 01/11/25 01:33:47.998
  E0111 01:33:48.014121      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 01/11/25 01:33:48.037
  STEP: Waiting for the namespace to be removed. @ 01/11/25 01:33:48.068
  E0111 01:33:49.014271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:50.014506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:51.015177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:52.015282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:53.016310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:54.016462      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/11/25 01:33:54.072
  STEP: Verifying there is no service in the namespace @ 01/11/25 01:33:54.114
  I0111 01:33:54.119229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7549" for this suite. @ 01/11/25 01:33:54.124
  STEP: Destroying namespace "nsdeletetest-8023" for this suite. @ 01/11/25 01:33:54.134
  I0111 01:33:54.137774 23 framework.go:370] Namespace nsdeletetest-8023 was already deleted
  STEP: Destroying namespace "nsdeletetest-2148" for this suite. @ 01/11/25 01:33:54.137
• [6.325 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/11/25 01:33:54.166
  I0111 01:33:54.166781 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename endpointslice @ 01/11/25 01:33:54.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:54.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:54.217
  E0111 01:33:55.017515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:56.017734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:33:56.387544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7297" for this suite. @ 01/11/25 01:33:56.4
• [2.261 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/11/25 01:33:56.428
  I0111 01:33:56.428767 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:33:56.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:33:56.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:33:56.494
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:33:56.5
  E0111 01:33:57.018794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:58.018913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:33:59.018967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:00.021944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:34:00.552
  I0111 01:34:00.560378 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-9cbcd562-e51a-4fe7-8723-946e70bbf468 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:34:00.571
  I0111 01:34:00.607440 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3027" for this suite. @ 01/11/25 01:34:00.623
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/11/25 01:34:00.646
  I0111 01:34:00.646872 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:34:00.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:34:00.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:34:00.686
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/11/25 01:34:00.688
  E0111 01:34:01.022733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:02.022907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:03.022893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:04.023195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:34:04.752
  I0111 01:34:04.762536 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-85782fc8-c50b-457a-a9b1-39143eef8fcb container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:34:04.779
  I0111 01:34:04.809597 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2669" for this suite. @ 01/11/25 01:34:04.814
• [4.208 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/11/25 01:34:04.856
  I0111 01:34:04.856371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 01:34:04.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:34:04.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:34:04.89
  STEP: Creating pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428 @ 01/11/25 01:34:04.892
  E0111 01:34:05.023422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:06.023522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 01:34:06.942
  I0111 01:34:06.947313 23 container_probe.go:1749] Initial restart count of pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 is 0
  I0111 01:34:06.953584 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:07.024470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:08.024321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:08.958158 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:09.025247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:10.025402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:10.963876 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:11.026401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:12.026426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:12.972369 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:13.026945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:14.027412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:14.977734 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:15.027891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:16.028013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:16.984768 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:17.028438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:18.028478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:18.988509 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:19.028569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:20.028796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:20.992358 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:21.029807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:22.030452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:22.996735 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:23.031492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:24.032843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:25.007948 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:25.031682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:26.032338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:27.012416 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:27.032592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:28.032964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:29.016618 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:29.033718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:30.034067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:31.020200 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:31.034258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:32.034530      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:33.029379 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:33.035300      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:34.035450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:35.036451 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:35.036657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:36.036903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:37.037615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:37.044964 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:38.038091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:39.038438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:39.049206 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:40.039293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:41.039360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:41.054012 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:42.040289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:43.041336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:43.058916 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:44.042066      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:45.042256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:45.063805 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:46.042714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:47.042836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:47.070401 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:48.043218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:49.043359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:49.075282 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:50.044035      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:51.044336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:51.079214 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:52.044784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:53.045032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:53.085483 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:54.045515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:55.045742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:55.089457 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:56.046371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:57.046538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:57.093866 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:34:58.047155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:34:59.047215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:34:59.097988 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:00.047346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:01.047601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:01.102730 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:02.048049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:03.048310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:03.108195 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:04.048439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:05.049470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:05.113394 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:06.049584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:07.049778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:07.129544 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:08.050173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:09.050078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:09.134158 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:10.050363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:11.050651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:11.142579 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:12.050666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:13.050982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:13.150309 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:14.051265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:15.051419      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:15.155243 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:16.051544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:17.052580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:17.161127 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:18.052732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:19.052926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:19.168428 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:20.053031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:21.053343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:21.177237 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:22.054043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:23.054685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:23.181641 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:24.055240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:25.055238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:25.186848 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:26.055891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:27.056287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:27.192700 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:28.056558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:29.056705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:29.198359 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:30.056921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:31.057142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:31.203836 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:32.057889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:33.059416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:33.208945 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:34.059719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:35.060345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:35.213558 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:36.060555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:37.060650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:37.218312 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:38.061325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:39.061746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:39.223813 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:40.061964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:41.062021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:41.228182 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:42.062497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:43.062817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:43.237211 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:44.063223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:45.063271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:45.244130 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:46.063429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:47.065276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:47.251259 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:48.064655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:49.064881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:49.259549 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:50.064949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:51.065062      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:51.263710 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:52.065700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:53.066791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:53.267918 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:54.066957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:55.067044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:55.271994 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:56.067233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:57.068329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:57.275847 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:35:58.068959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:35:59.069085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:35:59.280140 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:00.069202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:01.069349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:01.284876 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:02.071457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:03.070828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:03.288000 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:04.071479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:05.072327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:05.300718 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:06.072446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:07.072924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:07.304876 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:08.072765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:09.072877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:09.309238 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:10.073097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:11.073956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:11.314460 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:12.075255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:13.075310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:13.319286 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:14.075416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:15.076295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:15.326231 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:16.076640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:17.077083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:17.332739 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:18.077066      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:19.077178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:19.341852 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:20.077394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:21.077910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:21.346031 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:22.078105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:23.078346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:23.349584 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:24.078466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:25.078811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:25.353505 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:26.079251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:27.080319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:27.357907 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:28.080470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:29.080642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:29.362748 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:30.081890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:31.082465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:31.371574 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:32.083327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:33.083575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:33.376198 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:34.084659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:35.084801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:35.380735 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:36.085762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:37.085937      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:37.386274 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:38.086376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:39.086554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:39.399345 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:40.087408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:41.087480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:41.414743 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:42.088302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:43.088791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:43.418893 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:44.089709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:45.090034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:45.424304 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:46.090267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:47.090487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:47.428270 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:48.091318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:49.091437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:49.433495 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:50.092317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:51.092499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:51.440178 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:52.093183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:53.093289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:53.444368 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:54.093416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:55.093835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:55.449873 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:56.094724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:57.097654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:57.454870 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:36:58.097874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:36:59.098108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:36:59.472537 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:00.098223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:01.098348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:01.484248 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:02.098863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:03.099179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:03.501357 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:04.099599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:05.100341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:05.510779 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:06.101133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:07.101690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:07.525001 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:08.102142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:09.102294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:09.535421 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:10.103089      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:11.103332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:11.546402 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:12.104738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:13.104432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:13.553957 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:14.104627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:15.104970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:15.557854 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:16.105132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:17.105569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:17.567286 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:18.105465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:19.105579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:19.572718 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:20.105714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:21.106370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:21.577599 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:22.107278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:23.107439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:23.581820 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:24.108317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:25.108671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:25.590507 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:26.108845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:27.109202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:27.595527 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:28.109173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:29.109291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:29.601680 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:30.109481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:31.109640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:31.605883 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:32.110767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:33.111646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:33.610304 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:34.111872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:35.112305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:35.614288 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:36.113118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:37.113338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:37.620584 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:38.113972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:39.113932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:39.632734 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:40.114066      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:41.114326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:41.637229 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:42.114836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:43.115264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:43.647583 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:44.115879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:45.116361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:45.652078 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:46.116445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:47.116628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:47.656291 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:48.116979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:49.117507      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:49.664209 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:50.117681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:51.117943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:51.673054 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:52.118544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:53.119813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:53.681809 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:54.120323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:55.120444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:55.685924 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:56.121493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:57.121711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:57.690365 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:37:58.121789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:37:59.121978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:37:59.696858 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:38:00.122704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:01.123393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:01.704359 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:38:02.124261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:03.124403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:03.711020 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:38:04.125359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:05.125800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:05.715743 23 container_probe.go:1759] Get pod busybox-83811520-46bb-48ac-9381-d212ec1d7c10 in namespace container-probe-3428
  E0111 01:38:06.126383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:07.126607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/11/25 01:38:07.716
  I0111 01:38:07.771034 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3428" for this suite. @ 01/11/25 01:38:07.788
• [242.944 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/11/25 01:38:07.8
  I0111 01:38:07.800718 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:38:07.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:38:07.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:38:07.843
  STEP: Creating configMap configmap-5123/configmap-test-a069e502-791a-46f7-97a2-127888624420 @ 01/11/25 01:38:07.849
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:38:07.871
  E0111 01:38:08.127236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:09.127325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:10.128333      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:11.128510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:38:11.918
  I0111 01:38:11.921914 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-f0a88e76-bf4e-4125-966e-c68c6f9b59d8 container env-test: <nil>
  STEP: delete the pod @ 01/11/25 01:38:11.951
  I0111 01:38:11.986370 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5123" for this suite. @ 01/11/25 01:38:12.007
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/11/25 01:38:12.054
  I0111 01:38:12.054215 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:38:12.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:38:12.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:38:12.118
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:38:12.121
  E0111 01:38:12.128723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:13.128887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:14.129163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:15.129583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:16.129697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:38:16.161
  I0111 01:38:16.165135 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-a21afbfa-9560-4b15-8cd0-2037f144dda5 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:38:16.172
  I0111 01:38:16.233728 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7052" for this suite. @ 01/11/25 01:38:16.238
• [4.213 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 01/11/25 01:38:16.269
  I0111 01:38:16.269654 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:38:16.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:38:16.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:38:16.323
  I0111 01:38:16.375312 23 service_accounts.go:647] created pod
  E0111 01:38:17.130102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:18.130132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:19.130588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:20.131225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:38:20.408
  E0111 01:38:21.131459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:22.131701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:23.131780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:24.132374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:25.132508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:26.133236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:27.133352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:28.133672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:29.134857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:30.134120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:31.134232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:32.134741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:33.134890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:34.134975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:35.135152      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:36.135329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:37.136286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:38.137685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:39.137600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:40.137800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:41.138280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:42.138484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:43.138817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:44.141958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:45.140567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:46.140792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:47.141706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:48.143645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:49.144853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:50.145051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:50.408662 23 service_accounts.go:653] polling logs
  I0111 01:38:50.415163 23 service_accounts.go:663] Pod logs: 
  I0111 01:38:17.256257       1 log.go:245] OK: Got token
  I0111 01:38:17.256336       1 log.go:245] validating with in-cluster discovery
  I0111 01:38:17.256724       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0111 01:38:17.256759       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1665:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a5d60), NotBefore:(*jwt.NumericDate)(0xc0002a5e50), IssuedAt:(*jwt.NumericDate)(0xc0002a5d70), ID:"d9a79fe9-9cbc-4d83-8a43-6e9fad394631"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1665", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"defd94e5-95b3-4946-bcca-c75177bc0c02"}}}
  I0111 01:38:17.277595       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0111 01:38:17.285121       1 log.go:245] OK: Validated signature on JWT
  I0111 01:38:17.285293       1 log.go:245] OK: Got valid claims from token!
  I0111 01:38:17.285379       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1665:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001f9810), NotBefore:(*jwt.NumericDate)(0xc0001f9878), IssuedAt:(*jwt.NumericDate)(0xc0001f9818), ID:"d9a79fe9-9cbc-4d83-8a43-6e9fad394631"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1665", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"defd94e5-95b3-4946-bcca-c75177bc0c02"}}}

  I0111 01:38:50.415239 23 service_accounts.go:667] completed pod
  I0111 01:38:50.432110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1665" for this suite. @ 01/11/25 01:38:50.435
• [34.183 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/11/25 01:38:50.452
  I0111 01:38:50.452717 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 01:38:50.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:38:50.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:38:50.498
  STEP: Given a ReplicationController is created @ 01/11/25 01:38:50.501
  STEP: When the matched label of one of its pods change @ 01/11/25 01:38:50.524
  I0111 01:38:50.548035 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0111 01:38:51.145777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:52.146216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:53.146343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:54.146584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:55.146732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:55.558291 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/11/25 01:38:55.595
  E0111 01:38:56.146872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:38:56.647512 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-733" for this suite. @ 01/11/25 01:38:56.654
• [6.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/11/25 01:38:56.67
  I0111 01:38:56.670764 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:38:56.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:38:56.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:38:56.715
  STEP: Creating configMap with name configmap-test-volume-map-190920b2-eec2-4fac-8ced-cc6af12a28a4 @ 01/11/25 01:38:56.719
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:38:56.734
  E0111 01:38:57.147950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:58.148600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:38:59.148589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:00.148925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:39:00.818
  I0111 01:39:00.824702 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-e7d08b79-b103-4421-a8f8-9787bbacc25c container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:39:00.832
  I0111 01:39:00.896259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5262" for this suite. @ 01/11/25 01:39:00.905
• [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/11/25 01:39:00.922
  I0111 01:39:00.922490 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:39:00.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:00.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:00.984
  STEP: Creating configMap configmap-7972/configmap-test-e045515a-6287-4424-b920-3842f8ea5f09 @ 01/11/25 01:39:00.99
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:39:01.013
  E0111 01:39:01.149453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:02.149574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:03.150301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:04.150674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:39:05.062
  I0111 01:39:05.066912 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-3620cd99-585c-4a13-a40f-b0a5d64064ac container env-test: <nil>
  STEP: delete the pod @ 01/11/25 01:39:05.078
  I0111 01:39:05.119542 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7972" for this suite. @ 01/11/25 01:39:05.124
• [4.216 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/11/25 01:39:05.138
  I0111 01:39:05.138841 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 01:39:05.139
  E0111 01:39:05.150880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:05.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:05.216
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/11/25 01:39:05.22
  I0111 01:39:05.221534 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:39:06.151694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:07.151792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:08.152324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:09.152725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:10.152986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:11.152863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:12.153024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/11/25 01:39:12.616
  I0111 01:39:12.617103 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:39:13.159670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:14.160714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:14.593490 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:39:15.161051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:16.168585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:17.168476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:18.168636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:19.168697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:20.169336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:21.169986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:21.747308 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6746" for this suite. @ 01/11/25 01:39:21.763
• [16.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/11/25 01:39:21.778
  I0111 01:39:21.778899 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename events @ 01/11/25 01:39:21.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:21.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:21.861
  STEP: Create set of events @ 01/11/25 01:39:21.864
  I0111 01:39:21.890374 23 core_events.go:198] created test-event-1
  I0111 01:39:21.901784 23 core_events.go:198] created test-event-2
  I0111 01:39:21.912606 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/11/25 01:39:21.912
  STEP: delete collection of events @ 01/11/25 01:39:21.916
  I0111 01:39:21.917159 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/11/25 01:39:21.959
  I0111 01:39:21.959725 23 core_events.go:230] requesting list of events to confirm quantity
  I0111 01:39:21.962539 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3291" for this suite. @ 01/11/25 01:39:21.966
• [0.207 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/11/25 01:39:21.986
  I0111 01:39:21.986507 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename apf @ 01/11/25 01:39:21.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:22.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:22.031
  STEP: getting /apis @ 01/11/25 01:39:22.035
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/11/25 01:39:22.042
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/11/25 01:39:22.044
  STEP: creating @ 01/11/25 01:39:22.046
  STEP: getting @ 01/11/25 01:39:22.1
  STEP: listing @ 01/11/25 01:39:22.103
  STEP: watching @ 01/11/25 01:39:22.107
  I0111 01:39:22.107374 23 flowcontrol.go:620] starting watch
  STEP: patching @ 01/11/25 01:39:22.108
  STEP: updating @ 01/11/25 01:39:22.118
  I0111 01:39:22.137663 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/11/25 01:39:22.138
  STEP: patching /status @ 01/11/25 01:39:22.142
  E0111 01:39:22.170348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating /status @ 01/11/25 01:39:22.17
  STEP: deleting @ 01/11/25 01:39:22.185
  STEP: deleting a collection @ 01/11/25 01:39:22.204
  I0111 01:39:22.235415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6250" for this suite. @ 01/11/25 01:39:22.241
• [0.273 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/11/25 01:39:22.259
  I0111 01:39:22.259961 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:39:22.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:22.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:22.34
  STEP: Setting up server cert @ 01/11/25 01:39:22.436
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:39:23.039
  STEP: Deploying the webhook pod @ 01/11/25 01:39:23.054
  STEP: Wait for the deployment to be ready @ 01/11/25 01:39:23.094
  I0111 01:39:23.111656 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:39:23.170800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:24.170863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:39:25.151
  E0111 01:39:25.172122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:39:25.187
  E0111 01:39:26.172453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:26.187693 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/11/25 01:39:26.194
  STEP: verifying the mutating webhook match conditions @ 01/11/25 01:39:26.212
  STEP: updating the mutating webhook match conditions @ 01/11/25 01:39:26.217
  STEP: verifying the mutating webhook match conditions @ 01/11/25 01:39:26.234
  I0111 01:39:26.375130 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2310" for this suite. @ 01/11/25 01:39:26.38
  STEP: Destroying namespace "webhook-markers-2653" for this suite. @ 01/11/25 01:39:26.416
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/11/25 01:39:26.439
  I0111 01:39:26.439541 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/11/25 01:39:26.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:26.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:26.491
  STEP: creating a target pod @ 01/11/25 01:39:26.494
  E0111 01:39:27.172569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:28.173260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/11/25 01:39:28.554
  E0111 01:39:29.173244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:30.173358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/11/25 01:39:30.591
  I0111 01:39:30.591128 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1162 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:39:30.591170 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:39:30.591243 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-1162/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0111 01:39:30.661019 23 exec_util.go:108] Exec stderr: ""
  I0111 01:39:30.669608 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1162" for this suite. @ 01/11/25 01:39:30.673
• [4.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 01/11/25 01:39:30.684
  I0111 01:39:30.684498 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 01:39:30.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:30.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:30.732
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4876.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4876.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 01/11/25 01:39:30.743
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4876.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4876.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/11/25 01:39:30.743
  STEP: creating a pod to probe /etc/hosts @ 01/11/25 01:39:30.743
  STEP: submitting the pod to kubernetes @ 01/11/25 01:39:30.743
  E0111 01:39:31.174324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:32.174612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 01:39:32.782
  STEP: looking for the results for each expected name from probers @ 01/11/25 01:39:32.789
  I0111 01:39:32.813791 23 dns_common.go:546] DNS probes using dns-4876/dns-test-39eb6b41-6051-4dbc-a5c3-e23ac30c831b succeeded

  STEP: deleting the pod @ 01/11/25 01:39:32.813
  I0111 01:39:32.864241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4876" for this suite. @ 01/11/25 01:39:32.882
• [2.230 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/11/25 01:39:32.916
  I0111 01:39:32.916840 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:39:32.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:32.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:32.971
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:39:32.973
  E0111 01:39:33.174668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:34.174898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:35.175637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:36.175757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:39:37.031
  I0111 01:39:37.034260 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-925577cf-7a8a-45c6-b8eb-70d9b0e01739 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:39:37.041
  I0111 01:39:37.089851 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2552" for this suite. @ 01/11/25 01:39:37.111
• [4.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/11/25 01:39:37.133
  I0111 01:39:37.133183 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:39:37.135
  E0111 01:39:37.176710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:37.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:37.211
  STEP: Setting up server cert @ 01/11/25 01:39:37.323
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:39:37.957
  STEP: Deploying the webhook pod @ 01/11/25 01:39:37.973
  STEP: Wait for the deployment to be ready @ 01/11/25 01:39:38.012
  I0111 01:39:38.030768 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:39:38.177936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:39.178618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:39:40.04
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:39:40.057
  E0111 01:39:40.179222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:41.058281 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/11/25 01:39:41.077
  STEP: create a pod that should be updated by the webhook @ 01/11/25 01:39:41.123
  E0111 01:39:41.179879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:41.356378 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6601" for this suite. @ 01/11/25 01:39:41.38
  STEP: Destroying namespace "webhook-markers-2268" for this suite. @ 01/11/25 01:39:41.4
• [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/11/25 01:39:41.423
  I0111 01:39:41.423472 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:39:41.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:41.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:41.547
  STEP: Setting up server cert @ 01/11/25 01:39:41.642
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:39:42.101
  STEP: Deploying the webhook pod @ 01/11/25 01:39:42.111
  STEP: Wait for the deployment to be ready @ 01/11/25 01:39:42.145
  E0111 01:39:42.182321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:42.211081 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:39:43.180272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:44.181324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:39:44.223
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:39:44.243
  E0111 01:39:45.181428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:45.244633 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/11/25 01:39:45.253
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/11/25 01:39:45.301
  STEP: Creating a configMap that should not be mutated @ 01/11/25 01:39:45.319
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/11/25 01:39:45.364
  STEP: Creating a configMap that should be mutated @ 01/11/25 01:39:45.381
  I0111 01:39:45.593857 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6014" for this suite. @ 01/11/25 01:39:45.612
  STEP: Destroying namespace "webhook-markers-1438" for this suite. @ 01/11/25 01:39:45.644
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/11/25 01:39:45.662
  I0111 01:39:45.662221 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:39:45.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:45.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:45.719
  STEP: creating a Namespace @ 01/11/25 01:39:45.732
  STEP: patching the Namespace @ 01/11/25 01:39:45.828
  STEP: get the Namespace and ensuring it has the label @ 01/11/25 01:39:45.844
  I0111 01:39:45.851554 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8783" for this suite. @ 01/11/25 01:39:45.858
  STEP: Destroying namespace "nspatchtest-ebde7d9e-16fc-43ce-b5cf-0af4ce87e6f6-6932" for this suite. @ 01/11/25 01:39:45.871
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/11/25 01:39:45.886
  I0111 01:39:45.886310 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename controllerrevisions @ 01/11/25 01:39:45.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:45.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:45.944
  STEP: Creating DaemonSet "e2e-f84df-daemon-set" @ 01/11/25 01:39:45.982
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 01:39:45.999
  I0111 01:39:46.107003 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-f84df-daemon-set: 0
  I0111 01:39:46.107050 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:39:46.182104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:47.037724 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-f84df-daemon-set: 0
  I0111 01:39:47.039450 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 01:39:47.182751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:48.007848 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-f84df-daemon-set: 4
  I0111 01:39:48.007888 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-f84df-daemon-set
  STEP: Confirm DaemonSet "e2e-f84df-daemon-set" successfully created with "daemonset-name=e2e-f84df-daemon-set" label @ 01/11/25 01:39:48.014
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-f84df-daemon-set" @ 01/11/25 01:39:48.019
  I0111 01:39:48.022174 23 controller_revision.go:162] Located ControllerRevision: "e2e-f84df-daemon-set-58459c5cb4"
  STEP: Patching ControllerRevision "e2e-f84df-daemon-set-58459c5cb4" @ 01/11/25 01:39:48.024
  I0111 01:39:48.056474 23 controller_revision.go:173] e2e-f84df-daemon-set-58459c5cb4 has been patched
  STEP: Create a new ControllerRevision @ 01/11/25 01:39:48.056
  I0111 01:39:48.073237 23 controller_revision.go:191] Created ControllerRevision: e2e-f84df-daemon-set-5995b84674
  STEP: Confirm that there are two ControllerRevisions @ 01/11/25 01:39:48.073
  I0111 01:39:48.073324 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0111 01:39:48.076343 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-f84df-daemon-set-58459c5cb4" @ 01/11/25 01:39:48.076
  STEP: Confirm that there is only one ControllerRevision @ 01/11/25 01:39:48.085
  I0111 01:39:48.086015 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0111 01:39:48.090669 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-f84df-daemon-set-5995b84674" @ 01/11/25 01:39:48.094
  I0111 01:39:48.111951 23 controller_revision.go:220] e2e-f84df-daemon-set-5995b84674 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/11/25 01:39:48.112
  W0111 01:39:48.131141      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/11/25 01:39:48.131
  I0111 01:39:48.131289 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0111 01:39:48.183747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:49.131415 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0111 01:39:49.136306 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-f84df-daemon-set-5995b84674=updated" @ 01/11/25 01:39:49.136
  STEP: Confirm that there is only one ControllerRevision @ 01/11/25 01:39:49.152
  I0111 01:39:49.152760 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0111 01:39:49.156470 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0111 01:39:49.159087 23 controller_revision.go:246] ControllerRevision "e2e-f84df-daemon-set-575f549bc5" has revision 3
  STEP: Deleting DaemonSet "e2e-f84df-daemon-set" @ 01/11/25 01:39:49.162
  STEP: deleting DaemonSet.extensions e2e-f84df-daemon-set in namespace controllerrevisions-6070, will wait for the garbage collector to delete the pods @ 01/11/25 01:39:49.162
  E0111 01:39:49.184011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:49.233490 23 resources.go:139] Deleting DaemonSet.extensions e2e-f84df-daemon-set took: 17.560776ms
  I0111 01:39:49.340998 23 resources.go:163] Terminating DaemonSet.extensions e2e-f84df-daemon-set pods took: 107.508617ms
  E0111 01:39:50.184815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:51.186756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:39:51.651398 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-f84df-daemon-set: 0
  I0111 01:39:51.651437 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-f84df-daemon-set
  I0111 01:39:51.655912 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36810"},"items":null}

  I0111 01:39:51.658249 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36810"},"items":null}

  I0111 01:39:51.677800 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6070" for this suite. @ 01/11/25 01:39:51.682
• [5.805 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/11/25 01:39:51.691
  I0111 01:39:51.691816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 01:39:51.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:51.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:51.765
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/11/25 01:39:51.769
  E0111 01:39:52.186525      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:53.186740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:54.187439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:55.188504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:39:55.839
  I0111 01:39:55.842863 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-55dc85ed-770e-436a-9c82-a198aa6b2ee7 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 01:39:55.852
  I0111 01:39:55.898823 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3320" for this suite. @ 01/11/25 01:39:55.907
• [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/11/25 01:39:55.932
  I0111 01:39:55.933014 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:39:55.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:39:55.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:39:55.991
  STEP: Creating configMap with name projected-configmap-test-volume-e58c1467-52e3-4460-add3-d5bc068c226c @ 01/11/25 01:39:55.994
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:39:56.016
  E0111 01:39:56.189037      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:57.190571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:58.191207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:39:59.191242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:40:00.072
  I0111 01:40:00.101234 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-d70be221-45f7-4c94-be94-8b09624b0eeb container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:40:00.115
  I0111 01:40:00.160965 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7485" for this suite. @ 01/11/25 01:40:00.185
  E0111 01:40:00.191830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 01/11/25 01:40:00.218
  I0111 01:40:00.218389 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 01:40:00.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:00.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:00.294
  STEP: Creating a job @ 01/11/25 01:40:00.312
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/11/25 01:40:00.344
  E0111 01:40:01.193290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:02.197451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/11/25 01:40:02.444
  STEP: updating /status @ 01/11/25 01:40:02.513
  STEP: get /status @ 01/11/25 01:40:02.649
  I0111 01:40:02.724972 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-603" for this suite. @ 01/11/25 01:40:02.758
• [2.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 01/11/25 01:40:02.85
  I0111 01:40:02.850786 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename containers @ 01/11/25 01:40:02.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:02.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:02.951
  STEP: Creating a pod to test override command @ 01/11/25 01:40:02.971
  E0111 01:40:03.195109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:04.195326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:05.196209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:06.195880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:40:07.057
  I0111 01:40:07.064473 23 output.go:207] Trying to get logs from node ip-172-31-16-105.us-east-2.compute.internal pod client-containers-30b063e5-062a-4e1f-8799-cdfa1e646617 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:40:07.087
  I0111 01:40:07.127211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8338" for this suite. @ 01/11/25 01:40:07.147
• [4.314 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/11/25 01:40:07.165
  I0111 01:40:07.165570 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/11/25 01:40:07.168
  E0111 01:40:07.197549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:07.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:07.269
  STEP: getting /apis @ 01/11/25 01:40:07.277
  STEP: getting /apis/storage.k8s.io @ 01/11/25 01:40:07.287
  STEP: getting /apis/storage.k8s.io/v1 @ 01/11/25 01:40:07.296
  STEP: creating @ 01/11/25 01:40:07.303
  STEP: watching @ 01/11/25 01:40:07.345
  I0111 01:40:07.346041 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/11/25 01:40:07.374
  STEP: listing in namespace @ 01/11/25 01:40:07.378
  STEP: listing across namespaces @ 01/11/25 01:40:07.386
  STEP: patching @ 01/11/25 01:40:07.391
  STEP: updating @ 01/11/25 01:40:07.404
  I0111 01:40:07.422707 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0111 01:40:07.422866 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/11/25 01:40:07.422
  STEP: deleting a collection @ 01/11/25 01:40:07.459
  I0111 01:40:07.513404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7823" for this suite. @ 01/11/25 01:40:07.524
• [0.375 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/11/25 01:40:07.54
  I0111 01:40:07.540069 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 01:40:07.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:07.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:07.601
  I0111 01:40:07.605059 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:40:08.197967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:09.198466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0111 01:40:10.181281      23 warnings.go:70] unknown field "alpha"
  W0111 01:40:10.181422      23 warnings.go:70] unknown field "beta"
  W0111 01:40:10.181431      23 warnings.go:70] unknown field "delta"
  W0111 01:40:10.181437      23 warnings.go:70] unknown field "epsilon"
  W0111 01:40:10.181443      23 warnings.go:70] unknown field "gamma"
  E0111 01:40:10.199166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:10.783756 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-483" for this suite. @ 01/11/25 01:40:10.789
• [3.267 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 01/11/25 01:40:10.807
  I0111 01:40:10.807751 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:40:10.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:10.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:10.866
  STEP: Creating a pod to test downward api env vars @ 01/11/25 01:40:10.871
  E0111 01:40:11.199552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:12.200415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:13.200806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:14.201069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:40:14.925
  I0111 01:40:14.928662 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-d342bec8-0864-4790-82c1-b3ab6177752f container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:40:14.934
  I0111 01:40:14.981015 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8746" for this suite. @ 01/11/25 01:40:14.995
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/11/25 01:40:15.02
  I0111 01:40:15.020783 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:40:15.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:15.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:15.093
  STEP: Creating projection with secret that has name projected-secret-test-13f1a7ae-afb9-4dc8-b8cb-c7b299f57343 @ 01/11/25 01:40:15.097
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:40:15.107
  E0111 01:40:15.201471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:16.201562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:17.202161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:18.202391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:40:19.161
  I0111 01:40:19.167760 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-secrets-91a6094c-27a4-4ee1-94ad-e2ed0d2dc0e1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:40:19.174
  E0111 01:40:19.203107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:19.214021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9676" for this suite. @ 01/11/25 01:40:19.226
• [4.262 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/11/25 01:40:19.283
  I0111 01:40:19.283739 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:40:19.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:19.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:19.423
  STEP: creating service nodeport-test with type=NodePort in namespace services-3948 @ 01/11/25 01:40:19.43
  STEP: creating replication controller nodeport-test in namespace services-3948 @ 01/11/25 01:40:19.47
  I0111 01:40:19.504146      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3948, replica count: 2
  E0111 01:40:20.203789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:21.204272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:22.205376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:22.555541      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:40:22.555588 23 resource.go:361] Creating new exec pod
  E0111 01:40:23.208580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:24.208931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:25.209115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:25.637780 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0111 01:40:25.834078 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.94.204) 80 port [tcp/http] succeeded!\n"
  I0111 01:40:25.834167 23 builder.go:147] stdout: ""
  E0111 01:40:26.209491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:26.638122 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0111 01:40:26.785697 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.94.204) 80 port [tcp/http] succeeded!\n"
  I0111 01:40:26.785807 23 builder.go:147] stdout: ""
  E0111 01:40:27.210138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:27.638990 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0111 01:40:27.831501 23 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test (10.43.94.204) 80 port [tcp/http] succeeded!\n"
  I0111 01:40:27.831542 23 builder.go:147] stdout: ""
  E0111 01:40:28.211118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:28.638690 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0111 01:40:28.836136 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.94.204) 80 port [tcp/http] succeeded!\n"
  I0111 01:40:28.836199 23 builder.go:147] stdout: "nodeport-test-wk8lm"
  I0111 01:40:28.836286 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.94.204 80'
  I0111 01:40:29.008756 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.94.204 80\nConnection to 10.43.94.204 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0111 01:40:29.008862 23 builder.go:147] stdout: "nodeport-test-wk8lm"
  I0111 01:40:29.008950 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.167 32672'
  I0111 01:40:29.151139 23 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 172.31.22.167 32672\nConnection to 172.31.22.167 32672 port [tcp/*] succeeded!\n"
  I0111 01:40:29.151687 23 builder.go:147] stdout: "nodeport-test-xzf9h"
  I0111 01:40:29.151862 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.7 32672'
  E0111 01:40:29.211629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:29.291405 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.7 32672\nConnection to 172.31.22.7 32672 port [tcp/*] succeeded!\n"
  I0111 01:40:29.291453 23 builder.go:147] stdout: ""
  I0111 01:40:30.152036 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.7 32672'
  E0111 01:40:30.212576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:30.304288 23 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.22.7 32672\n+ echo hostName\nConnection to 172.31.22.7 32672 port [tcp/*] succeeded!\n"
  I0111 01:40:30.304340 23 builder.go:147] stdout: ""
  I0111 01:40:31.151965 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-3948 exec execpod6j9c5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.7 32672'
  E0111 01:40:31.213456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:31.318803 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.22.7 32672\nConnection to 172.31.22.7 32672 port [tcp/*] succeeded!\n"
  I0111 01:40:31.318854 23 builder.go:147] stdout: "nodeport-test-wk8lm"
  I0111 01:40:31.318978 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3948" for this suite. @ 01/11/25 01:40:31.323
• [12.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/11/25 01:40:31.339
  I0111 01:40:31.339478 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context-test @ 01/11/25 01:40:31.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:31.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:31.425
  E0111 01:40:32.213581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:33.215278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:34.215251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:35.216360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:36.216684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:37.217465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:40:37.560101 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7766" for this suite. @ 01/11/25 01:40:37.565
• [6.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/11/25 01:40:37.579
  I0111 01:40:37.579101 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption @ 01/11/25 01:40:37.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:37.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:37.623
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:40:37.643
  E0111 01:40:38.217421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:39.217564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 01/11/25 01:40:39.658
  STEP: Waiting for all pods to be running @ 01/11/25 01:40:39.687
  I0111 01:40:39.710696 23 disruption.go:691] running pods: 0 < 1
  E0111 01:40:40.218625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:41.218782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/11/25 01:40:41.691
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:40:41.705
  STEP: Patching PodDisruptionBudget status @ 01/11/25 01:40:41.725
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:40:41.749
  I0111 01:40:41.753494 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7458" for this suite. @ 01/11/25 01:40:41.761
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/11/25 01:40:41.785
  I0111 01:40:41.785521 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename namespaces @ 01/11/25 01:40:41.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:41.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:41.822
  STEP: Creating a test namespace @ 01/11/25 01:40:41.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:41.931
  STEP: Creating a pod in the namespace @ 01/11/25 01:40:41.946
  STEP: Waiting for the pod to have running status @ 01/11/25 01:40:41.975
  E0111 01:40:42.219637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:43.220336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 01/11/25 01:40:43.99
  STEP: Waiting for the namespace to be removed. @ 01/11/25 01:40:44.005
  E0111 01:40:44.221378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:45.222204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:46.222776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:47.223362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:48.223542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:49.224073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:50.226603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:51.226400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:52.227629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:53.228257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:54.228693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/11/25 01:40:55.009
  STEP: Verifying there are no pods in the namespace @ 01/11/25 01:40:55.06
  I0111 01:40:55.074392 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4196" for this suite. @ 01/11/25 01:40:55.084
  STEP: Destroying namespace "nsdeletetest-2082" for this suite. @ 01/11/25 01:40:55.099
  I0111 01:40:55.108388 23 framework.go:370] Namespace nsdeletetest-2082 was already deleted
  STEP: Destroying namespace "nsdeletetest-6754" for this suite. @ 01/11/25 01:40:55.108
• [13.340 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 01/11/25 01:40:55.125
  I0111 01:40:55.125752 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 01:40:55.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:40:55.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:40:55.201
  STEP: Creating a test headless service @ 01/11/25 01:40:55.207
  E0111 01:40:55.229614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9859 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9859;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9859 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9859;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9859.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9859.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9859.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9859.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9859.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9859.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9859.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9859.svc;check="$$(dig +notcp +noall +answer +search 128.152.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.152.128_udp@PTR;check="$$(dig +tcp +noall +answer +search 128.152.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.152.128_tcp@PTR;sleep 1; done
   @ 01/11/25 01:40:55.27
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9859 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9859;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9859 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9859;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9859.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9859.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9859.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9859.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9859.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9859.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9859.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9859.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9859.svc;check="$$(dig +notcp +noall +answer +search 128.152.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.152.128_udp@PTR;check="$$(dig +tcp +noall +answer +search 128.152.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.152.128_tcp@PTR;sleep 1; done
   @ 01/11/25 01:40:55.27
  STEP: creating a pod to probe DNS @ 01/11/25 01:40:55.27
  STEP: submitting the pod to kubernetes @ 01/11/25 01:40:55.27
  E0111 01:40:56.229710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:57.230036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:58.230444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:40:59.231104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 01:40:59.334
  STEP: looking for the results for each expected name from probers @ 01/11/25 01:40:59.339
  I0111 01:40:59.348236 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.352132 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.359463 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9859 from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.365759 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9859 from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.370217 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.387688 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.404736 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.409493 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.433429 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.438582 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.443039 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9859 from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.448991 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9859 from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.456445 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.460717 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.465046 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.475714 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9859.svc from pod dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0: the server could not find the requested resource (get pods dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0)
  I0111 01:40:59.490861 23 dns_common.go:506] Lookups using dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9859 agnhost_tcp@dns-test-service.dns-9859 agnhost_udp@dns-test-service.dns-9859.svc agnhost_tcp@dns-test-service.dns-9859.svc agnhost_udp@_http._tcp.dns-test-service.dns-9859.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9859.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9859 jessie_tcp@dns-test-service.dns-9859 jessie_udp@dns-test-service.dns-9859.svc jessie_tcp@dns-test-service.dns-9859.svc jessie_udp@_http._tcp.dns-test-service.dns-9859.svc jessie_tcp@_http._tcp.dns-test-service.dns-9859.svc]

  I0111 01:40:59.497018 23 dns_common.go:514] Pod client logs for webserver: 
  I0111 01:40:59.502870 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0111 01:40:59.509443 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0111 01:41:00.231240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:01.231268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:02.231431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:03.231762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:04.231995      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:41:04.505917 23 dns_common.go:546] DNS probes using dns-9859/dns-test-adeb17f0-7efe-427c-a152-0799b272bfc0 succeeded

  STEP: deleting the pod @ 01/11/25 01:41:04.506
  STEP: deleting the test service @ 01/11/25 01:41:04.579
  STEP: deleting the test headless service @ 01/11/25 01:41:04.686
  I0111 01:41:04.720348 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9859" for this suite. @ 01/11/25 01:41:04.736
• [9.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/11/25 01:41:04.752
  I0111 01:41:04.752983 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename taint-single-pod @ 01/11/25 01:41:04.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:41:04.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:41:04.817
  I0111 01:41:04.821565 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 01:41:05.232153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:06.232556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:07.232603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:08.232721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:09.233837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:10.235574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:11.236393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:12.236630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:13.236650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:14.237451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:15.238376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:16.238868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:17.239808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:18.239953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:19.241281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:20.241410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:21.242161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:22.242792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:23.243274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:24.243389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:25.244278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:26.244545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:27.245378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:28.245537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:29.246254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:30.246392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:31.246796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:32.246818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:33.247971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:34.248557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:35.249858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:36.250098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:37.250526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:38.250921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:39.251243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:40.251368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:41.252341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:42.252608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:43.253018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:44.253225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:45.253544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:46.253708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:47.254540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:48.254697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:49.256024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:50.255680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:51.256303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:52.256433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:53.257187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:54.257408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:55.258022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:56.258205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:57.258322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:58.258817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:41:59.259287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:00.259483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:01.259652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:02.259986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:03.262557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:04.262348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:42:04.821878 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 01:42:04.826591 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/11/25 01:42:04.826
  I0111 01:42:05.054469 23 taints.go:294] Pod is running on ip-172-31-22-167.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/11/25 01:42:05.054
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/11/25 01:42:05.086
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/11/25 01:42:05.097
  I0111 01:42:05.097052 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0111 01:42:05.097096 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/11/25 01:42:05.137
  STEP: Waiting some time to make sure that toleration time passed. @ 01/11/25 01:42:05.162
  E0111 01:42:05.262263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:06.262404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:07.263578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:08.263626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:09.263749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:10.263901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:11.263977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:12.265019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:13.265339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:14.265559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:15.265796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:16.265884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:17.266002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:18.266424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:19.266722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:20.267004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:21.267212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:22.267335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:23.267839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:24.267963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:25.268142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:26.268358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:27.268502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:28.268862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:29.269352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:30.269484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:31.269703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:32.269984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:33.270203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:34.270443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:35.270826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:36.271025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:37.271187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:38.271371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:39.272263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:40.272374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:41.272879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:42.272728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:43.272938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:44.273308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:45.273584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:46.273921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:47.274013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:48.274913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:49.275043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:50.275187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:51.275299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:52.276302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:53.276657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:54.276900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:55.277098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:56.277705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:57.278196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:58.279615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:42:59.279043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:00.279224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:01.280298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:02.281148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:03.281493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:04.281724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:05.281886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:06.282227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:07.282403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:08.282680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:09.283042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:10.283302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:11.283497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:12.285901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:13.286112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:14.286285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:15.286537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:16.286742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:17.286892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:18.287875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:19.287466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:20.162309 23 taints.go:329] Pod wasn't evicted. Test successful
  I0111 01:43:20.162506 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3082" for this suite. @ 01/11/25 01:43:20.17
• [135.441 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 01/11/25 01:43:20.194
  I0111 01:43:20.194805 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:43:20.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:20.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:20.227
  I0111 01:43:20.281896 23 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0111 01:43:20.281942 23 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  E0111 01:43:20.287970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:20.307119 23 service_accounts.go:282] created pod pod-service-account-mountsa
  I0111 01:43:20.307160 23 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0111 01:43:20.328112 23 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0111 01:43:20.328153 23 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0111 01:43:20.353250 23 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0111 01:43:20.353296 23 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0111 01:43:20.418838 23 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0111 01:43:20.418980 23 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0111 01:43:20.481545 23 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0111 01:43:20.481715 23 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0111 01:43:20.542227 23 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0111 01:43:20.542518 23 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0111 01:43:20.590200 23 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0111 01:43:20.590559 23 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0111 01:43:20.646500 23 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0111 01:43:20.646673 23 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0111 01:43:20.646908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1576" for this suite. @ 01/11/25 01:43:20.686
• [0.525 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/11/25 01:43:20.719
  I0111 01:43:20.719992 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/11/25 01:43:20.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:20.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:20.854
  STEP: creating @ 01/11/25 01:43:20.858
  STEP: getting @ 01/11/25 01:43:20.918
  STEP: listing in namespace @ 01/11/25 01:43:20.936
  STEP: patching @ 01/11/25 01:43:20.948
  STEP: deleting @ 01/11/25 01:43:21.005
  I0111 01:43:21.037954 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3351" for this suite. @ 01/11/25 01:43:21.044
• [0.353 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 01/11/25 01:43:21.073
  I0111 01:43:21.073513 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:43:21.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:21.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:21.191
  STEP: Creating ServiceAccount "e2e-sa-sngwp"  @ 01/11/25 01:43:21.195
  I0111 01:43:21.204649 23 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-sngwp"  @ 01/11/25 01:43:21.204
  I0111 01:43:21.230530 23 service_accounts.go:868] AutomountServiceAccountToken: true
  I0111 01:43:21.231027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8638" for this suite. @ 01/11/25 01:43:21.241
• [0.189 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/11/25 01:43:21.263
  I0111 01:43:21.263259 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:43:21.265
  E0111 01:43:21.288307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:21.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:21.313
  STEP: Creating configMap with name configmap-projected-all-test-volume-db8c923e-99d5-40e6-8d80-62a479452add @ 01/11/25 01:43:21.323
  STEP: Creating secret with name secret-projected-all-test-volume-556d21aa-e37c-4c01-847b-c5ee45b6e659 @ 01/11/25 01:43:21.351
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/11/25 01:43:21.373
  W0111 01:43:21.406177      23 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0111 01:43:22.288523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:23.289306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:24.289095      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:25.289415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:43:25.447
  I0111 01:43:25.451355 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod projected-volume-5a9ef951-1cca-42e4-8fa7-dcacb89169c3 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:43:25.491
  I0111 01:43:25.538125 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7593" for this suite. @ 01/11/25 01:43:25.543
• [4.328 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/11/25 01:43:25.593
  I0111 01:43:25.593590 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 01:43:25.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:25.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:25.671
  STEP: Creating a pod to test env composition @ 01/11/25 01:43:25.676
  E0111 01:43:26.290463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:27.290635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:28.290805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:29.290922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:43:29.74
  I0111 01:43:29.744135 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod var-expansion-dc3cf17e-643f-4f4c-ae8c-c2a4af8994e1 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:43:29.751
  I0111 01:43:29.795882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8462" for this suite. @ 01/11/25 01:43:29.802
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/11/25 01:43:29.828
  I0111 01:43:29.828947 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename watch @ 01/11/25 01:43:29.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:29.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:29.895
  STEP: creating a watch on configmaps with a certain label @ 01/11/25 01:43:29.898
  STEP: creating a new configmap @ 01/11/25 01:43:29.902
  STEP: modifying the configmap once @ 01/11/25 01:43:29.911
  STEP: changing the label value of the configmap @ 01/11/25 01:43:29.944
  STEP: Expecting to observe a delete notification for the watched object @ 01/11/25 01:43:29.962
  I0111 01:43:29.962160 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38304 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:43:29.962365 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38305 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:43:29.962534 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38306 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/11/25 01:43:29.962
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/11/25 01:43:29.983
  E0111 01:43:30.292225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:31.292332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:32.292526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:33.292660      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:34.293628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:35.294324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:36.294734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:37.295288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:38.296571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:39.296926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 01/11/25 01:43:39.984
  STEP: modifying the configmap a third time @ 01/11/25 01:43:40.001
  STEP: deleting the configmap @ 01/11/25 01:43:40.021
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/11/25 01:43:40.053
  I0111 01:43:40.053620 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38365 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:43:40.053841 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38366 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:43:40.053939 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4311  6f313789-dcc8-4216-9a0c-64d925434797 38368 0 2025-01-11 01:43:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-11 01:43:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 01:43:40.054045 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4311" for this suite. @ 01/11/25 01:43:40.057
• [10.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 01/11/25 01:43:40.081
  I0111 01:43:40.081477 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:43:40.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:40.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:40.126
  STEP: validating cluster-info @ 01/11/25 01:43:40.133
  I0111 01:43:40.133326 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-4020 cluster-info'
  I0111 01:43:40.217999 23 builder.go:146] stderr: ""
  I0111 01:43:40.218067 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0111 01:43:40.218181 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4020" for this suite. @ 01/11/25 01:43:40.222
• [0.158 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/11/25 01:43:40.239
  I0111 01:43:40.239994 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:43:40.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:40.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:40.279
  E0111 01:43:40.298328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/11/25 01:43:40.404
  E0111 01:43:41.299024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:43:41.351
  STEP: Deploying the webhook pod @ 01/11/25 01:43:41.386
  STEP: Wait for the deployment to be ready @ 01/11/25 01:43:41.424
  I0111 01:43:41.467993 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:43:42.299393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:43.300357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:43:43.504
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:43:43.536
  E0111 01:43:44.301223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:44.536626 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/11/25 01:43:44.738
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/11/25 01:43:44.806
  STEP: Deleting the collection of validation webhooks @ 01/11/25 01:43:44.881
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/11/25 01:43:45.048
  I0111 01:43:45.262833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1626" for this suite. @ 01/11/25 01:43:45.275
  STEP: Destroying namespace "webhook-markers-4113" for this suite. @ 01/11/25 01:43:45.29
  E0111 01:43:45.301523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [5.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/11/25 01:43:45.333
  I0111 01:43:45.333819 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:43:45.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:45.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:45.422
  STEP: Setting up server cert @ 01/11/25 01:43:45.508
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:43:46.202
  STEP: Deploying the webhook pod @ 01/11/25 01:43:46.223
  STEP: Wait for the deployment to be ready @ 01/11/25 01:43:46.283
  E0111 01:43:46.302164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:46.329709 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:43:47.303165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:48.303251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:43:48.344
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:43:48.384
  E0111 01:43:49.304328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:49.384596 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0111 01:43:49.391740 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3193-crds.webhook.example.com via the AdmissionRegistration API @ 01/11/25 01:43:49.923
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/11/25 01:43:49.955
  E0111 01:43:50.304601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:51.304807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:52.305927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:43:52.729270 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2685" for this suite. @ 01/11/25 01:43:52.734
  STEP: Destroying namespace "webhook-markers-812" for this suite. @ 01/11/25 01:43:52.765
• [7.444 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/11/25 01:43:52.777
  I0111 01:43:52.777729 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 01:43:52.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:43:52.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:43:52.836
  E0111 01:43:53.305788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:54.306043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:55.308106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:56.308376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:57.308569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:58.308783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:43:59.308933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:00.309304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:01.310058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:02.310248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:03.311199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:04.311313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:05.312215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:06.312756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:07.313422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:08.313632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:09.314378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:10.314690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:11.315428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:12.315589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:13.315671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:14.315773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:15.315910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:16.316019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:16.938933 23 container_probe.go:92] Container started at 2025-01-11 01:43:53 +0000 UTC, pod became ready at 2025-01-11 01:44:14 +0000 UTC
  I0111 01:44:16.939824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9165" for this suite. @ 01/11/25 01:44:16.947
• [24.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 01/11/25 01:44:16.976
  I0111 01:44:16.976504 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:44:16.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:17.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:17.053
  STEP: starting the proxy server @ 01/11/25 01:44:17.057
  I0111 01:44:17.057190 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-4238 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/11/25 01:44:17.112
  I0111 01:44:17.121030 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0111 01:44:17.127388 23 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:37433

  I0111 01:44:17.127493 23 kubectl.go:2226] kubectl proxy stderr: W0111 01:44:17.112232     666 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4238" for this suite. @ 01/11/25 01:44:17.129
• [0.175 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/11/25 01:44:17.153
  I0111 01:44:17.153109 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/11/25 01:44:17.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:17.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:17.213
  STEP: creating the policy @ 01/11/25 01:44:17.233
  STEP: waiting until the marker is denied @ 01/11/25 01:44:17.284
  E0111 01:44:17.316143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:18.316482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 01/11/25 01:44:18.351
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/11/25 01:44:18.461
  I0111 01:44:18.667459 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1464" for this suite. @ 01/11/25 01:44:18.673
• [1.538 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/11/25 01:44:18.691
  I0111 01:44:18.691474 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename discovery @ 01/11/25 01:44:18.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:18.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:18.73
  STEP: Setting up server cert @ 01/11/25 01:44:18.735
  E0111 01:44:19.316851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 01/11/25 01:44:19.5
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/11/25 01:44:19.502
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/11/25 01:44:19.504
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/11/25 01:44:19.506
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/11/25 01:44:19.508
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/11/25 01:44:19.509
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/11/25 01:44:19.51
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/11/25 01:44:19.511
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/11/25 01:44:19.512
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/11/25 01:44:19.513
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/11/25 01:44:19.514
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/11/25 01:44:19.515
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/11/25 01:44:19.516
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/11/25 01:44:19.517
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/11/25 01:44:19.517
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/11/25 01:44:19.519
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/11/25 01:44:19.52
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/11/25 01:44:19.521
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/11/25 01:44:19.522
  I0111 01:44:19.523911 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1938" for this suite. @ 01/11/25 01:44:19.534
• [0.860 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/11/25 01:44:19.552
  I0111 01:44:19.552090 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sysctl @ 01/11/25 01:44:19.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:19.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:19.612
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/11/25 01:44:19.62
  STEP: Watching for error events or started pod @ 01/11/25 01:44:19.667
  E0111 01:44:20.317106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:21.317089      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 01/11/25 01:44:21.674
  E0111 01:44:22.317230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:23.317353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 01/11/25 01:44:23.699
  STEP: Getting logs from the pod @ 01/11/25 01:44:23.699
  STEP: Checking that the sysctl is actually updated @ 01/11/25 01:44:23.713
  I0111 01:44:23.714116 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8247" for this suite. @ 01/11/25 01:44:23.719
• [4.185 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/11/25 01:44:23.737
  I0111 01:44:23.737142 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 01:44:23.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:23.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:23.849
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/11/25 01:44:23.857
  E0111 01:44:24.317537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:25.317613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 01/11/25 01:44:25.929
  STEP: Then the orphan pod is adopted @ 01/11/25 01:44:25.938
  E0111 01:44:26.318909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:26.959802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1541" for this suite. @ 01/11/25 01:44:26.963
• [3.245 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/11/25 01:44:26.982
  I0111 01:44:26.982848 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename certificates @ 01/11/25 01:44:26.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:27.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:27.05
  E0111 01:44:27.322820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 01/11/25 01:44:27.748
  STEP: getting /apis/certificates.k8s.io @ 01/11/25 01:44:27.753
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/11/25 01:44:27.754
  STEP: creating @ 01/11/25 01:44:27.756
  STEP: getting @ 01/11/25 01:44:27.805
  STEP: listing @ 01/11/25 01:44:27.813
  STEP: watching @ 01/11/25 01:44:27.82
  I0111 01:44:27.820746 23 certificates.go:316] starting watch
  STEP: patching @ 01/11/25 01:44:27.822
  STEP: updating @ 01/11/25 01:44:27.834
  I0111 01:44:27.860574 23 certificates.go:332] waiting for watch events with expected annotations
  I0111 01:44:27.860629 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/11/25 01:44:27.86
  STEP: patching /approval @ 01/11/25 01:44:27.867
  STEP: updating /approval @ 01/11/25 01:44:27.881
  STEP: getting /status @ 01/11/25 01:44:27.903
  STEP: patching /status @ 01/11/25 01:44:27.907
  STEP: updating /status @ 01/11/25 01:44:27.931
  STEP: deleting @ 01/11/25 01:44:27.946
  STEP: deleting a collection @ 01/11/25 01:44:27.99
  I0111 01:44:28.034389 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1445" for this suite. @ 01/11/25 01:44:28.041
• [1.098 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/11/25 01:44:28.084
  I0111 01:44:28.085028 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 01:44:28.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:28.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:28.137
  STEP: Creating secret with name secret-test-6314fa38-8ce2-49f5-a6a2-7468c1ec6574 @ 01/11/25 01:44:28.144
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:44:28.183
  E0111 01:44:28.323325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:29.323379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:30.324192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:31.324405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:44:32.226
  I0111 01:44:32.234117 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-7872e49b-dfaf-44ea-b90e-a6e1b7920697 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:44:32.242
  I0111 01:44:32.285856 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5257" for this suite. @ 01/11/25 01:44:32.309
  E0111 01:44:32.325142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.244 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/11/25 01:44:32.327
  I0111 01:44:32.327989 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename tables @ 01/11/25 01:44:32.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:32.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:32.38
  I0111 01:44:32.388638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9394" for this suite. @ 01/11/25 01:44:32.411
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/11/25 01:44:32.431
  I0111 01:44:32.431788 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:44:32.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:32.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:32.494
  STEP: Creating configMap with name configmap-test-volume-55ede4ec-077c-4364-b06f-cbb0dd0244e4 @ 01/11/25 01:44:32.498
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:44:32.508
  E0111 01:44:33.325272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:34.325375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:35.325857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:36.325959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:44:36.59
  I0111 01:44:36.594437 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-configmaps-6f555a93-c6ee-44cd-934e-081bb41408cc container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:44:36.606
  I0111 01:44:36.672270 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3276" for this suite. @ 01/11/25 01:44:36.677
• [4.260 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/11/25 01:44:36.692
  I0111 01:44:36.692831 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:44:36.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:36.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:36.772
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/11/25 01:44:36.78
  I0111 01:44:36.780684 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5734 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0111 01:44:36.944841 23 builder.go:146] stderr: ""
  I0111 01:44:36.944885 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/11/25 01:44:36.944
  I0111 01:44:36.945377 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5734 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0111 01:44:37.053132 23 builder.go:146] stderr: ""
  I0111 01:44:37.053185 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/11/25 01:44:37.053
  I0111 01:44:37.069532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-5734 delete pods e2e-test-httpd-pod'
  E0111 01:44:37.326720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:38.327499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:39.101661 23 builder.go:146] stderr: ""
  I0111 01:44:39.101703 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0111 01:44:39.101836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5734" for this suite. @ 01/11/25 01:44:39.111
• [2.442 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/11/25 01:44:39.134
  I0111 01:44:39.134900 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 01:44:39.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:44:39.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:44:39.19
  STEP: Creating pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825 @ 01/11/25 01:44:39.196
  E0111 01:44:39.327515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:40.327790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 01:44:41.266
  I0111 01:44:41.269262 23 container_probe.go:1749] Initial restart count of pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 is 0
  I0111 01:44:41.272446 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:41.328463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:42.328521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:43.277041 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:43.329518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:44.329978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:45.285763 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:45.330258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:46.330414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:47.292733 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:47.331158      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:48.331269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:49.296578 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:49.333530      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:50.333734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:51.302113 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:51.334438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:52.334526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:53.306093 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:53.334984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:54.335249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:55.322844 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:55.336481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:56.336426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:57.328024 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:57.337302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:44:58.337458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:44:59.335241 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:44:59.337771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:00.338259      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:01.338602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:01.340742 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:02.339644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:03.339314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:03.344437 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:04.340360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:05.340493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:05.353899 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:06.340657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:07.340900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:07.358187 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:08.340906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:09.341064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:09.362260 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:10.341412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:11.341794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:11.367586 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:12.342588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:13.342683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:13.372733 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:14.343130      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:15.343827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:15.377796 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:16.343735      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:17.344403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:17.382060 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:18.345053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:19.345180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:19.386271 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:20.346116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:21.346354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:21.389994 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:22.347216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:23.347432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:23.405268 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:24.348345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:25.348498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:25.410826 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:26.349051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:27.349526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:27.419935 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:28.350061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:29.350175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:29.425850 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:30.350253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:31.350413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:31.430530 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:32.350587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:33.350662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:33.434366 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:34.351251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:35.351307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:35.447638 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:36.351433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:37.351857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:37.455445 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:38.352415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:39.352646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:39.463665 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:40.352740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:41.352820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:41.468418 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:42.353473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:43.353884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:43.473143 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:44.353956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:45.354101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:45.478757 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:46.354239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:47.354494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:47.482812 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:48.354599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:49.354635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:49.487274 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:50.355170      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:51.355332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:51.491018 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:52.355467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:53.356325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:53.494795 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:54.356633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:55.356783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:55.500765 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:56.356947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:57.357150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:57.507162 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:45:58.358228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:45:59.358426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:45:59.512723 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:00.359177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:01.359260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:01.518321 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:02.360671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:03.360837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:03.522169 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:04.360980      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:05.361243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:05.525965 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:06.361855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:07.362034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:07.528956 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:08.363048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:09.363232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:09.533231 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:10.363520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:11.363571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:11.537104 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:12.363689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:13.363785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:13.552301 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:14.364115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:15.364366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:15.557077 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:16.364943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:17.365407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:17.560434 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:18.365554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:19.365776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:19.564610 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:20.365952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:21.366209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:21.570423 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:22.366371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:23.366607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:23.580856 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:24.366631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:25.366850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:25.588887 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:26.367297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:27.367434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:27.597326 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:28.367912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:29.368081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:29.602239 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:30.368713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:31.369460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:31.606109 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:32.369476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:33.369896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:33.610206 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:34.370362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:35.371376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:35.614231 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:36.372265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:37.372446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:37.618066 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:38.372564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:39.372673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:39.623227 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:40.373739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:41.373719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:41.627877 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:42.374948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:43.374971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:43.634788 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:44.375248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:45.375342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:45.639533 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:46.376330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:47.379218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:47.643858 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:48.377664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:49.377783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:49.647976 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:50.377977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:51.378289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:51.657352 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:52.378857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:53.379250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:53.662026 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:54.379999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:55.380109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:55.665855 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:56.381141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:57.381414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:57.671025 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:46:58.381418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:46:59.381531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:46:59.675343 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:00.381663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:01.382349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:01.681678 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:02.382968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:03.383263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:03.685554 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:04.384342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:05.384733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:05.690683 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:06.385612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:07.385799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:07.694856 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:08.386488      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:09.386788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:09.698099 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:10.387502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:11.388256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:11.703022 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:12.388338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:13.389143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:13.710245 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:14.389322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:15.389524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:15.717806 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:16.389926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:17.391983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:17.722760 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:18.392174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:19.392387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:19.728491 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:20.393157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:21.393268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:21.731714 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:22.393973      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:23.393964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:23.736049 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:24.395357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:25.395740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:25.741089 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:26.396226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:27.396361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:27.745230 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:28.396913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:29.397025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:29.749777 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:30.397434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:31.397459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:31.757439 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:32.397560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:33.397750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:33.761516 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:34.398416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:35.399531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:35.765429 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:36.400220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:37.400451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:37.772034 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:38.400911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:39.401174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:39.778211 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:40.401596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:41.401843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:41.784179 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:42.402520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:43.404167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:43.790790 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:44.404299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:45.404559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:45.800339 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:46.406193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:47.406364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:47.804075 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:48.407229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:49.407341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:49.809994 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:50.408187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:51.408530      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:51.814111 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:52.408642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:53.408762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:53.818351 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:54.408872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:55.409058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:55.821543 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:56.409310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:57.409606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:57.827620 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:47:58.409623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:47:59.409731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:47:59.832080 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:00.410873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:01.411318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:01.841516 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:02.411927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:03.412482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:03.847684 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:04.413310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:05.413534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:05.852692 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:06.414615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:07.415077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:07.857919 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:08.415223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:09.415400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:09.865020 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:10.416178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:11.416445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:11.873705 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:12.416639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:13.416873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:13.882220 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:14.417874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:15.418081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:15.887536 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:16.419209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:17.419703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:17.895687 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:18.420737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:19.420929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:19.899697 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:20.421331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:21.422394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:21.907824 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:22.422640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:23.423146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:23.916819 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:24.423213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:25.423328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:25.922561 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:26.423395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:27.424327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:27.926819 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:28.424443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:29.424671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:29.931254 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:30.424792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:31.425617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:31.944685 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:32.426135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:33.425846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:33.952136 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:34.426108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:35.426776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:35.964632 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:36.427483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:37.428382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:37.968961 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:38.428080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:39.428282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:39.985831 23 container_probe.go:1759] Get pod liveness-51320df6-d577-4525-a2f8-e7df70f36d47 in namespace container-probe-6825
  E0111 01:48:40.428387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:41.428698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/11/25 01:48:41.987
  I0111 01:48:42.027209 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6825" for this suite. @ 01/11/25 01:48:42.048
• [242.958 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/11/25 01:48:42.093
  I0111 01:48:42.093196 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 01:48:42.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:48:42.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:48:42.15
  I0111 01:48:42.155222 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0111 01:48:42.170022 23 deployment.go:1200] Waiting for observed generation 1
  E0111 01:48:42.429662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:43.430098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:44.196073 23 deployment.go:1205] Waiting for all required pods to come up
  I0111 01:48:44.208772 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/11/25 01:48:44.208
  E0111 01:48:44.430663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:45.431083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:46.236644 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0111 01:48:46.246161 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0111 01:48:46.268298 23 deployment.go:314] Updating deployment webserver-deployment
  I0111 01:48:46.268344 23 deployment.go:1224] Waiting for observed generation 2
  E0111 01:48:46.431752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:47.431789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:48.283545 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0111 01:48:48.286071 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0111 01:48:48.288787 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0111 01:48:48.297463 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0111 01:48:48.297510 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0111 01:48:48.300224 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0111 01:48:48.307915 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0111 01:48:48.307955 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0111 01:48:48.326303 23 deployment.go:314] Updating deployment webserver-deployment
  I0111 01:48:48.326359 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0111 01:48:48.342331 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0111 01:48:48.346770 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0111 01:48:48.434139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:49.434376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:50.434682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:50.647364 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd6b7080-1bac-4b32-867a-d6e65216eab9",
      ResourceVersion: (string) (len=5) "40293",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 01:48:50.744672 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
      ResourceVersion: (string) (len=5) "40291",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "dd6b7080-1bac-4b32-867a-d6e65216eab9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 64 36 62 37 30  38 30 2d 31 62 61 63 2d  |\"dd6b7080-1bac-|
              00000120  34 62 33 32 2d 38 36 37  61 2d 64 36 65 36 35 32  |4b32-867a-d6e652|
              00000130  31 36 65 61 62 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |16eab9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:48:50.746330 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0111 01:48:50.746702 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
      ResourceVersion: (string) (len=5) "40284",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "dd6b7080-1bac-4b32-867a-d6e65216eab9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 64 36 62 37 30  38 30 2d 31 62 61 63 2d  |\"dd6b7080-1bac-|
              00000120  34 62 33 32 2d 38 36 37  61 2d 64 36 65 36 35 32  |4b32-867a-d6e652|
              00000130  31 36 65 61 62 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |16eab9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 01:48:51.059660 23 deployment.go:68] Pod "webserver-deployment-685b768f58-562mv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-562mv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6a051f4-b027-43ff-ae75-838207f15263",
      ResourceVersion: (string) (len=5) "40294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ztmbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ztmbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ztmbr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.076154 23 deployment.go:68] Pod "webserver-deployment-685b768f58-5hk6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5hk6j",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee70402c-e297-4e4d-9fec-c7db039d4ec6",
      ResourceVersion: (string) (len=5) "40297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lj2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lj2h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7lj2h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.080460 23 deployment.go:68] Pod "webserver-deployment-685b768f58-5tjg9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5tjg9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f7fe4a3-81a5-400e-a476-771eabd087e0",
      ResourceVersion: (string) (len=5) "40096",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 34  34 5c 22 7d 22 3a 7b 22  |.42.1.244\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4gjr8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4gjr8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.244",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.244"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://85b52bee1d0c4aeff1cd69a67ce450f065f309f88593541579c99bdc2249bae3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4gjr8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.084562 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6m7jw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6m7jw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1eff3f9d-2ad8-4a2a-be8c-88c7f4f6c2d1",
      ResourceVersion: (string) (len=5) "40290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9pqgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9pqgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9pqgd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.091994 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6vjsv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6vjsv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80d8bcce-17dc-493e-a6ad-5c646135dac5",
      ResourceVersion: (string) (len=5) "40281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcpk9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcpk9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lcpk9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.095604 23 deployment.go:68] Pod "webserver-deployment-685b768f58-7dbhf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7dbhf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae7a2fa5-09c8-4198-91e8-05cfbd7a1fde",
      ResourceVersion: (string) (len=5) "40359",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 34  37 5c 22 7d 22 3a 7b 22  |.42.1.247\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thtqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thtqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156930,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d22a14696f9933faeefa20d4210b7b3b4adb32d743c1ab28b493e654120a419",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-thtqr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.098761 23 deployment.go:68] Pod "webserver-deployment-685b768f58-986ll" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-986ll",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff6cd0ef-2f02-4961-b86f-43c3043b0f56",
      ResourceVersion: (string) (len=5) "40064",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 32  5c 22 7d 22 3a 7b 22 2e  |.42.0.92\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltfwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltfwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) (len=10) "10.42.0.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18b7dd0b2dc2ba51cc016d1f6b1cb3e7247b8114ad36b7981b495a6c3cce6960",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltfwr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.103283 23 deployment.go:68] Pod "webserver-deployment-685b768f58-c8rcv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c8rcv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8baf6358-4004-437c-94af-bb35204a15a1",
      ResourceVersion: (string) (len=5) "40082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 33  39 5c 22 7d 22 3a 7b 22  |.42.3.139\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5fww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5fww",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) (len=11) "10.42.3.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5fd56a712f21e7265b2ef37e0ee7c9b3517ea59239ef44c7e3fede7eaf27b531",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x5fww",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.107900 23 deployment.go:68] Pod "webserver-deployment-685b768f58-d4s5c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d4s5c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35e26bbf-f463-4838-8607-752a2b5b98ae",
      ResourceVersion: (string) (len=5) "40254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-krpjt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-krpjt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-krpjt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.111700 23 deployment.go:68] Pod "webserver-deployment-685b768f58-j2j54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j2j54",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef4c437c-9153-4881-ae7e-39292b0fc22b",
      ResourceVersion: (string) (len=5) "40285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvrbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvrbv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gvrbv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.114376 23 deployment.go:68] Pod "webserver-deployment-685b768f58-klk2p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-klk2p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79219f98-2b59-4e47-917f-75bbe3822168",
      ResourceVersion: (string) (len=5) "40302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvggv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvggv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zvggv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.118126 23 deployment.go:68] Pod "webserver-deployment-685b768f58-l9hk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l9hk7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb34e176-9810-43df-b7f5-c9d19245940a",
      ResourceVersion: (string) (len=5) "40305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2hqfv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2hqfv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2hqfv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.121376 23 deployment.go:68] Pod "webserver-deployment-685b768f58-n4kvq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n4kvq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdd53fdd-3468-43cc-9509-09e33ebacdbc",
      ResourceVersion: (string) (len=5) "40078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 33  38 5c 22 7d 22 3a 7b 22  |.42.3.138\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7vcv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7vcv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) (len=11) "10.42.3.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a3edf0ceb84c7120dbeb947dcaac0c9e925f9faa3f33e248e06203413f1c8565",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7vcv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.124505 23 deployment.go:68] Pod "webserver-deployment-685b768f58-q599s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q599s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "230dfea3-432d-4fda-82cb-ff1531a10f93",
      ResourceVersion: (string) (len=5) "40071",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 34  30 5c 22 7d 22 3a 7b 22  |.42.3.140\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5rvmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5rvmg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) (len=11) "10.42.3.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://35ae36fa618de0205ef82d219c75d5a6ab274ba1309d3f952cc93e359239bf1a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5rvmg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.127785 23 deployment.go:68] Pod "webserver-deployment-685b768f58-qmj6g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qmj6g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48519c6e-e7f2-474f-8a8b-49b9c8feca98",
      ResourceVersion: (string) (len=5) "40295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnr2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnr2k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wnr2k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.131262 23 deployment.go:68] Pod "webserver-deployment-685b768f58-r4rdb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r4rdb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18209483-651b-4daa-9004-0f6bd8830ded",
      ResourceVersion: (string) (len=5) "40308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmbfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmbfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xmbfj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.134653 23 deployment.go:68] Pod "webserver-deployment-685b768f58-rqvc7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rqvc7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e522271e-c4d0-4340-ae26-9c697fa2ab48",
      ResourceVersion: (string) (len=5) "40099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 39 30  5c 22 7d 22 3a 7b 22 2e  |.42.2.90\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vd2tk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vd2tk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) (len=10) "10.42.2.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ed90fef89030bd04946d037ba1fb7500bc95f99be980811544ea4318c583381a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vd2tk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.137728 23 deployment.go:68] Pod "webserver-deployment-685b768f58-rr7lv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rr7lv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ba1b4de-eaf8-4a48-a2d4-2a366123cb43",
      ResourceVersion: (string) (len=5) "40102",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 38 39  5c 22 7d 22 3a 7b 22 2e  |.42.2.89\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gp5z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gp5z7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) (len=10) "10.42.2.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0d142c429200295531de6d5f74fa47f5f4d69073b395ec0a0ba5ca7521e7b80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gp5z7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.142626 23 deployment.go:68] Pod "webserver-deployment-685b768f58-wpv7q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wpv7q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1bc4acb-224d-4f93-a9b2-22521a308bc1",
      ResourceVersion: (string) (len=5) "40286",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4cqq2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4cqq2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4cqq2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.145489 23 deployment.go:68] Pod "webserver-deployment-685b768f58-xzqlm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xzqlm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ababf31-057c-4b34-8ab5-5f0b1981ef0b",
      ResourceVersion: (string) (len=5) "40069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "47a6f5f2-f938-4437-8733-ab8588eada00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  61 36 66 35 66 32 2d 66  |d\":\"47a6f5f2-f|
              00000090  39 33 38 2d 34 34 33 37  2d 38 37 33 33 2d 61 62  |938-4437-8733-ab|
              000000a0  38 35 38 38 65 61 64 61  30 30 5c 22 7d 22 3a 7b  |8588eada00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 31  5c 22 7d 22 3a 7b 22 2e  |.42.0.91\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhwbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhwbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) (len=10) "10.42.0.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872156923,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6cc778475751d74eaea548513d1c049b69bf868536d0cfb82c880f92dcacc75",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lhwbt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.148331 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6pb6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6pb6x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7162b296-84b9-4339-95c3-8bf83e5008d7",
      ResourceVersion: (string) (len=5) "40248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gp4cb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gp4cb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gp4cb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.155299 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-97bb4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-97bb4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8f0b593-db45-423f-8f48-bb7317f2d478",
      ResourceVersion: (string) (len=5) "40304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 34 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.246\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5c7q2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5c7q2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5c7q2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.159708 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cmz2j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cmz2j",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66534e75-8017-4df7-8125-08927c42ae6e",
      ResourceVersion: (string) (len=5) "40190",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 39 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.93\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqh2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqh2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) (len=10) "10.42.0.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zqh2g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.162696 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d95jq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d95jq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52be099b-6a1a-4e24-a38a-eb7153b708c0",
      ResourceVersion: (string) (len=5) "40194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 34 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.141\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29hn4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29hn4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) (len=11) "10.42.3.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-29hn4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.166589 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hqb6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hqb6x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc5f153a-eddd-4fa4-a28c-3a5958f804fc",
      ResourceVersion: (string) (len=5) "40324",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dbq8w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dbq8w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dbq8w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.169579 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-k4m7r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-k4m7r",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b72c180-9c74-427c-871e-748d3712c59f",
      ResourceVersion: (string) (len=5) "40299",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sjtgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sjtgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sjtgd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.172394 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kk7sd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kk7sd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2c54dbe-8db1-4378-a99c-ffa9755d07d7",
      ResourceVersion: (string) (len=5) "40298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-slpd7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-slpd7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-slpd7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.175763 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lz27d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lz27d",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "686bc970-df56-4cb8-9e7f-8a0462ae83ca",
      ResourceVersion: (string) (len=5) "40257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s59x8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s59x8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-22-7.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.22.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.22.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s59x8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.179813 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pzfwn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pzfwn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b18a050-bc5b-4b14-95bf-e6dabb4df3eb",
      ResourceVersion: (string) (len=5) "40186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 39 31 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.91\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnvm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnvm4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-105.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.105"
        }
      },
      PodIP: (string) (len=10) "10.42.2.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dnvm4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.183210 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rj7f4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rj7f4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f5fa7f1-a979-4846-99d5-dff73d3a9f82",
      ResourceVersion: (string) (len=5) "40311",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jl9vn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jl9vn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jl9vn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.186362 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-st9kt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-st9kt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02110ca7-76ed-489a-91b0-ceab3b36f290",
      ResourceVersion: (string) (len=5) "40288",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 34 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.245\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7fch9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7fch9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=11) "10.42.1.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156926,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7fch9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.191001 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vnxtr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vnxtr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64466b7f-8b1b-49f6-8f94-2bb3e8a696c6",
      ResourceVersion: (string) (len=5) "40301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mm4gd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mm4gd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mm4gd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.193924 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xnp22" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xnp22",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-6358",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02cfb192-980f-490c-8d01-3ab71e45bda4",
      ResourceVersion: (string) (len=5) "40266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "01054af0-194a-431b-9c6c-f40462515df0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  30 35 34 61 66 30 2d 31  |d\":\"01054af0-1|
              00000090  39 34 61 2d 34 33 31 62  2d 39 63 36 63 2d 66 34  |94a-431b-9c6c-f4|
              000000a0  30 34 36 32 35 31 35 64  66 30 5c 22 7d 22 3a 7b  |0462515df0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2dtw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2dtw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872156928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872156928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l2dtw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 01:48:51.196705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6358" for this suite. @ 01/11/25 01:48:51.311
  E0111 01:48:51.435241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [9.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/11/25 01:48:51.464
  I0111 01:48:51.464936 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 01:48:51.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:48:51.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:48:51.637
  STEP: Create a pod @ 01/11/25 01:48:51.641
  E0111 01:48:52.435541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:53.435706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/11/25 01:48:53.716
  I0111 01:48:53.733284 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0111 01:48:53.733419 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-711" for this suite. @ 01/11/25 01:48:53.748
• [2.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 01/11/25 01:48:53.761
  I0111 01:48:53.761686 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:48:53.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:48:53.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:48:53.803
  STEP: creating service multiprotocol-test in namespace services-1253 @ 01/11/25 01:48:53.81
  STEP: creating pod pod1 in namespace services-1253 @ 01/11/25 01:48:53.86
  STEP: Creating pod pod1 in namespace services-1253 @ 01/11/25 01:48:53.86
  E0111 01:48:54.436010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:55.436331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1253 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/11/25 01:48:55.932
  I0111 01:48:55.945270 23 service.go:4553] successfully validated that service multiprotocol-test in namespace services-1253 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/11/25 01:48:55.945
  I0111 01:48:55.945523 23 resource.go:361] Creating new exec pod
  E0111 01:48:56.437313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:57.438161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:48:58.045954 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80'
  I0111 01:48:58.415939 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.194.200 80\nConnection to 10.43.194.200 80 port [tcp/http] succeeded!\n"
  I0111 01:48:58.415994 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:48:58.416070 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.194.200 80'
  E0111 01:48:58.438925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:48:59.439308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:00.439894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:00.799308 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.194.200 80\n"
  I0111 01:49:00.799355 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/11/25 01:49:00.799
  I0111 01:49:00.842022 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80'
  I0111 01:49:01.074400 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.194.200 80\nConnection to 10.43.194.200 80 port [tcp/http] succeeded!\n"
  I0111 01:49:01.074577 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:49:01.074684 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.194.200 80'
  E0111 01:49:01.441148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:02.441126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:03.361068 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.194.200 80\n"
  I0111 01:49:03.361125 23 builder.go:147] stdout: ""
  I0111 01:49:03.361193 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.194.200 80'
  E0111 01:49:03.441586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:04.442820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:05.443282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:05.531662 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.194.200 80\n+ echo hostName\n"
  I0111 01:49:05.531722 23 builder.go:147] stdout: ""
  I0111 01:49:05.531847 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.194.200 80'
  E0111 01:49:06.443510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:07.444440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:07.726679 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.194.200 80\n+ echo hostName\n"
  I0111 01:49:07.726906 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/11/25 01:49:07.726
  I0111 01:49:07.766165 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.194.200 80'
  E0111 01:49:08.445081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:09.445623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:09.952759 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.194.200 80\n"
  I0111 01:49:09.952813 23 builder.go:147] stdout: "pod1"
  I0111 01:49:09.952907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80'
  E0111 01:49:10.446678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:11.447346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:12.141942 23 builder.go:135] rc: 1
  I0111 01:49:12.142030 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.194.200 80
  nc: connect to 10.43.194.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0111 01:49:12.142125 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80'
  E0111 01:49:12.447811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:13.447947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:14.292393 23 builder.go:135] rc: 1
  I0111 01:49:14.292477 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.194.200 80
  + echo hostName
  nc: connect to 10.43.194.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0111 01:49:14.292593 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80'
  E0111 01:49:14.448528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:15.448748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:16.432466 23 builder.go:135] rc: 1
  I0111 01:49:16.432542 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-1253 exec execpodrg7f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.200 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.194.200 80
  + echo hostName
  nc: connect to 10.43.194.200 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0111 01:49:16.432712 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1253" for this suite. @ 01/11/25 01:49:16.437
• [22.686 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/11/25 01:49:16.447
  I0111 01:49:16.447677 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:49:16.448
  E0111 01:49:16.448770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:16.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:16.51
  STEP: Counting existing ResourceQuota @ 01/11/25 01:49:16.513
  E0111 01:49:17.448846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:18.449019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:19.450878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:20.451663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:21.452093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 01:49:21.529
  STEP: Ensuring resource quota status is calculated @ 01/11/25 01:49:21.561
  E0111 01:49:22.452516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:23.452541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 01/11/25 01:49:23.565
  STEP: Ensuring resource quota status captures replicaset creation @ 01/11/25 01:49:23.607
  E0111 01:49:24.452796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:25.452851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 01/11/25 01:49:25.613
  STEP: Ensuring resource quota status released usage @ 01/11/25 01:49:25.63
  E0111 01:49:26.453286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:27.453790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:27.642952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-822" for this suite. @ 01/11/25 01:49:27.656
• [11.231 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/11/25 01:49:27.679
  I0111 01:49:27.679736 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 01:49:27.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:27.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:27.727
  I0111 01:49:27.866398 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d7b7a395-42de-470c-b2fd-7ef24876382c", Controller:(*bool)(0xc001be6756), BlockOwnerDeletion:(*bool)(0xc001be6757)}}
  I0111 01:49:27.940610 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d7575bc8-a781-4d27-b25a-60ce4794334b", Controller:(*bool)(0xc000987176), BlockOwnerDeletion:(*bool)(0xc000987177)}}
  I0111 01:49:27.959246 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"9a8671d2-6a8f-479c-9519-62b46faa6dbf", Controller:(*bool)(0xc0009873f6), BlockOwnerDeletion:(*bool)(0xc0009873f7)}}
  E0111 01:49:28.454319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:29.454458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:30.454741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:31.455116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:32.455935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:32.990729 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1162" for this suite. @ 01/11/25 01:49:32.997
• [5.338 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/11/25 01:49:33.018
  I0111 01:49:33.018117 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename runtimeclass @ 01/11/25 01:49:33.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:33.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:33.08
  STEP: getting /apis @ 01/11/25 01:49:33.086
  STEP: getting /apis/node.k8s.io @ 01/11/25 01:49:33.097
  STEP: getting /apis/node.k8s.io/v1 @ 01/11/25 01:49:33.099
  STEP: creating @ 01/11/25 01:49:33.101
  STEP: watching @ 01/11/25 01:49:33.141
  I0111 01:49:33.141211 23 runtimeclass.go:275] starting watch
  STEP: getting @ 01/11/25 01:49:33.154
  STEP: listing @ 01/11/25 01:49:33.16
  STEP: patching @ 01/11/25 01:49:33.173
  STEP: updating @ 01/11/25 01:49:33.183
  I0111 01:49:33.198462 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/11/25 01:49:33.198
  STEP: deleting a collection @ 01/11/25 01:49:33.221
  I0111 01:49:33.242257 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8390" for this suite. @ 01/11/25 01:49:33.245
• [0.245 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/11/25 01:49:33.262
  I0111 01:49:33.262699 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/11/25 01:49:33.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:33.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:33.331
  E0111 01:49:33.456798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:34.457085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 01/11/25 01:49:35.425
  STEP: Cleaning up the configmap @ 01/11/25 01:49:35.436
  STEP: Cleaning up the pod @ 01/11/25 01:49:35.453
  E0111 01:49:35.457819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:35.485945 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9750" for this suite. @ 01/11/25 01:49:35.493
• [2.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/11/25 01:49:35.512
  I0111 01:49:35.512852 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:49:35.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:35.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:35.564
  STEP: Discovering how many secrets are in namespace by default @ 01/11/25 01:49:35.568
  E0111 01:49:36.458776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:37.458697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:38.459278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:39.459491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:40.460289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/11/25 01:49:40.573
  E0111 01:49:41.461465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:42.461230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:43.461330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:44.461478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:45.462480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 01:49:45.577
  STEP: Ensuring resource quota status is calculated @ 01/11/25 01:49:45.592
  E0111 01:49:46.463300      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:47.463472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 01/11/25 01:49:47.602
  STEP: Ensuring resource quota status captures secret creation @ 01/11/25 01:49:47.639
  E0111 01:49:48.463603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:49.465325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 01/11/25 01:49:49.645
  STEP: Ensuring resource quota status released usage @ 01/11/25 01:49:49.656
  E0111 01:49:50.465658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:51.466927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:49:51.661134 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2999" for this suite. @ 01/11/25 01:49:51.665
• [16.170 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/11/25 01:49:51.684
  I0111 01:49:51.684231 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename cronjob @ 01/11/25 01:49:51.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:49:51.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:49:51.724
  STEP: Creating a suspended cronjob @ 01/11/25 01:49:51.728
  STEP: Ensuring no jobs are scheduled @ 01/11/25 01:49:51.765
  E0111 01:49:52.467291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:53.467394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:54.468250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:55.468564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:56.469352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:57.469464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:58.469955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:49:59.469975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:00.470104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:01.470388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:02.470557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:03.470714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:04.471686      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:05.471819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:06.472535      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:07.472680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:08.472866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:09.473063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:10.473103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:11.473234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:12.473491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:13.473740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:14.473863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:15.474317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:16.475287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:17.475731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:18.475569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:19.476294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:20.476486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:21.477363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:22.478442      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:23.478698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:24.479361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:25.479194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:26.480223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:27.480362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:28.480484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:29.480753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:30.480869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:31.481015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:32.481414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:33.481633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:34.482586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:35.482724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:36.483659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:37.484512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:38.484594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:39.484869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:40.485449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:41.485589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:42.486579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:43.486833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:44.487537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:45.488336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:46.489305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:47.489458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:48.489585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:49.489817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:50.489874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:51.490696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:52.491865      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:53.492084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:54.492573      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:55.492789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:56.492869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:57.493226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:58.493641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:50:59.493849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:00.494800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:01.495378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:02.495834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:03.495693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:04.496543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:05.496862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:06.497852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:07.498251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:08.498555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:09.498717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:10.500356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:11.500317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:12.501345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:13.501502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:14.501651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:15.501741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:16.502470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:17.502713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:18.502806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:19.502966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:20.503117      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:21.504061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:22.504339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:23.504454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:24.504599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:25.504820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:26.506524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:27.506662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:28.506816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:29.507191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:30.508238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:31.508313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:32.508378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:33.508536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:34.508662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:35.508828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:36.509032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:37.509113      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:38.509472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:39.509897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:40.510449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:41.510412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:42.510378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:43.510584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:44.511287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:45.511395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:46.511954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:47.512150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:48.512778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:49.513208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:50.513768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:51.514573      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:52.515074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:53.515232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:54.515867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:55.516116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:56.516456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:57.516575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:58.516802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:51:59.517040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:00.522587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:01.523633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:02.524226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:03.526866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:04.526973      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:05.527239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:06.527280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:07.527576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:08.528671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:09.528890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:10.529243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:11.530088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:12.530721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:13.531866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:14.532320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:15.532649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:16.533136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:17.533450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:18.533865      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:19.534116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:20.534048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:21.534226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:22.534824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:23.535411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:24.535149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:25.535223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:26.535823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:27.536411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:28.536566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:29.536795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:30.537667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:31.538654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:32.539227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:33.539240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:34.540029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:35.540165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:36.540724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:37.540979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:38.541894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:39.541958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:40.542072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:41.542328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:42.543305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:43.544409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:44.545064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:45.545221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:46.545813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:47.546830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:48.547879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:49.548570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:50.548938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:51.549098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:52.549422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:53.549477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:54.550370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:55.550816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:56.550970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:57.551189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:58.551614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:52:59.551965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:00.552361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:01.553167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:02.553605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:03.553878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:04.554998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:05.555285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:06.556043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:07.556850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:08.557028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:09.557120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:10.557766      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:11.558405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:12.559209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:13.559451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:14.559996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:15.560264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:16.560751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:17.561099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:18.561414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:19.561485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:20.563098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:21.562775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:22.563009      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:23.563221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:24.563343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:25.564340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:26.564824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:27.565073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:28.565739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:29.566086      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:30.568206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:31.568362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:32.569284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:33.569502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:34.569899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:35.570186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:36.571196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:37.571242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:38.571483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:39.571532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:40.572053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:41.572824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:42.573677      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:43.573841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:44.574188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:45.574405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:46.574593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:47.574707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:48.575297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:49.576308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:50.577011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:51.577193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:52.577717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:53.577839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:54.578179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:55.578649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:56.579483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:57.579652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:58.580103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:53:59.581163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:00.581681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:01.582486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:02.582498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:03.582635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:04.582718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:05.582944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:06.583971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:07.584515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:08.584950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:09.585069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:10.585726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:11.585729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:12.586225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:13.586397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:14.586442      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:15.587448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:16.588110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:17.588301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:18.589026      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:19.589288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:20.589707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:21.590432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:22.592361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:23.592688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:24.593019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:25.593283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:26.593765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:27.593889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:28.594420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:29.594579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:30.595316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:31.596339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:32.597660      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:33.597793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:34.597998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:35.598196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:36.598457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:37.599244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:38.599519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:39.600293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:40.600514      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:41.600651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:42.601193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:43.601964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:44.602191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:45.603821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:46.603821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:47.603962      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:48.604051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:49.604200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:50.604303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:51.605232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/11/25 01:54:51.766
  STEP: Removing cronjob @ 01/11/25 01:54:51.777
  I0111 01:54:51.787209 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7307" for this suite. @ 01/11/25 01:54:51.796
• [300.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 01/11/25 01:54:51.81
  I0111 01:54:51.810203 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption @ 01/11/25 01:54:51.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:54:51.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:54:51.865
  I0111 01:54:51.902277 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 01:54:52.605411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:53.605468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:54.606292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:55.606343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:56.606408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:57.606745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:58.607795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:54:59.607947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:00.608705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:01.608672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:02.609681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:03.609964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:04.610710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:05.610532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:06.611193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:07.611280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:08.611931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:09.612875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:10.613146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:11.613260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:12.614347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:13.615389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:14.614823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:15.614964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:16.615666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:17.616632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:18.617412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:19.618414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:20.618495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:21.619620      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:22.619648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:23.619753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:24.620737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:25.620879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:26.621141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:27.621400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:28.622432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:29.622498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:30.622983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:31.623553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:32.623727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:33.624798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:34.625681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:35.625917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:36.626757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:37.626888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:38.627801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:39.627991      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:40.628205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:41.628315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:42.628591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:43.628943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:44.630379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:45.630786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:46.631045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:47.631243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:48.631474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:49.631685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:50.631852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:51.632537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:55:51.908352 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/11/25 01:55:51.913
  STEP: Adding a custom resource @ 01/11/25 01:55:51.913
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/11/25 01:55:51.936
  I0111 01:55:51.963700 23 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/11/25 01:55:51.963
  E0111 01:55:52.632459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:53.632615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/11/25 01:55:53.99
  I0111 01:55:54.008964 23 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/11/25 01:55:54.009
  E0111 01:55:54.632909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:55.632942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 01/11/25 01:55:56.046
  I0111 01:55:56.057870 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0111 01:55:56.578360 23 pod_client.go:173] Successfully updated pod "victim-pod"
  E0111 01:55:56.633779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/11/25 01:55:56.64
  STEP: Removing a custom resource @ 01/11/25 01:55:56.667
  STEP: Removing a custom resource @ 01/11/25 01:55:56.684
  STEP: Removing a custom resource @ 01/11/25 01:55:56.693
  I0111 01:55:56.701543 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9486" for this suite. @ 01/11/25 01:55:56.707
• [64.914 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/11/25 01:55:56.724
  I0111 01:55:56.724375 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subpath @ 01/11/25 01:55:56.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:55:56.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:55:56.805
  STEP: Setting up data @ 01/11/25 01:55:56.815
  STEP: Creating pod pod-subpath-test-configmap-md4b @ 01/11/25 01:55:56.841
  STEP: Creating a pod to test atomic-volume-subpath @ 01/11/25 01:55:56.841
  E0111 01:55:57.633690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:58.633878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:55:59.633977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:00.634680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:01.636234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:02.635792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:03.636662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:04.636786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:05.636945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:06.637715      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:07.637925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:08.638014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:09.638267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:10.638183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:11.638346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:12.638403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:13.638747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:14.639195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:15.639252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:16.639361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:17.639511      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:18.639592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:19.639816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:20.640654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:56:21.017
  I0111 01:56:21.021415 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-subpath-test-configmap-md4b container test-container-subpath-configmap-md4b: <nil>
  STEP: delete the pod @ 01/11/25 01:56:21.038
  STEP: Deleting pod pod-subpath-test-configmap-md4b @ 01/11/25 01:56:21.089
  I0111 01:56:21.089626 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-md4b" in namespace "subpath-8101"
  I0111 01:56:21.104367 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8101" for this suite. @ 01/11/25 01:56:21.109
• [24.397 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/11/25 01:56:21.121
  I0111 01:56:21.121840 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:56:21.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:21.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:21.168
  STEP: Creating configMap with name projected-configmap-test-volume-1ebe9f76-890b-4d8b-ad0f-c0040c6fe9f1 @ 01/11/25 01:56:21.172
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:56:21.192
  E0111 01:56:21.641490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:22.643287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:23.643199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:24.643387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:56:25.25
  I0111 01:56:25.253543 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-edd6b248-afa0-4347-88fb-ee73e5c122a0 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:56:25.275
  I0111 01:56:25.318189 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-466" for this suite. @ 01/11/25 01:56:25.324
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 01/11/25 01:56:25.349
  I0111 01:56:25.349756 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 01:56:25.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:25.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:25.43
  STEP: creating Agnhost RC @ 01/11/25 01:56:25.435
  I0111 01:56:25.436109 23 kubectl.go:1534] namespace kubectl-585
  I0111 01:56:25.436540 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-585 create -f -'
  E0111 01:56:25.643629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:25.701132 23 builder.go:146] stderr: ""
  I0111 01:56:25.701174 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/11/25 01:56:25.701
  E0111 01:56:26.644287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:26.705283 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 01:56:26.705331 23 framework.go:733] Found 0 / 1
  E0111 01:56:27.645328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:27.708614 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 01:56:27.708653 23 framework.go:733] Found 1 / 1
  I0111 01:56:27.708673 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0111 01:56:27.712012 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0111 01:56:27.712048 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0111 01:56:27.712060 23 kubectl.go:1541] wait on agnhost-primary startup in kubectl-585 
  I0111 01:56:27.712111 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-585 logs agnhost-primary-q2lvb agnhost-primary'
  I0111 01:56:27.797787 23 builder.go:146] stderr: ""
  I0111 01:56:27.797854 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/11/25 01:56:27.798
  I0111 01:56:27.798179 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-585 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0111 01:56:27.917199 23 builder.go:146] stderr: ""
  I0111 01:56:27.917260 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0111 01:56:27.947462 23 utils.go:1203] Service rm2 in namespace kubectl-585 found.
  E0111 01:56:28.646395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:29.646850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: exposing service @ 01/11/25 01:56:29.955
  I0111 01:56:29.955355 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-585 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0111 01:56:30.086076 23 builder.go:146] stderr: ""
  I0111 01:56:30.086123 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0111 01:56:30.118826 23 utils.go:1203] Service rm3 in namespace kubectl-585 found.
  E0111 01:56:30.646917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:31.647379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:32.126341 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-585" for this suite. @ 01/11/25 01:56:32.13
• [6.792 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/11/25 01:56:32.141
  I0111 01:56:32.141363 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption @ 01/11/25 01:56:32.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:32.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:32.214
  STEP: Creating a kubernetes client @ 01/11/25 01:56:32.219
  I0111 01:56:32.219612 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption-2 @ 01/11/25 01:56:32.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:32.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:32.332
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:56:32.351
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:56:32.388
  STEP: Waiting for the pdb to be processed @ 01/11/25 01:56:32.428
  E0111 01:56:32.648348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:33.649361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 01/11/25 01:56:34.431
  STEP: listing a collection of PDBs in namespace disruption-566 @ 01/11/25 01:56:34.436
  STEP: deleting a collection of PDBs @ 01/11/25 01:56:34.438
  STEP: Waiting for the PDB collection to be deleted @ 01/11/25 01:56:34.458
  I0111 01:56:34.462050 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8379" for this suite. @ 01/11/25 01:56:34.467
  I0111 01:56:34.484995 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-566" for this suite. @ 01/11/25 01:56:34.568
• [2.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/11/25 01:56:34.588
  I0111 01:56:34.588958 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename init-container @ 01/11/25 01:56:34.595
  E0111 01:56:34.650703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:34.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:34.661
  STEP: creating the pod @ 01/11/25 01:56:34.666
  I0111 01:56:34.667010 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0111 01:56:35.650417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:36.650524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:37.651229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:38.042248 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2031" for this suite. @ 01/11/25 01:56:38.054
• [3.488 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 01/11/25 01:56:38.077
  I0111 01:56:38.077186 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 01:56:38.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:38.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:38.145
  STEP: Creating a pod to test downward api env vars @ 01/11/25 01:56:38.152
  E0111 01:56:38.651313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:39.651473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:40.651861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:41.652406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:56:42.206
  I0111 01:56:42.213374 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-a1e95724-024d-4cfe-916e-4e384a5eb449 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 01:56:42.221
  I0111 01:56:42.257574 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5726" for this suite. @ 01/11/25 01:56:42.263
• [4.205 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/11/25 01:56:42.283
  I0111 01:56:42.283309 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pod-network-test @ 01/11/25 01:56:42.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:56:42.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:56:42.352
  STEP: Performing setup for networking test in namespace pod-network-test-9762 @ 01/11/25 01:56:42.359
  STEP: creating a selector @ 01/11/25 01:56:42.359
  STEP: Creating the service pods in kubernetes @ 01/11/25 01:56:42.36
  I0111 01:56:42.360106 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0111 01:56:42.653208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:43.653260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:44.653790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:45.653805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:46.654319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:47.654990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:48.655572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:49.656369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:50.657017      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:51.657407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:52.657525      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:53.657833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:54.657839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:55.658549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:56.658741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/11/25 01:56:56.702
  E0111 01:56:57.659073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:56:58.659449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:58.789590 23 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0111 01:56:58.789630 23 utils.go:496] Going to poll 10.42.2.99 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0111 01:56:58.792590 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.99 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9762 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:56:58.792638 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:56:58.792698 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9762/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.99+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0111 01:56:59.659368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:56:59.861881 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0111 01:56:59.861939 23 utils.go:496] Going to poll 10.42.1.8 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0111 01:56:59.865319 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.8 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9762 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:56:59.865355 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:56:59.865435 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9762/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.8+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0111 01:57:00.659472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:00.907450 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0111 01:57:00.907768 23 utils.go:496] Going to poll 10.42.0.99 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0111 01:57:00.911381 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.99 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9762 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:57:00.911416 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:57:00.911500 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9762/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.99+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0111 01:57:01.660274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:01.969536 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0111 01:57:01.969720 23 utils.go:496] Going to poll 10.42.3.148 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0111 01:57:01.974183 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.148 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9762 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 01:57:01.974310 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 01:57:01.974442 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9762/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.148+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0111 01:57:02.660194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:03.069756 23 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0111 01:57:03.069920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9762" for this suite. @ 01/11/25 01:57:03.077
• [20.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/11/25 01:57:03.098
  I0111 01:57:03.098972 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 01:57:03.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:03.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:03.146
  STEP: Creating replication controller my-hostname-basic-e694103f-3e18-4faf-b3aa-5a3ef5f8153c @ 01/11/25 01:57:03.151
  I0111 01:57:03.179266 23 resource.go:87] Pod name my-hostname-basic-e694103f-3e18-4faf-b3aa-5a3ef5f8153c: Found 0 pods out of 1
  E0111 01:57:03.660738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:04.661229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:05.661469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:06.662572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:07.662814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:08.190737 23 resource.go:87] Pod name my-hostname-basic-e694103f-3e18-4faf-b3aa-5a3ef5f8153c: Found 1 pods out of 1
  I0111 01:57:08.190888 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-e694103f-3e18-4faf-b3aa-5a3ef5f8153c" are running
  I0111 01:57:08.200639 23 rc.go:523] Pod "my-hostname-basic-e694103f-3e18-4faf-b3aa-5a3ef5f8153c-6fhw6" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-11 01:57:04 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-11 01:57:03 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-11 01:57:04 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-11 01:57:04 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-11 01:57:03 +0000 UTC Reason: Message:}])
  I0111 01:57:08.200796 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/11/25 01:57:08.2
  I0111 01:57:08.313937 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6343" for this suite. @ 01/11/25 01:57:08.319
• [5.249 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/11/25 01:57:08.348
  I0111 01:57:08.348309 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 01:57:08.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:08.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:08.432
  STEP: creating service in namespace services-5504 @ 01/11/25 01:57:08.451
  STEP: creating service affinity-clusterip in namespace services-5504 @ 01/11/25 01:57:08.452
  STEP: creating replication controller affinity-clusterip in namespace services-5504 @ 01/11/25 01:57:08.491
  I0111 01:57:08.526061      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5504, replica count: 3
  E0111 01:57:08.663571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:09.666057      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:10.666768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:11.577378      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 01:57:11.601586 23 resource.go:361] Creating new exec pod
  E0111 01:57:11.669759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:12.668380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:13.670717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:14.663344 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-5504 exec execpod-affinityc4sjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0111 01:57:14.671383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:14.837958 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.43.167.64) 80 port [tcp/http] succeeded!\n"
  I0111 01:57:14.838017 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:57:14.840321 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-5504 exec execpod-affinityc4sjc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.167.64 80'
  I0111 01:57:15.037292 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.167.64 80\n+ echo hostName\nConnection to 10.43.167.64 80 port [tcp/http] succeeded!\n"
  I0111 01:57:15.037398 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0111 01:57:15.037745 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-5504 exec execpod-affinityc4sjc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.167.64:80/ ; done'
  I0111 01:57:15.337204 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.167.64:80/\n"
  I0111 01:57:15.338890 23 builder.go:147] stdout: "\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5\naffinity-clusterip-m5mb5"
  I0111 01:57:15.339104 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339161 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339180 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339192 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339241 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339253 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339265 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339312 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339326 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339337 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339383 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339395 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339417 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339461 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339484 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339504 23 service.go:242] Received response from host: affinity-clusterip-m5mb5
  I0111 01:57:15.339662 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5504, will wait for the garbage collector to delete the pods @ 01/11/25 01:57:15.4
  I0111 01:57:15.482530 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 15.966079ms
  I0111 01:57:15.583722 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.189477ms
  E0111 01:57:15.672056      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:16.672543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:17.673492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:18.347697 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5504" for this suite. @ 01/11/25 01:57:18.354
• [10.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/11/25 01:57:18.384
  I0111 01:57:18.384743 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:57:18.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:18.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:18.432
  STEP: Setting up server cert @ 01/11/25 01:57:18.537
  E0111 01:57:18.675012      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:57:18.973
  STEP: Deploying the webhook pod @ 01/11/25 01:57:18.986
  STEP: Wait for the deployment to be ready @ 01/11/25 01:57:19.017
  I0111 01:57:19.042875 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:57:19.675375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:20.675250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:57:21.066
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:57:21.092
  E0111 01:57:21.675998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:22.093563 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/11/25 01:57:22.102
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/11/25 01:57:22.149
  I0111 01:57:22.149935 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  I0111 01:57:22.369302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2073" for this suite. @ 01/11/25 01:57:22.377
  STEP: Destroying namespace "webhook-markers-8307" for this suite. @ 01/11/25 01:57:22.401
• [4.038 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/11/25 01:57:22.423
  I0111 01:57:22.423778 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:57:22.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:22.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:22.529
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 01:57:22.532
  E0111 01:57:22.677347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:23.677919      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:24.678297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:25.678761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:57:26.61
  I0111 01:57:26.613040 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-ecd51e06-2257-4419-b1f2-c5d304996736 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 01:57:26.618
  I0111 01:57:26.662220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5003" for this suite. @ 01/11/25 01:57:26.667
  E0111 01:57:26.679654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.261 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/11/25 01:57:26.684
  I0111 01:57:26.684855 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 01:57:26.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:26.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:26.755
  STEP: Creating configMap with name configmap-test-volume-66c2ddc5-cdc2-4716-85b5-80944b1a5104 @ 01/11/25 01:57:26.758
  STEP: Creating a pod to test consume configMaps @ 01/11/25 01:57:26.771
  E0111 01:57:27.681494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:28.681617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:29.682064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:30.682501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:57:30.808
  I0111 01:57:30.815891 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-a771bbff-0015-4cdc-837a-c0d902a32ee7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 01:57:30.829
  I0111 01:57:30.886206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2143" for this suite. @ 01/11/25 01:57:30.895
• [4.226 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/11/25 01:57:30.911
  I0111 01:57:30.911849 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 01:57:30.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:30.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:30.988
  STEP: Setting up server cert @ 01/11/25 01:57:31.101
  E0111 01:57:31.682822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 01:57:31.744
  STEP: Deploying the webhook pod @ 01/11/25 01:57:31.761
  STEP: Wait for the deployment to be ready @ 01/11/25 01:57:31.81
  I0111 01:57:31.854120 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 01:57:32.682799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:33.682875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 01:57:33.869
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 01:57:33.896
  E0111 01:57:34.683831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:34.897024 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0111 01:57:34.902664 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3458-crds.webhook.example.com via the AdmissionRegistration API @ 01/11/25 01:57:35.42
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/11/25 01:57:35.457
  E0111 01:57:35.684064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:36.684552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:37.685643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:57:38.221094 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8263" for this suite. @ 01/11/25 01:57:38.225
  STEP: Destroying namespace "webhook-markers-8388" for this suite. @ 01/11/25 01:57:38.236
• [7.336 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 01/11/25 01:57:38.247
  I0111 01:57:38.248002 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 01:57:38.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:38.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:38.315
  STEP: creating a ServiceAccount @ 01/11/25 01:57:38.318
  STEP: watching for the ServiceAccount to be added @ 01/11/25 01:57:38.338
  STEP: patching the ServiceAccount @ 01/11/25 01:57:38.342
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/11/25 01:57:38.352
  STEP: deleting the ServiceAccount @ 01/11/25 01:57:38.356
  I0111 01:57:38.382599 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2729" for this suite. @ 01/11/25 01:57:38.389
• [0.166 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/11/25 01:57:38.414
  I0111 01:57:38.414292 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:57:38.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:38.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:38.465
  STEP: Creating secret with name projected-secret-test-bc45dcce-d3eb-4e30-8fee-7d749b4adea8 @ 01/11/25 01:57:38.468
  STEP: Creating a pod to test consume secrets @ 01/11/25 01:57:38.482
  E0111 01:57:38.686894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:39.687258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:40.688160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:41.688377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 01:57:42.535
  I0111 01:57:42.539563 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-secrets-6df3a9dd-ce68-4209-8377-25e210732e23 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 01:57:42.563
  I0111 01:57:42.613960 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1952" for this suite. @ 01/11/25 01:57:42.619
• [4.231 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/11/25 01:57:42.646
  I0111 01:57:42.646267 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename cronjob @ 01/11/25 01:57:42.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:57:42.688
  E0111 01:57:42.689274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:57:42.692
  STEP: Creating a cronjob @ 01/11/25 01:57:42.695
  STEP: Ensuring more than one job is running at a time @ 01/11/25 01:57:42.721
  E0111 01:57:43.689549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:44.690036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:45.690877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:46.691556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:47.691875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:48.692445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:49.692615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:50.692824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:51.693570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:52.693795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:53.694123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:54.694377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:55.695151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:56.695296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:57.695283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:58.695296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:57:59.695591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:00.696385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:01.696823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:02.696888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:03.697400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:04.697540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:05.697838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:06.697974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:07.698116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:08.698364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:09.699465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:10.699927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:11.700276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:12.700783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:13.700913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:14.700907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:15.701010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:16.701156      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:17.702257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:18.703150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:19.703360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:20.704368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:21.704545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:22.704916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:23.705767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:24.706129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:25.706782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:26.707845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:27.708260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:28.708467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:29.708567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:30.708709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:31.709712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:32.709938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:33.710678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:34.713265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:35.713291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:36.716790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:37.716969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:38.717193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:39.717310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:40.717513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:41.719539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:42.719885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:43.720063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:44.720254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:45.720325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:46.720453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:47.720824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:48.721783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:49.721886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:50.721930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:51.722703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:52.723262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:53.723781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:54.724851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:55.724992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:56.725410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:57.725497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:58.726819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:58:59.726409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/11/25 01:59:00.724
  E0111 01:59:00.727079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/11/25 01:59:00.729
  I0111 01:59:00.740761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2845" for this suite. @ 01/11/25 01:59:00.744
• [78.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/11/25 01:59:00.76
  I0111 01:59:00.760601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 01:59:00.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:59:00.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:59:00.896
  I0111 01:59:00.899700 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 01:59:01.727759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:02.727971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/11/25 01:59:03.141
  I0111 01:59:03.141837 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-6362 --namespace=crd-publish-openapi-6362 create -f -'
  I0111 01:59:03.471666 23 builder.go:146] stderr: ""
  I0111 01:59:03.471742 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-812-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0111 01:59:03.471800 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-6362 --namespace=crd-publish-openapi-6362 delete e2e-test-crd-publish-openapi-812-crds test-cr'
  I0111 01:59:03.592766 23 builder.go:146] stderr: ""
  I0111 01:59:03.592807 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-812-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0111 01:59:03.592872 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-6362 --namespace=crd-publish-openapi-6362 apply -f -'
  I0111 01:59:03.689140 23 builder.go:146] stderr: ""
  I0111 01:59:03.689183 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-812-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0111 01:59:03.689239 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-6362 --namespace=crd-publish-openapi-6362 delete e2e-test-crd-publish-openapi-812-crds test-cr'
  E0111 01:59:03.728767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:59:03.785177 23 builder.go:146] stderr: ""
  I0111 01:59:03.785230 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-812-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/11/25 01:59:03.785
  I0111 01:59:03.785303 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-6362 explain e2e-test-crd-publish-openapi-812-crds'
  I0111 01:59:03.855392 23 builder.go:146] stderr: ""
  I0111 01:59:03.855450 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-812-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0111 01:59:04.729108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:05.729194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:59:05.775832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6362" for this suite. @ 01/11/25 01:59:05.785
• [5.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 01/11/25 01:59:05.801
  I0111 01:59:05.801237 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 01:59:05.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:59:05.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:59:05.843
  STEP: Creating a job @ 01/11/25 01:59:05.848
  STEP: Ensuring active pods == parallelism @ 01/11/25 01:59:05.86
  E0111 01:59:06.730318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:07.730569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/11/25 01:59:07.872
  STEP: deleting Job.batch foo in namespace job-3230, will wait for the garbage collector to delete the pods @ 01/11/25 01:59:07.872
  I0111 01:59:07.935070 23 resources.go:139] Deleting Job.batch foo took: 9.289872ms
  I0111 01:59:08.035416 23 resources.go:163] Terminating Job.batch foo pods took: 100.374217ms
  E0111 01:59:08.731402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/11/25 01:59:09.236
  I0111 01:59:09.252026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3230" for this suite. @ 01/11/25 01:59:09.256
• [3.469 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/11/25 01:59:09.27
  I0111 01:59:09.270433 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 01:59:09.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:59:09.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:59:09.323
  STEP: Creating a ResourceQuota with terminating scope @ 01/11/25 01:59:09.326
  STEP: Ensuring ResourceQuota status is calculated @ 01/11/25 01:59:09.342
  E0111 01:59:09.732096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:10.732674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 01/11/25 01:59:11.346
  STEP: Ensuring ResourceQuota status is calculated @ 01/11/25 01:59:11.365
  E0111 01:59:11.733699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:12.733915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 01/11/25 01:59:13.37
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/11/25 01:59:13.396
  E0111 01:59:13.734748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:14.734416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/11/25 01:59:15.4
  E0111 01:59:15.734247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:16.734383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/11/25 01:59:17.403
  STEP: Ensuring resource quota status released the pod usage @ 01/11/25 01:59:17.45
  E0111 01:59:17.735194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:18.735318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 01/11/25 01:59:19.454
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/11/25 01:59:19.479
  E0111 01:59:19.736295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:20.736658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/11/25 01:59:21.482
  E0111 01:59:21.737181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:22.737421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/11/25 01:59:23.486
  STEP: Ensuring resource quota status released the pod usage @ 01/11/25 01:59:23.513
  E0111 01:59:23.738735      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:24.738903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 01:59:25.518253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-250" for this suite. @ 01/11/25 01:59:25.521
• [16.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/11/25 01:59:25.533
  I0111 01:59:25.533356 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 01:59:25.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 01:59:25.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 01:59:25.597
  STEP: Creating secret with name s-test-opt-del-ceb23755-af7c-4dc7-b4fa-e2bf57f7f9f2 @ 01/11/25 01:59:25.626
  STEP: Creating secret with name s-test-opt-upd-ef6cdd76-74f5-4da5-82e0-ebf8430ecfdf @ 01/11/25 01:59:25.637
  STEP: Creating the pod @ 01/11/25 01:59:25.648
  E0111 01:59:25.739494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:26.740477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ceb23755-af7c-4dc7-b4fa-e2bf57f7f9f2 @ 01/11/25 01:59:27.707
  STEP: Updating secret s-test-opt-upd-ef6cdd76-74f5-4da5-82e0-ebf8430ecfdf @ 01/11/25 01:59:27.723
  E0111 01:59:27.741562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-create-0646913f-a759-42c1-b64e-9fc2152281f6 @ 01/11/25 01:59:27.742
  STEP: waiting to observe update in volume @ 01/11/25 01:59:27.762
  E0111 01:59:28.742074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:29.742314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:30.742413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:31.742669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:32.743637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:33.744340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:34.744461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:35.745583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:36.746136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:37.746274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:38.746667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:39.746799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:40.748332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:41.747540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:42.748276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:43.748659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:44.749141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:45.749548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:46.750623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:47.750747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:48.751302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:49.751681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:50.752058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:51.751965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:52.752353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:53.752568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:54.752941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:55.753169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:56.753746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:57.753894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:58.754022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 01:59:59.754205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:00.754626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:01.755526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:02.755628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:03.755858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:04.756340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:05.756795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:06.757966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:07.758454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:08.758712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:09.758769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:10.759128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:11.759256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:12.760326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:13.760704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:14.761634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:15.761760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:16.762122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:17.763380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:18.764071      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:19.765184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:20.765302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:21.765429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:22.765741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:23.766123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:24.766205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:25.767195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:26.767222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:27.767253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:28.768346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:29.768539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:30.768724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:31.768926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:32.768966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:33.769153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:34.769236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:35.769335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:36.769728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:37.770129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:38.771153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:39.771390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:40.773146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:41.773437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:42.774596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:43.774694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:00:44.125113 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-82" for this suite. @ 01/11/25 02:00:44.129
• [78.606 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/11/25 02:00:44.139
  I0111 02:00:44.139845 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 02:00:44.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:00:44.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:00:44.241
  STEP: Setting up server cert @ 01/11/25 02:00:44.301
  E0111 02:00:44.774831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 02:00:44.984
  STEP: Deploying the webhook pod @ 01/11/25 02:00:44.998
  STEP: Wait for the deployment to be ready @ 01/11/25 02:00:45.035
  I0111 02:00:45.052361 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 02:00:45.775103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:46.775774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 02:00:47.061
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 02:00:47.083
  E0111 02:00:47.776164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:00:48.084221 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/11/25 02:00:48.091
  STEP: create a namespace for the webhook @ 01/11/25 02:00:48.122
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/11/25 02:00:48.201
  I0111 02:00:48.330974 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6546" for this suite. @ 01/11/25 02:00:48.336
  STEP: Destroying namespace "webhook-markers-5956" for this suite. @ 01/11/25 02:00:48.346
  STEP: Destroying namespace "fail-closed-namespace-3263" for this suite. @ 01/11/25 02:00:48.357
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/11/25 02:00:48.38
  I0111 02:00:48.380608 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename limitrange @ 01/11/25 02:00:48.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:00:48.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:00:48.462
  STEP: Creating LimitRange "e2e-limitrange-fm8nq" in namespace "limitrange-2756" @ 01/11/25 02:00:48.465
  STEP: Creating another limitRange in another namespace @ 01/11/25 02:00:48.489
  I0111 02:00:48.535700 23 limit_range.go:299] Namespace "e2e-limitrange-fm8nq-333" created
  I0111 02:00:48.535827 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-fm8nq" in namespace "e2e-limitrange-fm8nq-333"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-fm8nq" @ 01/11/25 02:00:48.558
  I0111 02:00:48.561170 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-fm8nq" in "limitrange-2756" namespace @ 01/11/25 02:00:48.561
  I0111 02:00:48.572475 23 limit_range.go:335] LimitRange "e2e-limitrange-fm8nq" has been patched
  STEP: Delete LimitRange "e2e-limitrange-fm8nq" by Collection with labelSelector: "e2e-limitrange-fm8nq=patched" @ 01/11/25 02:00:48.572
  STEP: Confirm that the limitRange "e2e-limitrange-fm8nq" has been deleted @ 01/11/25 02:00:48.584
  I0111 02:00:48.585148 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0111 02:00:48.589565 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-fm8nq=patched"
  I0111 02:00:48.589614 23 limit_range.go:344] LimitRange "e2e-limitrange-fm8nq" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-fm8nq" @ 01/11/25 02:00:48.589
  I0111 02:00:48.592318 23 limit_range.go:350] Found 1 limitRange
  I0111 02:00:48.592458 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2756" for this suite. @ 01/11/25 02:00:48.597
  STEP: Destroying namespace "e2e-limitrange-fm8nq-333" for this suite. @ 01/11/25 02:00:48.605
• [0.234 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/11/25 02:00:48.614
  I0111 02:00:48.614990 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 02:00:48.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:00:48.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:00:48.664
  STEP: Creating configMap with name configmap-test-volume-map-3008c2cf-c0f2-4802-9aa9-ecc9e166b0e4 @ 01/11/25 02:00:48.67
  STEP: Creating a pod to test consume configMaps @ 01/11/25 02:00:48.685
  E0111 02:00:48.777227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:49.777380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:50.778359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:51.778668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:00:52.726
  I0111 02:00:52.733613 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-configmaps-2253ffc5-6dfb-475a-8596-b916cb663f7d container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 02:00:52.747
  E0111 02:00:52.778970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:00:52.795150 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7966" for this suite. @ 01/11/25 02:00:52.8
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/11/25 02:00:52.818
  I0111 02:00:52.818717 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-runtime @ 01/11/25 02:00:52.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:00:52.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:00:52.88
  STEP: create the container @ 01/11/25 02:00:52.89
  W0111 02:00:52.923570      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/11/25 02:00:52.923
  E0111 02:00:53.779481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:54.779942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:55.780311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/11/25 02:00:56
  STEP: the container should be terminated @ 01/11/25 02:00:56.009
  STEP: the termination message should be set @ 01/11/25 02:00:56.009
  I0111 02:00:56.009261 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/11/25 02:00:56.009
  I0111 02:00:56.046038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4672" for this suite. @ 01/11/25 02:00:56.049
• [3.247 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/11/25 02:00:56.065
  I0111 02:00:56.065992 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:00:56.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:00:56.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:00:56.104
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/11/25 02:00:56.107
  E0111 02:00:56.781361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:57.781600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:58.782552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:00:59.782792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:01:00.165
  I0111 02:01:00.172864 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-2d1d3c92-a459-447c-8b22-0ab53732d143 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:01:00.194
  I0111 02:01:00.234283 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8596" for this suite. @ 01/11/25 02:01:00.24
• [4.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 01/11/25 02:01:00.263
  I0111 02:01:00.263303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 02:01:00.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:01:00.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:01:00.317
  STEP: Creating a pod to test downward api env vars @ 01/11/25 02:01:00.321
  E0111 02:01:00.782778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:01.783658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:02.788586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:03.784245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:01:04.402
  I0111 02:01:04.404790 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-cf6c0d53-ab14-4c81-9ba0-499e6aecac2f container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 02:01:04.412
  I0111 02:01:04.463510 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2893" for this suite. @ 01/11/25 02:01:04.471
• [4.226 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/11/25 02:01:04.5
  I0111 02:01:04.500258 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 02:01:04.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:01:04.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:01:04.575
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8800 @ 01/11/25 02:01:04.579
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/11/25 02:01:04.611
  STEP: creating service externalsvc in namespace services-8800 @ 01/11/25 02:01:04.611
  STEP: creating replication controller externalsvc in namespace services-8800 @ 01/11/25 02:01:04.686
  I0111 02:01:04.703493      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8800, replica count: 2
  E0111 02:01:04.784768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:05.784805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:06.784991      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:07.754949      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/11/25 02:01:07.759
  E0111 02:01:07.786584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:07.788678 23 resource.go:361] Creating new exec pod
  E0111 02:01:08.787474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:09.787773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:09.832543 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-8800 exec execpodsqr2j -- /bin/sh -x -c nslookup clusterip-service.services-8800.svc.cluster.local'
  I0111 02:01:10.068523 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-8800.svc.cluster.local\n"
  I0111 02:01:10.068614 23 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-8800.svc.cluster.local\tcanonical name = externalsvc.services-8800.svc.cluster.local.\nName:\texternalsvc.services-8800.svc.cluster.local\nAddress: 10.43.188.193\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8800, will wait for the garbage collector to delete the pods @ 01/11/25 02:01:10.069
  I0111 02:01:10.133791 23 resources.go:139] Deleting ReplicationController externalsvc took: 9.548656ms
  I0111 02:01:10.234255 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.462306ms
  E0111 02:01:10.788434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:11.788873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:12.788887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:13.614156 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0111 02:01:13.648188 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8800" for this suite. @ 01/11/25 02:01:13.678
• [9.190 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/11/25 02:01:13.689
  I0111 02:01:13.689774 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 02:01:13.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:01:13.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:01:13.736
  STEP: validating api versions @ 01/11/25 02:01:13.74
  I0111 02:01:13.741056 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-6213 api-versions'
  E0111 02:01:13.789103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:13.873493 23 builder.go:146] stderr: ""
  I0111 02:01:13.873563 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\n"
  I0111 02:01:13.873937 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6213" for this suite. @ 01/11/25 02:01:13.878
• [0.204 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/11/25 02:01:13.894
  I0111 02:01:13.894302 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 02:01:13.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:01:13.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:01:13.928
  I0111 02:01:14.005217 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/11/25 02:01:14.015
  I0111 02:01:14.018566 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:14.018603 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/11/25 02:01:14.018
  I0111 02:01:14.118691 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:14.118735 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:01:14.790018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:15.108106 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:15.108248 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:01:15.790080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:16.108535 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0111 02:01:16.108580 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/11/25 02:01:16.111
  I0111 02:01:16.149133 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:16.149364 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/11/25 02:01:16.149
  I0111 02:01:16.209932 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:16.209969 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:01:16.790795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:17.190937 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:17.191111 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:01:17.791720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:18.194237 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:18.194419 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:01:18.793837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:19.190742 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0111 02:01:19.190780 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 02:01:19.195
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5125, will wait for the garbage collector to delete the pods @ 01/11/25 02:01:19.195
  I0111 02:01:19.262596 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.397611ms
  I0111 02:01:19.363696 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.097998ms
  E0111 02:01:19.794093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:20.794458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:21.794816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:01:21.979119 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:01:21.979165 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 02:01:21.983768 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44834"},"items":null}

  I0111 02:01:21.993861 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44834"},"items":null}

  I0111 02:01:22.054551 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5125" for this suite. @ 01/11/25 02:01:22.1
• [8.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/11/25 02:01:22.118
  I0111 02:01:22.118321 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 02:01:22.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:01:22.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:01:22.159
  STEP: Creating configMap with name cm-test-opt-del-efd634f1-d963-470c-88db-789482267da4 @ 01/11/25 02:01:22.211
  STEP: Creating configMap with name cm-test-opt-upd-a33b19fe-b5a0-4d55-bd38-b047da1bf761 @ 01/11/25 02:01:22.221
  STEP: Creating the pod @ 01/11/25 02:01:22.237
  E0111 02:01:22.795238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:23.795320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-efd634f1-d963-470c-88db-789482267da4 @ 01/11/25 02:01:24.291
  STEP: Updating configmap cm-test-opt-upd-a33b19fe-b5a0-4d55-bd38-b047da1bf761 @ 01/11/25 02:01:24.3
  STEP: Creating configMap with name cm-test-opt-create-0a22fbc5-0df0-4b76-a45f-b28d63406409 @ 01/11/25 02:01:24.309
  STEP: waiting to observe update in volume @ 01/11/25 02:01:24.317
  E0111 02:01:24.796318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:25.796539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:26.796746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:27.797103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:28.797215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:29.797351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:30.798008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:31.798411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:32.798811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:33.799250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:34.800358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:35.800637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:36.801571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:37.801721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:38.801797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:39.802076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:40.802212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:41.802447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:42.803388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:43.803508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:44.804335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:45.804499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:46.805479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:47.805688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:48.805834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:49.805836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:50.807310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:51.807639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:52.808640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:53.808841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:54.809830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:55.810005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:56.810940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:57.811875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:58.812378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:01:59.812893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:00.813508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:01.813740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:02.814551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:03.815238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:04.815357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:05.815500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:06.816325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:07.816459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:08.817240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:09.817361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:10.818375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:11.818555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:12.819299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:13.819662      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:14.819761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:15.819950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:16.820564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:17.820908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:18.821492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:19.821589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:20.822230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:21.822461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:22.822628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:23.822826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:24.823081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:25.823304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:26.824207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:27.824382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:28.825023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:29.825538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:30.826601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:31.826579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:32.827589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:33.827812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:34.827963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:35.828137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:36.828489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:37.828728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:38.829196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:39.829158      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:40.830055      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:41.830288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:42.831247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:43.831377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:44.648750 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9696" for this suite. @ 01/11/25 02:02:44.651
• [82.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/11/25 02:02:44.667
  I0111 02:02:44.667187 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 02:02:44.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:02:44.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:02:44.699
  STEP: creating a replication controller @ 01/11/25 02:02:44.711
  I0111 02:02:44.711300 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 create -f -'
  E0111 02:02:44.832541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:44.937957 23 builder.go:146] stderr: ""
  I0111 02:02:44.937999 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/11/25 02:02:44.938
  I0111 02:02:44.938092 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:02:45.120467 23 builder.go:146] stderr: ""
  I0111 02:02:45.120514 23 builder.go:147] stdout: "update-demo-nautilus-cqx8l update-demo-nautilus-tvfgh "
  I0111 02:02:45.120915 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-cqx8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:02:45.285217 23 builder.go:146] stderr: ""
  I0111 02:02:45.285259 23 builder.go:147] stdout: ""
  I0111 02:02:45.285277 23 kubectl.go:2499] update-demo-nautilus-cqx8l is created but not running
  E0111 02:02:45.832627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:46.832765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:47.833337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:48.833888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:49.834042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:50.286219 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:02:50.444764 23 builder.go:146] stderr: ""
  I0111 02:02:50.444812 23 builder.go:147] stdout: "update-demo-nautilus-cqx8l update-demo-nautilus-tvfgh "
  I0111 02:02:50.444867 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-cqx8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:02:50.552050 23 builder.go:146] stderr: ""
  I0111 02:02:50.552098 23 builder.go:147] stdout: ""
  I0111 02:02:50.552114 23 kubectl.go:2499] update-demo-nautilus-cqx8l is created but not running
  E0111 02:02:50.834421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:51.834585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:52.834761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:53.834982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:54.835246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:55.553268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:02:55.635424 23 builder.go:146] stderr: ""
  I0111 02:02:55.635471 23 builder.go:147] stdout: "update-demo-nautilus-cqx8l update-demo-nautilus-tvfgh "
  I0111 02:02:55.635705 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-cqx8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:02:55.735687 23 builder.go:146] stderr: ""
  I0111 02:02:55.735811 23 builder.go:147] stdout: "true"
  I0111 02:02:55.735880 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-cqx8l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 02:02:55.815884 23 builder.go:146] stderr: ""
  I0111 02:02:55.815930 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 02:02:55.815944 23 kubectl.go:2390] validating pod update-demo-nautilus-cqx8l
  I0111 02:02:55.829127 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 02:02:55.829196 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 02:02:55.829214 23 kubectl.go:2517] update-demo-nautilus-cqx8l is verified up and running
  I0111 02:02:55.829311 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0111 02:02:55.836413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:55.900671 23 builder.go:146] stderr: ""
  I0111 02:02:55.900703 23 builder.go:147] stdout: "true"
  I0111 02:02:55.900756 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 02:02:55.968316 23 builder.go:146] stderr: ""
  I0111 02:02:55.968393 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 02:02:55.968408 23 kubectl.go:2390] validating pod update-demo-nautilus-tvfgh
  I0111 02:02:55.979257 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 02:02:55.979326 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 02:02:55.979337 23 kubectl.go:2517] update-demo-nautilus-tvfgh is verified up and running
  STEP: scaling down the replication controller @ 01/11/25 02:02:55.979
  I0111 02:02:55.980533 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0111 02:02:55.980577 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0111 02:02:56.837315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:02:57.075080 23 builder.go:146] stderr: ""
  I0111 02:02:57.075127 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/11/25 02:02:57.075
  I0111 02:02:57.075317 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:02:57.159437 23 builder.go:146] stderr: ""
  I0111 02:02:57.159506 23 builder.go:147] stdout: "update-demo-nautilus-cqx8l update-demo-nautilus-tvfgh "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/11/25 02:02:57.159
  E0111 02:02:57.838142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:58.838355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:02:59.838718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:00.838851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:01.839093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:03:02.160283 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:03:02.387864 23 builder.go:146] stderr: ""
  I0111 02:03:02.388023 23 builder.go:147] stdout: "update-demo-nautilus-tvfgh "
  I0111 02:03:02.388090 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:03:02.600952 23 builder.go:146] stderr: ""
  I0111 02:03:02.601116 23 builder.go:147] stdout: "true"
  I0111 02:03:02.601192 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 02:03:02.826259 23 builder.go:146] stderr: ""
  I0111 02:03:02.826314 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 02:03:02.826331 23 kubectl.go:2390] validating pod update-demo-nautilus-tvfgh
  I0111 02:03:02.832176 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 02:03:02.832256 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 02:03:02.832690 23 kubectl.go:2517] update-demo-nautilus-tvfgh is verified up and running
  STEP: scaling up the replication controller @ 01/11/25 02:03:02.832
  I0111 02:03:02.837383 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0111 02:03:02.837810 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0111 02:03:02.850975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:03.840077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:03:04.002178 23 builder.go:146] stderr: ""
  I0111 02:03:04.002229 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/11/25 02:03:04.002
  I0111 02:03:04.002324 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:03:04.107999 23 builder.go:146] stderr: ""
  I0111 02:03:04.108043 23 builder.go:147] stdout: "update-demo-nautilus-qwbnb update-demo-nautilus-tvfgh "
  I0111 02:03:04.108098 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-qwbnb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:03:04.192970 23 builder.go:146] stderr: ""
  I0111 02:03:04.193013 23 builder.go:147] stdout: ""
  I0111 02:03:04.193028 23 kubectl.go:2499] update-demo-nautilus-qwbnb is created but not running
  E0111 02:03:04.840760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:05.841017      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:06.841295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:07.841768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:08.841809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:03:09.193216 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0111 02:03:09.298194 23 builder.go:146] stderr: ""
  I0111 02:03:09.298270 23 builder.go:147] stdout: "update-demo-nautilus-qwbnb update-demo-nautilus-tvfgh "
  I0111 02:03:09.298786 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-qwbnb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:03:09.396265 23 builder.go:146] stderr: ""
  I0111 02:03:09.396310 23 builder.go:147] stdout: "true"
  I0111 02:03:09.396411 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-qwbnb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 02:03:09.484395 23 builder.go:146] stderr: ""
  I0111 02:03:09.484435 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 02:03:09.484454 23 kubectl.go:2390] validating pod update-demo-nautilus-qwbnb
  I0111 02:03:09.490764 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 02:03:09.490829 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 02:03:09.490845 23 kubectl.go:2517] update-demo-nautilus-qwbnb is verified up and running
  I0111 02:03:09.490932 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0111 02:03:09.597653 23 builder.go:146] stderr: ""
  I0111 02:03:09.597877 23 builder.go:147] stdout: "true"
  I0111 02:03:09.597949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods update-demo-nautilus-tvfgh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0111 02:03:09.707962 23 builder.go:146] stderr: ""
  I0111 02:03:09.708006 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0111 02:03:09.708021 23 kubectl.go:2390] validating pod update-demo-nautilus-tvfgh
  I0111 02:03:09.711797 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0111 02:03:09.711937 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0111 02:03:09.711976 23 kubectl.go:2517] update-demo-nautilus-tvfgh is verified up and running
  STEP: using delete to clean up resources @ 01/11/25 02:03:09.712
  I0111 02:03:09.712445 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 delete --grace-period=0 --force -f -'
  I0111 02:03:09.813482 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0111 02:03:09.813538 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0111 02:03:09.813597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get rc,svc -l name=update-demo --no-headers'
  E0111 02:03:09.842236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:03:09.943889 23 builder.go:146] stderr: "No resources found in kubectl-490 namespace.\n"
  I0111 02:03:09.943934 23 builder.go:147] stdout: ""
  I0111 02:03:09.944064 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-490 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0111 02:03:10.030795 23 builder.go:146] stderr: ""
  I0111 02:03:10.030842 23 builder.go:147] stdout: ""
  I0111 02:03:10.031137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-490" for this suite. @ 01/11/25 02:03:10.035
• [25.380 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/11/25 02:03:10.047
  I0111 02:03:10.047468 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 02:03:10.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:03:10.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:03:10.125
  STEP: Creating a pod to test downward api env vars @ 01/11/25 02:03:10.13
  E0111 02:03:10.842832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:11.843041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:12.843291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:13.843347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:03:14.164
  I0111 02:03:14.168353 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downward-api-ea4f8672-e5fb-4f9f-986b-28e6414bcc23 container dapi-container: <nil>
  STEP: delete the pod @ 01/11/25 02:03:14.176
  I0111 02:03:14.209966 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4493" for this suite. @ 01/11/25 02:03:14.214
• [4.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 01/11/25 02:03:14.238
  I0111 02:03:14.238939 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption @ 01/11/25 02:03:14.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:03:14.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:03:14.287
  I0111 02:03:14.316734 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0111 02:03:14.844213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:15.844551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:16.846882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:17.845685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:18.845815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:19.845946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:20.846726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:21.847675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:22.848053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:23.848368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:24.849256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:25.849725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:26.850305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:27.850757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:28.851881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:29.852270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:30.852112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:31.852310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:32.854533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:33.854859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:34.855685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:35.855910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:36.856699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:37.856844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:38.857116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:39.857341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:40.857372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:41.857413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:42.858311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:43.858617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:44.859196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:45.859384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:46.860275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:47.861391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:48.862302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:49.863689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:50.863472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:51.864091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:52.864107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:53.864287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:54.864331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:55.864501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:56.865358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:57.865625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:58.866582      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:03:59.866780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:00.866826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:01.867781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:02.868332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:03.868559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:04.869625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:05.869879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:06.870571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:07.871825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:08.872301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:09.872508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:10.872634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:11.872920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:12.873297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:13.873618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:04:14.321245 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/11/25 02:04:14.323
  I0111 02:04:14.324028 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/11/25 02:04:14.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:04:14.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:04:14.372
  STEP: Finding an available node @ 01/11/25 02:04:14.386
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/11/25 02:04:14.387
  E0111 02:04:14.873592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:15.874729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/11/25 02:04:16.429
  I0111 02:04:16.458387 23 preemption.go:709] found a healthy node: ip-172-31-22-167.us-east-2.compute.internal
  STEP: Adding a custom resource @ 01/11/25 02:04:16.462
  E0111 02:04:16.875730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:17.875613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:18.876216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:19.877087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:20.878007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:21.878011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:04:22.602005 23 preemption.go:828] pods created so far: [1 1 1]
  I0111 02:04:22.602218 23 preemption.go:829] length of pods created so far: 3
  E0111 02:04:22.878888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:23.880200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:04:24.621783 23 preemption.go:846] pods created so far: [2 2 1]
  E0111 02:04:24.880077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:25.880359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:26.881398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:27.881891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:28.882126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:29.883253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:30.883277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/11/25 02:04:31.623
  STEP: Removing a custom resource @ 01/11/25 02:04:31.737
  STEP: Removing a custom resource @ 01/11/25 02:04:31.748
  STEP: Removing a custom resource @ 01/11/25 02:04:31.775
  STEP: Removing a custom resource @ 01/11/25 02:04:31.79
  I0111 02:04:31.805473 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8495" for this suite. @ 01/11/25 02:04:31.812
  I0111 02:04:31.836212 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 02:04:31.884256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-3917" for this suite. @ 01/11/25 02:04:31.912
• [77.692 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/11/25 02:04:31.94
  I0111 02:04:31.940633 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:04:31.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:04:31.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:04:31.994
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:04:31.998
  E0111 02:04:32.884335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:33.884421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:34.884554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:35.884621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:04:36.06
  I0111 02:04:36.063711 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod downwardapi-volume-ade788f4-7d62-42d3-a3ab-bbf8f8bb6e06 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:04:36.083
  I0111 02:04:36.123769 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-664" for this suite. @ 01/11/25 02:04:36.127
• [4.198 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/11/25 02:04:36.138
  I0111 02:04:36.138722 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename hostport @ 01/11/25 02:04:36.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:04:36.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:04:36.178
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/11/25 02:04:36.227
  E0111 02:04:36.885332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:37.885528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:38.885540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:39.885769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.16.105 on the node which pod1 resides and expect scheduled @ 01/11/25 02:04:40.265
  E0111 02:04:40.885983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:41.887046      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.16.105 but use UDP protocol on the node which pod2 resides @ 01/11/25 02:04:42.283
  E0111 02:04:42.887699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:43.887929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:44.888317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:45.888611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/11/25 02:04:46.337
  I0111 02:04:46.337338 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.16.105 http://127.0.0.1:54323/hostname] Namespace:hostport-6446 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:04:46.337358 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:04:46.337424 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6446/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.16.105+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.105, port: 54323 @ 01/11/25 02:04:46.393
  I0111 02:04:46.393911 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.16.105:54323/hostname] Namespace:hostport-6446 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:04:46.393997 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:04:46.394567 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6446/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.16.105%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.16.105, port: 54323 UDP @ 01/11/25 02:04:46.464
  I0111 02:04:46.465592 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.16.105 54323] Namespace:hostport-6446 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:04:46.465717 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:04:46.465889 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6446/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.16.105+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0111 02:04:46.889849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:47.889810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:48.890060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:49.890605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:50.890546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:04:51.524683 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6446" for this suite. @ 01/11/25 02:04:51.53
• [15.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/11/25 02:04:51.54
  I0111 02:04:51.540961 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/11/25 02:04:51.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:04:51.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:04:51.578
  STEP: create the container to handle the HTTPGet hook request. @ 01/11/25 02:04:51.629
  E0111 02:04:51.892165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:52.891372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/11/25 02:04:53.657
  E0111 02:04:53.892020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:54.892187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/11/25 02:04:55.684
  STEP: delete the pod with lifecycle hook @ 01/11/25 02:04:55.707
  E0111 02:04:55.892572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:56.893774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:04:57.734191 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8050" for this suite. @ 01/11/25 02:04:57.739
• [6.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/11/25 02:04:57.755
  I0111 02:04:57.755459 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 02:04:57.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:04:57.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:04:57.792
  E0111 02:04:57.893916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/11/25 02:04:57.921
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 02:04:58.33
  STEP: Deploying the webhook pod @ 01/11/25 02:04:58.346
  STEP: Wait for the deployment to be ready @ 01/11/25 02:04:58.38
  I0111 02:04:58.396063 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 02:04:58.894393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:04:59.894639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:00.407017 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:05:00.895877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:01.896390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:02.411883 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:05:02.898091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:03.898043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:04.409966 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:05:04.898499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:05.899251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:06.411510 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:05:06.900177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:07.900421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:08.410738 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 4, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:05:08.901456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:09.901571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 02:05:10.411
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 02:05:10.435
  E0111 02:05:10.901852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:05:11.436497 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/11/25 02:05:11.444
  STEP: verifying the validating webhook match conditions @ 01/11/25 02:05:11.466
  STEP: updating the validating webhook match conditions @ 01/11/25 02:05:11.471
  STEP: verifying the validating webhook match conditions @ 01/11/25 02:05:11.487
  I0111 02:05:11.609310 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7431" for this suite. @ 01/11/25 02:05:11.617
  STEP: Destroying namespace "webhook-markers-8573" for this suite. @ 01/11/25 02:05:11.643
• [13.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/11/25 02:05:11.665
  I0111 02:05:11.665434 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename sched-pred @ 01/11/25 02:05:11.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:05:11.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:05:11.782
  I0111 02:05:11.792975 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0111 02:05:11.817261 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0111 02:05:11.834219 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-105.us-east-2.compute.internal before test
  I0111 02:05:11.837302 23 predicates.go:957] svclb-traefik-05b4ccc2-smhqh from kube-system started at 2025-01-11 00:09:20 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.837336 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 02:05:11.837347 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 02:05:11.837361 23 predicates.go:957] sonobuoy-e2e-job-eb8d697247014ae0 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.837371 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0111 02:05:11.837380 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 02:05:11.837392 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-qqkg8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.837402 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 02:05:11.837417 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 02:05:11.837429 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-167.us-east-2.compute.internal before test
  I0111 02:05:11.842650 23 predicates.go:957] svclb-traefik-05b4ccc2-twqvb from kube-system started at 2025-01-11 01:42:05 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.842684 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 02:05:11.842694 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 02:05:11.842708 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-9zc6w from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.842719 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 02:05:11.842728 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 02:05:11.842737 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-22-7.us-east-2.compute.internal before test
  I0111 02:05:11.853884 23 predicates.go:957] coredns-ff8999cc5-fc7lk from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.853927 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0111 02:05:11.853940 23 predicates.go:957] helm-install-traefik-crd-mfrtb from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.853950 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0111 02:05:11.853960 23 predicates.go:957] helm-install-traefik-p9ht5 from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.853969 23 predicates.go:959] 	Container helm ready: false, restart count 1
  I0111 02:05:11.853980 23 predicates.go:957] local-path-provisioner-698b58967b-mgc2t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.853990 23 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0111 02:05:11.854001 23 predicates.go:957] metrics-server-8584b5786c-6f52t from kube-system started at 2025-01-11 00:05:31 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.854013 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0111 02:05:11.854030 23 predicates.go:957] svclb-traefik-05b4ccc2-pbl78 from kube-system started at 2025-01-11 00:06:01 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.854040 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 02:05:11.854049 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 02:05:11.854063 23 predicates.go:957] traefik-857c696d79-qnj97 from kube-system started at 2025-01-11 00:06:00 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.854078 23 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0111 02:05:11.854093 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-bqsp8 from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.854104 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 02:05:11.854115 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0111 02:05:11.854126 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-29-145.us-east-2.compute.internal before test
  I0111 02:05:11.856962 23 predicates.go:957] svclb-traefik-05b4ccc2-vvq59 from kube-system started at 2025-01-11 00:11:49 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.857000 23 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0111 02:05:11.857012 23 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0111 02:05:11.857024 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-11 00:35:12 +0000 UTC (1 container statuses recorded)
  I0111 02:05:11.857034 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0111 02:05:11.857045 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-c5aec38e523c4314-g2ggm from sonobuoy started at 2025-01-11 00:35:17 +0000 UTC (2 container statuses recorded)
  I0111 02:05:11.857053 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0111 02:05:11.857067 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/11/25 02:05:11.857
  E0111 02:05:11.902588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:12.902863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/11/25 02:05:13.898
  E0111 02:05:13.903712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to apply a random label on the found node. @ 01/11/25 02:05:13.935
  STEP: verifying the node has the label kubernetes.io/e2e-83e8c5d9-5e9c-4a69-ab53-71c4b8fc2405 95 @ 01/11/25 02:05:13.974
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/11/25 02:05:13.982
  E0111 02:05:14.904087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:15.904343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.22.167 on the node which pod4 resides and expect not scheduled @ 01/11/25 02:05:16.022
  E0111 02:05:16.904751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:17.904994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:18.905411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:19.905961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:20.906690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:21.907245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:22.908311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:23.908603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:24.908720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:25.909885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:26.911816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:27.911361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:28.911907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:29.911541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:30.912322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:31.913100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:32.912956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:33.913180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:34.913370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:35.913322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:36.913839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:37.914070      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:38.914709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:39.914348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:40.914690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:41.915381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:42.915650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:43.916621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:44.916423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:45.916955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:46.917976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:47.918104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:48.918272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:49.918416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:50.919048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:51.919354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:52.919389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:53.919540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:54.920408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:55.920684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:56.920910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:57.920953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:58.921075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:05:59.921223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:00.922264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:01.921629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:02.921779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:03.922066      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:04.922760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:05.923127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:06.924200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:07.924297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:08.924390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:09.924878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:10.924811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:11.925035      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:12.925285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:13.925434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:14.925470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:15.925611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:16.926045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:17.926230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:18.926368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:19.926870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:20.927250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:21.928655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:22.928310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:23.928681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:24.928833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:25.929383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:26.930276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:27.930982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:28.930828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:29.931078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:30.931675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:31.931996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:32.932480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:33.932695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:34.933256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:35.933494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:36.933603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:37.933835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:38.933984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:39.934331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:40.934402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:41.934742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:42.935747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:43.935954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:44.936116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:45.936872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:46.937061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:47.937267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:48.937433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:49.937504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:50.938103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:51.938223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:52.938792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:53.939753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:54.940295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:55.940414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:56.941266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:57.941417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:58.941871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:06:59.942116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:00.943046      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:01.943224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:02.944315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:03.944438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:04.944566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:05.944813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:06.945912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:07.946202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:08.946337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:09.946584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:10.946722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:11.946890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:12.947210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:13.947298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:14.948182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:15.948383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:16.948750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:17.948999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:18.949072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:19.949277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:20.950109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:21.950289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:22.951049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:23.951202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:24.951270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:25.952316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:26.952452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:27.952661      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:28.952793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:29.953003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:30.953833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:31.954882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:32.955789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:33.956242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:34.956768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:35.957140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:36.957963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:37.958075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:38.959040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:39.959202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:40.959303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:41.960348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:42.961414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:43.961631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:44.961987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:45.963113      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:46.963207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:47.964554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:48.964788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:49.965120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:50.966632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:51.966319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:52.966415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:53.966615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:54.967606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:55.968322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:56.968984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:57.969252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:58.969411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:07:59.969495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:00.969911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:01.969799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:02.970783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:03.972081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:04.972326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:05.972416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:06.973744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:07.973599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:08.973962      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:09.973830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:10.973948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:11.974947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:12.975692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:13.975934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:14.976707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:15.976780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:16.977731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:17.977825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:18.977996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:19.978075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:20.980914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:21.984877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:22.982285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:23.982553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:24.982896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:25.983924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:26.983990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:27.984635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:28.985608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:29.985607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:30.986453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:31.987199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:32.987394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:33.988588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:34.990210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:35.990313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:36.990590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:37.997627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:38.997730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:39.997829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:40.998135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:41.998141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:42.998998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:44.000559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:45.001518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:46.002033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:47.002708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:48.004791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:49.004378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:50.004680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:51.005199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:52.005436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:53.006347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:54.006610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:55.007421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:56.007519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:57.007685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:58.008138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:08:59.008380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:00.008748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:01.008935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:02.009114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:03.009210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:04.009484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:05.010135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:06.010883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:07.010420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:08.010506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:09.010594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:10.010765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:11.010818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:12.011810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:13.012734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:14.012967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:15.014540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:16.014104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:17.014252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:18.014353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:19.014469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:20.015512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:21.016176      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:22.017455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:23.018465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:24.018882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:25.019992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:26.020797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:27.021731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:28.021672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:29.022284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:30.022810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:31.022707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:32.023166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:33.023661      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:34.023727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:35.024267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:36.024508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:37.031377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:38.031390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:39.031402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:40.031481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:41.031672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:42.032313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:43.032448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:44.032580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:45.033088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:46.033227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:47.033369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:48.034278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:49.034596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:50.035091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:51.035866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:52.036321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:53.036640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:54.036805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:55.037586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:56.037789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:57.038835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:58.039001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:09:59.039375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:00.040388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:01.040539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:02.040636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:03.041268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:04.041308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:05.042031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:06.042176      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:07.042321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:08.042509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:09.043603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:10.044587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:11.044682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:12.044914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:13.044951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:14.045761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:15.045924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-83e8c5d9-5e9c-4a69-ab53-71c4b8fc2405 off the node ip-172-31-22-167.us-east-2.compute.internal @ 01/11/25 02:10:16.043
  E0111 02:10:16.047982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-83e8c5d9-5e9c-4a69-ab53-71c4b8fc2405 @ 01/11/25 02:10:16.067
  I0111 02:10:16.073645 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6283" for this suite. @ 01/11/25 02:10:16.078
• [304.425 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/11/25 02:10:16.092
  I0111 02:10:16.092334 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 02:10:16.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:16.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:16.177
  I0111 02:10:16.189316 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0111 02:10:17.048260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/11/25 02:10:17.212
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/11/25 02:10:17.222
  E0111 02:10:18.050576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/11/25 02:10:18.227
  I0111 02:10:18.246316 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/11/25 02:10:18.246
  E0111 02:10:19.051262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:19.265886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8700" for this suite. @ 01/11/25 02:10:19.275
• [3.206 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/11/25 02:10:19.299
  I0111 02:10:19.299111 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 02:10:19.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:19.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:19.341
  STEP: Setting up server cert @ 01/11/25 02:10:19.46
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 02:10:19.936
  STEP: Deploying the webhook pod @ 01/11/25 02:10:19.946
  STEP: Wait for the deployment to be ready @ 01/11/25 02:10:19.978
  I0111 02:10:20.006305 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 02:10:20.051417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:21.051833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 02:10:22.014
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 02:10:22.039
  E0111 02:10:22.052822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:23.040431 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/11/25 02:10:23.045
  E0111 02:10:23.052607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:23.142168 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2779" for this suite. @ 01/11/25 02:10:23.145
  STEP: Destroying namespace "webhook-markers-8187" for this suite. @ 01/11/25 02:10:23.175
• [3.895 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 01/11/25 02:10:23.194
  I0111 02:10:23.194933 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 02:10:23.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:23.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:23.23
  STEP: Creating service test in namespace statefulset-1162 @ 01/11/25 02:10:23.234
  I0111 02:10:23.295718 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0111 02:10:24.053255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:25.053598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:26.053738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:27.054038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:28.054328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:29.054373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:30.054672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:31.054835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:32.055591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:33.055759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:33.295400 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/11/25 02:10:33.3
  I0111 02:10:33.442767 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 02:10:33.442963 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0111 02:10:34.056353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:35.060057      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:36.060105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:37.060285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:38.060479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:39.061400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:40.061670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:41.061904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:42.062964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:43.063201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:43.419556 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 02:10:43.419604 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/11/25 02:10:43.427
  STEP: Delete all of the StatefulSets @ 01/11/25 02:10:43.43
  STEP: Verify that StatefulSets have been deleted @ 01/11/25 02:10:43.447
  I0111 02:10:43.451220 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1162
  I0111 02:10:43.504350 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1162" for this suite. @ 01/11/25 02:10:43.517
• [20.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/11/25 02:10:43.541
  I0111 02:10:43.541311 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:10:43.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:43.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:43.58
  STEP: Creating projection with secret that has name secret-emptykey-test-eef4b8b5-7f6c-453e-836a-53e148ad9a3a @ 01/11/25 02:10:43.583
  I0111 02:10:43.586545 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5525" for this suite. @ 01/11/25 02:10:43.617
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/11/25 02:10:43.627
  I0111 02:10:43.627320 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename disruption @ 01/11/25 02:10:43.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:43.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:43.734
  STEP: creating the pdb @ 01/11/25 02:10:43.737
  STEP: Waiting for the pdb to be processed @ 01/11/25 02:10:43.754
  E0111 02:10:44.063931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:45.064452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 01/11/25 02:10:45.757
  STEP: Waiting for the pdb to be processed @ 01/11/25 02:10:45.768
  E0111 02:10:46.065148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:47.065326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 01/11/25 02:10:47.778
  STEP: Waiting for the pdb to be processed @ 01/11/25 02:10:47.791
  E0111 02:10:48.065563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:49.066095      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 01/11/25 02:10:49.803
  I0111 02:10:49.805789 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4288" for this suite. @ 01/11/25 02:10:49.81
• [6.198 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/11/25 02:10:49.825
  I0111 02:10:49.825346 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 02:10:49.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:49.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:49.866
  I0111 02:10:49.869040 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0111 02:10:49.888444 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0111 02:10:49.919356 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0111 02:10:50.067344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:51.067236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:51.925148 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0111 02:10:51.928062 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0111 02:10:51.959462 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0111 02:10:51.959521 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0111 02:10:52.068279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:10:52.190946 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "448463c7-9654-419a-90c3-47820571f5e5",
      ResourceVersion: (string) (len=5) "47741",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158249,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 02:10:52.207533 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b12c8ee-44c8-4ae7-8011-d92af305fbc3",
      ResourceVersion: (string) (len=5) "47738",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "448463c7-9654-419a-90c3-47820571f5e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 34 38 34 36 33  63 37 2d 39 36 35 34 2d  |\"448463c7-9654-|
              00000120  34 31 39 61 2d 39 30 63  33 2d 34 37 38 32 30 35  |419a-90c3-478205|
              00000130  37 31 66 35 65 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |71f5e5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 02:10:52.210826 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0111 02:10:52.211318 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8396515-55c1-46aa-8db7-c6f694a4a0e8",
      ResourceVersion: (string) (len=5) "47730",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158249,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "448463c7-9654-419a-90c3-47820571f5e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158251,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 34 38 34 36 33  63 37 2d 39 36 35 34 2d  |\"448463c7-9654-|
              00000120  34 31 39 61 2d 39 30 63  33 2d 34 37 38 32 30 35  |419a-90c3-478205|
              00000130  37 31 66 35 65 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |71f5e5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 02:10:52.215620 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-p5g2v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-p5g2v",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-6578",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04a326b0-bb87-491a-b531-946baca38abd",
      ResourceVersion: (string) (len=5) "47742",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "9b12c8ee-44c8-4ae7-8011-d92af305fbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  31 32 63 38 65 65 2d 34  |d\":\"9b12c8ee-4|
              00000090  34 63 38 2d 34 61 65 37  2d 38 30 31 31 2d 64 39  |4c8-4ae7-8011-d9|
              000000a0  32 61 66 33 30 35 66 62  63 33 5c 22 7d 22 3a 7b  |2af305fbc3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x79s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x79s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6x79s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 02:10:52.218101 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6578" for this suite. @ 01/11/25 02:10:52.23
• [2.426 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 01/11/25 02:10:52.252
  I0111 02:10:52.252688 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/11/25 02:10:52.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:52.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:52.322
  STEP: getting /apis @ 01/11/25 02:10:52.338
  STEP: getting /apis/admissionregistration.k8s.io @ 01/11/25 02:10:52.345
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/11/25 02:10:52.346
  STEP: creating @ 01/11/25 02:10:52.35
  STEP: getting @ 01/11/25 02:10:52.421
  STEP: listing @ 01/11/25 02:10:52.441
  STEP: watching @ 01/11/25 02:10:52.453
  I0111 02:10:52.453902 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 01/11/25 02:10:52.455
  STEP: updating @ 01/11/25 02:10:52.472
  I0111 02:10:52.501373 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 01/11/25 02:10:52.501
  STEP: patching /status @ 01/11/25 02:10:52.517
  STEP: updating /status @ 01/11/25 02:10:52.552
  STEP: deleting @ 01/11/25 02:10:52.628
  STEP: deleting a collection @ 01/11/25 02:10:52.641
  I0111 02:10:52.664772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3273" for this suite. @ 01/11/25 02:10:52.669
• [0.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/11/25 02:10:52.68
  I0111 02:10:52.680181 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 02:10:52.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:10:52.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:10:52.765
  STEP: create the rc @ 01/11/25 02:10:52.768
  W0111 02:10:52.779868      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0111 02:10:53.069786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:54.069943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:55.069814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:56.069933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:57.070904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/11/25 02:10:57.792
  STEP: wait for all pods to be garbage collected @ 01/11/25 02:10:57.802
  E0111 02:10:58.071362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:10:59.071725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:00.071667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:01.071807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:02.072826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/11/25 02:11:02.81
  W0111 02:11:02.815500      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 02:11:02.815546 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 02:11:02.815738 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1262" for this suite. @ 01/11/25 02:11:02.826
• [10.165 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/11/25 02:11:02.845
  I0111 02:11:02.845216 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename daemonsets @ 01/11/25 02:11:02.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:02.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:02.887
  I0111 02:11:02.964710 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/11/25 02:11:02.979
  E0111 02:11:03.074106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:03.111951 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:11:03.111990 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0111 02:11:03.998124 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:11:03.998172 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:11:04.074540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:04.990361 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 02:11:04.990409 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/11/25 02:11:05.001
  E0111 02:11:05.075122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Check that daemon pods images are updated. @ 01/11/25 02:11:05.084
  I0111 02:11:05.092523 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:05.092578 23 daemon_set.go:1193] Wrong image for pod: daemon-set-rd92z. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:05.092591 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqkd6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0111 02:11:06.075248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:06.088460 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:06.088499 23 daemon_set.go:1193] Wrong image for pod: daemon-set-rd92z. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:06.088513 23 daemon_set.go:1198] Pod daemon-set-w8kg8 is not available
  I0111 02:11:06.088546 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqkd6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0111 02:11:07.076544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:07.089620 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:07.089664 23 daemon_set.go:1193] Wrong image for pod: daemon-set-rd92z. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:07.089679 23 daemon_set.go:1198] Pod daemon-set-w8kg8 is not available
  I0111 02:11:07.089691 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqkd6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0111 02:11:08.076431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:08.089720 23 daemon_set.go:1198] Pod daemon-set-82n57 is not available
  I0111 02:11:08.089829 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:08.089849 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqkd6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0111 02:11:09.076989      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:09.088732 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0111 02:11:10.077483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:10.089679 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lhw9n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0111 02:11:10.090047 23 daemon_set.go:1198] Pod daemon-set-tsvh6 is not available
  E0111 02:11:11.077560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:11.087758 23 daemon_set.go:1198] Pod daemon-set-mg5dm is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/11/25 02:11:11.09
  I0111 02:11:11.096585 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 02:11:11.096623 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:11:12.078548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:12.098434 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0111 02:11:12.098493 23 fixtures.go:131] Node ip-172-31-16-105.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0111 02:11:13.079175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:13.097920 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0111 02:11:13.097963 23 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/11/25 02:11:13.109
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-54, will wait for the garbage collector to delete the pods @ 01/11/25 02:11:13.109
  I0111 02:11:13.170998 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.889826ms
  I0111 02:11:13.272104 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.105737ms
  E0111 02:11:14.080033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:14.575637 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0111 02:11:14.575673 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0111 02:11:14.580545 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48063"},"items":null}

  I0111 02:11:14.582858 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48063"},"items":null}

  I0111 02:11:14.597006 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-54" for this suite. @ 01/11/25 02:11:14.599
• [11.765 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/11/25 02:11:14.61
  I0111 02:11:14.610832 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename apf @ 01/11/25 02:11:14.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:14.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:14.665
  STEP: getting /apis @ 01/11/25 02:11:14.67
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/11/25 02:11:14.686
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/11/25 02:11:14.69
  STEP: creating @ 01/11/25 02:11:14.693
  STEP: getting @ 01/11/25 02:11:14.756
  STEP: listing @ 01/11/25 02:11:14.761
  STEP: watching @ 01/11/25 02:11:14.765
  I0111 02:11:14.765944 23 flowcontrol.go:394] starting watch
  STEP: patching @ 01/11/25 02:11:14.767
  STEP: updating @ 01/11/25 02:11:14.795
  I0111 02:11:14.813850 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I0111 02:11:14.814077 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/11/25 02:11:14.814
  STEP: patching /status @ 01/11/25 02:11:14.817
  STEP: updating /status @ 01/11/25 02:11:14.835
  STEP: deleting @ 01/11/25 02:11:14.897
  STEP: deleting a collection @ 01/11/25 02:11:14.923
  I0111 02:11:14.955868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9765" for this suite. @ 01/11/25 02:11:14.958
• [0.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/11/25 02:11:14.968
  I0111 02:11:14.968791 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 02:11:14.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:15.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:15.022
  STEP: creating a Deployment @ 01/11/25 02:11:15.05
  I0111 02:11:15.050365 23 deployment.go:507] Creating simple deployment test-deployment-v8n7z
  E0111 02:11:15.080579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:15.103156 23 deployment.go:223] deployment "test-deployment-v8n7z" doesn't have the required revision set
  E0111 02:11:16.080916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:17.080949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/11/25 02:11:17.117
  I0111 02:11:17.120294 23 deployment.go:532] Deployment test-deployment-v8n7z has Conditions: [{Available True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v8n7z-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/11/25 02:11:17.12
  I0111 02:11:17.138402 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 16, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 15, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-v8n7z-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/11/25 02:11:17.138
  I0111 02:11:17.141428 23 deployment.go:579] Observed &Deployment event: ADDED
  I0111 02:11:17.141501 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v8n7z-6fb4c74686"}
  I0111 02:11:17.141681 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0111 02:11:17.141817 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v8n7z-6fb4c74686"}
  I0111 02:11:17.141842 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0111 02:11:17.142002 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0111 02:11:17.142034 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0111 02:11:17.142070 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v8n7z-6fb4c74686" is progressing.}
  I0111 02:11:17.142424 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0111 02:11:17.142698 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0111 02:11:17.142780 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v8n7z-6fb4c74686" has successfully progressed.}
  I0111 02:11:17.143031 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0111 02:11:17.143099 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0111 02:11:17.143190 23 deployment.go:575] Observed Deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v8n7z-6fb4c74686" has successfully progressed.}
  I0111 02:11:17.143271 23 deployment.go:572] Found Deployment test-deployment-v8n7z in namespace deployment-5694 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:11:17.143363 23 deployment.go:583] Deployment test-deployment-v8n7z has an updated status
  STEP: patching the Statefulset Status @ 01/11/25 02:11:17.143
  I0111 02:11:17.143518 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0111 02:11:17.165275 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/11/25 02:11:17.165
  I0111 02:11:17.167976 23 deployment.go:616] Observed &Deployment event: ADDED
  I0111 02:11:17.168025 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v8n7z-6fb4c74686"}
  I0111 02:11:17.168151 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0111 02:11:17.168186 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v8n7z-6fb4c74686"}
  I0111 02:11:17.168212 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0111 02:11:17.168552 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0111 02:11:17.169101 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0111 02:11:17.169134 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:15 +0000 UTC 2025-01-11 02:11:15 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v8n7z-6fb4c74686" is progressing.}
  I0111 02:11:17.169287 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0111 02:11:17.169313 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0111 02:11:17.169328 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v8n7z-6fb4c74686" has successfully progressed.}
  I0111 02:11:17.169467 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0111 02:11:17.169500 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0111 02:11:17.169643 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-11 02:11:16 +0000 UTC 2025-01-11 02:11:15 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v8n7z-6fb4c74686" has successfully progressed.}
  I0111 02:11:17.169668 23 deployment.go:612] Observed deployment test-deployment-v8n7z in namespace deployment-5694 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:11:17.169926 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0111 02:11:17.170046 23 deployment.go:609] Found deployment test-deployment-v8n7z in namespace deployment-5694 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0111 02:11:17.170071 23 deployment.go:620] Deployment test-deployment-v8n7z has a patched status
  I0111 02:11:17.185361 23 deployment.go:633] Deployment "test-deployment-v8n7z":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-v8n7z",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "555afb1c-a97a-40f9-a2b6-91ec6997fd5f",
      ResourceVersion: (string) (len=5) "48114",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 02:11:17.212315 23 deployment.go:40] New ReplicaSet "test-deployment-v8n7z-6fb4c74686" of Deployment "test-deployment-v8n7z":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-v8n7z-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e033f1e7-e358-4b72-a43e-40bcd37ab42a",
      ResourceVersion: (string) (len=5) "48109",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-v8n7z",
          UID: (types.UID) (len=36) "555afb1c-a97a-40f9-a2b6-91ec6997fd5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 35 35  |k:{\"uid\":\"555|
              00000120  61 66 62 31 63 2d 61 39  37 61 2d 34 30 66 39 2d  |afb1c-a97a-40f9-|
              00000130  61 32 62 36 2d 39 31 65  63 36 39 39 37 66 64 35  |a2b6-91ec6997fd5|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 02:11:17.226242 23 deployment.go:68] Pod "test-deployment-v8n7z-6fb4c74686-dzggb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-v8n7z-6fb4c74686-dzggb",
      GenerateName: (string) (len=33) "test-deployment-v8n7z-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9be4b1d2-e560-4622-8282-b3bec7a8015b",
      ResourceVersion: (string) (len=5) "48108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-v8n7z-6fb4c74686",
          UID: (types.UID) (len=36) "e033f1e7-e358-4b72-a43e-40bcd37ab42a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 30 33 33 66 31 65  37 2d 65 33 35 38 2d 34  |"e033f1e7-e358-4|
              000000a0  62 37 32 2d 61 34 33 65  2d 34 30 62 63 64 33 37  |b72-a43e-40bcd37|
              000000b0  61 62 34 32 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |ab42a\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 36  5c 22 7d 22 3a 7b 22 2e  |.42.1.46\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkvgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkvgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=10) "10.42.1.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872158275,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://422e13eca2c9e8240f3097fd343f57bdda5f2dee58a34a262e319f692f9a6b40",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkvgf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 02:11:17.229530 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5694" for this suite. @ 01/11/25 02:11:17.237
• [2.284 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 01/11/25 02:11:17.253
  I0111 02:11:17.253377 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubectl @ 01/11/25 02:11:17.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:17.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:17.302
  I0111 02:11:17.307036 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=kubectl-8648 version'
  I0111 02:11:17.406565 23 builder.go:146] stderr: ""
  I0111 02:11:17.406619 23 builder.go:147] stdout: "Client Version: v1.32.0\nKustomize Version: v5.5.0\nServer Version: v1.32.0+k3s1\n"
  I0111 02:11:17.407038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8648" for this suite. @ 01/11/25 02:11:17.411
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/11/25 02:11:17.422
  I0111 02:11:17.422725 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subjectreview @ 01/11/25 02:11:17.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:17.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:17.504
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6231" @ 01/11/25 02:11:17.512
  I0111 02:11:17.525596 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6231:e2e"
  I0111 02:11:17.525639 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6231"}
  I0111 02:11:17.525668 23 subjectreviews.go:71] saUID: "0bf26b0d-647e-4889-b043-703abd37a6bb"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6231:e2e" @ 01/11/25 02:11:17.525
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6231:e2e" @ 01/11/25 02:11:17.526
  I0111 02:11:17.533456 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6231:e2e" api 'list' configmaps in "subjectreview-6231" namespace @ 01/11/25 02:11:17.534
  I0111 02:11:17.536489 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6231:e2e" @ 01/11/25 02:11:17.536
  I0111 02:11:17.539783 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0111 02:11:17.540242 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0111 02:11:17.540420 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6231" for this suite. @ 01/11/25 02:11:17.544
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/11/25 02:11:17.555
  I0111 02:11:17.555138 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 02:11:17.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:17.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:17.597
  I0111 02:11:17.627938 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0111 02:11:18.081666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:19.081869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:20.081972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:21.082305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:22.082420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:22.671957 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 02:11:22.672
  STEP: Scaling up "test-rs" replicaset @ 01/11/25 02:11:22.672
  I0111 02:11:22.709649 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/11/25 02:11:22.709
  I0111 02:11:22.757491 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7266 with ReadyReplicas 1, AvailableReplicas 1
  I0111 02:11:22.886797 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7266 with ReadyReplicas 1, AvailableReplicas 1
  I0111 02:11:22.959383 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7266 with ReadyReplicas 1, AvailableReplicas 1
  I0111 02:11:22.990332 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7266 with ReadyReplicas 1, AvailableReplicas 1
  E0111 02:11:23.083625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:23.967492 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7266 with ReadyReplicas 2, AvailableReplicas 2
  E0111 02:11:24.083139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:24.410333 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7266 with ReadyReplicas 3 found true
  I0111 02:11:24.411214 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7266" for this suite. @ 01/11/25 02:11:24.416
• [6.889 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/11/25 02:11:24.443
  I0111 02:11:24.443793 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/11/25 02:11:24.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:24.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:24.508
  STEP: creating a policy with variables @ 01/11/25 02:11:24.533
  STEP: waiting until the marker is denied @ 01/11/25 02:11:24.605
  E0111 02:11:25.083969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 01/11/25 02:11:25.295
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/11/25 02:11:25.436
  I0111 02:11:25.642893 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9290" for this suite. @ 01/11/25 02:11:25.682
• [1.257 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/11/25 02:11:25.701
  I0111 02:11:25.701595 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 02:11:25.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:25.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:25.741
  I0111 02:11:25.744322 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0111 02:11:25.779084 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0111 02:11:26.084296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:27.084551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 01/11/25 02:11:27.791
  STEP: updating a scale subresource @ 01/11/25 02:11:27.804
  STEP: verifying the deployment Spec.Replicas was modified @ 01/11/25 02:11:27.814
  STEP: Patch a scale subresource @ 01/11/25 02:11:27.818
  I0111 02:11:27.904208 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90f67841-f97c-4746-a422-86b5fc8f7baa",
      ResourceVersion: (string) (len=5) "48440",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0111 02:11:27.927547 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf5fb29e-4dcf-45f1-bc95-f9893ed76ad7",
      ResourceVersion: (string) (len=5) "48447",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "90f67841-f97c-4746-a422-86b5fc8f7baa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 30 66 36 37 38  34 31 2d 66 39 37 63 2d  |\"90f67841-f97c-|
              00000120  34 37 34 36 2d 61 34 32  32 2d 38 36 62 35 66 63  |4746-a422-86b5fc|
              00000130  38 66 37 62 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8f7baa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0111 02:11:27.959608 23 deployment.go:68] Pod "test-new-deployment-685b768f58-9cz7n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-9cz7n",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "648ffe81-21d2-4704-b0ab-41ddf12bc6f7",
      ResourceVersion: (string) (len=5) "48420",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "cf5fb29e-4dcf-45f1-bc95-f9893ed76ad7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 66  35 66 62 32 39 65 2d 34  |d\":\"cf5fb29e-4|
              00000090  64 63 66 2d 34 35 66 31  2d 62 63 39 35 2d 66 39  |dcf-45f1-bc95-f9|
              000000a0  38 39 33 65 64 37 36 61  64 37 5c 22 7d 22 3a 7b  |893ed76ad7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 38  5c 22 7d 22 3a 7b 22 2e  |.42.1.48\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmgzk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmgzk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=10) "10.42.1.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872158286,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e02a423e788ef19a26f5f664b03824d5b295dd3d72a8c3b2d9783cf8691f034f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cmgzk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 02:11:27.962994 23 deployment.go:68] Pod "test-new-deployment-685b768f58-j55mp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-j55mp",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-950",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1152b1b-fe74-4a0c-b179-747dfbf0effe",
      ResourceVersion: (string) (len=5) "48450",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158287,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "cf5fb29e-4dcf-45f1-bc95-f9893ed76ad7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 66  35 66 62 32 39 65 2d 34  |d\":\"cf5fb29e-4|
              00000090  64 63 66 2d 34 35 66 31  2d 62 63 39 35 2d 66 39  |dcf-45f1-bc95-f9|
              000000a0  38 39 33 65 64 37 36 61  64 37 5c 22 7d 22 3a 7b  |893ed76ad7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k972l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k972l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158287,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k972l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0111 02:11:27.965442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-950" for this suite. @ 01/11/25 02:11:28.031
• [2.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/11/25 02:11:28.07
  I0111 02:11:28.070839 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename aggregator @ 01/11/25 02:11:28.071
  E0111 02:11:28.085537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:28.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:28.21
  I0111 02:11:28.213294 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Registering the sample API server. @ 01/11/25 02:11:28.214
  I0111 02:11:28.727501 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0111 02:11:28.783175 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0111 02:11:29.086637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:30.087179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:30.894326 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:31.087805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:32.088332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:32.902819 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:33.089197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:34.089311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:34.898142 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:35.090224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:36.090624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:36.900875 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:37.091107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:38.091226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:38.898330 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:39.091437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:40.091517      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:40.901065 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:41.092354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:42.093004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:42.898906 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:43.093872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:44.094136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:44.898129 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:45.094323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:46.095224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:46.902456 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:47.097706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:48.097073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:48.898138 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:49.097472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:50.097579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:50.898631 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:51.097777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:52.098606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:52.898129 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0111 02:11:53.099023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:54.099575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:11:55.091314 23 aggregator.go:755] Waited 178.747284ms for the sample-apiserver to be ready to handle requests.
  E0111 02:11:55.099530      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/11/25 02:11:55.181
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/11/25 02:11:55.186
  STEP: List APIServices @ 01/11/25 02:11:55.199
  I0111 02:11:55.211462 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/11/25 02:11:55.211
  I0111 02:11:55.237417 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/11/25 02:11:55.237
  I0111 02:11:55.269237 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 11, 2, 11, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/11/25 02:11:55.269
  I0111 02:11:55.271722 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-11 02:11:54 +0000 UTC Passed all checks passed}
  I0111 02:11:55.271762 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:11:55.271797 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/11/25 02:11:55.271
  I0111 02:11:55.289569 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-186568096" @ 01/11/25 02:11:55.289
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/11/25 02:11:55.317
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/11/25 02:11:55.348
  STEP: Patch APIService Status @ 01/11/25 02:11:55.351
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/11/25 02:11:55.366
  I0111 02:11:55.380945 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-11 02:11:54 +0000 UTC Passed all checks passed}
  I0111 02:11:55.380995 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:11:55.381010 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0111 02:11:55.381036 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/11/25 02:11:55.381
  STEP: Confirm that the generated APIService has been deleted @ 01/11/25 02:11:55.391
  I0111 02:11:55.391967 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0111 02:11:55.394301 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0111 02:11:55.394343 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0111 02:11:55.644476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1567" for this suite. @ 01/11/25 02:11:55.647
• [27.589 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 01/11/25 02:11:55.661
  I0111 02:11:55.661216 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 02:11:55.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:11:55.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:11:55.71
  STEP: Creating a test headless service @ 01/11/25 02:11:55.722
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-9038.svc.cluster.local;sleep 1; done
   @ 01/11/25 02:11:55.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9038.svc.cluster.local;sleep 1; done
   @ 01/11/25 02:11:55.734
  STEP: creating a pod to probe DNS @ 01/11/25 02:11:55.734
  STEP: submitting the pod to kubernetes @ 01/11/25 02:11:55.734
  E0111 02:11:56.100213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:57.100343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:58.100984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:11:59.101379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 02:11:59.804
  STEP: looking for the results for each expected name from probers @ 01/11/25 02:11:59.806
  I0111 02:11:59.814009 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.816542 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.819916 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.822636 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.827715 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.841928 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.849027 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.853170 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-9038.svc.cluster.local from pod dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079: the server could not find the requested resource (get pods dns-test-bec846c3-a783-4022-9699-e0999cf68079)
  I0111 02:11:59.853221 23 dns_common.go:506] Lookups using dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local agnhost_udp@dns-test-service-2.dns-9038.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-9038.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9038.svc.cluster.local jessie_udp@dns-test-service-2.dns-9038.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9038.svc.cluster.local]

  I0111 02:11:59.907364 23 dns_common.go:514] Pod client logs for webserver: 
  I0111 02:11:59.917068 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0111 02:11:59.925593 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0111 02:12:00.102308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:01.102563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:02.102607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:03.102886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:04.102816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:04.857740 23 dns_common.go:546] DNS probes using dns-9038/dns-test-bec846c3-a783-4022-9699-e0999cf68079 succeeded

  STEP: deleting the pod @ 01/11/25 02:12:04.857
  STEP: deleting the test headless service @ 01/11/25 02:12:04.895
  I0111 02:12:04.941761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9038" for this suite. @ 01/11/25 02:12:04.976
• [9.334 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/11/25 02:12:04.995
  I0111 02:12:04.995423 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename deployment @ 01/11/25 02:12:05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:05.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:05.055
  STEP: creating a Deployment @ 01/11/25 02:12:05.082
  STEP: waiting for Deployment to be created @ 01/11/25 02:12:05.097
  E0111 02:12:05.104205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all Replicas to be Ready @ 01/11/25 02:12:05.121
  I0111 02:12:05.131217 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.131263 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.169024 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.169063 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.211112 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.211164 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.314250 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0111 02:12:05.314419 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0111 02:12:06.104682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:06.162128 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0111 02:12:06.162173 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0111 02:12:06.695008 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/11/25 02:12:06.695
  I0111 02:12:06.728320 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/11/25 02:12:06.728
  I0111 02:12:06.730085 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730120 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730146 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730163 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730174 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730181 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730218 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730235 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 0
  I0111 02:12:06.730344 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:06.730359 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:06.730372 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.730385 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.730412 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.730418 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.759140 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.759186 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.837169 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.837211 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:06.872419 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:06.872777 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:06.897559 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:06.897599 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  E0111 02:12:07.104754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:08.105124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:08.200471 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:08.200513 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:08.300314 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  STEP: listing Deployments @ 01/11/25 02:12:08.3
  I0111 02:12:08.306022 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/11/25 02:12:08.306
  I0111 02:12:08.341615 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/11/25 02:12:08.341
  I0111 02:12:08.382579 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:08.382746 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:08.443911 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:08.514623 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:08.548846 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0111 02:12:09.105783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:09.617261 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0111 02:12:10.106821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:10.243321 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:10.381419 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0111 02:12:10.429557 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0111 02:12:11.107248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:11.732710 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/11/25 02:12:11.82
  STEP: fetching the DeploymentStatus @ 01/11/25 02:12:11.853
  I0111 02:12:11.867602 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:11.867654 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:11.867753 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:11.868196 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:11.868221 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 1
  I0111 02:12:11.868237 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:11.868910 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 3
  I0111 02:12:11.868933 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:11.868948 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 2
  I0111 02:12:11.869094 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5001 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/11/25 02:12:11.869
  I0111 02:12:11.890322 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.890859 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.890886 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.890904 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891028 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891048 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891118 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891311 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891332 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891347 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891619 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891643 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.891658 23 deployment.go:475] observed event type MODIFIED
  I0111 02:12:11.899820 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0111 02:12:11.914306 23 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ff29de7-46ce-464d-9f48-c98ffd3172f6",
      ResourceVersion: (string) (len=5) "48886",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158325,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "4c2be173-ae43-47cb-ae88-6e57f7a33e4e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 63 32 62  65 31 37 33 2d 61 65 34  |":\"4c2be173-ae4|
              00000130  33 2d 34 37 63 62 2d 61  65 38 38 2d 36 65 35 37  |3-47cb-ae88-6e57|
              00000140  66 37 61 33 33 65 34 65  5c 22 7d 22 3a 7b 7d 7d  |f7a33e4e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0111 02:12:11.919971 23 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "235e5688-8158-42e5-84bc-e11ba8d81175",
      ResourceVersion: (string) (len=5) "48979",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "4c2be173-ae43-47cb-ae88-6e57f7a33e4e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 63 32 62  65 31 37 33 2d 61 65 34  |":\"4c2be173-ae4|
              00000130  33 2d 34 37 63 62 2d 61  65 38 38 2d 36 65 35 37  |3-47cb-ae88-6e57|
              00000140  66 37 61 33 33 65 34 65  5c 22 7d 22 3a 7b 7d 7d  |f7a33e4e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0111 02:12:11.952564 23 deployment.go:669] pod: "test-deployment-79899bcfcc-6zcpx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-6zcpx",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1398b594-7049-45fb-bbe8-75cc2cff2407",
      ResourceVersion: (string) (len=5) "48998",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "235e5688-8158-42e5-84bc-e11ba8d81175",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 33 35 65 35 36 38 38  |uid\":\"235e5688|
              000000a0  2d 38 31 35 38 2d 34 32  65 35 2d 38 34 62 63 2d  |-8158-42e5-84bc-|
              000000b0  65 31 31 62 61 38 64 38  31 31 37 35 5c 22 7d 22  |e11ba8d81175\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 36  32 5c 22 7d 22 3a 7b 22  |.42.3.162\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mwvkp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mwvkp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-29-145.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.29.145",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.29.145"
        }
      },
      PodIP: (string) (len=11) "10.42.3.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872158331,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf377afa20f85127d307210788dcd06e61035721c02968750fcd5269b579f27f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mwvkp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0111 02:12:11.956145 23 deployment.go:669] pod: "test-deployment-79899bcfcc-ljl67":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-ljl67",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70d7eb3f-4953-4703-beef-1b3d5ccf1d75",
      ResourceVersion: (string) (len=5) "48997",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "235e5688-8158-42e5-84bc-e11ba8d81175",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 33 35 65 35 36 38 38  |uid\":\"235e5688|
              000000a0  2d 38 31 35 38 2d 34 32  65 35 2d 38 34 62 63 2d  |-8158-42e5-84bc-|
              000000b0  65 31 31 62 61 38 64 38  31 31 37 35 5c 22 7d 22  |e11ba8d81175\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 35 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.53\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7mfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7mfr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-22-167.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872158328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.22.167"
        }
      },
      PodIP: (string) (len=10) "10.42.1.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872158328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872158329,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dfd8dd3628d3ff9415e5489a60f632ff0f6878503116e7b965a24f5823f8c032",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t7mfr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0111 02:12:11.966278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5001" for this suite. @ 01/11/25 02:12:11.971
• [7.007 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/11/25 02:12:12.002
  I0111 02:12:12.002721 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename runtimeclass @ 01/11/25 02:12:12.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:12.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:12.043
  E0111 02:12:12.108185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:12.120514 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5970" for this suite. @ 01/11/25 02:12:12.136
• [0.158 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/11/25 02:12:12.161
  I0111 02:12:12.161261 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 02:12:12.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:12.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:12.231
  STEP: create the rc1 @ 01/11/25 02:12:12.245
  STEP: create the rc2 @ 01/11/25 02:12:12.26
  E0111 02:12:13.108727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:14.108835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:15.109448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:16.109510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:17.110499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:18.111115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/11/25 02:12:18.441
  E0111 02:12:19.111176      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:20.112278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:21.112665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:22.113403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:23.114409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:24.114495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:25.115243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:26.116074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:27.116423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:28.117093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:29.117601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/11/25 02:12:29.443
  STEP: wait for the rc to be deleted @ 01/11/25 02:12:29.824
  E0111 02:12:30.118357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:31.120604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:32.120699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:33.121770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:34.121963      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:35.123020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:35.256724 23 garbage_collector.go:762] 70 pods remaining
  I0111 02:12:35.256784 23 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0111 02:12:35.256799 23 garbage_collector.go:770] 
  E0111 02:12:36.123245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:37.124123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:38.123724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:39.123946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/11/25 02:12:39.857
  W0111 02:12:39.863705      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 02:12:39.863751 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 02:12:39.863851 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kzdc" in namespace "gc-6768"
  I0111 02:12:39.901668 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2mbtn" in namespace "gc-6768"
  I0111 02:12:39.929978 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2v874" in namespace "gc-6768"
  I0111 02:12:39.977272 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sxzq" in namespace "gc-6768"
  I0111 02:12:40.014491 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5j4n4" in namespace "gc-6768"
  I0111 02:12:40.073979 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pxpq" in namespace "gc-6768"
  E0111 02:12:40.124821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:40.138747 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rhxg" in namespace "gc-6768"
  I0111 02:12:40.186786 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zkpl" in namespace "gc-6768"
  I0111 02:12:40.232571 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-695ht" in namespace "gc-6768"
  I0111 02:12:40.266538 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6b2xf" in namespace "gc-6768"
  I0111 02:12:40.303161 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6g52v" in namespace "gc-6768"
  I0111 02:12:40.359711 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lbgg" in namespace "gc-6768"
  I0111 02:12:40.401272 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76lqm" in namespace "gc-6768"
  I0111 02:12:40.477539 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gsvl" in namespace "gc-6768"
  I0111 02:12:40.541364 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jfj5" in namespace "gc-6768"
  I0111 02:12:40.614319 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7m7wd" in namespace "gc-6768"
  I0111 02:12:40.661612 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84d9s" in namespace "gc-6768"
  I0111 02:12:40.719737 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gxhv" in namespace "gc-6768"
  I0111 02:12:40.778367 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95crf" in namespace "gc-6768"
  I0111 02:12:40.844093 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mr5f" in namespace "gc-6768"
  I0111 02:12:40.970702 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tvqd" in namespace "gc-6768"
  I0111 02:12:41.010533 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9w2gk" in namespace "gc-6768"
  I0111 02:12:41.049855 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmlsf" in namespace "gc-6768"
  I0111 02:12:41.107800 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ccffx" in namespace "gc-6768"
  E0111 02:12:41.125505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:41.247716 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqmnq" in namespace "gc-6768"
  I0111 02:12:41.310657 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cz7rx" in namespace "gc-6768"
  I0111 02:12:41.378020 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7j6d" in namespace "gc-6768"
  I0111 02:12:41.450295 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db8pq" in namespace "gc-6768"
  I0111 02:12:41.493328 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfmrk" in namespace "gc-6768"
  I0111 02:12:41.622884 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dksqn" in namespace "gc-6768"
  I0111 02:12:41.677163 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2tlk" in namespace "gc-6768"
  I0111 02:12:41.753475 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fdrx9" in namespace "gc-6768"
  I0111 02:12:41.831550 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fg6nn" in namespace "gc-6768"
  I0111 02:12:41.881127 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fh8tz" in namespace "gc-6768"
  I0111 02:12:41.931513 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fl58m" in namespace "gc-6768"
  I0111 02:12:41.987658 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fw9fq" in namespace "gc-6768"
  I0111 02:12:42.077813 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g59vr" in namespace "gc-6768"
  E0111 02:12:42.126208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:42.195309 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9p9h" in namespace "gc-6768"
  I0111 02:12:42.262792 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gcsck" in namespace "gc-6768"
  I0111 02:12:42.310636 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gn7xh" in namespace "gc-6768"
  I0111 02:12:42.371946 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h4c72" in namespace "gc-6768"
  I0111 02:12:42.401381 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j69t9" in namespace "gc-6768"
  I0111 02:12:42.482506 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jcvqk" in namespace "gc-6768"
  I0111 02:12:42.529686 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jtjrd" in namespace "gc-6768"
  I0111 02:12:42.613657 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jtvrf" in namespace "gc-6768"
  I0111 02:12:42.707644 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k5w9v" in namespace "gc-6768"
  I0111 02:12:42.746158 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kghml" in namespace "gc-6768"
  I0111 02:12:42.795494 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kqjkz" in namespace "gc-6768"
  I0111 02:12:42.845980 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ksdp4" in namespace "gc-6768"
  I0111 02:12:42.916294 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ksrdw" in namespace "gc-6768"
  I0111 02:12:43.006665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6768" for this suite. @ 01/11/25 02:12:43.056
• [30.931 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/11/25 02:12:43.092
  I0111 02:12:43.092421 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename watch @ 01/11/25 02:12:43.093
  E0111 02:12:43.126793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:43.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:43.132
  STEP: getting a starting resourceVersion @ 01/11/25 02:12:43.142
  STEP: starting a background goroutine to produce watch events @ 01/11/25 02:12:43.148
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/11/25 02:12:43.148
  E0111 02:12:44.127559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:45.128366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:45.903083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-804" for this suite. @ 01/11/25 02:12:45.947
• [2.913 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 01/11/25 02:12:46.005
  I0111 02:12:46.006313 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename containers @ 01/11/25 02:12:46.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:46.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:46.053
  STEP: Creating a pod to test override arguments @ 01/11/25 02:12:46.058
  E0111 02:12:46.128993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:47.129756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:48.130165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:49.130435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:12:50.109
  I0111 02:12:50.119773 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod client-containers-1b312428-ea9e-40bc-928d-9c0fc6c73fa8 container agnhost-container: <nil>
  E0111 02:12:50.130929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 01/11/25 02:12:50.131
  I0111 02:12:50.194779 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8419" for this suite. @ 01/11/25 02:12:50.21
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/11/25 02:12:50.231
  I0111 02:12:50.231459 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 02:12:50.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:50.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:50.285
  I0111 02:12:50.290269 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: creating the pod @ 01/11/25 02:12:50.291
  STEP: submitting the pod to kubernetes @ 01/11/25 02:12:50.291
  E0111 02:12:51.131221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:52.132364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:12:52.361461 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4924" for this suite. @ 01/11/25 02:12:52.367
• [2.157 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/11/25 02:12:52.388
  I0111 02:12:52.388449 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:12:52.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:52.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:52.427
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/11/25 02:12:52.431
  E0111 02:12:53.132883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:54.132899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:55.133087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:56.133198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:12:56.49
  I0111 02:12:56.493297 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod pod-02f8cb2f-fb44-4936-8b44-2aa86fef9224 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:12:56.518
  I0111 02:12:56.554723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5899" for this suite. @ 01/11/25 02:12:56.567
• [4.191 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/11/25 02:12:56.579
  I0111 02:12:56.579437 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:12:56.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:12:56.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:12:56.633
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:12:56.636
  E0111 02:12:57.134051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:58.134647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:12:59.134929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:00.135096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:13:00.675
  I0111 02:13:00.678009 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-312cb2c3-ec1f-4687-9d20-d3ae69f4bbca container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:13:00.682
  I0111 02:13:00.756442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6126" for this suite. @ 01/11/25 02:13:00.776
• [4.223 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/11/25 02:13:00.803
  I0111 02:13:00.803469 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename runtimeclass @ 01/11/25 02:13:00.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:00.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:00.887
  STEP: Deleting RuntimeClass runtimeclass-4283-delete-me @ 01/11/25 02:13:00.922
  STEP: Waiting for the RuntimeClass to disappear @ 01/11/25 02:13:00.957
  I0111 02:13:00.967725 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4283" for this suite. @ 01/11/25 02:13:00.984
• [0.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/11/25 02:13:01.014
  I0111 02:13:01.014601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:13:01.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:01.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:01.057
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:13:01.065
  E0111 02:13:01.135955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:02.136104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:03.136431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:04.136476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:05.136602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:13:05.161
  I0111 02:13:05.164172 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod downwardapi-volume-fd228a58-900c-442c-909b-48562d1a8ab7 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:13:05.17
  I0111 02:13:05.203454 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3486" for this suite. @ 01/11/25 02:13:05.211
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/11/25 02:13:05.249
  I0111 02:13:05.250017 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 02:13:05.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:05.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:05.323
  I0111 02:13:05.336878 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: creating the pod @ 01/11/25 02:13:05.337
  STEP: submitting the pod to kubernetes @ 01/11/25 02:13:05.337
  E0111 02:13:06.137622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:07.138209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:07.433269 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4593" for this suite. @ 01/11/25 02:13:07.436
• [2.198 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 01/11/25 02:13:07.448
  I0111 02:13:07.448871 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename dns @ 01/11/25 02:13:07.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:07.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:07.496
  STEP: Creating a test externalName service @ 01/11/25 02:13:07.5
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:07.517
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:07.517
  STEP: creating a pod to probe DNS @ 01/11/25 02:13:07.517
  STEP: submitting the pod to kubernetes @ 01/11/25 02:13:07.517
  E0111 02:13:08.138698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:09.138803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 02:13:09.555
  STEP: looking for the results for each expected name from probers @ 01/11/25 02:13:09.557
  I0111 02:13:09.565455 23 dns_common.go:571] DNS probes using dns-test-4987d07c-3569-44b6-b7e1-0be44b05af0d succeeded

  STEP: changing the externalName to bar.example.com @ 01/11/25 02:13:09.565
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:09.575
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:09.576
  STEP: creating a second pod to probe DNS @ 01/11/25 02:13:09.576
  STEP: submitting the pod to kubernetes @ 01/11/25 02:13:09.576
  E0111 02:13:10.139007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:11.140008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 02:13:11.61
  STEP: looking for the results for each expected name from probers @ 01/11/25 02:13:11.618
  I0111 02:13:11.634396 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8434.svc.cluster.local from pod  dns-8434/dns-test-7725d699-a0bb-4f7e-9d59-1d460ce1f3bf contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0111 02:13:11.640771 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8434.svc.cluster.local from pod  dns-8434/dns-test-7725d699-a0bb-4f7e-9d59-1d460ce1f3bf contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0111 02:13:11.640817 23 dns_common.go:506] Lookups using dns-8434/dns-test-7725d699-a0bb-4f7e-9d59-1d460ce1f3bf failed for: [agnhost_udp@dns-test-service-3.dns-8434.svc.cluster.local jessie_udp@dns-test-service-3.dns-8434.svc.cluster.local]

  I0111 02:13:11.654824 23 dns_common.go:514] Pod client logs for webserver: 
  I0111 02:13:11.674270 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0111 02:13:11.680651 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0111 02:13:12.140347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:13.140551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:14.140925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:15.141183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:16.141310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:16.626809 23 dns_common.go:571] DNS probes using dns-test-7725d699-a0bb-4f7e-9d59-1d460ce1f3bf succeeded

  STEP: changing the service to type=ClusterIP @ 01/11/25 02:13:16.626
  W0111 02:13:16.650776      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:16.65
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8434.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8434.svc.cluster.local; sleep 1; done
   @ 01/11/25 02:13:16.65
  STEP: creating a third pod to probe DNS @ 01/11/25 02:13:16.65
  STEP: submitting the pod to kubernetes @ 01/11/25 02:13:16.659
  E0111 02:13:17.142391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:18.143008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:19.143221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:20.143245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:21.143512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:22.144439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:23.144493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:24.144836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:25.145868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:26.146218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/11/25 02:13:26.715
  STEP: looking for the results for each expected name from probers @ 01/11/25 02:13:26.717
  I0111 02:13:26.726678 23 dns_common.go:571] DNS probes using dns-test-302f0624-fba9-4a60-a969-0fc67aa37069 succeeded

  STEP: deleting the pod @ 01/11/25 02:13:26.726
  STEP: deleting the pod @ 01/11/25 02:13:26.769
  STEP: deleting the pod @ 01/11/25 02:13:26.799
  STEP: deleting the test externalName service @ 01/11/25 02:13:26.844
  I0111 02:13:26.934763 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8434" for this suite. @ 01/11/25 02:13:26.945
• [19.522 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/11/25 02:13:26.971
  I0111 02:13:26.972037 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename gc @ 01/11/25 02:13:26.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:27.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:27.02
  STEP: create the deployment @ 01/11/25 02:13:27.023
  W0111 02:13:27.041538      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/11/25 02:13:27.041
  E0111 02:13:27.146994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 01/11/25 02:13:27.258
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/11/25 02:13:27.282
  STEP: Gathering metrics @ 01/11/25 02:13:27.908
  W0111 02:13:27.912678      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0111 02:13:27.912722 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0111 02:13:27.912933 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6030" for this suite. @ 01/11/25 02:13:27.927
• [0.984 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/11/25 02:13:27.956
  I0111 02:13:27.956477 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 02:13:27.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:28.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:28.011
  E0111 02:13:28.147246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/11/25 02:13:28.165
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 02:13:28.713
  STEP: Deploying the webhook pod @ 01/11/25 02:13:28.727
  STEP: Wait for the deployment to be ready @ 01/11/25 02:13:28.758
  I0111 02:13:28.781625 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 02:13:29.147535      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:30.147579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 02:13:30.798
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 02:13:30.837
  E0111 02:13:31.147751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:31.838436 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/11/25 02:13:31.858
  I0111 02:13:31.950000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4428" for this suite. @ 01/11/25 02:13:31.973
  STEP: Destroying namespace "webhook-markers-405" for this suite. @ 01/11/25 02:13:32.019
• [4.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/11/25 02:13:32.04
  I0111 02:13:32.040061 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pod-network-test @ 01/11/25 02:13:32.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:32.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:32.087
  STEP: Performing setup for networking test in namespace pod-network-test-3025 @ 01/11/25 02:13:32.09
  STEP: creating a selector @ 01/11/25 02:13:32.09
  STEP: Creating the service pods in kubernetes @ 01/11/25 02:13:32.09
  I0111 02:13:32.090566 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0111 02:13:32.148156      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:33.148653      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:34.148414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:35.149594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:36.149385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:37.149664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:38.149886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:39.150249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:40.150402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:41.150545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:42.150854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:43.150827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:44.151252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:45.152386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:46.152709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:47.153341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:48.153489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:49.154236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:50.155182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:51.155774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:52.156539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/11/25 02:13:52.337
  E0111 02:13:53.156745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:54.157085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:54.400615 23 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0111 02:13:54.400656 23 utils.go:496] Going to poll 10.42.2.141 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0111 02:13:54.402617 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.141:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3025 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:13:54.402658 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:13:54.402735 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3025/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.141%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0111 02:13:54.476192 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0111 02:13:54.476899 23 utils.go:496] Going to poll 10.42.1.85 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0111 02:13:54.479967 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.85:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3025 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:13:54.480006 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:13:54.480088 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3025/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.85%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0111 02:13:54.546145 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0111 02:13:54.546424 23 utils.go:496] Going to poll 10.42.0.127 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0111 02:13:54.550266 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.127:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3025 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:13:54.550307 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:13:54.550366 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3025/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.127%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0111 02:13:54.627286 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0111 02:13:54.627540 23 utils.go:496] Going to poll 10.42.3.192 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0111 02:13:54.630120 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.192:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3025 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:13:54.630228 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:13:54.630293 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3025/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.192%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0111 02:13:54.730238 23 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0111 02:13:54.730452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3025" for this suite. @ 01/11/25 02:13:54.734
• [22.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/11/25 02:13:54.746
  I0111 02:13:54.746692 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/11/25 02:13:54.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:13:54.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:13:54.779
  I0111 02:13:54.784816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 02:13:55.158155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:13:56.158623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/11/25 02:13:56.812
  I0111 02:13:56.813026 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 create -f -'
  I0111 02:13:56.982164 23 builder.go:146] stderr: ""
  I0111 02:13:56.982214 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6429-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0111 02:13:56.982273 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 delete e2e-test-crd-publish-openapi-6429-crds test-foo'
  I0111 02:13:57.084276 23 builder.go:146] stderr: ""
  I0111 02:13:57.084325 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6429-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0111 02:13:57.084526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 apply -f -'
  E0111 02:13:57.159151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:57.189309 23 builder.go:146] stderr: ""
  I0111 02:13:57.189531 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6429-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0111 02:13:57.189656 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 delete e2e-test-crd-publish-openapi-6429-crds test-foo'
  I0111 02:13:57.317830 23 builder.go:146] stderr: ""
  I0111 02:13:57.317874 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6429-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/11/25 02:13:57.317
  I0111 02:13:57.317978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 create -f -'
  I0111 02:13:57.433218 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/11/25 02:13:57.433
  I0111 02:13:57.435258 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 create -f -'
  I0111 02:13:57.547277 23 builder.go:135] rc: 1
  I0111 02:13:57.547375 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 apply -f -'
  I0111 02:13:57.680164 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/11/25 02:13:57.68
  I0111 02:13:57.680597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 create -f -'
  I0111 02:13:57.799616 23 builder.go:135] rc: 1
  I0111 02:13:57.800211 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 --namespace=crd-publish-openapi-4880 apply -f -'
  I0111 02:13:57.919965 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/11/25 02:13:57.92
  I0111 02:13:57.920152 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 explain e2e-test-crd-publish-openapi-6429-crds'
  I0111 02:13:58.013214 23 builder.go:146] stderr: ""
  I0111 02:13:58.013399 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6429-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/11/25 02:13:58.014
  I0111 02:13:58.014334 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 explain e2e-test-crd-publish-openapi-6429-crds.metadata'
  I0111 02:13:58.101374 23 builder.go:146] stderr: ""
  I0111 02:13:58.101675 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6429-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0111 02:13:58.102029 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 explain e2e-test-crd-publish-openapi-6429-crds.spec'
  E0111 02:13:58.159220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:13:58.180808 23 builder.go:146] stderr: ""
  I0111 02:13:58.180846 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6429-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0111 02:13:58.180928 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 explain e2e-test-crd-publish-openapi-6429-crds.spec.bars'
  I0111 02:13:58.298369 23 builder.go:146] stderr: ""
  I0111 02:13:58.298419 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6429-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/11/25 02:13:58.298
  I0111 02:13:58.299035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=crd-publish-openapi-4880 explain e2e-test-crd-publish-openapi-6429-crds.spec.bars2'
  I0111 02:13:58.375131 23 builder.go:135] rc: 1
  E0111 02:13:59.160195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:00.161113      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:14:00.472951 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4880" for this suite. @ 01/11/25 02:14:00.526
• [5.855 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/11/25 02:14:00.626
  I0111 02:14:00.626496 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 02:14:00.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:14:00.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:14:00.69
  STEP: creating the pod with failed condition @ 01/11/25 02:14:00.694
  E0111 02:14:01.161838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:02.161405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:03.162324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:04.162575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:05.163469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:06.164435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:07.164853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:08.165105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:09.165742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:10.167436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:11.167551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:12.167989      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:13.168245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:14.168581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:15.169287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:16.169683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:17.170447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:18.172239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:19.170802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:20.170992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:21.171998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:22.172183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:23.172432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:24.172421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:25.172550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:26.172697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:27.173549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:28.174802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:29.175721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:30.175702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:31.176878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:32.177572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:33.177276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:34.177474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:35.178185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:36.178792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:37.179282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:38.179479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:39.179556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:40.179715      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:41.180332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:42.180557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:43.181594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:44.181756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:45.181881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:46.182034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:47.183159      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:48.183232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:49.184111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:50.184408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:51.184858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:52.185146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:53.185648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:54.186074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:55.186700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:56.186849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:57.187138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:58.187242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:14:59.187901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:00.188264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:01.189229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:02.189482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:03.189836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:04.190042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:05.190445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:06.191165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:07.191341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:08.192358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:09.193378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:10.193540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:11.194117      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:12.194621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:13.196140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:14.195484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:15.196538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:16.196871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:17.197326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:18.198936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:19.199562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:20.200160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:21.201242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:22.202325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:23.203028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:24.203219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:25.204347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:26.204465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:27.204823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:28.206003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:29.205533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:30.205695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:31.206679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:32.206888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:33.207589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:34.208332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:35.209366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:36.209646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:37.210151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:38.212261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:39.211566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:40.211891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:41.212847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:42.212988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:43.214080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:44.214283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:45.215032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:46.215377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:47.216044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:48.216207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:49.216286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:50.217905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:51.219457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:52.219733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:53.220087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:54.220326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:55.220377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:56.220509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:57.222528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:58.222759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:15:59.223684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:00.223853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 01/11/25 02:16:00.755
  E0111 02:16:01.224463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:01.285014 23 pod_client.go:173] Successfully updated pod "var-expansion-42e92b06-09d8-4887-b5db-d2478911600f"
  STEP: waiting for pod running @ 01/11/25 02:16:01.285
  E0111 02:16:02.225003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:03.225265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/11/25 02:16:03.294
  I0111 02:16:03.294669 23 delete.go:62] Deleting pod "var-expansion-42e92b06-09d8-4887-b5db-d2478911600f" in namespace "var-expansion-1128"
  I0111 02:16:03.311718 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-42e92b06-09d8-4887-b5db-d2478911600f" to be fully deleted
  E0111 02:16:04.226132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:05.226266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:06.226798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:07.227029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:08.227184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:09.227424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:10.228831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:11.229111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:12.229043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:13.229225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:14.229674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:15.229895      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:16.229986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:17.230244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:18.230951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:19.231202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:20.231585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:21.232523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:22.233326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:23.233481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:24.233784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:25.233780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:26.235601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:27.235307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:28.236275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:29.236592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:30.237617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:31.238025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:32.238172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:33.238315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:34.238968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:35.239269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:35.411871 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1128" for this suite. @ 01/11/25 02:16:35.417
• [154.809 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/11/25 02:16:35.436
  I0111 02:16:35.436195 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:16:35.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:16:35.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:16:35.533
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/11/25 02:16:35.539
  E0111 02:16:36.239404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:37.240164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:38.240345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:39.240491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:16:39.581
  I0111 02:16:39.584248 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-b6efd405-ec58-4352-9c10-910885fabce5 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:16:39.597
  I0111 02:16:39.634806 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1101" for this suite. @ 01/11/25 02:16:39.641
• [4.230 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/11/25 02:16:39.666
  I0111 02:16:39.666249 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 02:16:39.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:16:39.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:16:39.71
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:16:39.714
  E0111 02:16:40.240500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:41.240753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:42.240897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:43.241016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:16:43.753
  I0111 02:16:43.758960 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-f7498b80-5b62-4609-8e32-6eb8502a1187 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:16:43.766
  I0111 02:16:43.832685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3320" for this suite. @ 01/11/25 02:16:43.839
• [4.191 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/11/25 02:16:43.857
  I0111 02:16:43.857764 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:16:43.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:16:43.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:16:43.912
  STEP: Creating configMap with name projected-configmap-test-volume-map-e07444b2-0f8d-47ad-abce-eefc8e568f43 @ 01/11/25 02:16:43.917
  STEP: Creating a pod to test consume configMaps @ 01/11/25 02:16:43.933
  E0111 02:16:44.241327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:16:45.241896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:16:45.988
  I0111 02:16:45.991599 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-aff54428-3bdc-4c8a-a619-4818c5876ddb container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 02:16:46.016
  I0111 02:16:46.065120 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7628" for this suite. @ 01/11/25 02:16:46.07
• [2.225 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/11/25 02:16:46.083
  I0111 02:16:46.083949 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/11/25 02:16:46.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:16:46.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:16:46.134
  STEP: Creating two CSIDrivers @ 01/11/25 02:16:46.137
  STEP: Getting "inline-driver-ced3d3cb-4456-410c-90ff-5d7e88295c26" & "inline-driver-91b3ebd3-5484-46f3-8854-1b51c9e414c3" @ 01/11/25 02:16:46.2
  STEP: Patching the CSIDriver "inline-driver-91b3ebd3-5484-46f3-8854-1b51c9e414c3" @ 01/11/25 02:16:46.208
  STEP: Updating the CSIDriver "inline-driver-91b3ebd3-5484-46f3-8854-1b51c9e414c3" @ 01/11/25 02:16:46.224
  E0111 02:16:46.242236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6305" @ 01/11/25 02:16:46.242
  STEP: Deleting CSIDriver "inline-driver-ced3d3cb-4456-410c-90ff-5d7e88295c26" @ 01/11/25 02:16:46.247
  STEP: Confirm deletion of CSIDriver "inline-driver-ced3d3cb-4456-410c-90ff-5d7e88295c26" @ 01/11/25 02:16:46.259
  STEP: Deleting CSIDriver "inline-driver-91b3ebd3-5484-46f3-8854-1b51c9e414c3" via DeleteCollection @ 01/11/25 02:16:46.262
  STEP: Confirm deletion of CSIDriver "inline-driver-91b3ebd3-5484-46f3-8854-1b51c9e414c3" @ 01/11/25 02:16:46.285
  I0111 02:16:46.288710 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6305" for this suite. @ 01/11/25 02:16:46.295
• [0.225 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/11/25 02:16:46.309
  I0111 02:16:46.309264 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename proxy @ 01/11/25 02:16:46.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:16:46.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:16:46.373
  STEP: starting an echo server on multiple ports @ 01/11/25 02:16:46.417
  STEP: creating replication controller proxy-service-h8mm2 in namespace proxy-4247 @ 01/11/25 02:16:46.417
  I0111 02:16:46.450191      23 runners.go:193] Created replication controller with name: proxy-service-h8mm2, namespace: proxy-4247, replica count: 1
  E0111 02:16:47.242381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:47.501796      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0111 02:16:48.242533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:48.502758      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:49.242930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:49.502989      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:50.242824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:50.503125      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:51.243126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:51.503556      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:52.243246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:52.505302      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:53.244355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:53.505510      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:54.244453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:54.505675      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:55.244605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:55.505863      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:56.244730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:56.506045      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:57.244885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:57.506168      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:58.245148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:58.506393      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0111 02:16:59.246095      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:16:59.507339      23 runners.go:193] proxy-service-h8mm2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 02:16:59.510217 23 proxy.go:230] setup took 13.132821549s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/11/25 02:16:59.51
  I0111 02:16:59.554778 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 44.025745ms)
  I0111 02:16:59.559144 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 48.322299ms)
  I0111 02:16:59.563434 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 52.637994ms)
  I0111 02:16:59.565507 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 54.318873ms)
  I0111 02:16:59.565725 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 55.149157ms)
  I0111 02:16:59.565759 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 55.002306ms)
  I0111 02:16:59.565781 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 55.0662ms)
  I0111 02:16:59.567244 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 56.55459ms)
  I0111 02:16:59.568886 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 58.448659ms)
  I0111 02:16:59.568926 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 58.459989ms)
  I0111 02:16:59.569471 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 58.505445ms)
  I0111 02:16:59.570618 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 59.766268ms)
  I0111 02:16:59.570671 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 60.341607ms)
  I0111 02:16:59.571431 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 60.503705ms)
  I0111 02:16:59.571458 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 60.575335ms)
  I0111 02:16:59.574747 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 63.59822ms)
  I0111 02:16:59.596410 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 21.166365ms)
  I0111 02:16:59.598061 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 22.484153ms)
  I0111 02:16:59.598307 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 23.316663ms)
  I0111 02:16:59.598409 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 22.927394ms)
  I0111 02:16:59.598943 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 23.266116ms)
  I0111 02:16:59.602176 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 26.769655ms)
  I0111 02:16:59.603046 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 27.725526ms)
  I0111 02:16:59.606045 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 30.034869ms)
  I0111 02:16:59.606374 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 30.450145ms)
  I0111 02:16:59.606378 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 30.525451ms)
  I0111 02:16:59.607076 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 31.299055ms)
  I0111 02:16:59.607148 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 32.330948ms)
  I0111 02:16:59.607151 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 30.994148ms)
  I0111 02:16:59.607821 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 31.774163ms)
  I0111 02:16:59.608082 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 31.977028ms)
  I0111 02:16:59.609470 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 33.123304ms)
  I0111 02:16:59.625293 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 14.605466ms)
  I0111 02:16:59.625688 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 14.065803ms)
  I0111 02:16:59.626588 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 14.930111ms)
  I0111 02:16:59.628918 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 19.396232ms)
  I0111 02:16:59.632362 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 21.128871ms)
  I0111 02:16:59.634309 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 23.704267ms)
  I0111 02:16:59.634837 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 24.006389ms)
  I0111 02:16:59.634913 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 24.001939ms)
  I0111 02:16:59.634937 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 24.564157ms)
  I0111 02:16:59.634958 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 24.525147ms)
  I0111 02:16:59.635640 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 25.003496ms)
  I0111 02:16:59.637613 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 27.149097ms)
  I0111 02:16:59.638419 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 28.847208ms)
  I0111 02:16:59.638638 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 28.926595ms)
  I0111 02:16:59.638685 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 29.016592ms)
  I0111 02:16:59.639117 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 28.554248ms)
  I0111 02:16:59.650782 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 11.404904ms)
  I0111 02:16:59.651401 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 12.130961ms)
  I0111 02:16:59.652883 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 13.3426ms)
  I0111 02:16:59.652935 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 13.357906ms)
  I0111 02:16:59.653501 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 13.865852ms)
  I0111 02:16:59.653658 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 13.983123ms)
  I0111 02:16:59.655136 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 15.706706ms)
  I0111 02:16:59.655241 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 15.431831ms)
  I0111 02:16:59.656278 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 16.768983ms)
  I0111 02:16:59.656959 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 17.214163ms)
  I0111 02:16:59.657631 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 18.022174ms)
  I0111 02:16:59.657727 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 18.268012ms)
  I0111 02:16:59.658437 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 18.59982ms)
  I0111 02:16:59.659750 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 19.979664ms)
  I0111 02:16:59.660095 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 20.39241ms)
  I0111 02:16:59.660859 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 21.538272ms)
  I0111 02:16:59.675592 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 12.759332ms)
  I0111 02:16:59.676317 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 13.198806ms)
  I0111 02:16:59.676466 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 11.604679ms)
  I0111 02:16:59.680085 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 18.589717ms)
  I0111 02:16:59.681334 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 18.785755ms)
  I0111 02:16:59.682351 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 20.009619ms)
  I0111 02:16:59.684591 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 20.928916ms)
  I0111 02:16:59.684667 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 23.619581ms)
  I0111 02:16:59.684695 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 20.963647ms)
  I0111 02:16:59.684940 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 22.27421ms)
  I0111 02:16:59.687674 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 24.125241ms)
  I0111 02:16:59.689024 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 27.351319ms)
  I0111 02:16:59.689224 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 28.047783ms)
  I0111 02:16:59.689585 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 27.737493ms)
  I0111 02:16:59.689942 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 26.673407ms)
  I0111 02:16:59.690100 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 26.704219ms)
  I0111 02:16:59.699249 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 9.006639ms)
  I0111 02:16:59.700615 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 10.037408ms)
  I0111 02:16:59.704105 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 13.767693ms)
  I0111 02:16:59.706715 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 16.090573ms)
  I0111 02:16:59.708023 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 17.247034ms)
  I0111 02:16:59.708587 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 17.771811ms)
  I0111 02:16:59.709432 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 18.606492ms)
  I0111 02:16:59.709463 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 18.74747ms)
  I0111 02:16:59.709569 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 18.885145ms)
  I0111 02:16:59.710332 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 19.680802ms)
  I0111 02:16:59.710875 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 20.354289ms)
  I0111 02:16:59.711203 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 20.782958ms)
  I0111 02:16:59.711990 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 21.636036ms)
  I0111 02:16:59.711946 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 21.402137ms)
  I0111 02:16:59.712681 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 22.457247ms)
  I0111 02:16:59.713365 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 22.897507ms)
  I0111 02:16:59.720907 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 7.26684ms)
  I0111 02:16:59.723965 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 10.282756ms)
  I0111 02:16:59.723965 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 10.414877ms)
  I0111 02:16:59.723999 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 10.511223ms)
  I0111 02:16:59.724022 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 10.360688ms)
  I0111 02:16:59.725592 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 11.766986ms)
  I0111 02:16:59.725592 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 11.677687ms)
  I0111 02:16:59.726506 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 12.63843ms)
  I0111 02:16:59.727820 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 13.891893ms)
  I0111 02:16:59.729272 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 15.29992ms)
  I0111 02:16:59.729272 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 15.324541ms)
  I0111 02:16:59.733495 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 19.448211ms)
  I0111 02:16:59.733680 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 19.609992ms)
  I0111 02:16:59.734130 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 20.155728ms)
  I0111 02:16:59.734857 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 20.851683ms)
  I0111 02:16:59.734859 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 20.820481ms)
  I0111 02:16:59.743765 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 8.667159ms)
  I0111 02:16:59.745797 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 10.012732ms)
  I0111 02:16:59.747002 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 11.349334ms)
  I0111 02:16:59.747565 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 11.575703ms)
  I0111 02:16:59.747609 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 11.692865ms)
  I0111 02:16:59.749259 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 13.041007ms)
  I0111 02:16:59.749743 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 14.271726ms)
  I0111 02:16:59.749868 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 14.594187ms)
  I0111 02:16:59.749835 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 13.979857ms)
  I0111 02:16:59.749893 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 13.619356ms)
  I0111 02:16:59.750513 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 14.810262ms)
  I0111 02:16:59.752203 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 16.992275ms)
  I0111 02:16:59.752242 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 16.680039ms)
  I0111 02:16:59.753123 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 17.051438ms)
  I0111 02:16:59.753402 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 17.270544ms)
  I0111 02:16:59.753413 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 18.039569ms)
  I0111 02:16:59.771015 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 17.167645ms)
  I0111 02:16:59.771080 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 16.910537ms)
  I0111 02:16:59.771103 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 16.805592ms)
  I0111 02:16:59.773060 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 18.518768ms)
  I0111 02:16:59.773823 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 19.916597ms)
  I0111 02:16:59.774760 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 20.342623ms)
  I0111 02:16:59.775738 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 21.292717ms)
  I0111 02:16:59.775776 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 21.210262ms)
  I0111 02:16:59.775803 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 22.201054ms)
  I0111 02:16:59.775822 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 22.183816ms)
  I0111 02:16:59.777436 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 23.224371ms)
  I0111 02:16:59.778300 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 24.219611ms)
  I0111 02:16:59.778703 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 24.586641ms)
  I0111 02:16:59.778807 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 24.486324ms)
  I0111 02:16:59.779472 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 25.225434ms)
  I0111 02:16:59.779979 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 25.586461ms)
  I0111 02:16:59.794806 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 14.125059ms)
  I0111 02:16:59.795855 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 14.810979ms)
  I0111 02:16:59.797879 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 16.587521ms)
  I0111 02:16:59.798118 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 18.010757ms)
  I0111 02:16:59.798188 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 16.700411ms)
  I0111 02:16:59.799786 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 19.25787ms)
  I0111 02:16:59.799941 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 19.651448ms)
  I0111 02:16:59.800697 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 18.303908ms)
  I0111 02:16:59.801495 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 18.923361ms)
  I0111 02:16:59.801601 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 21.403749ms)
  I0111 02:16:59.801814 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 19.319906ms)
  I0111 02:16:59.802222 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 21.822445ms)
  I0111 02:16:59.802441 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 22.083306ms)
  I0111 02:16:59.802547 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 20.850227ms)
  I0111 02:16:59.802776 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 22.303548ms)
  I0111 02:16:59.808609 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 26.476083ms)
  I0111 02:16:59.830518 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 21.002299ms)
  I0111 02:16:59.832374 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 23.226279ms)
  I0111 02:16:59.832541 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 23.356767ms)
  I0111 02:16:59.832623 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 23.656271ms)
  I0111 02:16:59.834373 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 25.137247ms)
  I0111 02:16:59.836015 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 26.537601ms)
  I0111 02:16:59.839922 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 30.544688ms)
  I0111 02:16:59.840328 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 30.976853ms)
  I0111 02:16:59.840711 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 31.286059ms)
  I0111 02:16:59.841595 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 32.27758ms)
  I0111 02:16:59.841703 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 32.301091ms)
  I0111 02:16:59.841735 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 32.712607ms)
  I0111 02:16:59.842707 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 33.793908ms)
  I0111 02:16:59.843480 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 34.600183ms)
  I0111 02:16:59.843578 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 34.851245ms)
  I0111 02:16:59.844204 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 35.487804ms)
  I0111 02:16:59.856718 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 11.540116ms)
  I0111 02:16:59.856718 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 11.496409ms)
  I0111 02:16:59.856767 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 11.637071ms)
  I0111 02:16:59.858599 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 14.323561ms)
  I0111 02:16:59.859476 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 14.947746ms)
  I0111 02:16:59.859961 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 15.233067ms)
  I0111 02:16:59.859961 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 15.700265ms)
  I0111 02:16:59.860922 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 16.254363ms)
  I0111 02:16:59.860923 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 16.311891ms)
  I0111 02:16:59.861029 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 16.032647ms)
  I0111 02:16:59.862191 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 17.860413ms)
  I0111 02:16:59.862982 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 18.059632ms)
  I0111 02:16:59.866210 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 21.759757ms)
  I0111 02:16:59.866635 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 22.146651ms)
  I0111 02:16:59.866628 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 21.62835ms)
  I0111 02:16:59.867420 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 22.174425ms)
  I0111 02:16:59.874991 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 7.501906ms)
  I0111 02:16:59.880520 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 11.769186ms)
  I0111 02:16:59.886148 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 18.032662ms)
  I0111 02:16:59.887367 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 18.945014ms)
  I0111 02:16:59.888070 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 19.132928ms)
  I0111 02:16:59.888142 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 19.954599ms)
  I0111 02:16:59.888165 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 19.606557ms)
  I0111 02:16:59.889581 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 21.075853ms)
  I0111 02:16:59.889719 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 21.766083ms)
  I0111 02:16:59.889737 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 21.706135ms)
  I0111 02:16:59.892512 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 23.502487ms)
  I0111 02:16:59.892993 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 25.331638ms)
  I0111 02:16:59.893180 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 25.32567ms)
  I0111 02:16:59.893206 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 25.442704ms)
  I0111 02:16:59.893224 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 24.96552ms)
  I0111 02:16:59.893864 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 25.533561ms)
  I0111 02:16:59.903335 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 9.287591ms)
  I0111 02:16:59.906766 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 12.425437ms)
  I0111 02:16:59.909581 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 14.982814ms)
  I0111 02:16:59.909994 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 14.712091ms)
  I0111 02:16:59.913862 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 19.196435ms)
  I0111 02:16:59.914263 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 18.90819ms)
  I0111 02:16:59.914669 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 20.079836ms)
  I0111 02:16:59.914738 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 19.529601ms)
  I0111 02:16:59.920089 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 25.102899ms)
  I0111 02:16:59.920218 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 25.170312ms)
  I0111 02:16:59.920240 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 25.424241ms)
  I0111 02:16:59.920270 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 26.025695ms)
  I0111 02:16:59.920988 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 26.554925ms)
  I0111 02:16:59.921058 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 26.150308ms)
  I0111 02:16:59.921598 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 26.469108ms)
  I0111 02:16:59.922380 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 28.22727ms)
  I0111 02:16:59.942096 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 17.798116ms)
  I0111 02:16:59.944037 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 18.785636ms)
  I0111 02:16:59.944180 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 19.426534ms)
  I0111 02:16:59.944760 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 19.388256ms)
  I0111 02:16:59.944974 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 20.836347ms)
  I0111 02:16:59.946127 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 21.911626ms)
  I0111 02:16:59.951896 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 27.545786ms)
  I0111 02:16:59.952024 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 27.640881ms)
  I0111 02:16:59.952046 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 29.621348ms)
  I0111 02:16:59.960335 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 37.104906ms)
  I0111 02:16:59.960471 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 36.016874ms)
  I0111 02:16:59.960494 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 35.943567ms)
  I0111 02:16:59.961497 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 36.98146ms)
  I0111 02:16:59.962020 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 37.959095ms)
  I0111 02:16:59.962404 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 39.628181ms)
  I0111 02:16:59.963298 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 38.875278ms)
  I0111 02:16:59.972898 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 8.987909ms)
  I0111 02:16:59.973672 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 9.589532ms)
  I0111 02:16:59.973736 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 10.240694ms)
  I0111 02:16:59.974258 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 9.81057ms)
  I0111 02:16:59.974863 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 10.026266ms)
  I0111 02:16:59.975399 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 10.515404ms)
  I0111 02:16:59.975537 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 10.992188ms)
  I0111 02:16:59.975645 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 10.859871ms)
  I0111 02:16:59.975806 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 10.723619ms)
  I0111 02:16:59.976003 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 11.015013ms)
  I0111 02:16:59.976456 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 11.496773ms)
  I0111 02:16:59.977655 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 13.311889ms)
  I0111 02:16:59.978073 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 13.016293ms)
  I0111 02:16:59.978207 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 13.295495ms)
  I0111 02:16:59.978392 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 14.147126ms)
  I0111 02:16:59.978836 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 13.802193ms)
  I0111 02:16:59.987783 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 8.843933ms)
  I0111 02:16:59.990103 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 10.829108ms)
  I0111 02:16:59.990971 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 11.670886ms)
  I0111 02:16:59.991209 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 12.03321ms)
  I0111 02:16:59.991464 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 12.246348ms)
  I0111 02:16:59.991910 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 12.579571ms)
  I0111 02:16:59.993239 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 13.814947ms)
  I0111 02:16:59.993908 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 14.541596ms)
  I0111 02:16:59.994052 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 14.402727ms)
  I0111 02:16:59.994560 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 15.045903ms)
  I0111 02:16:59.994704 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 15.119208ms)
  I0111 02:16:59.994778 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 15.154862ms)
  I0111 02:16:59.995782 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 16.74112ms)
  I0111 02:16:59.997857 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 18.340386ms)
  I0111 02:17:00.010290 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 30.881505ms)
  I0111 02:17:00.010597 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 31.059143ms)
  I0111 02:17:00.049881 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 39.200907ms)
  I0111 02:17:00.052288 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 41.481896ms)
  I0111 02:17:00.052738 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 38.261076ms)
  I0111 02:17:00.052933 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 41.955627ms)
  I0111 02:17:00.058943 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 48.093727ms)
  I0111 02:17:00.060286 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 45.968226ms)
  I0111 02:17:00.060326 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 49.448677ms)
  I0111 02:17:00.060993 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 50.225913ms)
  I0111 02:17:00.061273 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 46.871813ms)
  I0111 02:17:00.061311 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 50.655182ms)
  I0111 02:17:00.066846 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 52.553717ms)
  I0111 02:17:00.067019 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 55.994784ms)
  I0111 02:17:00.077446 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 64.994658ms)
  I0111 02:17:00.077676 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 63.249675ms)
  I0111 02:17:00.079434 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 68.472526ms)
  I0111 02:17:00.079482 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 68.574594ms)
  I0111 02:17:00.091300 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 11.212889ms)
  I0111 02:17:00.091575 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 11.20509ms)
  I0111 02:17:00.100948 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 20.948748ms)
  I0111 02:17:00.101007 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 21.487558ms)
  I0111 02:17:00.101033 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 20.221881ms)
  I0111 02:17:00.104750 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 23.785858ms)
  I0111 02:17:00.104802 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 24.295661ms)
  I0111 02:17:00.108485 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 28.305432ms)
  I0111 02:17:00.109047 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 29.181884ms)
  I0111 02:17:00.113647 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 33.365675ms)
  I0111 02:17:00.113690 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 32.80058ms)
  I0111 02:17:00.113960 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 33.518349ms)
  I0111 02:17:00.116175 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 35.582255ms)
  I0111 02:17:00.123691 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 43.023271ms)
  I0111 02:17:00.126709 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 45.968087ms)
  I0111 02:17:00.126771 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 47.119237ms)
  I0111 02:17:00.168143 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:462/proxy/: tls qux (200; 37.37057ms)
  I0111 02:17:00.173450 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:1080/proxy/rewriteme">test<... (200; 42.980341ms)
  I0111 02:17:00.173726 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:443/proxy/tlsrewritem... (200; 46.420458ms)
  I0111 02:17:00.173825 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/https:proxy-service-h8mm2-fp828:460/proxy/: tls baz (200; 46.439792ms)
  I0111 02:17:00.175273 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828/proxy/rewriteme">test</a> (200; 44.273069ms)
  I0111 02:17:00.175628 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:162/proxy/: bar (200; 48.678894ms)
  I0111 02:17:00.178801 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/: <a href="/api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:1080/proxy/rewriteme">... (200; 48.22836ms)
  I0111 02:17:00.178965 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:160/proxy/: foo (200; 48.28164ms)
  I0111 02:17:00.182701 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/http:proxy-service-h8mm2-fp828:160/proxy/: foo (200; 54.45022ms)
  I0111 02:17:00.183280 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/pods/proxy-service-h8mm2-fp828:162/proxy/: bar (200; 55.733972ms)
  I0111 02:17:00.183530 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname1/proxy/: foo (200; 56.061496ms)
  I0111 02:17:00.195314 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname2/proxy/: tls qux (200; 66.94101ms)
  I0111 02:17:00.195314 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname1/proxy/: foo (200; 68.161605ms)
  I0111 02:17:00.195338 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/http:proxy-service-h8mm2:portname2/proxy/: bar (200; 68.299184ms)
  I0111 02:17:00.195613 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/proxy-service-h8mm2:portname2/proxy/: bar (200; 68.383736ms)
  I0111 02:17:00.196454 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4247/services/https:proxy-service-h8mm2:tlsportname1/proxy/: tls baz (200; 69.6423ms)
  STEP: deleting ReplicationController proxy-service-h8mm2 in namespace proxy-4247, will wait for the garbage collector to delete the pods @ 01/11/25 02:17:00.198
  E0111 02:17:00.249175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:00.292073 23 resources.go:139] Deleting ReplicationController proxy-service-h8mm2 took: 24.915863ms
  I0111 02:17:00.392392 23 resources.go:163] Terminating ReplicationController proxy-service-h8mm2 pods took: 100.319898ms
  I0111 02:17:00.893691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4247" for this suite. @ 01/11/25 02:17:00.901
• [14.616 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 01/11/25 02:17:00.925
  I0111 02:17:00.925414 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 02:17:00.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:00.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:00.998
  STEP: Creating service test in namespace statefulset-522 @ 01/11/25 02:17:01.002
  STEP: Creating statefulset ss in namespace statefulset-522 @ 01/11/25 02:17:01.034
  I0111 02:17:01.073755 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0111 02:17:01.246848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:02.247335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:03.247387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:04.247557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:05.248364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:06.249819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:07.250604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:08.250864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:09.250980      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:10.251954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:11.064578 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/11/25 02:17:11.16
  STEP: Getting /status @ 01/11/25 02:17:11.185
  I0111 02:17:11.190826 23 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/11/25 02:17:11.19
  I0111 02:17:11.222756 23 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/11/25 02:17:11.223
  I0111 02:17:11.233400 23 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0111 02:17:11.233473 23 statefulset.go:1114] Found Statefulset ss in namespace statefulset-522 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:17:11.233489 23 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/11/25 02:17:11.233
  I0111 02:17:11.233647 23 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0111 02:17:11.252316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:11.262840 23 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/11/25 02:17:11.262
  I0111 02:17:11.265561 23 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0111 02:17:11.265608 23 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-522 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0111 02:17:11.265726 23 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0111 02:17:11.265787 23 statefulset.go:138] Deleting all statefulset in ns statefulset-522
  I0111 02:17:11.268536 23 rest.go:152] Scaling statefulset ss to 0
  E0111 02:17:12.253151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:13.253433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:14.254069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:15.253946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:16.254234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:17.254822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:18.255217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:19.255279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:20.255537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:21.256322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:21.313437 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 02:17:21.322578 23 rest.go:90] Deleting statefulset ss
  I0111 02:17:21.354207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-522" for this suite. @ 01/11/25 02:17:21.374
• [20.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/11/25 02:17:21.388
  I0111 02:17:21.388891 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context-test @ 01/11/25 02:17:21.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:21.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:21.439
  E0111 02:17:22.257437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:23.257787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:24.258583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:25.258717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:25.498180 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9174" for this suite. @ 01/11/25 02:17:25.503
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/11/25 02:17:25.529
  I0111 02:17:25.529955 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pv @ 01/11/25 02:17:25.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:25.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:25.57
  STEP: Creating initial PV and PVC @ 01/11/25 02:17:25.576
  I0111 02:17:25.576646 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6091" @ 01/11/25 02:17:25.624
  STEP: Listing PVCs in namespace "pv-6091" @ 01/11/25 02:17:25.638
  STEP: Reading "pvc-4x9bs" Status @ 01/11/25 02:17:25.654
  STEP: Reading "pv-6091-v95f6" Status @ 01/11/25 02:17:25.664
  STEP: Patching "pvc-4x9bs" Status @ 01/11/25 02:17:25.677
  STEP: Patching "pv-6091-v95f6" Status @ 01/11/25 02:17:25.696
  STEP: Updating "pvc-4x9bs" Status @ 01/11/25 02:17:25.712
  STEP: Updating "pv-6091-v95f6" Status @ 01/11/25 02:17:25.737
  I0111 02:17:25.787668 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0111 02:17:25.787760 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-4x9bs"
  I0111 02:17:25.800149 23 pv.go:193] Deleting PersistentVolume "pv-6091-v95f6"
  I0111 02:17:25.819709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6091" for this suite. @ 01/11/25 02:17:25.824
• [0.316 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/11/25 02:17:25.846
  I0111 02:17:25.846129 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:17:25.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:25.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:25.931
  STEP: Creating Pod @ 01/11/25 02:17:25.942
  E0111 02:17:26.259357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:27.262988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 01/11/25 02:17:28.005
  I0111 02:17:28.005503 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8174 PodName:pod-sharedvolume-ed1ad2a2-dab4-4415-b074-cda702686670 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:17:28.005555 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:17:28.005637 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-8174/pods/pod-sharedvolume-ed1ad2a2-dab4-4415-b074-cda702686670/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0111 02:17:28.068577 23 exec_util.go:108] Exec stderr: ""
  I0111 02:17:28.068901 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8174" for this suite. @ 01/11/25 02:17:28.076
• [2.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/11/25 02:17:28.09
  I0111 02:17:28.090947 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename kubelet-test @ 01/11/25 02:17:28.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:28.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:28.14
  E0111 02:17:28.262559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:29.262845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:30.218041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3068" for this suite. @ 01/11/25 02:17:30.229
• [2.151 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/11/25 02:17:30.241
  I0111 02:17:30.241662 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replication-controller @ 01/11/25 02:17:30.244
  E0111 02:17:30.264437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:30.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:30.296
  STEP: Creating ReplicationController "e2e-rc-ffq6x" @ 01/11/25 02:17:30.31
  I0111 02:17:30.322333 23 rc.go:792] Get Replication Controller "e2e-rc-ffq6x" to confirm replicas
  E0111 02:17:31.264301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:31.322679 23 rc.go:792] Get Replication Controller "e2e-rc-ffq6x" to confirm replicas
  I0111 02:17:31.327859 23 rc.go:801] Found 1 replicas for "e2e-rc-ffq6x" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-ffq6x" @ 01/11/25 02:17:31.327
  STEP: Updating a scale subresource @ 01/11/25 02:17:31.331
  STEP: Verifying replicas where modified for replication controller "e2e-rc-ffq6x" @ 01/11/25 02:17:31.365
  I0111 02:17:31.366011 23 rc.go:792] Get Replication Controller "e2e-rc-ffq6x" to confirm replicas
  E0111 02:17:32.266432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:32.367012 23 rc.go:792] Get Replication Controller "e2e-rc-ffq6x" to confirm replicas
  I0111 02:17:32.376206 23 rc.go:801] Found 2 replicas for "e2e-rc-ffq6x" replication controller
  I0111 02:17:32.377563 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1787" for this suite. @ 01/11/25 02:17:32.39
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/11/25 02:17:32.409
  I0111 02:17:32.409402 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:17:32.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:32.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:32.466
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/11/25 02:17:32.472
  E0111 02:17:33.265767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:34.265865      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:35.267206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:36.267237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:17:36.544
  I0111 02:17:36.548659 23 output.go:207] Trying to get logs from node ip-172-31-16-105.us-east-2.compute.internal pod pod-7aabc5b9-312a-4721-abb6-67798e0b269c container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:17:36.561
  I0111 02:17:36.606786 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1148" for this suite. @ 01/11/25 02:17:36.613
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/11/25 02:17:36.639
  I0111 02:17:36.639463 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename var-expansion @ 01/11/25 02:17:36.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:17:36.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:17:36.68
  STEP: creating the pod @ 01/11/25 02:17:36.685
  STEP: waiting for pod running @ 01/11/25 02:17:36.704
  E0111 02:17:37.268434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:38.268622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 01/11/25 02:17:38.723
  I0111 02:17:38.727177 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5053 PodName:var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:17:38.727262 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:17:38.727618 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-5053/pods/var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/11/25 02:17:38.779
  I0111 02:17:38.782228 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5053 PodName:var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:17:38.782273 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:17:38.782331 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-5053/pods/var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/11/25 02:17:38.849
  E0111 02:17:39.269478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:17:39.374282 23 pod_client.go:173] Successfully updated pod "var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a"
  STEP: waiting for annotated pod running @ 01/11/25 02:17:39.374
  STEP: deleting the pod gracefully @ 01/11/25 02:17:39.378
  I0111 02:17:39.378829 23 delete.go:62] Deleting pod "var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a" in namespace "var-expansion-5053"
  I0111 02:17:39.404121 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-648c4f3a-0c68-4157-b4cb-0dd63c976b6a" to be fully deleted
  E0111 02:17:40.269701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:41.269941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:42.270223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:43.270710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:44.271180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:45.271850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:46.271599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:47.271703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:48.272295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:49.272418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:50.272538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:51.272987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:52.272940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:53.273122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:54.273231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:55.273608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:56.273768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:57.274124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:58.274257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:17:59.274323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:00.274438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:01.274634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:02.275346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:03.276354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:04.276560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:05.276763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:06.277493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:07.277643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:08.278242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:09.278352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:10.278575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:11.278932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:11.499916 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5053" for this suite. @ 01/11/25 02:18:11.507
• [34.887 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/11/25 02:18:11.527
  I0111 02:18:11.527195 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/11/25 02:18:11.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:11.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:11.63
  I0111 02:18:11.638317 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 02:18:12.279725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:13.279825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:14.282208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:14.749651 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5918" for this suite. @ 01/11/25 02:18:14.756
• [3.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/11/25 02:18:14.787
  I0111 02:18:14.787987 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename events @ 01/11/25 02:18:14.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:14.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:14.875
  STEP: creating a test event @ 01/11/25 02:18:14.88
  STEP: listing events in all namespaces @ 01/11/25 02:18:14.899
  STEP: listing events in test namespace @ 01/11/25 02:18:14.906
  STEP: listing events with field selection filtering on source @ 01/11/25 02:18:14.911
  STEP: listing events with field selection filtering on reportingController @ 01/11/25 02:18:14.929
  STEP: getting the test event @ 01/11/25 02:18:14.933
  STEP: patching the test event @ 01/11/25 02:18:14.937
  STEP: getting the test event @ 01/11/25 02:18:14.952
  STEP: updating the test event @ 01/11/25 02:18:14.956
  STEP: getting the test event @ 01/11/25 02:18:14.968
  STEP: deleting the test event @ 01/11/25 02:18:14.971
  STEP: listing events in all namespaces @ 01/11/25 02:18:14.981
  STEP: listing events in test namespace @ 01/11/25 02:18:14.986
  I0111 02:18:14.990341 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5747" for this suite. @ 01/11/25 02:18:14.995
• [0.234 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 01/11/25 02:18:15.022
  I0111 02:18:15.022277 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename cronjob @ 01/11/25 02:18:15.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:15.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:15.084
  STEP: Creating a cronjob @ 01/11/25 02:18:15.087
  STEP: creating @ 01/11/25 02:18:15.088
  STEP: getting @ 01/11/25 02:18:15.111
  STEP: listing @ 01/11/25 02:18:15.117
  STEP: watching @ 01/11/25 02:18:15.122
  I0111 02:18:15.122613 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 01/11/25 02:18:15.126
  STEP: cluster-wide watching @ 01/11/25 02:18:15.131
  I0111 02:18:15.131846 23 cronjob.go:407] starting watch
  STEP: patching @ 01/11/25 02:18:15.134
  STEP: updating @ 01/11/25 02:18:15.155
  I0111 02:18:15.172037 23 cronjob.go:431] waiting for watch events with expected annotations
  I0111 02:18:15.172098 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 01/11/25 02:18:15.172
  STEP: updating /status @ 01/11/25 02:18:15.19
  STEP: get /status @ 01/11/25 02:18:15.201
  STEP: deleting @ 01/11/25 02:18:15.204
  STEP: deleting a collection @ 01/11/25 02:18:15.24
  I0111 02:18:15.268078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2103" for this suite. @ 01/11/25 02:18:15.274
  E0111 02:18:15.281327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [0.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 01/11/25 02:18:15.298
  I0111 02:18:15.298126 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename fake-node @ 01/11/25 02:18:15.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:15.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:15.344
  STEP: Create "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.355
  STEP: Getting "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.382
  STEP: Patching "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.403
  STEP: Listing nodes with LabelSelector "e2e-fake-node-j6ztx=patched" @ 01/11/25 02:18:15.432
  STEP: Updating "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.437
  STEP: Delete "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.534
  STEP: Confirm deletion of "e2e-fake-node-j6ztx" @ 01/11/25 02:18:15.55
  E0111 02:18:16.282273      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:17.282347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:18.282470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:19.282656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:20.283111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:20.567757 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-6986" for this suite. @ 01/11/25 02:18:20.573
• [5.292 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/11/25 02:18:20.59
  I0111 02:18:20.590190 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:18:20.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:20.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:20.655
  STEP: creating a secret @ 01/11/25 02:18:20.659
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/11/25 02:18:20.678
  STEP: patching the secret @ 01/11/25 02:18:20.685
  STEP: deleting the secret using a LabelSelector @ 01/11/25 02:18:20.711
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/11/25 02:18:20.723
  I0111 02:18:20.725930 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8588" for this suite. @ 01/11/25 02:18:20.729
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/11/25 02:18:20.74
  I0111 02:18:20.740323 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 02:18:20.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:20.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:20.809
  STEP: Counting existing ResourceQuota @ 01/11/25 02:18:20.813
  E0111 02:18:21.283235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:22.283256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:23.284330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:24.284436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:25.284603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/11/25 02:18:25.816
  STEP: Ensuring resource quota status is calculated @ 01/11/25 02:18:25.826
  E0111 02:18:26.285568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:27.285809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:27.830102 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2454" for this suite. @ 01/11/25 02:18:27.834
• [7.105 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/11/25 02:18:27.845
  I0111 02:18:27.845166 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/11/25 02:18:27.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:27.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:27.894
  STEP: mirroring a new custom Endpoint @ 01/11/25 02:18:27.974
  I0111 02:18:28.002034 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0111 02:18:28.286987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:29.287440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 01/11/25 02:18:30.006
  STEP: mirroring deletion of a custom Endpoint @ 01/11/25 02:18:30.032
  I0111 02:18:30.067689 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6904" for this suite. @ 01/11/25 02:18:30.081
• [2.254 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/11/25 02:18:30.099
  I0111 02:18:30.099531 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename lease-test @ 01/11/25 02:18:30.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:30.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:30.143
  E0111 02:18:30.287559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:30.291865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5105" for this suite. @ 01/11/25 02:18:30.298
• [0.217 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/11/25 02:18:30.317
  I0111 02:18:30.317352 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:18:30.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:30.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:30.362
  STEP: Creating configMap with name projected-configmap-test-volume-a62720b7-9ca1-4ba4-b0c4-8d78c0a94172 @ 01/11/25 02:18:30.367
  STEP: Creating a pod to test consume configMaps @ 01/11/25 02:18:30.383
  E0111 02:18:31.288339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:32.288851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:33.288619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:34.288629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:18:34.428
  I0111 02:18:34.433413 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-configmaps-e2037e4f-f309-487e-8251-16e9d2841155 container agnhost-container: <nil>
  STEP: delete the pod @ 01/11/25 02:18:34.453
  I0111 02:18:34.497163 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4231" for this suite. @ 01/11/25 02:18:34.504
• [4.231 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/11/25 02:18:34.548
  I0111 02:18:34.548883 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename podtemplate @ 01/11/25 02:18:34.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:34.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:34.603
  STEP: Create a pod template @ 01/11/25 02:18:34.609
  STEP: Replace a pod template @ 01/11/25 02:18:34.637
  I0111 02:18:34.651625 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0111 02:18:34.652035 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-793" for this suite. @ 01/11/25 02:18:34.656
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/11/25 02:18:34.674
  I0111 02:18:34.674948 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename security-context @ 01/11/25 02:18:34.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:34.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:34.725
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/11/25 02:18:34.729
  E0111 02:18:35.291496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:36.292354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:37.292893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:38.293232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:18:38.806
  I0111 02:18:38.809922 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod security-context-41081db2-1d12-47da-bc77-432c59c254e5 container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:18:38.816
  I0111 02:18:38.853842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1357" for this suite. @ 01/11/25 02:18:38.861
• [4.210 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/11/25 02:18:38.886
  I0111 02:18:38.886182 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 02:18:38.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:38.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:38.933
  STEP: Creating a ResourceQuota @ 01/11/25 02:18:38.938
  STEP: Getting a ResourceQuota @ 01/11/25 02:18:38.948
  STEP: Updating a ResourceQuota @ 01/11/25 02:18:38.958
  STEP: Verifying a ResourceQuota was modified @ 01/11/25 02:18:38.979
  STEP: Deleting a ResourceQuota @ 01/11/25 02:18:38.997
  STEP: Verifying the deleted ResourceQuota @ 01/11/25 02:18:39.029
  I0111 02:18:39.032315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-231" for this suite. @ 01/11/25 02:18:39.036
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/11/25 02:18:39.046
  I0111 02:18:39.047007 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename podtemplate @ 01/11/25 02:18:39.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:39.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:39.117
  I0111 02:18:39.180167 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6385" for this suite. @ 01/11/25 02:18:39.186
• [0.151 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/11/25 02:18:39.198
  I0111 02:18:39.198281 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 02:18:39.199
  E0111 02:18:39.293876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:39.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:39.3
  STEP: creating the pod @ 01/11/25 02:18:39.303
  STEP: submitting the pod to kubernetes @ 01/11/25 02:18:39.303
  W0111 02:18:39.331279      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0111 02:18:40.294307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:41.294917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/11/25 02:18:41.361
  STEP: updating the pod @ 01/11/25 02:18:41.364
  I0111 02:18:41.909998 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-a08117d0-5773-421d-a0ec-7b946b1b85c6"
  E0111 02:18:42.294820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:43.294913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:44.295646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:45.295676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:45.921870 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6985" for this suite. @ 01/11/25 02:18:45.926
• [6.739 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/11/25 02:18:45.936
  I0111 02:18:45.936930 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename configmap @ 01/11/25 02:18:45.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:45.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:45.986
  STEP: Creating configMap that has name configmap-test-emptyKey-308a8c9b-bf7c-44ef-a1c1-96242e0dc11e @ 01/11/25 02:18:45.99
  I0111 02:18:45.993586 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4836" for this suite. @ 01/11/25 02:18:46.026
• [0.105 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/11/25 02:18:46.042
  I0111 02:18:46.042251 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:18:46.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:46.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:46.138
  STEP: Creating secret with name secret-test-580c1eb9-6b8e-4977-9214-b98058530d23 @ 01/11/25 02:18:46.142
  STEP: Creating a pod to test consume secrets @ 01/11/25 02:18:46.151
  E0111 02:18:46.295827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:47.296383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:48.297551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:49.297760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:18:50.189
  I0111 02:18:50.200775 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-fa2a89b8-a1b0-4b20-ac88-fcf7f701f8d3 container secret-env-test: <nil>
  STEP: delete the pod @ 01/11/25 02:18:50.215
  I0111 02:18:50.284713 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3900" for this suite. @ 01/11/25 02:18:50.291
  E0111 02:18:50.297833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/11/25 02:18:50.303
  I0111 02:18:50.303557 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename field-validation @ 01/11/25 02:18:50.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:50.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:50.351
  STEP: apply creating a deployment @ 01/11/25 02:18:50.355
  I0111 02:18:50.395608 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9831" for this suite. @ 01/11/25 02:18:50.4
• [0.115 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/11/25 02:18:50.418
  I0111 02:18:50.418954 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:18:50.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:50.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:50.453
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:18:50.457
  E0111 02:18:51.297977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:52.298108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:53.298301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:54.298352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:18:54.53
  I0111 02:18:54.532615 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-5d0b46f7-c4f3-459e-9858-af22fd8093db container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:18:54.537
  I0111 02:18:54.578450 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9580" for this suite. @ 01/11/25 02:18:54.582
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/11/25 02:18:54.6
  I0111 02:18:54.600900 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename emptydir @ 01/11/25 02:18:54.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:54.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:54.647
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/11/25 02:18:54.65
  E0111 02:18:55.298526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:56.298888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:57.299241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:18:58.299419      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:18:58.701
  I0111 02:18:58.704204 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-f4d2a9f5-f783-4323-a31e-a7afd0b5ccfa container test-container: <nil>
  STEP: delete the pod @ 01/11/25 02:18:58.71
  I0111 02:18:58.749900 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9500" for this suite. @ 01/11/25 02:18:58.757
• [4.182 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/11/25 02:18:58.783
  I0111 02:18:58.783715 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/11/25 02:18:58.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:58.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:18:58.872
  I0111 02:18:58.877149 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  E0111 02:18:59.299942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:18:59.923793 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9537" for this suite. @ 01/11/25 02:18:59.927
• [1.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/11/25 02:18:59.951
  I0111 02:18:59.951849 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename replicaset @ 01/11/25 02:18:59.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:18:59.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:00.02
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/11/25 02:19:00.047
  I0111 02:19:00.162223 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0111 02:19:00.300810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:01.300939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:02.301114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:03.301294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:04.301402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:05.184463 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/11/25 02:19:05.184
  STEP: getting scale subresource @ 01/11/25 02:19:05.184
  STEP: updating a scale subresource @ 01/11/25 02:19:05.199
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/11/25 02:19:05.217
  STEP: Patch a scale subresource @ 01/11/25 02:19:05.227
  E0111 02:19:05.301695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:05.325946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8612" for this suite. @ 01/11/25 02:19:05.35
• [5.467 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/11/25 02:19:05.418
  I0111 02:19:05.418684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:19:05.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:05.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:05.497
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:19:05.501
  E0111 02:19:06.302641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:07.302304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:08.302455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:09.302721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:19:09.556
  I0111 02:19:09.558814 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod downwardapi-volume-bd4d0288-b529-47e5-b097-51e89fe893d8 container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:19:09.564
  I0111 02:19:09.601561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4838" for this suite. @ 01/11/25 02:19:09.606
• [4.213 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 01/11/25 02:19:09.632
  I0111 02:19:09.632985 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename job @ 01/11/25 02:19:09.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:09.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:09.702
  STEP: Creating a suspended job @ 01/11/25 02:19:09.709
  STEP: Patching the Job @ 01/11/25 02:19:09.718
  STEP: Watching for Job to be patched @ 01/11/25 02:19:09.745
  I0111 02:19:09.749904 23 job.go:1309] Event ADDED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-job-label:e2e-5j5q2] and annotations: map[]
  I0111 02:19:09.749952 23 job.go:1312] Event MODIFIED found for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[]
  STEP: Updating the job @ 01/11/25 02:19:09.749
  STEP: Watching for Job to be updated @ 01/11/25 02:19:09.771
  I0111 02:19:09.773443 23 job.go:1312] Event MODIFIED found for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:09.773503 23 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/11/25 02:19:09.773
  I0111 02:19:09.783119 23 job.go:1187] Job: e2e-5j5q2 as labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2]
  STEP: Waiting for job to complete @ 01/11/25 02:19:09.783
  E0111 02:19:10.303914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:11.303981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:12.304894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:13.305196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:14.305206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:15.305347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:16.305523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:17.306170      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 01/11/25 02:19:17.828
  STEP: Watching for Job to be deleted @ 01/11/25 02:19:17.84
  I0111 02:19:17.842519 23 job.go:1309] Event MODIFIED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:17.842714 23 job.go:1309] Event MODIFIED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:17.843212 23 job.go:1309] Event MODIFIED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:17.843250 23 job.go:1309] Event MODIFIED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:17.843271 23 job.go:1309] Event MODIFIED observed for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  I0111 02:19:17.843740 23 job.go:1312] Event DELETED found for Job e2e-5j5q2 in namespace job-9805 with labels: map[e2e-5j5q2:patched e2e-job-label:e2e-5j5q2] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/11/25 02:19:17.843
  I0111 02:19:17.847132 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9805" for this suite. @ 01/11/25 02:19:17.875
• [8.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/11/25 02:19:17.986
  I0111 02:19:17.986686 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename resourcequota @ 01/11/25 02:19:17.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:18.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:18.121
  STEP: Creating a ResourceQuota @ 01/11/25 02:19:18.129
  STEP: Getting a ResourceQuota @ 01/11/25 02:19:18.14
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/11/25 02:19:18.159
  STEP: Patching the ResourceQuota @ 01/11/25 02:19:18.164
  STEP: Deleting a Collection of ResourceQuotas @ 01/11/25 02:19:18.18
  STEP: Verifying the deleted ResourceQuota @ 01/11/25 02:19:18.199
  I0111 02:19:18.204129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5415" for this suite. @ 01/11/25 02:19:18.207
• [0.237 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/11/25 02:19:18.223
  I0111 02:19:18.223218 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename webhook @ 01/11/25 02:19:18.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:18.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:18.281
  E0111 02:19:18.306127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/11/25 02:19:18.382
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/11/25 02:19:19.168
  STEP: Deploying the webhook pod @ 01/11/25 02:19:19.184
  STEP: Wait for the deployment to be ready @ 01/11/25 02:19:19.217
  I0111 02:19:19.268028 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0111 02:19:19.307013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:20.310775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/11/25 02:19:21.286
  E0111 02:19:21.311220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/11/25 02:19:21.323
  E0111 02:19:22.311973      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:22.324478 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/11/25 02:19:22.338
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/11/25 02:19:22.376
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/11/25 02:19:22.406
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/11/25 02:19:22.438
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/11/25 02:19:22.477
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/11/25 02:19:22.498
  I0111 02:19:22.639842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2525" for this suite. @ 01/11/25 02:19:22.661
  STEP: Destroying namespace "webhook-markers-7219" for this suite. @ 01/11/25 02:19:22.686
• [4.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/11/25 02:19:22.722
  I0111 02:19:22.722292 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 02:19:22.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:22.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:22.785
  STEP: Creating pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305 @ 01/11/25 02:19:22.789
  E0111 02:19:23.311540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:24.312414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 02:19:24.846
  I0111 02:19:24.849310 23 container_probe.go:1749] Initial restart count of pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 is 0
  I0111 02:19:24.852158 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:25.312734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:26.312830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:26.857864 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:27.312968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:28.313102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:28.862442 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:29.313997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:30.314350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:30.877565 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:31.314441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:32.314643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:32.883561 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:33.314846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:34.315105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:34.887966 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:35.315253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:36.315332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:36.891857 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:37.316322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:38.316414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:38.896915 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:39.317589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:40.317879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:40.902971 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:41.318867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:42.319291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:42.908327 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  E0111 02:19:43.320097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:44.320686      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:44.912635 23 container_probe.go:1759] Get pod liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 in namespace container-probe-6305
  I0111 02:19:44.912803 23 container_probe.go:1763] Restart count of pod container-probe-6305/liveness-1cebef7c-a434-47a3-865b-a9480a82ca13 is now 1 (20.063451647s elapsed)
  STEP: deleting the pod @ 01/11/25 02:19:44.912
  I0111 02:19:44.960987 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6305" for this suite. @ 01/11/25 02:19:44.978
• [22.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/11/25 02:19:45.011
  I0111 02:19:45.011778 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:19:45.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:45.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:45.073
  STEP: Creating projection with secret that has name projected-secret-test-ea334b69-eb67-4452-bd8f-1bec072fe681 @ 01/11/25 02:19:45.077
  STEP: Creating a pod to test consume secrets @ 01/11/25 02:19:45.088
  E0111 02:19:45.320939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:46.322006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:47.322135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:48.322346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:19:49.126
  I0111 02:19:49.132743 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-projected-secrets-1e6bf9e8-71a5-4dca-b9ab-0577422ed801 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 02:19:49.149
  I0111 02:19:49.221868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7553" for this suite. @ 01/11/25 02:19:49.24
• [4.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/11/25 02:19:49.261
  I0111 02:19:49.261119 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename services @ 01/11/25 02:19:49.262
  E0111 02:19:49.322987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:49.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:49.35
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2184 @ 01/11/25 02:19:49.353
  STEP: changing the ExternalName service to type=ClusterIP @ 01/11/25 02:19:49.366
  STEP: creating replication controller externalname-service in namespace services-2184 @ 01/11/25 02:19:49.408
  I0111 02:19:49.449856      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2184, replica count: 2
  E0111 02:19:50.323272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:51.324135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:52.325063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:52.501558      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0111 02:19:52.501591 23 resource.go:361] Creating new exec pod
  E0111 02:19:53.325199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:54.326061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:55.326375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:55.543697 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2184 exec execpodsl8vp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0111 02:19:55.742129 23 builder.go:146] stderr: "+ nc -v+  -t -wecho 2 hostName externalname-service\n 80\nConnection to externalname-service (10.43.57.214) 80 port [tcp/http] succeeded!\n"
  I0111 02:19:55.742179 23 builder.go:147] stdout: ""
  E0111 02:19:56.326951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:19:56.544421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2184 exec execpodsl8vp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0111 02:19:56.662871 23 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service (10.43.57.214) 80 port [tcp/http] succeeded!\n"
  I0111 02:19:56.663125 23 builder.go:147] stdout: "externalname-service-qqpf2"
  I0111 02:19:56.663239 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=services-2184 exec execpodsl8vp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.57.214 80'
  I0111 02:19:56.781156 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.57.214 80\n+ echo hostName\nConnection to 10.43.57.214 80 port [tcp/http] succeeded!\n"
  I0111 02:19:56.781282 23 builder.go:147] stdout: "externalname-service-qqpf2"
  I0111 02:19:56.781428 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0111 02:19:56.829960 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2184" for this suite. @ 01/11/25 02:19:56.844
• [7.601 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/11/25 02:19:56.862
  I0111 02:19:56.862379 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:19:56.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:19:56.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:19:56.968
  STEP: Creating configMap with name cm-test-opt-del-70d111b9-659f-4d3a-873a-ae7d8915f62d @ 01/11/25 02:19:56.982
  STEP: Creating configMap with name cm-test-opt-upd-e05da4e7-1f60-45a2-8c82-a2c062621719 @ 01/11/25 02:19:56.997
  STEP: Creating the pod @ 01/11/25 02:19:57.014
  E0111 02:19:57.327436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:19:58.327257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-70d111b9-659f-4d3a-873a-ae7d8915f62d @ 01/11/25 02:19:59.106
  STEP: Updating configmap cm-test-opt-upd-e05da4e7-1f60-45a2-8c82-a2c062621719 @ 01/11/25 02:19:59.119
  STEP: Creating configMap with name cm-test-opt-create-a0fe2356-6346-4267-bfc4-5e253bdd669d @ 01/11/25 02:19:59.137
  STEP: waiting to observe update in volume @ 01/11/25 02:19:59.151
  E0111 02:19:59.327850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:00.328464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:01.329241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:02.329515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:03.200773 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5414" for this suite. @ 01/11/25 02:20:03.207
• [6.380 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/11/25 02:20:03.243
  I0111 02:20:03.243828 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename subpath @ 01/11/25 02:20:03.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:20:03.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:20:03.298
  STEP: Setting up data @ 01/11/25 02:20:03.315
  E0111 02:20:03.329868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-configmap-tjpk @ 01/11/25 02:20:03.348
  STEP: Creating a pod to test atomic-volume-subpath @ 01/11/25 02:20:03.348
  E0111 02:20:04.329906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:05.330128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:06.330240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:07.330435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:08.331321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:09.331254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:10.331594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:11.331644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:12.332352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:13.332611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:14.333477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:15.333593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:16.334056      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:17.334416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:18.334900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:19.334994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:20.335390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:21.335719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:22.336322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:23.335797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:24.335997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:25.336279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:26.337118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:27.336889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:20:27.437
  I0111 02:20:27.441796 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-subpath-test-configmap-tjpk container test-container-subpath-configmap-tjpk: <nil>
  STEP: delete the pod @ 01/11/25 02:20:27.451
  STEP: Deleting pod pod-subpath-test-configmap-tjpk @ 01/11/25 02:20:27.49
  I0111 02:20:27.490393 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-tjpk" in namespace "subpath-2600"
  I0111 02:20:27.493844 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2600" for this suite. @ 01/11/25 02:20:27.498
• [24.281 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/11/25 02:20:27.524
  I0111 02:20:27.524557 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename podtemplate @ 01/11/25 02:20:27.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:20:27.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:20:27.598
  STEP: Create set of pod templates @ 01/11/25 02:20:27.604
  I0111 02:20:27.622179 23 podtemplates.go:143] created test-podtemplate-1
  I0111 02:20:27.641800 23 podtemplates.go:143] created test-podtemplate-2
  I0111 02:20:27.653634 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/11/25 02:20:27.654
  STEP: delete collection of pod templates @ 01/11/25 02:20:27.658
  I0111 02:20:27.658883 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/11/25 02:20:27.711
  I0111 02:20:27.712571 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0111 02:20:27.723165 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8685" for this suite. @ 01/11/25 02:20:27.729
• [0.225 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 01/11/25 02:20:27.749
  I0111 02:20:27.749844 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename statefulset @ 01/11/25 02:20:27.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:20:27.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:20:27.824
  STEP: Creating service test in namespace statefulset-3217 @ 01/11/25 02:20:27.829
  STEP: Creating stateful set ss in namespace statefulset-3217 @ 01/11/25 02:20:27.839
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3217 @ 01/11/25 02:20:27.861
  I0111 02:20:27.879165 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0111 02:20:28.337923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:29.338049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:30.338245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:31.338312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:32.338588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:33.338696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:34.338935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:35.341758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:36.340994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:37.341203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:37.866188 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/11/25 02:20:37.866
  I0111 02:20:37.869755 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 02:20:38.065868 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 02:20:38.065912 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 02:20:38.065928 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 02:20:38.070239 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0111 02:20:38.341555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:39.341871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:40.342100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:41.342225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:42.342578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:43.342678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:44.342848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:45.343048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:46.343248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:20:47.343476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:48.071584 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0111 02:20:48.071637 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0111 02:20:48.136029 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999687s
  E0111 02:20:48.343790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:49.144478 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.966759054s
  E0111 02:20:49.344013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:50.148826 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.958346145s
  E0111 02:20:50.344958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:51.163853 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.954074178s
  E0111 02:20:51.345067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:52.172265 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.938770733s
  E0111 02:20:52.345640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:53.179861 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.93051915s
  E0111 02:20:53.346501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:54.194228 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.921675396s
  E0111 02:20:54.346947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:55.209543 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.907180512s
  E0111 02:20:55.347467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:56.219121 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.892736503s
  E0111 02:20:56.348204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:57.231370 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 882.630336ms
  E0111 02:20:57.348717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3217 @ 01/11/25 02:20:58.232
  I0111 02:20:58.237333 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0111 02:20:58.348884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:58.446831 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0111 02:20:58.446879 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 02:20:58.446896 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 02:20:58.446954 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 02:20:58.641209 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0111 02:20:58.641256 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 02:20:58.641274 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 02:20:58.641341 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0111 02:20:58.871706 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0111 02:20:58.871755 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0111 02:20:58.871772 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0111 02:20:58.880745 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0111 02:20:58.880790 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0111 02:20:58.880805 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/11/25 02:20:58.88
  I0111 02:20:58.885971 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 02:20:59.048268 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 02:20:59.048321 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 02:20:59.048342 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 02:20:59.050695 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0111 02:20:59.227283 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 02:20:59.227336 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 02:20:59.227353 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 02:20:59.227483 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3354511725 --namespace=statefulset-3217 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0111 02:20:59.349083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:20:59.464344 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0111 02:20:59.464464 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0111 02:20:59.464481 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0111 02:20:59.464497 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0111 02:20:59.477689 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0111 02:21:00.349939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:01.350106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:02.350635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:03.350790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:04.351166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:05.351318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:06.351384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:07.352388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:08.353412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:09.353668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:09.492434 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0111 02:21:09.492486 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0111 02:21:09.492498 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0111 02:21:09.542867 23 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0111 02:21:09.542939 23 resource.go:175] ss-0  ip-172-31-22-167.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:27 +0000 UTC  }]
  I0111 02:21:09.542971 23 resource.go:175] ss-1  ip-172-31-16-105.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:21:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:21:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:48 +0000 UTC  }]
  I0111 02:21:09.543004 23 resource.go:175] ss-2  ip-172-31-29-145.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:21:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:21:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:48 +0000 UTC  }]
  I0111 02:21:09.543015 23 resource.go:178] 
  I0111 02:21:09.543026 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0111 02:21:10.354133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:10.546605 23 resource.go:168] POD   NODE                                         PHASE      GRACE  CONDITIONS
  I0111 02:21:10.546763 23 resource.go:175] ss-0  ip-172-31-22-167.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:21:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:27 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-11 02:20:27 +0000 UTC  }]
  I0111 02:21:10.546778 23 resource.go:178] 
  I0111 02:21:10.546788 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  E0111 02:21:11.354140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:11.553163 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.970574567s
  E0111 02:21:12.355341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:12.557356 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.964582165s
  E0111 02:21:13.355449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:13.561358 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.960686422s
  E0111 02:21:14.355546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:14.565328 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.956491001s
  E0111 02:21:15.355725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:15.572690 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.952324859s
  E0111 02:21:16.356298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:16.579722 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.945292858s
  E0111 02:21:17.356640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:17.587036 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.937387304s
  E0111 02:21:18.357017      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:18.591355 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 930.206773ms
  E0111 02:21:19.356948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3217 @ 01/11/25 02:21:19.592
  I0111 02:21:19.597376 23 rest.go:152] Scaling statefulset ss to 0
  I0111 02:21:19.615008 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 02:21:19.626041 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3217
  I0111 02:21:19.636387 23 rest.go:152] Scaling statefulset ss to 0
  I0111 02:21:19.641762 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0111 02:21:19.643947 23 rest.go:90] Deleting statefulset ss
  I0111 02:21:19.659184 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3217" for this suite. @ 01/11/25 02:21:19.663
• [51.937 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/11/25 02:21:19.687
  I0111 02:21:19.687666 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:21:19.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:19.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:19.771
  STEP: Creating secret with name secret-test-map-25df5bf3-4cba-46e3-9873-b053c11dc1d1 @ 01/11/25 02:21:19.775
  STEP: Creating a pod to test consume secrets @ 01/11/25 02:21:19.785
  E0111 02:21:20.358670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:21.357542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:22.358313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:23.359123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:21:23.833
  I0111 02:21:23.836365 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-1e175e7c-ee5b-4a68-835b-3d574c870bf6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 02:21:23.845
  I0111 02:21:23.875176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8182" for this suite. @ 01/11/25 02:21:23.88
• [4.218 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/11/25 02:21:23.906
  I0111 02:21:23.910740 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename watch @ 01/11/25 02:21:23.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:23.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:23.995
  STEP: creating a watch on configmaps with label A @ 01/11/25 02:21:24.002
  STEP: creating a watch on configmaps with label B @ 01/11/25 02:21:24.008
  STEP: creating a watch on configmaps with label A or B @ 01/11/25 02:21:24.012
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/11/25 02:21:24.015
  I0111 02:21:24.031477 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54844 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:24.031626 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54844 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/11/25 02:21:24.031
  I0111 02:21:24.044822 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54845 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:24.045162 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54845 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/11/25 02:21:24.045
  I0111 02:21:24.070247 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54847 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:24.070385 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54847 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/11/25 02:21:24.07
  I0111 02:21:24.091779 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54848 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:24.091844 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6185  be4ad006-ed80-4b68-9940-84d25a44887f 54848 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/11/25 02:21:24.091
  I0111 02:21:24.107912 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6185  d3fddbbb-9a63-4448-b78e-77a9b2d56d24 54849 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:24.108157 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6185  d3fddbbb-9a63-4448-b78e-77a9b2d56d24 54849 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0111 02:21:24.359842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:25.360733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:26.360952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:27.361181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:28.361508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:29.361872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:30.362073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:31.362222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:32.362456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:33.362755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/11/25 02:21:34.11
  I0111 02:21:34.136438 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6185  d3fddbbb-9a63-4448-b78e-77a9b2d56d24 54924 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0111 02:21:34.136527 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6185  d3fddbbb-9a63-4448-b78e-77a9b2d56d24 54924 0 2025-01-11 02:21:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-11 02:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0111 02:21:34.362742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:35.362903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:36.363296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:37.363308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:38.364324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:39.364544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:40.364767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:41.365497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:42.365414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:43.365779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:44.137723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6185" for this suite. @ 01/11/25 02:21:44.149
• [20.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/11/25 02:21:44.16
  I0111 02:21:44.161027 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename ingressclass @ 01/11/25 02:21:44.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:44.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:44.231
  STEP: getting /apis @ 01/11/25 02:21:44.235
  STEP: getting /apis/networking.k8s.io @ 01/11/25 02:21:44.241
  STEP: getting /apis/networking.k8s.iov1 @ 01/11/25 02:21:44.242
  STEP: creating @ 01/11/25 02:21:44.244
  STEP: getting @ 01/11/25 02:21:44.287
  STEP: listing @ 01/11/25 02:21:44.296
  STEP: watching @ 01/11/25 02:21:44.3
  I0111 02:21:44.300578 23 ingressclass.go:348] starting watch
  STEP: patching @ 01/11/25 02:21:44.302
  STEP: updating @ 01/11/25 02:21:44.314
  I0111 02:21:44.325128 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0111 02:21:44.325184 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/11/25 02:21:44.325
  STEP: deleting a collection @ 01/11/25 02:21:44.34
  I0111 02:21:44.362535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0111 02:21:44.366414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ingressclass-8103" for this suite. @ 01/11/25 02:21:44.367
• [0.236 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/11/25 02:21:44.397
  I0111 02:21:44.397613 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:21:44.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:44.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:44.475
  STEP: Creating secret with name secret-test-map-cd1808fb-e1e0-426f-ad76-d18de6669437 @ 01/11/25 02:21:44.491
  STEP: Creating a pod to test consume secrets @ 01/11/25 02:21:44.514
  E0111 02:21:45.367285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:46.368275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:47.368787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:48.369160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:21:48.568
  I0111 02:21:48.572119 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-e9493f6a-fc57-4de1-890c-8b13dc65cdc6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 02:21:48.585
  I0111 02:21:48.623272 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-881" for this suite. @ 01/11/25 02:21:48.628
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 01/11/25 02:21:48.657
  I0111 02:21:48.657489 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename svcaccounts @ 01/11/25 02:21:48.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:48.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:48.714
  I0111 02:21:48.725093 23 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-8766"
  I0111 02:21:48.737241 23 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-8766"
  STEP: waiting for a new root ca configmap created @ 01/11/25 02:21:49.238
  I0111 02:21:49.243726 23 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-8766"
  I0111 02:21:49.254160 23 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-8766"
  E0111 02:21:49.369502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 01/11/25 02:21:49.755
  I0111 02:21:49.760053 23 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-8766"
  I0111 02:21:49.760185 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8766" for this suite. @ 01/11/25 02:21:49.766
• [1.134 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/11/25 02:21:49.791
  I0111 02:21:49.791402 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename downward-api @ 01/11/25 02:21:49.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:49.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:49.825
  STEP: Creating the pod @ 01/11/25 02:21:49.864
  E0111 02:21:50.370444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:51.371375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:52.372270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:52.459849 23 pod_client.go:173] Successfully updated pod "labelsupdatec186e28d-4af5-48c6-b5a0-ab9e2bc7aebf"
  E0111 02:21:53.372519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:54.372634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:55.372669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:56.372887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:21:56.502853 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6622" for this suite. @ 01/11/25 02:21:56.507
• [6.737 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/11/25 02:21:56.53
  I0111 02:21:56.530334 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename container-probe @ 01/11/25 02:21:56.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:21:56.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:21:56.663
  STEP: Creating pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541 @ 01/11/25 02:21:56.671
  E0111 02:21:57.373257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:21:58.373605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/11/25 02:21:58.721
  I0111 02:21:58.726459 23 container_probe.go:1749] Initial restart count of pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is 0
  I0111 02:21:58.729333 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:21:59.374380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:00.375245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:00.733329 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:01.375286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:02.376305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:02.745223 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:03.376728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:04.376822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:04.752512 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:05.376982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:06.377291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:06.760735 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:07.377710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:08.378007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:08.770488 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:09.378029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:10.378128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:10.774812 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:11.378982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:12.379228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:12.781398 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:13.379714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:14.379808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:14.785459 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:15.380203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:16.380218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:16.799455 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:17.381064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:18.381246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:18.802893 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  I0111 02:22:18.802935 23 container_probe.go:1763] Restart count of pod container-probe-541/liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is now 1 (20.076398736s elapsed)
  E0111 02:22:19.381797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:20.382106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:20.806798 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:21.382388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:22.382691      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:22.810875 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:23.383467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:24.384384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:24.815325 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:25.384743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:26.385404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:26.819434 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:27.386141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:28.386548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:28.824677 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:29.386921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:30.387010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:30.830861 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:31.387211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:32.387421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:32.835328 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:33.388226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:34.390336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:34.839584 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:35.391162      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:36.392218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:36.844228 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:37.393078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:38.393293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:38.847613 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  I0111 02:22:38.847669 23 container_probe.go:1763] Restart count of pod container-probe-541/liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is now 2 (40.121133553s elapsed)
  E0111 02:22:39.394347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:40.394616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:40.852804 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:41.394843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:42.395520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:42.857763 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:43.395629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:44.396420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:44.865835 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:45.397484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:46.398345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:46.874545 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:47.399106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:48.401975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:48.879778 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:49.401960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:50.402361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:50.884559 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:51.402325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:52.402648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:52.889777 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:53.403381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:54.404308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:54.895481 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:55.405490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:56.405472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:56.900440 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:22:57.405976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:22:58.406069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:22:58.907078 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  I0111 02:22:58.907430 23 container_probe.go:1763] Restart count of pod container-probe-541/liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is now 3 (1m0.180893643s elapsed)
  E0111 02:22:59.406811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:00.407079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:00.911919 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:01.409077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:02.409139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:02.917328 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:03.409557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:04.409599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:04.922120 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:05.409862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:06.410111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:06.926341 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:07.410905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:08.412330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:08.930376 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:09.413149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:10.414027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:10.934638 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:11.414222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:12.414581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:12.938824 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:13.415349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:14.415931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:14.944100 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:15.416425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:16.416570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:16.948915 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:17.417544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:18.417634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:18.955076 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  I0111 02:23:18.955126 23 container_probe.go:1763] Restart count of pod container-probe-541/liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is now 4 (1m20.228591272s elapsed)
  E0111 02:23:19.418626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:20.418861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:20.958814 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:21.419470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:22.420341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:22.963201 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:23.420637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:24.420921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:24.968967 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:25.421342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:26.422358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:26.974700 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:27.422931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:28.422719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:28.984108 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:29.424275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:30.424575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:30.993328 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:31.426707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:32.426674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:32.999634 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:33.427213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:34.427393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:35.004101 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:35.427488      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:36.427647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:37.015545 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:37.428096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:38.428161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:39.023108 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:39.429119      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:40.429004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:41.026382 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:41.429197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:42.429430      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:43.030617 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:43.430084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:44.430238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:45.040037 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:45.430475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:46.430767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:47.046737 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:47.431038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:48.431376      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:49.050026 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:49.431651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:50.432330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:51.054417 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:51.433085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:52.433315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:53.063303 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:53.433946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:54.433992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:55.069511 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:55.434114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:56.435209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:57.079474 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:57.436106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:23:58.436470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:23:59.085435 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:23:59.437563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:00.437731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:01.096589 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:01.438554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:02.439020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:03.100725 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:03.439244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:04.439480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:05.105832 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:05.441197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:06.441434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:07.111277 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:07.442302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:08.442664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:09.116639 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:09.443307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:10.443638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:11.125345 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:11.444049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:12.444361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:13.129976 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:13.445538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:14.445768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:15.142138 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:15.446544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:16.447151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:17.148697 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:17.448836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:18.448330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:19.154016 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:19.449404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:20.449615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:21.158517 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:21.449984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:22.450102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:23.164189 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:23.450886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:24.451251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:25.189985 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:25.452194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:26.455545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:27.194162 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:27.456322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:28.456477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:29.199030 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  E0111 02:24:29.457524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:30.457723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:31.204538 23 container_probe.go:1759] Get pod liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 in namespace container-probe-541
  I0111 02:24:31.204592 23 container_probe.go:1763] Restart count of pod container-probe-541/liveness-b5c8eb29-6f9c-48ba-b086-887125aa2080 is now 5 (2m32.478056232s elapsed)
  STEP: deleting the pod @ 01/11/25 02:24:31.204
  I0111 02:24:31.250638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-541" for this suite. @ 01/11/25 02:24:31.257
• [154.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/11/25 02:24:31.277
  I0111 02:24:31.277142 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename proxy @ 01/11/25 02:24:31.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:24:31.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:24:31.326
  I0111 02:24:31.331369 23 proxy.go:387] Creating pod...
  E0111 02:24:31.458013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:32.457944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:33.392689 23 proxy.go:411] Creating service...
  I0111 02:24:33.427888 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=DELETE
  E0111 02:24:33.458822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:33.474655 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0111 02:24:33.474819 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=OPTIONS
  I0111 02:24:33.478448 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0111 02:24:33.478521 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=PATCH
  I0111 02:24:33.481934 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0111 02:24:33.482050 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=POST
  I0111 02:24:33.485685 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0111 02:24:33.485731 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=PUT
  I0111 02:24:33.488896 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0111 02:24:33.488956 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=DELETE
  I0111 02:24:33.492765 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0111 02:24:33.492814 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0111 02:24:33.496526 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0111 02:24:33.496582 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=PATCH
  I0111 02:24:33.504821 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0111 02:24:33.504938 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=POST
  I0111 02:24:33.508462 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0111 02:24:33.508503 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=PUT
  I0111 02:24:33.512602 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0111 02:24:33.512676 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=GET
  I0111 02:24:33.514962 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0111 02:24:33.515003 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=GET
  I0111 02:24:33.517773 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0111 02:24:33.517820 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/pods/agnhost/proxy?method=HEAD
  I0111 02:24:33.520233 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0111 02:24:33.520277 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5345/services/e2e-proxy-test-service/proxy?method=HEAD
  I0111 02:24:33.523499 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0111 02:24:33.523710 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5345" for this suite. @ 01/11/25 02:24:33.528
• [2.267 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/11/25 02:24:33.544
  I0111 02:24:33.544631 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename projected @ 01/11/25 02:24:33.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:24:33.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:24:33.61
  STEP: Creating a pod to test downward API volume plugin @ 01/11/25 02:24:33.613
  E0111 02:24:34.459302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:35.459544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:36.460513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:37.460861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:24:37.664
  I0111 02:24:37.667768 23 output.go:207] Trying to get logs from node ip-172-31-29-145.us-east-2.compute.internal pod downwardapi-volume-f085c434-ea99-48d9-8cad-982bb2fe792a container client-container: <nil>
  STEP: delete the pod @ 01/11/25 02:24:37.684
  I0111 02:24:37.729220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9113" for this suite. @ 01/11/25 02:24:37.735
• [4.214 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/11/25 02:24:37.758
  I0111 02:24:37.759014 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pod-network-test @ 01/11/25 02:24:37.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:24:37.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:24:37.829
  STEP: Performing setup for networking test in namespace pod-network-test-4930 @ 01/11/25 02:24:37.833
  STEP: creating a selector @ 01/11/25 02:24:37.833
  STEP: Creating the service pods in kubernetes @ 01/11/25 02:24:37.833
  I0111 02:24:37.833990 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0111 02:24:38.461021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:39.461059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:40.461897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:41.462983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:42.463428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:43.463253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:44.464342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:45.464990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:46.465695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:47.465829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:48.465880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:49.466019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:50.466137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:51.466377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/11/25 02:24:52.108
  E0111 02:24:52.468214      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:53.468298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:54.169564 23 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0111 02:24:54.169607 23 networking.go:42] Breadth first check of 10.42.2.145 on host 172.31.16.105...
  I0111 02:24:54.177133 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.122:9080/dial?request=hostname&protocol=udp&host=10.42.2.145&port=8081&tries=1'] Namespace:pod-network-test-4930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:24:54.177219 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:24:54.177294 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.145%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 02:24:54.251031 23 utils.go:356] Waiting for responses: map[]
  I0111 02:24:54.251273 23 utils.go:360] reached 10.42.2.145 after 0/1 tries
  I0111 02:24:54.251299 23 networking.go:42] Breadth first check of 10.42.1.121 on host 172.31.22.167...
  I0111 02:24:54.267324 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.122:9080/dial?request=hostname&protocol=udp&host=10.42.1.121&port=8081&tries=1'] Namespace:pod-network-test-4930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:24:54.267362 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:24:54.267461 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.121%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 02:24:54.349670 23 utils.go:356] Waiting for responses: map[]
  I0111 02:24:54.349899 23 utils.go:360] reached 10.42.1.121 after 0/1 tries
  I0111 02:24:54.349997 23 networking.go:42] Breadth first check of 10.42.0.128 on host 172.31.22.7...
  I0111 02:24:54.365011 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.122:9080/dial?request=hostname&protocol=udp&host=10.42.0.128&port=8081&tries=1'] Namespace:pod-network-test-4930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:24:54.365052 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:24:54.365116 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.128%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0111 02:24:54.441570 23 utils.go:356] Waiting for responses: map[]
  I0111 02:24:54.441616 23 utils.go:360] reached 10.42.0.128 after 0/1 tries
  I0111 02:24:54.441631 23 networking.go:42] Breadth first check of 10.42.3.198 on host 172.31.29.145...
  I0111 02:24:54.447920 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.122:9080/dial?request=hostname&protocol=udp&host=10.42.3.198&port=8081&tries=1'] Namespace:pod-network-test-4930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0111 02:24:54.447959 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0111 02:24:54.448046 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.198%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0111 02:24:54.468619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:54.539582 23 utils.go:356] Waiting for responses: map[]
  I0111 02:24:54.539681 23 utils.go:360] reached 10.42.3.198 after 0/1 tries
  I0111 02:24:54.539704 23 networking.go:53] Going to retry 0 out of 4 pods....
  I0111 02:24:54.539845 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4930" for this suite. @ 01/11/25 02:24:54.547
• [16.800 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/11/25 02:24:54.559
  I0111 02:24:54.559030 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename pods @ 01/11/25 02:24:54.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:24:54.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:24:54.618
  STEP: creating pod @ 01/11/25 02:24:54.622
  E0111 02:24:55.468640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:56.469632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:24:56.665719 23 pods.go:83] Pod pod-hostip-63960af2-9afe-47f9-ab0c-c8f645b1e627 has hostIP: 172.31.29.145
  I0111 02:24:56.666021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9463" for this suite. @ 01/11/25 02:24:56.67
• [2.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/11/25 02:24:56.684
  I0111 02:24:56.684358 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename secrets @ 01/11/25 02:24:56.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:24:56.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:24:56.762
  STEP: Creating secret with name secret-test-292de595-34ee-4abb-ac32-45f634cd59f0 @ 01/11/25 02:24:56.773
  STEP: Creating a pod to test consume secrets @ 01/11/25 02:24:56.786
  E0111 02:24:57.469222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:58.469337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:24:59.469474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:00.470132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/11/25 02:25:00.853
  I0111 02:25:00.865384 23 output.go:207] Trying to get logs from node ip-172-31-22-167.us-east-2.compute.internal pod pod-secrets-73d1f2ab-dca1-487f-a28e-1cf017a9c153 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/11/25 02:25:00.902
  I0111 02:25:00.943296 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2198" for this suite. @ 01/11/25 02:25:00.947
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/11/25 02:25:00.979
  I0111 02:25:00.979486 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3354511725
  STEP: Building a namespace api object, basename chunking @ 01/11/25 02:25:00.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/11/25 02:25:01.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/11/25 02:25:01.038
  STEP: creating a large number of resources @ 01/11/25 02:25:01.042
  E0111 02:25:01.471527      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:02.472366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:03.472852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:04.473688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:05.474691      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:06.475756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:07.476649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:08.477208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:09.478112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:10.478996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:11.479565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:12.480575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:13.481974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:14.482893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:15.483514      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:16.484807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:17.484919      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0111 02:25:18.486053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 01/11/25 02:25:18.699
  I0111 02:25:18.740864 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0111 02:25:18.789953 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0111 02:25:18.843528 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0111 02:25:18.887788 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0111 02:25:18.943880 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0111 02:25:18.994780 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0111 02:25:19.040977 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0111 02:25:19.087353 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0111 02:25:19.148985 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0111 02:25:19.189743 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0111 02:25:19.239866 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0111 02:25:19.290391 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0111 02:25:19.339843 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0111 02:25:19.389757 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0111 02:25:19.448266 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E0111 02:25:19.486558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:25:19.495463 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0111 02:25:19.541623 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0111 02:25:19.588680 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0111 02:25:19.637998 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0111 02:25:19.693369 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0111 02:25:19.738107 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0111 02:25:19.786766 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0111 02:25:19.838065 23 chunking.go:98] Retrieved 17/17 results with rv 56456 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0111 02:25:19.886671 23 chunking.go:98] Retrieved 9/17 results with rv 56456 and continue 
  I0111 02:25:19.938199 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0111 02:25:19.988413 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0111 02:25:20.038339 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0111 02:25:20.088451 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0111 02:25:20.146125 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0111 02:25:20.190199 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0111 02:25:20.238205 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0111 02:25:20.288238 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0111 02:25:20.337473 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0111 02:25:20.392405 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0111 02:25:20.441955 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  E0111 02:25:20.487606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:25:20.496709 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0111 02:25:20.537191 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0111 02:25:20.598738 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0111 02:25:20.639654 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0111 02:25:20.689694 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0111 02:25:20.738988 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0111 02:25:20.792413 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0111 02:25:20.838538 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0111 02:25:20.891032 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0111 02:25:20.938361 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0111 02:25:20.987728 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0111 02:25:21.037964 23 chunking.go:98] Retrieved 17/17 results with rv 56459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0111 02:25:21.087194 23 chunking.go:98] Retrieved 9/17 results with rv 56459 and continue 
  I0111 02:25:21.136854 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0111 02:25:21.187090 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0111 02:25:21.237297 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0111 02:25:21.287367 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0111 02:25:21.339190 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0111 02:25:21.400137 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0111 02:25:21.437960 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0111 02:25:21.488811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0111 02:25:21.496967 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0111 02:25:21.537209 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0111 02:25:21.590863 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0111 02:25:21.650534 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0111 02:25:21.687856 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0111 02:25:21.736528 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0111 02:25:21.789255 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0111 02:25:21.837496 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0111 02:25:21.891825 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0111 02:25:21.936971 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0111 02:25:21.986744 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0111 02:25:22.038187 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0111 02:25:22.087105 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0111 02:25:22.157325 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0111 02:25:22.191660 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0111 02:25:22.237710 23 chunking.go:98] Retrieved 17/17 results with rv 56464 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY0NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0111 02:25:22.289219 23 chunking.go:98] Retrieved 9/17 results with rv 56464 and continue 
  STEP: retrieving those results all at once @ 01/11/25 02:25:22.289
  I0111 02:25:22.344401 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8884" for this suite. @ 01/11/25 02:25:22.389
• [21.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0111 02:25:22.462574 23 suites.go:34] Running AfterSuite actions on node 1
  I0111 02:25:22.462651 23 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
  E0111 02:25:22.489976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.089 seconds]
------------------------------

Ran 411 of 6622 Specs in 6590.753 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h49m52.219416894s
Test Suite Passed
