  I0108 00:01:06.492412      20 e2e.go:109] Starting e2e run "945931f3-bbf0-4a76-8743-a098b415c7c7" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1736294465 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0108 00:01:06.905492 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:01:06.907122 20 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0108 00:01:06.962265 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0108 00:01:06.967957 20 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0108 00:01:06.968109 20 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  I0108 00:01:06.968138 20 e2e.go:245] e2e test version: v1.32.0
  I0108 00:01:06.969616 20 e2e.go:254] kube-apiserver version: v1.32.0+rke2r1
  I0108 00:01:06.969742 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:01:06.983306 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 01/08/25 00:01:07.236
  I0108 00:01:07.236600 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename fake-node @ 01/08/25 00:01:07.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:01:07.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:01:07.533
  STEP: Create "e2e-fake-node-jpld7" @ 01/08/25 00:01:07.541
  STEP: Getting "e2e-fake-node-jpld7" @ 01/08/25 00:01:07.606
  STEP: Patching "e2e-fake-node-jpld7" @ 01/08/25 00:01:07.649
  STEP: Listing nodes with LabelSelector "e2e-fake-node-jpld7=patched" @ 01/08/25 00:01:07.843
  STEP: Updating "e2e-fake-node-jpld7" @ 01/08/25 00:01:07.848
  STEP: Delete "e2e-fake-node-jpld7" @ 01/08/25 00:01:07.895
  STEP: Confirm deletion of "e2e-fake-node-jpld7" @ 01/08/25 00:01:08.044
  I0108 00:01:13.229949 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-3815" for this suite. @ 01/08/25 00:01:13.235
• [6.159 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 01/08/25 00:01:13.395
  I0108 00:01:13.395048 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:01:13.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:01:13.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:01:13.766
  STEP: Creating a pod to test downward api env vars @ 01/08/25 00:01:13.773
  STEP: Saw pod success @ 01/08/25 00:01:30.1
  I0108 00:01:30.106616 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-93f7afb7-e106-4558-98e3-81261a9e4df5 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:01:30.138
  I0108 00:01:30.199464 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3226" for this suite. @ 01/08/25 00:01:30.211
• [16.834 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/08/25 00:01:30.229
  I0108 00:01:30.229254 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:01:30.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:01:30.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:01:30.268
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/08/25 00:01:30.272
  STEP: When a replication controller with a matching selector is created @ 01/08/25 00:01:38.344
  STEP: Then the orphan pod is adopted @ 01/08/25 00:01:38.37
  I0108 00:01:39.400870 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7774" for this suite. @ 01/08/25 00:01:39.407
• [9.195 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/08/25 00:01:39.424
  I0108 00:01:39.424772 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename cronjob @ 01/08/25 00:01:39.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:01:39.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:01:39.485
  STEP: Creating a cronjob @ 01/08/25 00:01:39.491
  STEP: Ensuring more than one job is running at a time @ 01/08/25 00:01:39.511
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/08/25 00:03:01.518
  STEP: Removing cronjob @ 01/08/25 00:03:01.528
  I0108 00:03:01.540752 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6699" for this suite. @ 01/08/25 00:03:01.551
• [82.164 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/08/25 00:03:01.589
  I0108 00:03:01.589832 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/08/25 00:03:01.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:01.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:01.676
  I0108 00:03:01.689824 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5805" for this suite. @ 01/08/25 00:03:01.699
• [0.140 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/08/25 00:03:01.741
  I0108 00:03:01.741712 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename watch @ 01/08/25 00:03:01.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:01.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:01.786
  STEP: creating a watch on configmaps with a certain label @ 01/08/25 00:03:01.79
  STEP: creating a new configmap @ 01/08/25 00:03:01.81
  STEP: modifying the configmap once @ 01/08/25 00:03:01.825
  STEP: changing the label value of the configmap @ 01/08/25 00:03:01.842
  STEP: Expecting to observe a delete notification for the watched object @ 01/08/25 00:03:01.858
  I0108 00:03:01.859172 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18715 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:03:01.859500 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18716 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:03:01.859707 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18717 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/08/25 00:03:01.859
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/08/25 00:03:01.876
  STEP: changing the label value of the configmap back @ 01/08/25 00:03:11.876
  STEP: modifying the configmap a third time @ 01/08/25 00:03:11.914
  STEP: deleting the configmap @ 01/08/25 00:03:11.948
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/08/25 00:03:11.969
  I0108 00:03:11.970213 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18777 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:03:11.970592 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18778 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:03:11.970826 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6978  6328ff7a-0e2f-42ff-b478-d5ac508b665c 18780 0 2025-01-08 00:03:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-08 00:03:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:03:11.971164 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6978" for this suite. @ 01/08/25 00:03:11.977
• [10.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/08/25 00:03:11.992
  I0108 00:03:11.992551 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:03:11.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:12.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:12.058
  STEP: Creating configMap with name projected-configmap-test-volume-813e93be-d907-4812-a302-83d2dfb0eb8f @ 01/08/25 00:03:12.062
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:03:12.078
  STEP: Saw pod success @ 01/08/25 00:03:24.146
  I0108 00:03:24.152251 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-5d1ed166-d4f2-4677-bfd6-53e3b334472b container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:03:24.196
  I0108 00:03:24.243293 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7372" for this suite. @ 01/08/25 00:03:24.256
• [12.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 01/08/25 00:03:24.294
  I0108 00:03:24.294541 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:03:24.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:24.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:24.393
  STEP: creating Agnhost RC @ 01/08/25 00:03:24.401
  I0108 00:03:24.401847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-2174 create -f -'
  I0108 00:03:24.672988 20 builder.go:146] stderr: ""
  I0108 00:03:24.673041 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/08/25 00:03:24.673
  I0108 00:03:25.682596 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:03:25.682662 20 framework.go:733] Found 0 / 1
  I0108 00:03:26.680289 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:03:26.680351 20 framework.go:733] Found 1 / 1
  I0108 00:03:26.680378 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/08/25 00:03:26.68
  I0108 00:03:26.684181 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:03:26.684227 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0108 00:03:26.684283 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-2174 patch pod agnhost-primary-ttkjm -p {"metadata":{"annotations":{"x":"y"}}}'
  I0108 00:03:26.820713 20 builder.go:146] stderr: ""
  I0108 00:03:26.820766 20 builder.go:147] stdout: "pod/agnhost-primary-ttkjm patched\n"
  STEP: checking annotations @ 01/08/25 00:03:26.82
  I0108 00:03:26.826248 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:03:26.826297 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0108 00:03:26.826637 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2174" for this suite. @ 01/08/25 00:03:26.836
• [2.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/08/25 00:03:26.859
  I0108 00:03:26.859226 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubelet-test @ 01/08/25 00:03:26.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:26.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:26.911
  STEP: Waiting for pod completion @ 01/08/25 00:03:26.941
  I0108 00:03:32.999490 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-331" for this suite. @ 01/08/25 00:03:33.005
• [6.167 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/08/25 00:03:33.026
  I0108 00:03:33.026858 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename events @ 01/08/25 00:03:33.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:33.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:33.086
  STEP: Create set of events @ 01/08/25 00:03:33.091
  I0108 00:03:33.111363 20 core_events.go:198] created test-event-1
  I0108 00:03:33.121487 20 core_events.go:198] created test-event-2
  I0108 00:03:33.136959 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/08/25 00:03:33.137
  STEP: delete collection of events @ 01/08/25 00:03:33.141
  I0108 00:03:33.141671 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/08/25 00:03:33.181
  I0108 00:03:33.181573 20 core_events.go:230] requesting list of events to confirm quantity
  I0108 00:03:33.187775 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-35" for this suite. @ 01/08/25 00:03:33.192
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/08/25 00:03:33.213
  I0108 00:03:33.213158 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename events @ 01/08/25 00:03:33.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:33.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:33.257
  STEP: Create set of events @ 01/08/25 00:03:33.262
  STEP: get a list of Events with a label in the current namespace @ 01/08/25 00:03:33.31
  STEP: delete a list of events @ 01/08/25 00:03:33.314
  I0108 00:03:33.314911 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/08/25 00:03:33.386
  I0108 00:03:33.390108 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2695" for this suite. @ 01/08/25 00:03:33.396
• [0.197 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/08/25 00:03:33.411
  I0108 00:03:33.411288 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:03:33.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:33.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:33.462
  STEP: Setting up server cert @ 01/08/25 00:03:33.559
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:03:34.043
  STEP: Deploying the webhook pod @ 01/08/25 00:03:34.063
  STEP: Wait for the deployment to be ready @ 01/08/25 00:03:34.096
  I0108 00:03:34.108948 20 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/08/25 00:03:36.135
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:03:36.19
  I0108 00:03:37.191711 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/08/25 00:03:37.203
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/08/25 00:03:37.256
  STEP: Creating a dummy validating-webhook-configuration object @ 01/08/25 00:03:37.29
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/08/25 00:03:37.314
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/08/25 00:03:37.339
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/08/25 00:03:37.377
  I0108 00:03:37.578465 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4575" for this suite. @ 01/08/25 00:03:37.584
  STEP: Destroying namespace "webhook-markers-3266" for this suite. @ 01/08/25 00:03:37.595
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/08/25 00:03:37.619
  I0108 00:03:37.619915 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:03:37.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:03:37.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:03:37.68
  STEP: creating service in namespace services-2396 @ 01/08/25 00:03:37.689
  STEP: creating service affinity-clusterip-transition in namespace services-2396 @ 01/08/25 00:03:37.689
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2396 @ 01/08/25 00:03:37.725
  I0108 00:03:37.749996      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2396, replica count: 3
  I0108 00:03:40.801046      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:03:43.801325      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:03:46.802429      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:03:46.812465 20 resource.go:361] Creating new exec pod
  I0108 00:03:49.847249 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2396 exec execpod-affinitywjnxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0108 00:03:50.161530 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.43.14.94) 80 port [tcp/http] succeeded!\n"
  I0108 00:03:50.161595 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:03:50.161707 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2396 exec execpod-affinitywjnxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.14.94 80'
  I0108 00:03:50.664237 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.14.94 80\nConnection to 10.43.14.94 80 port [tcp/http] succeeded!\n"
  I0108 00:03:50.664305 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:03:50.694208 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2396 exec execpod-affinitywjnxt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.14.94:80/ ; done'
  I0108 00:03:51.037592 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n"
  I0108 00:03:51.037689 20 builder.go:147] stdout: "\naffinity-clusterip-transition-n22x7\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-n22x7\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-n22x7\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-n22x7\naffinity-clusterip-transition-pkl9m\naffinity-clusterip-transition-pkl9m\naffinity-clusterip-transition-pkl9m\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-n22x7\naffinity-clusterip-transition-77wmw"
  I0108 00:03:51.037717 20 service.go:242] Received response from host: affinity-clusterip-transition-n22x7
  I0108 00:03:51.037738 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037755 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037769 20 service.go:242] Received response from host: affinity-clusterip-transition-n22x7
  I0108 00:03:51.037798 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037811 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037826 20 service.go:242] Received response from host: affinity-clusterip-transition-n22x7
  I0108 00:03:51.037839 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037865 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037878 20 service.go:242] Received response from host: affinity-clusterip-transition-n22x7
  I0108 00:03:51.037890 20 service.go:242] Received response from host: affinity-clusterip-transition-pkl9m
  I0108 00:03:51.037905 20 service.go:242] Received response from host: affinity-clusterip-transition-pkl9m
  I0108 00:03:51.037918 20 service.go:242] Received response from host: affinity-clusterip-transition-pkl9m
  I0108 00:03:51.037931 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.037945 20 service.go:242] Received response from host: affinity-clusterip-transition-n22x7
  I0108 00:03:51.037961 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.075456 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2396 exec execpod-affinitywjnxt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.14.94:80/ ; done'
  I0108 00:03:51.403613 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.14.94:80/\n"
  I0108 00:03:51.403695 20 builder.go:147] stdout: "\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw\naffinity-clusterip-transition-77wmw"
  I0108 00:03:51.403834 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.403855 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404158 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404233 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404263 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404336 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404387 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404568 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404588 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404601 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404611 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404622 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404636 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404650 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404663 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404677 20 service.go:242] Received response from host: affinity-clusterip-transition-77wmw
  I0108 00:03:51.404759 20 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2396, will wait for the garbage collector to delete the pods @ 01/08/25 00:03:51.439
  I0108 00:03:51.522128 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 14.326961ms
  I0108 00:03:51.629291 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 107.159473ms
  I0108 00:04:00.787417 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2396" for this suite. @ 01/08/25 00:04:00.793
• [23.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/08/25 00:04:00.807
  I0108 00:04:00.807551 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:04:00.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:00.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:00.859
  STEP: Creating projection with secret that has name projected-secret-test-e6b94b0b-1800-436a-a8e2-55a42ba06bf9 @ 01/08/25 00:04:00.862
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:04:00.874
  STEP: Saw pod success @ 01/08/25 00:04:04.927
  I0108 00:04:04.933639 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-3b839539-06c6-49ab-a261-6d39a41bd77c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:04:04.943
  I0108 00:04:05.000395 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4285" for this suite. @ 01/08/25 00:04:05.007
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/08/25 00:04:05.031
  I0108 00:04:05.031251 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl-logs @ 01/08/25 00:04:05.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:05.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:05.084
  STEP: creating a pod @ 01/08/25 00:04:05.088
  I0108 00:04:05.088711 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0108 00:04:05.206527 20 builder.go:146] stderr: ""
  I0108 00:04:05.206587 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/08/25 00:04:05.206
  I0108 00:04:05.206804 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0108 00:04:07.231339 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/08/25 00:04:07.231
  I0108 00:04:07.231459 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator'
  I0108 00:04:07.357724 20 builder.go:146] stderr: ""
  I0108 00:04:07.357799 20 builder.go:147] stdout: "I0108 00:04:06.341088       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/tsfd 386\nI0108 00:04:06.541551       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/w7n4 385\nI0108 00:04:06.741966       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/5gv7 372\nI0108 00:04:06.941403       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/snj 360\nI0108 00:04:07.141833       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/qkg 426\nI0108 00:04:07.341131       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/7cwn 409\n"
  STEP: limiting log lines @ 01/08/25 00:04:07.357
  I0108 00:04:07.357919 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator --tail=1'
  I0108 00:04:07.459924 20 builder.go:146] stderr: ""
  I0108 00:04:07.459988 20 builder.go:147] stdout: "I0108 00:04:07.341131       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/7cwn 409\n"
  I0108 00:04:07.460020 20 logs.go:180] got output "I0108 00:04:07.341131       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/7cwn 409\n"
  STEP: limiting log bytes @ 01/08/25 00:04:07.46
  I0108 00:04:07.460669 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator --limit-bytes=1'
  I0108 00:04:07.616599 20 builder.go:146] stderr: ""
  I0108 00:04:07.616664 20 builder.go:147] stdout: "I"
  I0108 00:04:07.616683 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/08/25 00:04:07.616
  I0108 00:04:07.616926 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator --tail=1 --timestamps'
  I0108 00:04:07.738586 20 builder.go:146] stderr: ""
  I0108 00:04:07.738673 20 builder.go:147] stdout: "2025-01-08T00:04:07.541756494Z I0108 00:04:07.541523       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/55j 393\n"
  I0108 00:04:07.739275 20 logs.go:192] got output "2025-01-08T00:04:07.541756494Z I0108 00:04:07.541523       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/55j 393\n"
  STEP: restricting to a time range @ 01/08/25 00:04:07.739
  I0108 00:04:10.241373 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator --since=1s'
  I0108 00:04:10.356107 20 builder.go:146] stderr: ""
  I0108 00:04:10.356175 20 builder.go:147] stdout: "I0108 00:04:09.541800       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/g7p 577\nI0108 00:04:09.741254       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/chj 422\nI0108 00:04:09.941705       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/p6x 397\nI0108 00:04:10.142068       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/98n 309\nI0108 00:04:10.341450       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/7lz 207\n"
  I0108 00:04:10.356237 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 logs logs-generator logs-generator --since=24h'
  I0108 00:04:10.459176 20 builder.go:146] stderr: ""
  I0108 00:04:10.460684 20 builder.go:147] stdout: "I0108 00:04:06.341088       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/tsfd 386\nI0108 00:04:06.541551       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/w7n4 385\nI0108 00:04:06.741966       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/5gv7 372\nI0108 00:04:06.941403       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/snj 360\nI0108 00:04:07.141833       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/qkg 426\nI0108 00:04:07.341131       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/7cwn 409\nI0108 00:04:07.541523       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/55j 393\nI0108 00:04:07.741878       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/7vnw 450\nI0108 00:04:07.941569       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/57tp 242\nI0108 00:04:08.141571       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/qfz 200\nI0108 00:04:08.342002       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/7bj5 430\nI0108 00:04:08.541392       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/2hf 379\nI0108 00:04:08.742078       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/5mm 332\nI0108 00:04:08.941490       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/lvll 505\nI0108 00:04:09.141915       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/s2g 413\nI0108 00:04:09.341236       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/mz88 594\nI0108 00:04:09.541800       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/g7p 577\nI0108 00:04:09.741254       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/chj 422\nI0108 00:04:09.941705       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/p6x 397\nI0108 00:04:10.142068       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/98n 309\nI0108 00:04:10.341450       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/7lz 207\n"
  I0108 00:04:10.460931 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-logs-1551 delete pod logs-generator'
  I0108 00:04:11.860490 20 builder.go:146] stderr: ""
  I0108 00:04:11.860557 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0108 00:04:11.860929 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1551" for this suite. @ 01/08/25 00:04:11.878
• [6.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/08/25 00:04:11.894
  I0108 00:04:11.894380 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubelet-test @ 01/08/25 00:04:11.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:11.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:11.958
  I0108 00:04:14.020283 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7587" for this suite. @ 01/08/25 00:04:14.025
• [2.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/08/25 00:04:14.042
  I0108 00:04:14.042426 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:04:14.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:14.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:14.092
  I0108 00:04:14.118470 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0108 00:04:19.123621 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 00:04:19.123
  I0108 00:04:19.123774 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/08/25 00:04:19.142
  I0108 00:04:19.177047 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4aa87db-95aa-4a68-a3a8-191420a021fb",
      ResourceVersion: (string) (len=5) "19456",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891459,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 00:04:19.231433 20 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eae3231-2529-43da-b114-afbb6e7a972c",
      ResourceVersion: (string) (len=5) "19463",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891459,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d4aa87db-95aa-4a68-a3a8-191420a021fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 34 61 61 38 37  64 62 2d 39 35 61 61 2d  |\"d4aa87db-95aa-|
              00000120  34 61 36 38 2d 61 33 61  38 2d 31 39 31 34 32 30  |4a68-a3a8-191420|
              00000130  61 30 32 31 66 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a021fb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:04:19.233059 20 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0108 00:04:19.233527 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f679b95-8b9d-4284-ab39-21ee7c347180",
      ResourceVersion: (string) (len=5) "19457",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d4aa87db-95aa-4a68-a3a8-191420a021fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 34 61 61 38 37 64  |"uid\":\"d4aa87d|
              00000040  62 2d 39 35 61 61 2d 34  61 36 38 2d 61 33 61 38  |b-95aa-4a68-a3a8|
              00000050  2d 31 39 31 34 32 30 61  30 32 31 66 62 5c 22 7d  |-191420a021fb\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:04:19.262359 20 deployment.go:68] Pod "test-cleanup-controller-4xr2f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-4xr2f",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e7c7324-16d7-4b00-b4ed-40965d7d40e1",
      ResourceVersion: (string) (len=5) "19430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.18/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "08a3041a9e15077de51114dedd7de0e8d0a3d4e3a018ed40bbb57e06ea392347",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "5f679b95-8b9d-4284-ab39-21ee7c347180",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 66 36 37 39 62 39 35  |uid\":\"5f679b95|
              00000080  2d 38 62 39 64 2d 34 32  38 34 2d 61 62 33 39 2d  |-8b9d-4284-ab39-|
              00000090  32 31 65 65 37 63 33 34  37 31 38 30 5c 22 7d 22  |21ee7c347180\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 38  5c 22 7d 22 3a 7b 22 2e  |.42.4.18\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4v9p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4v9p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=10) "10.42.4.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871891455,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f74f65e9490e770dc5ed3aa6c0af146f26f4bb07a2ab3db81be3e9e1806e0c8a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h4v9p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:04:19.266525 20 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-9lxr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-9lxr2",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-8851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "984ab8a0-b4d0-42e8-baa1-814bd34199a1",
      ResourceVersion: (string) (len=5) "19462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891459,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "2eae3231-2529-43da-b114-afbb6e7a972c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 65  61 65 33 32 33 31 2d 32  |d\":\"2eae3231-2|
              00000090  35 32 39 2d 34 33 64 61  2d 62 31 31 34 2d 61 66  |529-43da-b114-af|
              000000a0  62 62 36 65 37 61 39 37  32 63 5c 22 7d 22 3a 7b  |bb6e7a972c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lxpvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lxpvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:04:19.268346 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8851" for this suite. @ 01/08/25 00:04:19.292
• [5.276 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/08/25 00:04:19.318
  I0108 00:04:19.318435 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subjectreview @ 01/08/25 00:04:19.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:19.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:19.388
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6908" @ 01/08/25 00:04:19.393
  I0108 00:04:19.404581 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6908:e2e"
  I0108 00:04:19.404693 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6908"}
  I0108 00:04:19.404710 20 subjectreviews.go:71] saUID: "d2e608d5-e427-4788-862e-1260381372fc"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6908:e2e" @ 01/08/25 00:04:19.404
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6908:e2e" @ 01/08/25 00:04:19.405
  I0108 00:04:19.407792 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6908:e2e" api 'list' configmaps in "subjectreview-6908" namespace @ 01/08/25 00:04:19.407
  I0108 00:04:19.421016 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6908:e2e" @ 01/08/25 00:04:19.421
  I0108 00:04:19.448640 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0108 00:04:19.448684 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0108 00:04:19.448845 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6908" for this suite. @ 01/08/25 00:04:19.455
• [0.176 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 01/08/25 00:04:19.494
  I0108 00:04:19.494407 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename containers @ 01/08/25 00:04:19.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:19.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:19.544
  I0108 00:04:21.587367 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5180" for this suite. @ 01/08/25 00:04:21.592
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/08/25 00:04:21.606
  I0108 00:04:21.606510 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:04:21.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:21.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:21.655
  STEP: create deployment with httpd image @ 01/08/25 00:04:21.662
  I0108 00:04:21.663266 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9006 create -f -'
  I0108 00:04:21.832294 20 builder.go:146] stderr: ""
  I0108 00:04:21.832357 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/08/25 00:04:21.832
  I0108 00:04:21.832685 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9006 diff -f -'
  I0108 00:04:26.560033 20 builder.go:135] rc: 1
  I0108 00:04:26.560293 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9006 delete -f -'
  I0108 00:04:26.677400 20 builder.go:146] stderr: ""
  I0108 00:04:26.677454 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0108 00:04:26.677642 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9006" for this suite. @ 01/08/25 00:04:26.698
• [5.115 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/08/25 00:04:26.721
  I0108 00:04:26.721937 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename runtimeclass @ 01/08/25 00:04:26.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:26.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:26.765
  I0108 00:04:26.893873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7891" for this suite. @ 01/08/25 00:04:26.926
• [0.230 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 01/08/25 00:04:26.952
  I0108 00:04:26.952307 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename containers @ 01/08/25 00:04:26.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:27.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:27.011
  STEP: Creating a pod to test override command @ 01/08/25 00:04:27.015
  STEP: Saw pod success @ 01/08/25 00:04:31.073
  I0108 00:04:31.077777 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod client-containers-dc40d65b-5782-4360-ab36-066dc57b8d5c container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:04:31.085
  I0108 00:04:31.135169 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8974" for this suite. @ 01/08/25 00:04:31.14
• [4.201 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/08/25 00:04:31.153
  I0108 00:04:31.153553 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename limitrange @ 01/08/25 00:04:31.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:31.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:31.207
  STEP: Creating a LimitRange @ 01/08/25 00:04:31.211
  STEP: Setting up watch @ 01/08/25 00:04:31.211
  STEP: Submitting a LimitRange @ 01/08/25 00:04:31.323
  STEP: Verifying LimitRange creation was observed @ 01/08/25 00:04:31.347
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/08/25 00:04:31.356
  I0108 00:04:31.360668 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0108 00:04:31.360737 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/08/25 00:04:31.36
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/08/25 00:04:31.376
  I0108 00:04:31.380114 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0108 00:04:31.380378 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/08/25 00:04:31.38
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/08/25 00:04:31.407
  I0108 00:04:31.434906 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0108 00:04:31.434973 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/08/25 00:04:31.435
  STEP: Failing to create a Pod with more than max resources @ 01/08/25 00:04:31.48
  STEP: Updating a LimitRange @ 01/08/25 00:04:31.483
  STEP: Verifying LimitRange updating is effective @ 01/08/25 00:04:31.494
  STEP: Creating a Pod with less than former min resources @ 01/08/25 00:04:33.499
  STEP: Failing to create a Pod with more than max resources @ 01/08/25 00:04:33.514
  STEP: Deleting a LimitRange @ 01/08/25 00:04:33.516
  STEP: Verifying the LimitRange was deleted @ 01/08/25 00:04:33.545
  I0108 00:04:38.550440 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/08/25 00:04:38.55
  I0108 00:04:38.567108 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1857" for this suite. @ 01/08/25 00:04:38.574
• [7.453 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 01/08/25 00:04:38.605
  I0108 00:04:38.606022 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 00:04:38.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:04:38.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:04:38.667
  STEP: Creating a test headless service @ 01/08/25 00:04:38.671
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local;sleep 1; done
   @ 01/08/25 00:04:38.686
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5957.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local;sleep 1; done
   @ 01/08/25 00:04:38.687
  STEP: creating a pod to probe DNS @ 01/08/25 00:04:38.687
  STEP: submitting the pod to kubernetes @ 01/08/25 00:04:38.688
  STEP: retrieving the pod @ 01/08/25 00:04:50.785
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:04:50.788
  I0108 00:04:50.798790 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.803338 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.808384 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.812999 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.820845 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.826137 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.833080 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.838925 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:50.838984 20 dns_common.go:506] Lookups using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local]

  I0108 00:04:50.846301 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:04:50.854415 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:04:50.861660 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:04:55.797939 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.803307 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.811797 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.815906 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.821255 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.831099 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.837680 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.842634 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:04:55.842679 20 dns_common.go:506] Lookups using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local]

  I0108 00:04:55.850993 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:04:55.860661 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:04:55.869574 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:05:00.799725 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.804278 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.809232 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.814094 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.818839 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.823587 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.830013 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.837293 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:00.837520 20 dns_common.go:506] Lookups using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local]

  I0108 00:05:00.846135 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:05:00.855197 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:05:00.863360 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:05:05.798860 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.804176 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.810033 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.815426 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.821043 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.827595 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.833077 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.839000 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:05.839061 20 dns_common.go:506] Lookups using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local jessie_udp@dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5957.svc.cluster.local]

  I0108 00:05:05.852103 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:05:05.860168 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:05:05.868667 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:05:10.795913 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:10.801261 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:10.806493 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:10.811309 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:10.821069 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local from pod dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83: the server could not find the requested resource (get pods dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83)
  I0108 00:05:10.832986 20 dns_common.go:506] Lookups using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5957.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5957.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5957.svc.cluster.local]

  I0108 00:05:10.847048 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:05:10.856178 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:05:10.867282 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:05:15.838345 20 dns_common.go:546] DNS probes using dns-5957/dns-test-1ca512de-7e80-4261-9ce7-bb8ba6b9fa83 succeeded

  STEP: deleting the pod @ 01/08/25 00:05:15.838
  STEP: deleting the test headless service @ 01/08/25 00:05:15.893
  I0108 00:05:15.943708 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5957" for this suite. @ 01/08/25 00:05:15.965
• [37.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/08/25 00:05:15.978
  I0108 00:05:15.978733 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:05:15.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:05:16.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:05:16.029
  STEP: Creating secret with name s-test-opt-del-112d0781-3a92-41f7-87c9-93d034f69cf8 @ 01/08/25 00:05:16.069
  STEP: Creating secret with name s-test-opt-upd-2b93737b-9922-477d-a8f1-557b538e47c9 @ 01/08/25 00:05:16.085
  STEP: Creating the pod @ 01/08/25 00:05:16.101
  STEP: Deleting secret s-test-opt-del-112d0781-3a92-41f7-87c9-93d034f69cf8 @ 01/08/25 00:05:18.19
  STEP: Updating secret s-test-opt-upd-2b93737b-9922-477d-a8f1-557b538e47c9 @ 01/08/25 00:05:18.209
  STEP: Creating secret with name s-test-opt-create-d1502764-f76d-4192-8871-38672ff9f89a @ 01/08/25 00:05:18.221
  STEP: waiting to observe update in volume @ 01/08/25 00:05:18.239
  I0108 00:05:20.277096 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3150" for this suite. @ 01/08/25 00:05:20.282
• [4.320 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 01/08/25 00:05:20.299
  I0108 00:05:20.299913 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption @ 01/08/25 00:05:20.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:05:20.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:05:20.358
  I0108 00:05:20.408954 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0108 00:06:20.419839 20 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/08/25 00:06:20.426
  STEP: Adding a custom resource @ 01/08/25 00:06:20.426
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/08/25 00:06:20.457
  I0108 00:06:20.505009 20 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/08/25 00:06:20.505
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/08/25 00:06:24.519
  I0108 00:06:24.532283 20 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/08/25 00:06:24.532
  STEP: Verifying the pod has the pod disruption condition @ 01/08/25 00:06:26.545
  I0108 00:06:26.551385 20 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0108 00:06:27.085616 20 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 01/08/25 00:06:27.155
  STEP: Removing a custom resource @ 01/08/25 00:06:27.194
  STEP: Removing a custom resource @ 01/08/25 00:06:27.212
  STEP: Removing a custom resource @ 01/08/25 00:06:27.231
  I0108 00:06:27.258897 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7322" for this suite. @ 01/08/25 00:06:27.264
• [66.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/08/25 00:06:27.286
  I0108 00:06:27.286239 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:06:27.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:06:27.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:06:27.328
  STEP: Counting existing ResourceQuota @ 01/08/25 00:06:27.331
  STEP: Creating a ResourceQuota @ 01/08/25 00:06:32.336
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:06:32.353
  STEP: Creating a Service @ 01/08/25 00:06:34.36
  STEP: Creating a NodePort Service @ 01/08/25 00:06:34.449
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/08/25 00:06:34.649
  STEP: Ensuring resource quota status captures service creation @ 01/08/25 00:06:34.732
  STEP: Deleting Services @ 01/08/25 00:06:36.743
  STEP: Ensuring resource quota status released usage @ 01/08/25 00:06:36.877
  I0108 00:06:38.883242 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8582" for this suite. @ 01/08/25 00:06:38.889
• [11.621 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/08/25 00:06:38.908
  I0108 00:06:38.908578 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:06:38.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:06:38.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:06:38.963
  STEP: creating service in namespace services-9552 @ 01/08/25 00:06:38.967
  STEP: creating service affinity-nodeport in namespace services-9552 @ 01/08/25 00:06:38.967
  STEP: creating replication controller affinity-nodeport in namespace services-9552 @ 01/08/25 00:06:39.003
  I0108 00:06:39.033281      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-9552, replica count: 3
  I0108 00:06:42.084641      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:06:42.102707 20 resource.go:361] Creating new exec pod
  I0108 00:06:47.168477 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-9552 exec execpod-affinity9m575 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0108 00:06:47.380375 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.43.193.74) 80 port [tcp/http] succeeded!\n"
  I0108 00:06:47.380452 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:06:47.380558 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-9552 exec execpod-affinity9m575 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.193.74 80'
  I0108 00:06:47.579634 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.193.74 80\n+ echo hostName\nConnection to 10.43.193.74 80 port [tcp/http] succeeded!\n"
  I0108 00:06:47.579704 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:06:47.580106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-9552 exec execpod-affinity9m575 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.249 30876'
  I0108 00:06:47.774078 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.249 30876\nConnection to 172.31.20.249 30876 port [tcp/*] succeeded!\n"
  I0108 00:06:47.774168 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:06:47.774275 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-9552 exec execpod-affinity9m575 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.100 30876'
  I0108 00:06:47.964940 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.100 30876\nConnection to 172.31.20.100 30876 port [tcp/*] succeeded!\n"
  I0108 00:06:47.965013 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:06:47.965112 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-9552 exec execpod-affinity9m575 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.191:30876/ ; done'
  I0108 00:06:48.290156 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30876/\n"
  I0108 00:06:48.290262 20 builder.go:147] stdout: "\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r\naffinity-nodeport-v294r"
  I0108 00:06:48.290291 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290310 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290325 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290340 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290356 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290370 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290384 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290399 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290416 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290431 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290444 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290457 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290471 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290485 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290497 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290511 20 service.go:242] Received response from host: affinity-nodeport-v294r
  I0108 00:06:48.290582 20 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9552, will wait for the garbage collector to delete the pods @ 01/08/25 00:06:48.346
  I0108 00:06:48.426421 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 17.374792ms
  I0108 00:06:48.527019 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.596024ms
  I0108 00:06:52.188472 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9552" for this suite. @ 01/08/25 00:06:52.202
• [13.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/08/25 00:06:52.22
  I0108 00:06:52.220497 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:06:52.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:06:52.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:06:52.266
  STEP: creating a Deployment @ 01/08/25 00:06:52.272
  STEP: waiting for Deployment to be created @ 01/08/25 00:06:52.283
  STEP: waiting for all Replicas to be Ready @ 01/08/25 00:06:52.284
  I0108 00:06:52.286828 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.287019 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.314532 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.314589 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.351388 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.351558 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.463770 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:52.463871 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0108 00:06:54.097835 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0108 00:06:54.097943 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0108 00:06:54.371284 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/08/25 00:06:54.371
  I0108 00:06:54.390844 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/08/25 00:06:54.39
  I0108 00:06:54.392780 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.393018 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.393282 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.393499 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.394000 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.394579 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.395464 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.395486 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 0
  I0108 00:06:54.395668 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:06:54.395908 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:06:54.395934 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.396075 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.396179 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.396196 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.432388 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.432450 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.489921 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.489977 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:54.562551 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:06:54.562594 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:06:56.390058 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:56.390166 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:06:56.475342 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  STEP: listing Deployments @ 01/08/25 00:06:56.475
  I0108 00:06:56.479282 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/08/25 00:06:56.479
  I0108 00:06:56.503405 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/08/25 00:06:56.503
  I0108 00:06:56.515973 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:56.532635 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:56.643816 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:56.681385 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:56.700801 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:58.416889 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:58.533945 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:06:58.550910 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0108 00:07:05.468612 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/08/25 00:07:05.537
  STEP: fetching the DeploymentStatus @ 01/08/25 00:07:05.561
  I0108 00:07:05.581740 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:07:05.582177 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:07:05.582389 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:07:05.582607 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:07:05.583308 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 1
  I0108 00:07:05.583528 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:07:05.583555 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:07:05.583941 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 2
  I0108 00:07:05.584033 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-6689 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/08/25 00:07:05.584
  I0108 00:07:05.604792 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.605373 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.605424 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.605977 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.606590 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.607052 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.608369 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.608795 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.609160 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.609578 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.609923 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.610287 20 deployment.go:475] observed event type MODIFIED
  I0108 00:07:05.614586 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0108 00:07:05.619505 20 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae8e149e-6cae-4a6f-827e-6f6fe7a04504",
      ResourceVersion: (string) (len=5) "20625",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891612,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d2a9fd2-eb93-4431-861e-37b2534ef918",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 32 61  39 66 64 32 2d 65 62 39  |":\"2d2a9fd2-eb9|
              00000130  33 2d 34 34 33 31 2d 38  36 31 65 2d 33 37 62 32  |3-4431-861e-37b2|
              00000140  35 33 34 65 66 39 31 38  5c 22 7d 22 3a 7b 7d 7d  |534ef918\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0108 00:07:05.643413 20 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4754c2c-a5e1-4c8f-ad56-7eda11ef248f",
      ResourceVersion: (string) (len=5) "20760",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d2a9fd2-eb93-4431-861e-37b2534ef918",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 32 61  39 66 64 32 2d 65 62 39  |":\"2d2a9fd2-eb9|
              00000130  33 2d 34 34 33 31 2d 38  36 31 65 2d 33 37 62 32  |3-4431-861e-37b2|
              00000140  35 33 34 65 66 39 31 38  5c 22 7d 22 3a 7b 7d 7d  |534ef918\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0108 00:07:05.675630 20 deployment.go:669] pod: "test-deployment-79899bcfcc-crjkh":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-crjkh",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b654b80-f57b-46cd-ba9f-066f4a3030e1",
      ResourceVersion: (string) (len=5) "20779",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.1.6/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.1.6/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "db68555e79c952016fd1f696a47ad4526680cbc1339e7d17ac75c87b1d426c30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "b4754c2c-a5e1-4c8f-ad56-7eda11ef248f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 34 37 35 34 63 32 63  |uid\":\"b4754c2c|
              000000a0  2d 61 35 65 31 2d 34 63  38 66 2d 61 64 35 36 2d  |-a5e1-4c8f-ad56-|
              000000b0  37 65 64 61 31 31 65 66  32 34 38 66 5c 22 7d 22  |7eda11ef248f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 5c  22 7d 22 3a 7b 22 2e 22  |.42.1.6\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h85sg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h85sg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-25-234.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.234"
        }
      },
      PodIP: (string) (len=9) "10.42.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871891625,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eb4cd2fc63b76faed5f29a8ef9d1212921967d10eb8194554e2ebe313ea52e2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h85sg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0108 00:07:05.688593 20 deployment.go:669] pod: "test-deployment-79899bcfcc-rrcwq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-rrcwq",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2df4e0aa-666e-4c81-829e-1b36addb92c3",
      ResourceVersion: (string) (len=5) "20778",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1541256bbdbaab12aa2a0fad61fffeb197269baf74797a6db5d0b6bb9ff3411b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.30/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "b4754c2c-a5e1-4c8f-ad56-7eda11ef248f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 34 37 35 34 63 32 63  |uid\":\"b4754c2c|
              000000a0  2d 61 35 65 31 2d 34 63  38 66 2d 61 64 35 36 2d  |-a5e1-4c8f-ad56-|
              000000b0  37 65 64 61 31 31 65 66  32 34 38 66 5c 22 7d 22  |7eda11ef248f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891617,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 33 30  5c 22 7d 22 3a 7b 22 2e  |.42.4.30\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xm7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xm7v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=10) "10.42.4.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871891617,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dfaccfe3808d056fe3a1cfda88ef5379f793e39a5a44a51186b9e39e885ad3bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6xm7v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0108 00:07:05.702708 20 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf7cc8c0-5f0b-4aaf-b3b0-41c0e512e733",
      ResourceVersion: (string) (len=5) "20768",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d2a9fd2-eb93-4431-861e-37b2534ef918",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 32 61  39 66 64 32 2d 65 62 39  |":\"2d2a9fd2-eb9|
              00000130  33 2d 34 34 33 31 2d 38  36 31 65 2d 33 37 62 32  |3-4431-861e-37b2|
              00000140  35 33 34 65 66 39 31 38  5c 22 7d 22 3a 7b 7d 7d  |534ef918\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0108 00:07:05.745218 20 deployment.go:669] pod: "test-deployment-f78d658f9-7972m":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-7972m",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-6689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6ebd753-14a3-4dc2-9231-ccd3602147ae",
      ResourceVersion: (string) (len=5) "20764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "048ea407394f98350ba3d867a52e3e1a6dbc9ccc49d43419f9d574f9eb3c3772",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "bf7cc8c0-5f0b-4aaf-b3b0-41c0e512e733",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 66 37 63 63 38 63 30  |uid\":\"bf7cc8c0|
              000000a0  2d 35 66 30 62 2d 34 61  61 66 2d 62 33 62 30 2d  |-5f0b-4aaf-b3b0-|
              000000b0  34 31 63 30 65 35 31 32  65 37 33 33 5c 22 7d 22  |41c0e512e733\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891615,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 32 39  5c 22 7d 22 3a 7b 22 2e  |.42.4.29\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5lv46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5lv46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871891614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=10) "10.42.4.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871891614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871891615,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://f31dbaf5f879994f37fadd9665c4782f67698fb70c8213c3c7a5d40c76be8107",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5lv46",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0108 00:07:05.748540 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6689" for this suite. @ 01/08/25 00:07:05.753
• [13.547 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/08/25 00:07:05.767
  I0108 00:07:05.768043 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-runtime @ 01/08/25 00:07:05.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:05.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:05.821
  STEP: create the container @ 01/08/25 00:07:05.825
  W0108 00:07:05.846651      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/08/25 00:07:05.847
  STEP: get the container status @ 01/08/25 00:07:09.942
  STEP: the container should be terminated @ 01/08/25 00:07:09.946
  STEP: the termination message should be set @ 01/08/25 00:07:09.946
  I0108 00:07:09.946454 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/08/25 00:07:09.946
  I0108 00:07:10.214981 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3848" for this suite. @ 01/08/25 00:07:10.219
• [4.477 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 01/08/25 00:07:10.244
  I0108 00:07:10.244958 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:07:10.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:10.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:10.53
  STEP: fetching services @ 01/08/25 00:07:10.533
  I0108 00:07:10.538173 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-560" for this suite. @ 01/08/25 00:07:10.543
• [0.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/08/25 00:07:10.615
  I0108 00:07:10.615068 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:07:10.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:10.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:10.653
  STEP: Creating projection with secret that has name projected-secret-test-104d0fb5-8c17-4433-afb1-411a125cf724 @ 01/08/25 00:07:10.659
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:07:10.67
  STEP: Saw pod success @ 01/08/25 00:07:14.723
  I0108 00:07:14.731462 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-a2011c26-fa9a-4ed7-81fb-7de99224e475 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:07:14.754
  I0108 00:07:14.806075 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8353" for this suite. @ 01/08/25 00:07:14.81
• [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/08/25 00:07:14.825
  I0108 00:07:14.825922 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:07:14.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:14.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:14.899
  STEP: Creating projection with secret that has name projected-secret-test-map-b5e333cc-ec5e-4b2d-8f37-f8ae508c46fc @ 01/08/25 00:07:14.918
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:07:14.935
  STEP: Saw pod success @ 01/08/25 00:07:18.999
  I0108 00:07:19.003947 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-74d5a788-01c9-4faa-9f5b-a62d05781923 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:07:19.026
  I0108 00:07:19.068632 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8727" for this suite. @ 01/08/25 00:07:19.075
• [4.273 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/08/25 00:07:19.099
  I0108 00:07:19.099448 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:07:19.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:19.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:19.152
  STEP: Creating the pod @ 01/08/25 00:07:19.155
  I0108 00:07:21.722667 20 pod_client.go:173] Successfully updated pod "labelsupdatea69cc590-96ea-4817-8601-00df1f2c2784"
  I0108 00:07:25.754929 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5809" for this suite. @ 01/08/25 00:07:25.759
• [6.673 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/08/25 00:07:25.773
  I0108 00:07:25.773439 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/08/25 00:07:25.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:25.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:25.825
  STEP: creating @ 01/08/25 00:07:25.83
  STEP: getting @ 01/08/25 00:07:25.887
  STEP: listing in namespace @ 01/08/25 00:07:25.909
  STEP: patching @ 01/08/25 00:07:25.914
  STEP: deleting @ 01/08/25 00:07:25.959
  I0108 00:07:25.986253 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3105" for this suite. @ 01/08/25 00:07:25.992
• [0.237 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/08/25 00:07:26.011
  I0108 00:07:26.011682 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:07:26.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:07:26.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:07:26.074
  STEP: Creating configMap with name cm-test-opt-del-32328553-dcd3-43a3-89d6-d519aeb01efa @ 01/08/25 00:07:26.094
  STEP: Creating configMap with name cm-test-opt-upd-2865176c-93e9-4e63-aa2c-2659084e71d2 @ 01/08/25 00:07:26.108
  STEP: Creating the pod @ 01/08/25 00:07:26.118
  STEP: Deleting configmap cm-test-opt-del-32328553-dcd3-43a3-89d6-d519aeb01efa @ 01/08/25 00:07:30.203
  STEP: Updating configmap cm-test-opt-upd-2865176c-93e9-4e63-aa2c-2659084e71d2 @ 01/08/25 00:07:30.221
  STEP: Creating configMap with name cm-test-opt-create-f83c7758-8e1f-47b7-b269-b4e912893d28 @ 01/08/25 00:07:30.231
  STEP: waiting to observe update in volume @ 01/08/25 00:07:30.241
  I0108 00:08:12.543300 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2991" for this suite. @ 01/08/25 00:08:12.548
• [46.548 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/08/25 00:08:12.559
  I0108 00:08:12.559922 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:08:12.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:12.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:12.609
  STEP: creating secret secrets-1380/secret-test-85beb69d-6ff4-49f7-9bc3-aa51e1ad8a43 @ 01/08/25 00:08:12.612
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:08:12.64
  STEP: Saw pod success @ 01/08/25 00:08:16.704
  I0108 00:08:16.707640 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-42d066f5-e02b-40cd-a107-5eb6e48f6b13 container env-test: <nil>
  STEP: delete the pod @ 01/08/25 00:08:16.72
  I0108 00:08:16.761102 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1380" for this suite. @ 01/08/25 00:08:16.766
• [4.217 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/08/25 00:08:16.777
  I0108 00:08:16.777449 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename tables @ 01/08/25 00:08:16.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:16.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:16.827
  I0108 00:08:16.840765 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3550" for this suite. @ 01/08/25 00:08:16.867
• [0.103 seconds]
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 01/08/25 00:08:16.88
  I0108 00:08:16.880882 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:08:16.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:16.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:16.947
  STEP: Creating a pod to test downward api env vars @ 01/08/25 00:08:16.952
  STEP: Saw pod success @ 01/08/25 00:08:21.018
  I0108 00:08:21.021680 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-a834d45e-a25e-4f47-91cb-2c5e83ffa0b7 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:08:21.032
  I0108 00:08:21.074873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-503" for this suite. @ 01/08/25 00:08:21.08
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/08/25 00:08:21.094
  I0108 00:08:21.094999 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 00:08:21.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:21.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:21.145
  STEP: Creating pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6 @ 01/08/25 00:08:21.148
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 00:08:23.182
  I0108 00:08:23.186406 20 container_probe.go:1749] Initial restart count of pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 is 0
  I0108 00:08:23.190012 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:25.197244 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:27.201443 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:29.212121 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:31.216699 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:33.225133 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:35.230776 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:37.237321 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:39.242262 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:41.247643 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:43.254293 20 container_probe.go:1759] Get pod liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 in namespace container-probe-6
  I0108 00:08:43.255080 20 container_probe.go:1763] Restart count of pod container-probe-6/liveness-c51f1b4a-3541-4e4f-90f4-7469c2ec7875 is now 1 (20.068622155s elapsed)
  STEP: deleting the pod @ 01/08/25 00:08:43.256
  I0108 00:08:43.298680 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6" for this suite. @ 01/08/25 00:08:43.308
• [22.232 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/08/25 00:08:43.327
  I0108 00:08:43.327387 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename proxy @ 01/08/25 00:08:43.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:43.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:43.395
  I0108 00:08:43.398375 20 proxy.go:387] Creating pod...
  I0108 00:08:47.450588 20 proxy.go:411] Creating service...
  I0108 00:08:47.485297 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=DELETE
  I0108 00:08:47.498013 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0108 00:08:47.498075 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=OPTIONS
  I0108 00:08:47.512659 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0108 00:08:47.513355 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=PATCH
  I0108 00:08:47.519032 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0108 00:08:47.519080 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=POST
  I0108 00:08:47.523866 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0108 00:08:47.523913 20 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=PUT
  I0108 00:08:47.534594 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0108 00:08:47.534650 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=DELETE
  I0108 00:08:47.539884 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0108 00:08:47.539934 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0108 00:08:47.551030 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0108 00:08:47.551087 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=PATCH
  I0108 00:08:47.556833 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0108 00:08:47.556874 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=POST
  I0108 00:08:47.562330 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0108 00:08:47.562389 20 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=PUT
  I0108 00:08:47.569484 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0108 00:08:47.569627 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=GET
  I0108 00:08:47.573477 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0108 00:08:47.573513 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=GET
  I0108 00:08:47.579152 20 proxy.go:487] http.Client request:GET StatusCode:301
  I0108 00:08:47.579204 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/pods/agnhost/proxy?method=HEAD
  I0108 00:08:47.582193 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0108 00:08:47.582239 20 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-866/services/e2e-proxy-test-service/proxy?method=HEAD
  I0108 00:08:47.587564 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0108 00:08:47.587893 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-866" for this suite. @ 01/08/25 00:08:47.593
• [4.282 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/08/25 00:08:47.61
  I0108 00:08:47.610433 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:08:47.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:47.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:47.653
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/08/25 00:08:47.657
  I0108 00:08:47.658786 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:08:50.829863 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:08:59.242768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6550" for this suite. @ 01/08/25 00:08:59.252
• [11.653 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 01/08/25 00:08:59.265
  I0108 00:08:59.265487 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename containers @ 01/08/25 00:08:59.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:08:59.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:08:59.313
  STEP: Creating a pod to test override arguments @ 01/08/25 00:08:59.317
  STEP: Saw pod success @ 01/08/25 00:09:03.366
  I0108 00:09:03.376397 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod client-containers-626bba0d-29b6-4002-b286-090a7a6210a3 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:09:03.393
  I0108 00:09:03.466361 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-39" for this suite. @ 01/08/25 00:09:03.471
• [4.220 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/08/25 00:09:03.486
  I0108 00:09:03.486576 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:09:03.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:03.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:03.527
  STEP: Creating a ResourceQuota with terminating scope @ 01/08/25 00:09:03.531
  STEP: Ensuring ResourceQuota status is calculated @ 01/08/25 00:09:03.579
  STEP: Creating a ResourceQuota with not terminating scope @ 01/08/25 00:09:05.584
  STEP: Ensuring ResourceQuota status is calculated @ 01/08/25 00:09:05.594
  STEP: Creating a long running pod @ 01/08/25 00:09:07.601
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/08/25 00:09:07.628
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/08/25 00:09:09.64
  STEP: Deleting the pod @ 01/08/25 00:09:11.645
  STEP: Ensuring resource quota status released the pod usage @ 01/08/25 00:09:11.683
  STEP: Creating a terminating pod @ 01/08/25 00:09:13.691
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/08/25 00:09:13.73
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/08/25 00:09:15.734
  STEP: Deleting the pod @ 01/08/25 00:09:17.739
  STEP: Ensuring resource quota status released the pod usage @ 01/08/25 00:09:17.78
  I0108 00:09:19.785072 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8902" for this suite. @ 01/08/25 00:09:19.789
• [16.314 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/08/25 00:09:19.801
  I0108 00:09:19.801094 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context @ 01/08/25 00:09:19.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:19.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:19.841
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/08/25 00:09:19.845
  STEP: Saw pod success @ 01/08/25 00:09:23.899
  I0108 00:09:23.904423 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod security-context-d06946ab-4911-498b-a901-421bbb8ad97f container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:09:23.916
  I0108 00:09:23.956812 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6319" for this suite. @ 01/08/25 00:09:23.961
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/08/25 00:09:23.975
  I0108 00:09:23.976052 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:09:23.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:24.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:24.013
  STEP: Creating secret with name secret-test-map-3dcad539-0783-48a5-8e8b-1c55c21f0c81 @ 01/08/25 00:09:24.018
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:09:24.034
  STEP: Saw pod success @ 01/08/25 00:09:28.064
  I0108 00:09:28.067949 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-ee3ba51b-166c-4a4c-9e7d-bdcafe2cacba container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:09:28.084
  I0108 00:09:28.114164 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1207" for this suite. @ 01/08/25 00:09:28.118
• [4.165 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 01/08/25 00:09:28.141
  I0108 00:09:28.141620 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:09:28.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:28.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:28.184
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/08/25 00:09:28.188
  I0108 00:09:28.188808 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4056 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0108 00:09:28.295076 20 builder.go:146] stderr: ""
  I0108 00:09:28.295143 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/08/25 00:09:28.295
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/08/25 00:09:33.347
  I0108 00:09:33.347780 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4056 get pod e2e-test-httpd-pod -o json'
  I0108 00:09:33.443371 20 builder.go:146] stderr: ""
  I0108 00:09:33.443546 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"18b79a2cee0b31640def77f9766deab6289fdca0762497de58c909eb42fe987a\",\n            \"cni.projectcalico.org/podIP\": \"10.42.4.43/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.4.43/32\"\n        },\n        \"creationTimestamp\": \"2025-01-08T00:09:28Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4056\",\n        \"resourceVersion\": \"21845\",\n        \"uid\": \"70615f11-aaf2-4433-aff9-8da538dbaaa6\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nxcd6\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-16-191.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-nxcd6\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-08T00:09:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-08T00:09:28Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-08T00:09:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-08T00:09:29Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-08T00:09:28Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://549d93b7b06e0d29b3ab9ad1845ecbf125de3488156a87c43bb70522ecf94b80\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-08T00:09:29Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nxcd6\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.16.191\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.16.191\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.4.43\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.4.43\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-08T00:09:28Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/08/25 00:09:33.443
  I0108 00:09:33.443783 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4056 replace -f -'
  I0108 00:09:33.669055 20 builder.go:146] stderr: ""
  I0108 00:09:33.669109 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/08/25 00:09:33.669
  I0108 00:09:33.681532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4056 delete pods e2e-test-httpd-pod'
  I0108 00:09:35.904910 20 builder.go:146] stderr: ""
  I0108 00:09:35.904985 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0108 00:09:35.905133 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4056" for this suite. @ 01/08/25 00:09:35.909
• [7.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/08/25 00:09:35.927
  I0108 00:09:35.927044 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:09:35.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:35.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:35.962
  STEP: Creating configMap configmap-6821/configmap-test-a02e697f-8555-4b59-a5a4-fcf9f3c201dc @ 01/08/25 00:09:35.966
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:09:35.981
  STEP: Saw pod success @ 01/08/25 00:09:40.02
  I0108 00:09:40.024204 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-b34a220b-c9c0-407d-b939-53d61111182e container env-test: <nil>
  STEP: delete the pod @ 01/08/25 00:09:40.038
  I0108 00:09:40.085922 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6821" for this suite. @ 01/08/25 00:09:40.09
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/08/25 00:09:40.103
  I0108 00:09:40.103594 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context-test @ 01/08/25 00:09:40.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:40.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:40.143
  I0108 00:09:46.196670 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9840" for this suite. @ 01/08/25 00:09:46.201
• [6.114 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/08/25 00:09:46.217
  I0108 00:09:46.217670 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 00:09:46.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:46.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:46.25
  I0108 00:09:46.326891 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"0eab417a-6bfc-48ab-9ebb-849cb1c7be11", Controller:(*bool)(0xc00283e6be), BlockOwnerDeletion:(*bool)(0xc00283e6bf)}}
  I0108 00:09:46.354901 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f6b11f9a-9ca2-473e-94ed-4f3cfbc924ca", Controller:(*bool)(0xc00268217e), BlockOwnerDeletion:(*bool)(0xc00268217f)}}
  I0108 00:09:46.372259 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f302f161-d573-466f-b1e2-937976bea0f6", Controller:(*bool)(0xc00283e8ce), BlockOwnerDeletion:(*bool)(0xc00283e8cf)}}
  I0108 00:09:51.416732 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2605" for this suite. @ 01/08/25 00:09:51.422
• [5.223 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/08/25 00:09:51.441
  I0108 00:09:51.441096 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 00:09:51.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:09:51.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:09:51.492
  STEP: Creating pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133 @ 01/08/25 00:09:51.495
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 00:09:53.522
  I0108 00:09:53.525284 20 container_probe.go:1749] Initial restart count of pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd is 0
  I0108 00:09:53.539061 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:09:55.544295 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:09:57.548470 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:09:59.553095 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:01.559630 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:03.567232 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:05.572214 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:07.577620 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:09.581924 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:11.588554 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:13.593086 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:15.598901 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:17.611012 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:19.615067 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:21.619417 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:23.624954 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:25.640326 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:27.648349 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:29.653167 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:31.663491 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:33.673607 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:35.679135 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:37.692231 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:39.702554 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:41.722110 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:43.732062 20 container_probe.go:1759] Get pod busybox-19f6675f-f374-493d-9956-ccb78ec544fd in namespace container-probe-133
  I0108 00:10:43.732152 20 container_probe.go:1763] Restart count of pod container-probe-133/busybox-19f6675f-f374-493d-9956-ccb78ec544fd is now 1 (50.206641635s elapsed)
  STEP: deleting the pod @ 01/08/25 00:10:43.732
  I0108 00:10:43.766873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-133" for this suite. @ 01/08/25 00:10:43.795
• [52.378 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/08/25 00:10:43.819
  I0108 00:10:43.819987 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 00:10:43.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:10:43.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:10:43.858
  STEP: Create a ReplicaSet @ 01/08/25 00:10:43.861
  STEP: Verify that the required pods have come up @ 01/08/25 00:10:43.876
  I0108 00:10:43.881651 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0108 00:10:48.890496 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/08/25 00:10:48.89
  I0108 00:10:52.906547 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/08/25 00:10:52.906
  STEP: DeleteCollection of the ReplicaSets @ 01/08/25 00:10:52.911
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/08/25 00:10:52.923
  I0108 00:10:52.931798 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9298" for this suite. @ 01/08/25 00:10:52.94
• [9.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/08/25 00:10:52.966
  I0108 00:10:52.966887 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:10:52.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:10:53.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:10:53.051
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7344 @ 01/08/25 00:10:53.057
  STEP: changing the ExternalName service to type=NodePort @ 01/08/25 00:10:53.073
  STEP: creating replication controller externalname-service in namespace services-7344 @ 01/08/25 00:10:53.12
  I0108 00:10:53.144688      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7344, replica count: 2
  I0108 00:10:56.195931      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:10:59.196202      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:10:59.196637 20 resource.go:361] Creating new exec pod
  I0108 00:11:04.247557 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7344 exec execpodsh52l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0108 00:11:04.476357 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.41.16) 80 port [tcp/http] succeeded!\n"
  I0108 00:11:04.476421 20 builder.go:147] stdout: "externalname-service-qlkcb"
  I0108 00:11:04.476510 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7344 exec execpodsh52l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.41.16 80'
  I0108 00:11:04.750421 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.41.16 80\n+ echo hostName\nConnection to 10.43.41.16 80 port [tcp/http] succeeded!\n"
  I0108 00:11:04.750482 20 builder.go:147] stdout: "externalname-service-tfcbq"
  I0108 00:11:04.750577 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7344 exec execpodsh52l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.249 31678'
  I0108 00:11:04.936697 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.249 31678\nConnection to 172.31.20.249 31678 port [tcp/*] succeeded!\n"
  I0108 00:11:04.936760 20 builder.go:147] stdout: ""
  I0108 00:11:05.750905 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7344 exec execpodsh52l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.249 31678'
  I0108 00:11:05.987674 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.249 31678\nConnection to 172.31.20.249 31678 port [tcp/*] succeeded!\n"
  I0108 00:11:05.987743 20 builder.go:147] stdout: "externalname-service-qlkcb"
  I0108 00:11:05.988569 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7344 exec execpodsh52l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.100 31678'
  I0108 00:11:06.201163 20 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.20.100 31678\necho hostName\nConnection to 172.31.20.100 31678 port [tcp/*] succeeded!\n"
  I0108 00:11:06.201761 20 builder.go:147] stdout: "externalname-service-tfcbq"
  I0108 00:11:06.201862 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0108 00:11:06.272422 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7344" for this suite. @ 01/08/25 00:11:06.287
• [13.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/08/25 00:11:06.299
  I0108 00:11:06.299928 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:11:06.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:06.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:06.342
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/08/25 00:11:06.349
  STEP: Saw pod success @ 01/08/25 00:11:10.39
  I0108 00:11:10.394286 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-e2afbde2-d137-4d17-a033-d8994b20c66e container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:11:10.402
  I0108 00:11:10.429535 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8064" for this suite. @ 01/08/25 00:11:10.44
• [4.152 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/08/25 00:11:10.452
  I0108 00:11:10.452857 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename runtimeclass @ 01/08/25 00:11:10.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:10.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:10.49
  STEP: Deleting RuntimeClass runtimeclass-8211-delete-me @ 01/08/25 00:11:10.506
  STEP: Waiting for the RuntimeClass to disappear @ 01/08/25 00:11:10.517
  I0108 00:11:10.529218 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8211" for this suite. @ 01/08/25 00:11:10.534
• [0.093 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/08/25 00:11:10.548
  I0108 00:11:10.548399 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:11:10.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:10.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:10.596
  STEP: creating a Pod with a static label @ 01/08/25 00:11:10.603
  STEP: watching for Pod to be ready @ 01/08/25 00:11:10.644
  I0108 00:11:10.648720 20 pods.go:945] observed Pod pod-test in namespace pods-185 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0108 00:11:10.656757 20 pods.go:945] observed Pod pod-test in namespace pods-185 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  }]
  I0108 00:11:10.692394 20 pods.go:945] observed Pod pod-test in namespace pods-185 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  }]
  I0108 00:11:11.219057 20 pods.go:945] observed Pod pod-test in namespace pods-185 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  }]
  I0108 00:11:12.209419 20 pods.go:948] Found Pod pod-test in namespace pods-185 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:12 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 00:11:10 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/08/25 00:11:12.216
  STEP: getting the Pod and ensuring that it's patched @ 01/08/25 00:11:12.245
  STEP: replacing the Pod's status Ready condition to False @ 01/08/25 00:11:12.249
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/08/25 00:11:12.277
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/08/25 00:11:12.278
  STEP: watching for the Pod to be deleted @ 01/08/25 00:11:12.303
  I0108 00:11:12.314176 20 pods.go:1058] observed event type MODIFIED
  I0108 00:11:14.219078 20 pods.go:1058] observed event type MODIFIED
  I0108 00:11:15.017768 20 pods.go:1058] observed event type MODIFIED
  I0108 00:11:15.152654 20 pods.go:1058] observed event type MODIFIED
  I0108 00:11:15.533762 20 pods.go:1058] observed event type MODIFIED
  I0108 00:11:15.555165 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-185" for this suite. @ 01/08/25 00:11:15.562
• [5.027 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/08/25 00:11:15.575
  I0108 00:11:15.575146 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:11:15.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:15.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:15.633
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:11:15.638
  STEP: Saw pod success @ 01/08/25 00:11:19.706
  I0108 00:11:19.719472 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-63cda822-6932-487f-8b35-22f131aab184 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:11:19.732
  I0108 00:11:19.777781 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8724" for this suite. @ 01/08/25 00:11:19.782
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 01/08/25 00:11:19.796
  I0108 00:11:19.796114 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:11:19.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:19.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:19.831
  I0108 00:11:19.834838 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-2232 version'
  I0108 00:11:19.910103 20 builder.go:146] stderr: ""
  I0108 00:11:19.910160 20 builder.go:147] stdout: "Client Version: v1.32.0\nKustomize Version: v5.5.0\nServer Version: v1.32.0+rke2r1\n"
  I0108 00:11:19.910465 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2232" for this suite. @ 01/08/25 00:11:19.915
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 01/08/25 00:11:19.933
  I0108 00:11:19.933378 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 00:11:19.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:19.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:19.966
  STEP: Creating service test in namespace statefulset-6524 @ 01/08/25 00:11:19.971
  STEP: Looking for a node to schedule stateful set and pod @ 01/08/25 00:11:19.98
  STEP: Creating pod with conflicting port in namespace statefulset-6524 @ 01/08/25 00:11:20.017
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6524 @ 01/08/25 00:11:20.042
  STEP: Creating statefulset with conflicting port in namespace statefulset-6524 @ 01/08/25 00:11:28.072
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6524 @ 01/08/25 00:11:28.083
  I0108 00:11:28.138872 20 statefulset.go:872] Observed stateful pod in namespace: statefulset-6524, name: ss-0, uid: 8b975fd9-dd1d-4b8a-8505-d131490a864b, status phase: Pending. Waiting for statefulset controller to delete.
  I0108 00:11:28.172818 20 statefulset.go:872] Observed stateful pod in namespace: statefulset-6524, name: ss-0, uid: 8b975fd9-dd1d-4b8a-8505-d131490a864b, status phase: Failed. Waiting for statefulset controller to delete.
  I0108 00:11:28.235749 20 statefulset.go:872] Observed stateful pod in namespace: statefulset-6524, name: ss-0, uid: 8b975fd9-dd1d-4b8a-8505-d131490a864b, status phase: Failed. Waiting for statefulset controller to delete.
  I0108 00:11:28.250498 20 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-6524
  STEP: Removing pod with conflicting port in namespace statefulset-6524 @ 01/08/25 00:11:28.25
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6524 and will be in running state @ 01/08/25 00:11:28.29
  I0108 00:11:32.326544 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6524
  I0108 00:11:32.330135 20 rest.go:152] Scaling statefulset ss to 0
  I0108 00:11:42.359198 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 00:11:42.362404 20 rest.go:90] Deleting statefulset ss
  I0108 00:11:42.403220 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6524" for this suite. @ 01/08/25 00:11:42.408
• [22.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/08/25 00:11:42.424
  I0108 00:11:42.424987 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 00:11:42.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:42.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:42.466
  STEP: apply creating a deployment @ 01/08/25 00:11:42.472
  I0108 00:11:42.487654 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9690" for this suite. @ 01/08/25 00:11:42.509
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/08/25 00:11:42.527
  I0108 00:11:42.527933 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename init-container @ 01/08/25 00:11:42.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:42.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:42.566
  STEP: creating the pod @ 01/08/25 00:11:42.569
  I0108 00:11:42.569938 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0108 00:11:46.693871 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8923" for this suite. @ 01/08/25 00:11:46.708
• [4.192 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/08/25 00:11:46.72
  I0108 00:11:46.720589 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 00:11:46.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:46.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:46.766
  STEP: Updating Namespace "namespaces-3217" @ 01/08/25 00:11:46.77
  I0108 00:11:46.783385 20 namespace.go:389] Namespace "namespaces-3217" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"945931f3-bbf0-4a76-8743-a098b415c7c7", "kubernetes.io/metadata.name":"namespaces-3217", "namespaces-3217":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0108 00:11:46.783635 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3217" for this suite. @ 01/08/25 00:11:46.804
• [0.095 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 01/08/25 00:11:46.816
  I0108 00:11:46.816966 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 00:11:46.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:11:46.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:11:46.858
  STEP: Creating a test externalName service @ 01/08/25 00:11:46.864
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:11:46.88
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:11:46.88
  STEP: creating a pod to probe DNS @ 01/08/25 00:11:46.88
  STEP: submitting the pod to kubernetes @ 01/08/25 00:11:46.88
  STEP: retrieving the pod @ 01/08/25 00:11:50.926
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:11:50.93
  I0108 00:11:50.954406 20 dns_common.go:571] DNS probes using dns-test-d59a9bb0-67f8-4ddf-a34b-266fced4c4b9 succeeded

  STEP: changing the externalName to bar.example.com @ 01/08/25 00:11:50.954
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:11:50.97
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:11:50.97
  STEP: creating a second pod to probe DNS @ 01/08/25 00:11:50.97
  STEP: submitting the pod to kubernetes @ 01/08/25 00:11:50.97
  STEP: retrieving the pod @ 01/08/25 00:11:55.02
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:11:55.023
  I0108 00:11:55.032378 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:11:55.036460 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:11:55.036523 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:11:55.043732 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:11:55.050721 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:11:55.058204 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:00.031023 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:00.037849 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:00.037925 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:12:00.048018 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:12:00.057396 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:12:00.070634 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:05.030088 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:05.035029 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:05.035097 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:12:05.043642 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:12:05.050212 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:12:05.057959 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:10.030873 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:10.036173 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:10.036230 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:12:10.044413 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:12:10.052040 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:12:10.059718 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:15.029809 20 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:15.034178 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:15.034238 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:12:15.040863 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:12:15.047688 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:12:15.053695 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:20.039182 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local from pod  dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0108 00:12:20.039242 20 dns_common.go:506] Lookups using dns-3798/dns-test-c085e046-7408-439d-9d53-321c89ac9e9a failed for: [jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local]

  I0108 00:12:20.049118 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 00:12:20.056130 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 00:12:20.067226 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0108 00:12:25.033803 20 dns_common.go:571] DNS probes using dns-test-c085e046-7408-439d-9d53-321c89ac9e9a succeeded

  STEP: changing the service to type=ClusterIP @ 01/08/25 00:12:25.033
  W0108 00:12:25.068695      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:12:25.069
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3798.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3798.svc.cluster.local; sleep 1; done
   @ 01/08/25 00:12:25.069
  STEP: creating a third pod to probe DNS @ 01/08/25 00:12:25.069
  STEP: submitting the pod to kubernetes @ 01/08/25 00:12:25.074
  STEP: retrieving the pod @ 01/08/25 00:12:43.167
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:12:43.171
  I0108 00:12:43.192536 20 dns_common.go:571] DNS probes using dns-test-7eb7f031-aa8c-47dc-850c-b7f23689e64a succeeded

  STEP: deleting the pod @ 01/08/25 00:12:43.192
  STEP: deleting the pod @ 01/08/25 00:12:43.232
  STEP: deleting the pod @ 01/08/25 00:12:43.278
  STEP: deleting the test externalName service @ 01/08/25 00:12:43.329
  I0108 00:12:43.393947 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3798" for this suite. @ 01/08/25 00:12:43.416
• [56.629 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 01/08/25 00:12:43.446
  I0108 00:12:43.446335 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 00:12:43.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:12:43.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:12:43.476
  STEP: Creating a job @ 01/08/25 00:12:43.481
  STEP: Ensuring active pods == parallelism @ 01/08/25 00:12:43.492
  STEP: Orphaning one of the Job's Pods @ 01/08/25 00:12:47.511
  I0108 00:12:48.041053 20 pod_client.go:173] Successfully updated pod "adopt-release-6xk5r"
  STEP: Checking that the Job readopts the Pod @ 01/08/25 00:12:48.041
  STEP: Removing the labels from the Job's Pod @ 01/08/25 00:12:50.067
  I0108 00:12:50.598424 20 pod_client.go:173] Successfully updated pod "adopt-release-6xk5r"
  STEP: Checking that the Job releases the Pod @ 01/08/25 00:12:50.598
  I0108 00:12:52.609343 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2917" for this suite. @ 01/08/25 00:12:52.614
• [9.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 01/08/25 00:12:52.634
  I0108 00:12:52.634370 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 00:12:52.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:12:52.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:12:52.681
  STEP: Creating Indexed job @ 01/08/25 00:12:52.684
  STEP: Ensuring job reaches completions @ 01/08/25 00:12:52.7
  STEP: Ensuring pods with index for job exist @ 01/08/25 00:13:02.749
  I0108 00:13:02.753900 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6264" for this suite. @ 01/08/25 00:13:02.758
• [10.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 01/08/25 00:13:02.772
  I0108 00:13:02.772674 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:13:02.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:02.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:02.825
  STEP: creating Agnhost RC @ 01/08/25 00:13:02.829
  I0108 00:13:02.829893 20 kubectl.go:1534] namespace kubectl-7617
  I0108 00:13:02.830168 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-7617 create -f -'
  I0108 00:13:05.474350 20 builder.go:146] stderr: ""
  I0108 00:13:05.474409 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/08/25 00:13:05.474
  I0108 00:13:06.480213 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:13:06.480269 20 framework.go:733] Found 0 / 1
  I0108 00:13:07.482053 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:13:07.482120 20 framework.go:733] Found 1 / 1
  I0108 00:13:07.482145 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0108 00:13:07.485501 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:13:07.485553 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0108 00:13:07.485568 20 kubectl.go:1541] wait on agnhost-primary startup in kubectl-7617 
  I0108 00:13:07.485624 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-7617 logs agnhost-primary-tk88x agnhost-primary'
  I0108 00:13:07.606299 20 builder.go:146] stderr: ""
  I0108 00:13:07.606364 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/08/25 00:13:07.606
  I0108 00:13:07.606604 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-7617 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0108 00:13:08.022070 20 builder.go:146] stderr: ""
  I0108 00:13:08.022126 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0108 00:13:08.029085 20 utils.go:1203] Service rm2 in namespace kubectl-7617 found.
  STEP: exposing service @ 01/08/25 00:13:10.043
  I0108 00:13:10.043318 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-7617 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0108 00:13:10.175542 20 builder.go:146] stderr: ""
  I0108 00:13:10.175628 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0108 00:13:10.191286 20 utils.go:1203] Service rm3 in namespace kubectl-7617 found.
  I0108 00:13:12.200353 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7617" for this suite. @ 01/08/25 00:13:12.204
• [9.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/08/25 00:13:12.223
  I0108 00:13:12.223860 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:13:12.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:12.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:12.271
  STEP: Creating configMap with name projected-configmap-test-volume-map-a0a96f0e-5af2-4a11-876f-f8679f387495 @ 01/08/25 00:13:12.275
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:13:12.286
  STEP: Saw pod success @ 01/08/25 00:13:16.339
  I0108 00:13:16.342970 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-d8e5dbe7-eb27-4e0c-b806-ea01267977de container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:13:16.351
  I0108 00:13:16.392382 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1866" for this suite. @ 01/08/25 00:13:16.398
• [4.186 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/08/25 00:13:16.41
  I0108 00:13:16.411089 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename watch @ 01/08/25 00:13:16.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:16.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:16.455
  STEP: creating a watch on configmaps with label A @ 01/08/25 00:13:16.46
  STEP: creating a watch on configmaps with label B @ 01/08/25 00:13:16.463
  STEP: creating a watch on configmaps with label A or B @ 01/08/25 00:13:16.467
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/08/25 00:13:16.47
  I0108 00:13:16.480517 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23601 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:16.480687 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23601 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/08/25 00:13:16.48
  I0108 00:13:16.494164 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23602 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:16.494742 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23602 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/08/25 00:13:16.495
  I0108 00:13:16.508798 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23603 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:16.509234 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23603 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/08/25 00:13:16.509
  I0108 00:13:16.526435 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23604 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:16.526699 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8770  8cfd9795-2ae5-45d5-8721-c404e3b4b46a 23604 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/08/25 00:13:16.526
  I0108 00:13:16.536380 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8770  a3fcfd99-55eb-4df5-9e3c-ace3e50efdca 23605 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:16.536739 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8770  a3fcfd99-55eb-4df5-9e3c-ace3e50efdca 23605 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/08/25 00:13:26.537
  I0108 00:13:26.556510 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8770  a3fcfd99-55eb-4df5-9e3c-ace3e50efdca 23682 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:26.556605 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8770  a3fcfd99-55eb-4df5-9e3c-ace3e50efdca 23682 0 2025-01-08 00:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-08 00:13:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:13:36.557585 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8770" for this suite. @ 01/08/25 00:13:36.563
• [20.168 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/08/25 00:13:36.579
  I0108 00:13:36.579521 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:13:36.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:36.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:36.627
  STEP: Setting up server cert @ 01/08/25 00:13:36.717
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:13:37.115
  STEP: Deploying the webhook pod @ 01/08/25 00:13:37.133
  STEP: Wait for the deployment to be ready @ 01/08/25 00:13:37.162
  I0108 00:13:37.184488 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/08/25 00:13:39.197
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:13:39.224
  I0108 00:13:40.224652 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/08/25 00:13:40.237
  STEP: create a configmap that should be updated by the webhook @ 01/08/25 00:13:40.285
  I0108 00:13:40.444237 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9844" for this suite. @ 01/08/25 00:13:40.456
  STEP: Destroying namespace "webhook-markers-9792" for this suite. @ 01/08/25 00:13:40.48
• [3.913 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/08/25 00:13:40.493
  I0108 00:13:40.494411 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:13:40.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:40.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:40.6
  STEP: Creating Pod @ 01/08/25 00:13:40.604
  STEP: Reading file content from the nginx-container @ 01/08/25 00:13:44.654
  I0108 00:13:44.654621 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7677 PodName:pod-sharedvolume-1e02d162-d799-419b-ab60-fe5c2e975416 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:13:44.656135 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:13:44.656537 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-7677/pods/pod-sharedvolume-1e02d162-d799-419b-ab60-fe5c2e975416/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0108 00:13:44.779239 20 exec_util.go:108] Exec stderr: ""
  I0108 00:13:44.779526 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7677" for this suite. @ 01/08/25 00:13:44.784
• [4.306 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/08/25 00:13:44.8
  I0108 00:13:44.801019 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context-test @ 01/08/25 00:13:44.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:44.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:44.852
  I0108 00:13:48.911191 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2772" for this suite. @ 01/08/25 00:13:48.916
• [4.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/08/25 00:13:48.934
  I0108 00:13:48.934982 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:13:48.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:48.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:48.986
  STEP: Creating configMap with name configmap-test-volume-f38c789e-1f30-495b-bc6a-86e5212e8c28 @ 01/08/25 00:13:48.989
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:13:49.006
  STEP: Saw pod success @ 01/08/25 00:13:53.046
  I0108 00:13:53.050600 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-4f9576c9-acaa-4fc7-9942-78279cb69cdb container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:13:53.057
  I0108 00:13:53.087828 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7084" for this suite. @ 01/08/25 00:13:53.103
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/08/25 00:13:53.126
  I0108 00:13:53.126112 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 00:13:53.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:53.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:53.171
  STEP: Creating a pod to test env composition @ 01/08/25 00:13:53.176
  STEP: Saw pod success @ 01/08/25 00:13:57.222
  I0108 00:13:57.225315 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod var-expansion-6e593722-e345-4df9-9378-e06334b02cde container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:13:57.235
  I0108 00:13:57.263782 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7967" for this suite. @ 01/08/25 00:13:57.268
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/08/25 00:13:57.282
  I0108 00:13:57.282149 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:13:57.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:13:57.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:13:57.322
  STEP: Creating replication controller my-hostname-basic-80e7e78c-6bcc-40ee-8a7f-37972b56a19e @ 01/08/25 00:13:57.325
  I0108 00:13:57.344303 20 resource.go:87] Pod name my-hostname-basic-80e7e78c-6bcc-40ee-8a7f-37972b56a19e: Found 0 pods out of 1
  I0108 00:14:02.350006 20 resource.go:87] Pod name my-hostname-basic-80e7e78c-6bcc-40ee-8a7f-37972b56a19e: Found 1 pods out of 1
  I0108 00:14:02.350067 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-80e7e78c-6bcc-40ee-8a7f-37972b56a19e" are running
  I0108 00:14:02.354479 20 rc.go:523] Pod "my-hostname-basic-80e7e78c-6bcc-40ee-8a7f-37972b56a19e-q4r6q" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:13:58 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:13:57 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:13:58 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:13:58 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:13:57 +0000 UTC Reason: Message:}])
  I0108 00:14:02.354741 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/08/25 00:14:02.354
  I0108 00:14:02.380984 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-452" for this suite. @ 01/08/25 00:14:02.397
• [5.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/08/25 00:14:02.419
  I0108 00:14:02.419722 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename prestop @ 01/08/25 00:14:02.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:02.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:02.521
  STEP: Creating server pod server in namespace prestop-8805 @ 01/08/25 00:14:02.524
  STEP: Waiting for pods to come up. @ 01/08/25 00:14:02.538
  STEP: Creating tester pod tester in namespace prestop-8805 @ 01/08/25 00:14:04.58
  STEP: Deleting pre-stop pod @ 01/08/25 00:14:06.608
  I0108 00:14:11.638083 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/08/25 00:14:11.639
  I0108 00:14:11.667962 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8805" for this suite. @ 01/08/25 00:14:11.693
• [9.290 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/08/25 00:14:11.709
  I0108 00:14:11.709686 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 00:14:11.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:11.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:11.756
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/08/25 00:14:11.764
  I0108 00:14:11.781058 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0108 00:14:16.790063 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 00:14:16.79
  STEP: getting scale subresource @ 01/08/25 00:14:16.79
  STEP: updating a scale subresource @ 01/08/25 00:14:16.794
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/08/25 00:14:16.806
  STEP: Patch a scale subresource @ 01/08/25 00:14:16.832
  I0108 00:14:16.887126 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-462" for this suite. @ 01/08/25 00:14:16.892
• [5.208 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/08/25 00:14:16.917
  I0108 00:14:16.917588 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:14:16.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:16.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:17.004
  STEP: Creating secret with name secret-test-f6d5859e-f496-466f-af05-928f3ebe65ec @ 01/08/25 00:14:17.011
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:14:17.027
  STEP: Saw pod success @ 01/08/25 00:14:21.074
  I0108 00:14:21.077799 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-74ed22db-302c-4a9c-8efc-a18e0e2e404c container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:14:21.084
  I0108 00:14:21.112348 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-497" for this suite. @ 01/08/25 00:14:21.117
• [4.217 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/08/25 00:14:21.135
  I0108 00:14:21.135686 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:14:21.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:21.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:21.176
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:14:21.18
  STEP: Saw pod success @ 01/08/25 00:14:25.23
  I0108 00:14:25.233974 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-81575340-29d2-4639-95bc-818db6c15644 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:14:25.249
  I0108 00:14:25.294726 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9186" for this suite. @ 01/08/25 00:14:25.3
• [4.185 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/08/25 00:14:25.321
  I0108 00:14:25.321865 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:14:25.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:25.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:25.366
  STEP: creating the pod @ 01/08/25 00:14:25.371
  STEP: submitting the pod to kubernetes @ 01/08/25 00:14:25.371
  STEP: verifying the pod is in kubernetes @ 01/08/25 00:14:27.43
  STEP: updating the pod @ 01/08/25 00:14:27.438
  I0108 00:14:27.966962 20 pod_client.go:173] Successfully updated pod "pod-update-d61667c6-bdd6-4120-ad27-64c7562cbc95"
  STEP: verifying the updated pod is in kubernetes @ 01/08/25 00:14:27.972
  I0108 00:14:27.977472 20 pods.go:391] Pod update OK
  I0108 00:14:27.977661 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4401" for this suite. @ 01/08/25 00:14:27.982
• [2.678 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/08/25 00:14:28
  I0108 00:14:28.000928 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:14:28.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:28.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:28.04
  STEP: creating all guestbook components @ 01/08/25 00:14:28.044
  I0108 00:14:28.044909 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0108 00:14:28.045630 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:28.270498 20 builder.go:146] stderr: ""
  I0108 00:14:28.270547 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0108 00:14:28.270597 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0108 00:14:28.271270 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:28.486925 20 builder.go:146] stderr: ""
  I0108 00:14:28.486977 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0108 00:14:28.487034 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0108 00:14:28.487159 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:28.686120 20 builder.go:146] stderr: ""
  I0108 00:14:28.686559 20 builder.go:147] stdout: "service/frontend created\n"
  I0108 00:14:28.686642 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0108 00:14:28.686805 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:28.845008 20 builder.go:146] stderr: ""
  I0108 00:14:28.845256 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0108 00:14:28.845337 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0108 00:14:28.846149 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:29.042172 20 builder.go:146] stderr: ""
  I0108 00:14:29.042251 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0108 00:14:29.042331 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0108 00:14:29.042638 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 create -f -'
  I0108 00:14:29.215091 20 builder.go:146] stderr: ""
  I0108 00:14:29.215162 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/08/25 00:14:29.215
  I0108 00:14:29.215390 20 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0108 00:14:34.266480 20 kubectl.go:2273] Waiting for frontend to serve content.
  I0108 00:14:34.286305 20 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0108 00:14:34.327813 20 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/08/25 00:14:34.349
  I0108 00:14:34.350251 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:34.494738 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:34.494803 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/08/25 00:14:34.494
  I0108 00:14:34.494934 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:34.675418 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:34.675598 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/08/25 00:14:34.675
  I0108 00:14:34.675756 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:34.884921 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:34.884994 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/08/25 00:14:34.885
  I0108 00:14:34.885342 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:34.986643 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:34.986713 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/08/25 00:14:34.986
  I0108 00:14:34.987028 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:35.136644 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:35.136697 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/08/25 00:14:35.136
  I0108 00:14:35.136967 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-4644 delete --grace-period=0 --force -f -'
  I0108 00:14:35.359089 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:14:35.359142 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0108 00:14:35.359340 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4644" for this suite. @ 01/08/25 00:14:35.375
• [7.387 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/08/25 00:14:35.388
  I0108 00:14:35.388632 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:14:35.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:35.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:35.451
  STEP: creating the pod @ 01/08/25 00:14:35.454
  STEP: setting up watch @ 01/08/25 00:14:35.455
  STEP: submitting the pod to kubernetes @ 01/08/25 00:14:35.559
  STEP: verifying the pod is in kubernetes @ 01/08/25 00:14:35.573
  STEP: verifying pod creation was observed @ 01/08/25 00:14:35.592
  STEP: deleting the pod gracefully @ 01/08/25 00:14:39.617
  STEP: verifying pod deletion was observed @ 01/08/25 00:14:39.638
  I0108 00:14:41.102717 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1138" for this suite. @ 01/08/25 00:14:41.112
• [5.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/08/25 00:14:41.151
  I0108 00:14:41.151691 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubelet-test @ 01/08/25 00:14:41.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:41.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:41.194
  I0108 00:14:41.274830 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5765" for this suite. @ 01/08/25 00:14:41.287
• [0.148 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 01/08/25 00:14:41.301
  I0108 00:14:41.301166 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:14:41.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:41.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:41.342
  STEP: Creating a pod to test downward api env vars @ 01/08/25 00:14:41.346
  STEP: Saw pod success @ 01/08/25 00:14:45.414
  I0108 00:14:45.418569 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-bb6e820d-7f68-444f-b40a-f14e0015ec04 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:14:45.427
  I0108 00:14:45.468261 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7994" for this suite. @ 01/08/25 00:14:45.474
• [4.210 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/08/25 00:14:45.511
  I0108 00:14:45.511535 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename endpointslice @ 01/08/25 00:14:45.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:45.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:45.557
  I0108 00:14:45.581298 20 endpointslice.go:1045] Endpoints addresses: [18.191.71.112 18.220.180.55 3.15.233.111] , ports: [6443]
  I0108 00:14:45.581347 20 endpointslice.go:1075] EndpointSlices addresses: [18.191.71.112 18.220.180.55 3.15.233.111] , ports: [6443]
  I0108 00:14:45.581559 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8334" for this suite. @ 01/08/25 00:14:45.586
• [0.095 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/08/25 00:14:45.608
  I0108 00:14:45.608251 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/08/25 00:14:45.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:14:45.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:14:45.651
  STEP: Creating 50 configmaps @ 01/08/25 00:14:45.655
  STEP: Creating RC which spawns configmap-volume pods @ 01/08/25 00:14:46.262
  I0108 00:14:46.288640 20 resource.go:87] Pod name wrapped-volume-race-6a2b2706-145b-4d5e-a9ba-f696336b2876: Found 0 pods out of 5
  I0108 00:14:51.315157 20 resource.go:87] Pod name wrapped-volume-race-6a2b2706-145b-4d5e-a9ba-f696336b2876: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/08/25 00:14:51.315
  STEP: Creating RC which spawns configmap-volume pods @ 01/08/25 00:14:51.36
  I0108 00:14:51.407613 20 resource.go:87] Pod name wrapped-volume-race-01c71bd0-fc48-4fb4-ab72-35ca6391a9b9: Found 1 pods out of 5
  I0108 00:14:56.416622 20 resource.go:87] Pod name wrapped-volume-race-01c71bd0-fc48-4fb4-ab72-35ca6391a9b9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/08/25 00:14:56.416
  STEP: Creating RC which spawns configmap-volume pods @ 01/08/25 00:14:56.44
  I0108 00:14:56.490139 20 resource.go:87] Pod name wrapped-volume-race-acef5d40-d3fd-4162-989c-43600e9ac79d: Found 1 pods out of 5
  I0108 00:15:01.508471 20 resource.go:87] Pod name wrapped-volume-race-acef5d40-d3fd-4162-989c-43600e9ac79d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/08/25 00:15:01.508
  STEP: deleting ReplicationController wrapped-volume-race-acef5d40-d3fd-4162-989c-43600e9ac79d in namespace emptydir-wrapper-274, will wait for the garbage collector to delete the pods @ 01/08/25 00:15:01.55
  I0108 00:15:01.628241 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-acef5d40-d3fd-4162-989c-43600e9ac79d took: 15.482627ms
  I0108 00:15:01.828520 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-acef5d40-d3fd-4162-989c-43600e9ac79d pods took: 200.27591ms
  STEP: deleting ReplicationController wrapped-volume-race-01c71bd0-fc48-4fb4-ab72-35ca6391a9b9 in namespace emptydir-wrapper-274, will wait for the garbage collector to delete the pods @ 01/08/25 00:15:05.629
  I0108 00:15:05.722296 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-01c71bd0-fc48-4fb4-ab72-35ca6391a9b9 took: 12.338303ms
  I0108 00:15:05.822996 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-01c71bd0-fc48-4fb4-ab72-35ca6391a9b9 pods took: 100.69675ms
  STEP: deleting ReplicationController wrapped-volume-race-6a2b2706-145b-4d5e-a9ba-f696336b2876 in namespace emptydir-wrapper-274, will wait for the garbage collector to delete the pods @ 01/08/25 00:15:11.623
  I0108 00:15:11.691955 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-6a2b2706-145b-4d5e-a9ba-f696336b2876 took: 11.897569ms
  I0108 00:15:11.792187 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-6a2b2706-145b-4d5e-a9ba-f696336b2876 pods took: 100.231744ms
  STEP: Cleaning up the configMaps @ 01/08/25 00:15:14.992
  I0108 00:15:15.708968 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-274" for this suite. @ 01/08/25 00:15:15.714
• [30.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 01/08/25 00:15:15.728
  I0108 00:15:15.728914 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 00:15:15.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:15.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:15.79
  STEP: Creating service test in namespace statefulset-2822 @ 01/08/25 00:15:15.795
  STEP: Creating statefulset ss in namespace statefulset-2822 @ 01/08/25 00:15:15.808
  I0108 00:15:15.839308 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I0108 00:15:25.838063 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/08/25 00:15:25.844
  STEP: updating a scale subresource @ 01/08/25 00:15:25.847
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/08/25 00:15:25.858
  STEP: Patch a scale subresource @ 01/08/25 00:15:25.874
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/08/25 00:15:25.912
  I0108 00:15:25.935082 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2822
  I0108 00:15:25.940272 20 rest.go:152] Scaling statefulset ss to 0
  I0108 00:15:35.973669 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 00:15:35.976906 20 rest.go:90] Deleting statefulset ss
  I0108 00:15:36.004933 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2822" for this suite. @ 01/08/25 00:15:36.02
• [20.303 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/08/25 00:15:36.034
  I0108 00:15:36.034751 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/08/25 00:15:36.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:36.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:36.074
  I0108 00:15:36.077979 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:15:37.119641 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9696" for this suite. @ 01/08/25 00:15:37.126
• [1.103 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 01/08/25 00:15:37.138
  I0108 00:15:37.139049 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 00:15:37.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:37.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:37.183
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/08/25 00:15:37.186
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/08/25 00:15:37.186
  STEP: creating a pod to probe DNS @ 01/08/25 00:15:37.186
  STEP: submitting the pod to kubernetes @ 01/08/25 00:15:37.186
  STEP: retrieving the pod @ 01/08/25 00:15:41.226
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:15:41.23
  I0108 00:15:41.262733 20 dns_common.go:546] DNS probes using dns-9660/dns-test-135452fd-d6d5-4b34-b76f-6b027dfdb520 succeeded

  STEP: deleting the pod @ 01/08/25 00:15:41.262
  I0108 00:15:41.312987 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9660" for this suite. @ 01/08/25 00:15:41.326
• [4.200 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/08/25 00:15:41.341
  I0108 00:15:41.341625 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:15:41.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:41.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:41.386
  STEP: Setting up server cert @ 01/08/25 00:15:41.483
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:15:42.654
  STEP: Deploying the webhook pod @ 01/08/25 00:15:42.666
  STEP: Wait for the deployment to be ready @ 01/08/25 00:15:42.699
  I0108 00:15:42.710735 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/08/25 00:15:44.721
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:15:44.744
  I0108 00:15:45.745822 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/08/25 00:15:45.964
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/08/25 00:15:46.133
  STEP: Deleting the collection of validation webhooks @ 01/08/25 00:15:46.211
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/08/25 00:15:46.315
  I0108 00:15:46.449223 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3059" for this suite. @ 01/08/25 00:15:46.457
  STEP: Destroying namespace "webhook-markers-8348" for this suite. @ 01/08/25 00:15:46.494
• [5.177 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/08/25 00:15:46.518
  I0108 00:15:46.518139 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 00:15:46.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:46.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:46.567
  STEP: creating a Namespace @ 01/08/25 00:15:46.57
  STEP: patching the Namespace @ 01/08/25 00:15:46.649
  STEP: get the Namespace and ensuring it has the label @ 01/08/25 00:15:46.668
  I0108 00:15:46.675488 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4463" for this suite. @ 01/08/25 00:15:46.68
  STEP: Destroying namespace "nspatchtest-938acadb-5903-4900-9236-78e518f795f0-4300" for this suite. @ 01/08/25 00:15:46.693
• [0.198 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 01/08/25 00:15:46.718
  I0108 00:15:46.718763 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:15:46.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:46.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:46.77
  STEP: creating an Endpoint @ 01/08/25 00:15:46.779
  STEP: waiting for available Endpoint @ 01/08/25 00:15:46.796
  STEP: listing all Endpoints @ 01/08/25 00:15:46.798
  STEP: updating the Endpoint @ 01/08/25 00:15:46.88
  STEP: fetching the Endpoint @ 01/08/25 00:15:46.895
  STEP: patching the Endpoint @ 01/08/25 00:15:46.898
  STEP: fetching the Endpoint @ 01/08/25 00:15:46.915
  STEP: deleting the Endpoint by Collection @ 01/08/25 00:15:46.919
  STEP: waiting for Endpoint deletion @ 01/08/25 00:15:46.931
  STEP: fetching the Endpoint @ 01/08/25 00:15:46.933
  I0108 00:15:46.937307 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1692" for this suite. @ 01/08/25 00:15:46.941
• [0.251 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/08/25 00:15:46.968
  I0108 00:15:46.968046 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:15:46.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:47.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:47.012
  STEP: Counting existing ResourceQuota @ 01/08/25 00:15:47.017
  STEP: Creating a ResourceQuota @ 01/08/25 00:15:52.04
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:15:52.074
  STEP: Creating a ReplicaSet @ 01/08/25 00:15:54.079
  STEP: Ensuring resource quota status captures replicaset creation @ 01/08/25 00:15:54.116
  STEP: Deleting a ReplicaSet @ 01/08/25 00:15:56.121
  STEP: Ensuring resource quota status released usage @ 01/08/25 00:15:56.133
  I0108 00:15:58.138399 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6689" for this suite. @ 01/08/25 00:15:58.151
• [11.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 01/08/25 00:15:58.167
  I0108 00:15:58.167545 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:15:58.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:58.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:58.229
  STEP: creating a collection of services @ 01/08/25 00:15:58.232
  I0108 00:15:58.232932 20 service.go:3635] Creating e2e-svc-a-b5kf4
  I0108 00:15:58.256967 20 service.go:3635] Creating e2e-svc-b-mxh6p
  I0108 00:15:58.284652 20 service.go:3635] Creating e2e-svc-c-bcskj
  STEP: deleting service collection @ 01/08/25 00:15:58.327
  I0108 00:15:58.398075 20 service.go:3670] Collection of services has been deleted
  I0108 00:15:58.398248 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9489" for this suite. @ 01/08/25 00:15:58.403
• [0.266 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/08/25 00:15:58.433
  I0108 00:15:58.435350 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svc-latency @ 01/08/25 00:15:58.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:15:58.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:15:58.473
  I0108 00:15:58.478427 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3001 @ 01/08/25 00:15:58.48
  I0108 00:15:58.492402      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3001, replica count: 1
  I0108 00:15:59.543837      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:16:00.544770      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:16:00.681069 20 service_latency.go:356] Created: latency-svc-rzzw2
  I0108 00:16:00.695512 20 service_latency.go:363] Got endpoints: latency-svc-rzzw2 [50.250314ms]
  I0108 00:16:00.735450 20 service_latency.go:356] Created: latency-svc-t9tmt
  I0108 00:16:00.755906 20 service_latency.go:363] Got endpoints: latency-svc-t9tmt [57.815052ms]
  I0108 00:16:00.773016 20 service_latency.go:356] Created: latency-svc-mjwxw
  I0108 00:16:00.794418 20 service_latency.go:363] Got endpoints: latency-svc-mjwxw [96.136587ms]
  I0108 00:16:00.801015 20 service_latency.go:356] Created: latency-svc-jmcfb
  I0108 00:16:00.839296 20 service_latency.go:363] Got endpoints: latency-svc-jmcfb [140.857946ms]
  I0108 00:16:00.839803 20 service_latency.go:356] Created: latency-svc-lqhkr
  I0108 00:16:00.858703 20 service_latency.go:363] Got endpoints: latency-svc-lqhkr [160.135421ms]
  I0108 00:16:00.865759 20 service_latency.go:356] Created: latency-svc-tqf58
  I0108 00:16:00.891211 20 service_latency.go:363] Got endpoints: latency-svc-tqf58 [194.328677ms]
  I0108 00:16:00.904371 20 service_latency.go:356] Created: latency-svc-6q2s8
  I0108 00:16:00.932224 20 service_latency.go:363] Got endpoints: latency-svc-6q2s8 [236.283715ms]
  I0108 00:16:00.950061 20 service_latency.go:356] Created: latency-svc-lztz8
  I0108 00:16:00.977806 20 service_latency.go:356] Created: latency-svc-qgt5k
  I0108 00:16:00.978399 20 service_latency.go:363] Got endpoints: latency-svc-lztz8 [281.650432ms]
  I0108 00:16:01.013061 20 service_latency.go:363] Got endpoints: latency-svc-qgt5k [316.74781ms]
  I0108 00:16:01.024853 20 service_latency.go:356] Created: latency-svc-tsxql
  I0108 00:16:01.049510 20 service_latency.go:363] Got endpoints: latency-svc-tsxql [353.047851ms]
  I0108 00:16:01.067906 20 service_latency.go:356] Created: latency-svc-k2c79
  I0108 00:16:01.089849 20 service_latency.go:356] Created: latency-svc-hfbdj
  I0108 00:16:01.100051 20 service_latency.go:363] Got endpoints: latency-svc-k2c79 [403.432706ms]
  I0108 00:16:01.127407 20 service_latency.go:363] Got endpoints: latency-svc-hfbdj [429.492799ms]
  I0108 00:16:01.134020 20 service_latency.go:356] Created: latency-svc-92dsh
  I0108 00:16:01.158892 20 service_latency.go:363] Got endpoints: latency-svc-92dsh [461.280949ms]
  I0108 00:16:01.160345 20 service_latency.go:356] Created: latency-svc-wshxf
  I0108 00:16:01.187168 20 service_latency.go:363] Got endpoints: latency-svc-wshxf [490.090883ms]
  I0108 00:16:01.192567 20 service_latency.go:356] Created: latency-svc-8zpzj
  I0108 00:16:01.218896 20 service_latency.go:363] Got endpoints: latency-svc-8zpzj [521.911713ms]
  I0108 00:16:01.225678 20 service_latency.go:356] Created: latency-svc-d75dp
  I0108 00:16:01.247176 20 service_latency.go:363] Got endpoints: latency-svc-d75dp [549.451282ms]
  I0108 00:16:01.259098 20 service_latency.go:356] Created: latency-svc-54qgm
  I0108 00:16:01.279038 20 service_latency.go:363] Got endpoints: latency-svc-54qgm [522.624191ms]
  I0108 00:16:01.294291 20 service_latency.go:356] Created: latency-svc-lfjzn
  I0108 00:16:01.314438 20 service_latency.go:363] Got endpoints: latency-svc-lfjzn [519.689557ms]
  I0108 00:16:01.576814 20 service_latency.go:356] Created: latency-svc-qqs6p
  I0108 00:16:01.587617 20 service_latency.go:356] Created: latency-svc-5tz9q
  I0108 00:16:01.588145 20 service_latency.go:356] Created: latency-svc-bkgjx
  I0108 00:16:01.605470 20 service_latency.go:363] Got endpoints: latency-svc-qqs6p [505.30011ms]
  I0108 00:16:01.617065 20 service_latency.go:356] Created: latency-svc-mtk46
  I0108 00:16:01.618706 20 service_latency.go:356] Created: latency-svc-kq6vm
  I0108 00:16:01.619209 20 service_latency.go:356] Created: latency-svc-jjhck
  I0108 00:16:01.619423 20 service_latency.go:356] Created: latency-svc-4xk5v
  I0108 00:16:01.619715 20 service_latency.go:356] Created: latency-svc-5jnr9
  I0108 00:16:01.620298 20 service_latency.go:356] Created: latency-svc-tjhtz
  I0108 00:16:01.620305 20 service_latency.go:356] Created: latency-svc-7582v
  I0108 00:16:01.620393 20 service_latency.go:356] Created: latency-svc-hnttq
  I0108 00:16:01.620757 20 service_latency.go:356] Created: latency-svc-kt7t4
  I0108 00:16:01.620853 20 service_latency.go:356] Created: latency-svc-lxqxn
  I0108 00:16:01.621855 20 service_latency.go:356] Created: latency-svc-2kc9x
  I0108 00:16:01.622537 20 service_latency.go:356] Created: latency-svc-j827r
  I0108 00:16:01.654168 20 service_latency.go:363] Got endpoints: latency-svc-bkgjx [604.580414ms]
  I0108 00:16:01.654186 20 service_latency.go:363] Got endpoints: latency-svc-5tz9q [814.830636ms]
  I0108 00:16:01.686317 20 service_latency.go:363] Got endpoints: latency-svc-j827r [558.841402ms]
  I0108 00:16:01.686390 20 service_latency.go:363] Got endpoints: latency-svc-2kc9x [795.122027ms]
  I0108 00:16:01.686372 20 service_latency.go:363] Got endpoints: latency-svc-jjhck [407.269112ms]
  I0108 00:16:01.710154 20 service_latency.go:363] Got endpoints: latency-svc-4xk5v [395.407754ms]
  I0108 00:16:01.718969 20 service_latency.go:363] Got endpoints: latency-svc-lxqxn [860.203874ms]
  I0108 00:16:01.718980 20 service_latency.go:356] Created: latency-svc-476c5
  I0108 00:16:01.741110 20 service_latency.go:363] Got endpoints: latency-svc-kq6vm [762.175225ms]
  I0108 00:16:01.741585 20 service_latency.go:363] Got endpoints: latency-svc-tjhtz [582.624979ms]
  I0108 00:16:01.746212 20 service_latency.go:363] Got endpoints: latency-svc-7582v [527.247425ms]
  I0108 00:16:01.764494 20 service_latency.go:363] Got endpoints: latency-svc-kt7t4 [517.135648ms]
  I0108 00:16:01.764560 20 service_latency.go:363] Got endpoints: latency-svc-5jnr9 [577.318218ms]
  I0108 00:16:01.764686 20 service_latency.go:363] Got endpoints: latency-svc-hnttq [751.560011ms]
  I0108 00:16:01.764785 20 service_latency.go:363] Got endpoints: latency-svc-mtk46 [832.486781ms]
  I0108 00:16:01.770029 20 service_latency.go:363] Got endpoints: latency-svc-476c5 [164.476101ms]
  I0108 00:16:01.777014 20 service_latency.go:356] Created: latency-svc-mv4mt
  I0108 00:16:01.803602 20 service_latency.go:363] Got endpoints: latency-svc-mv4mt [149.367615ms]
  I0108 00:16:01.825864 20 service_latency.go:356] Created: latency-svc-gvkjt
  I0108 00:16:01.844243 20 service_latency.go:363] Got endpoints: latency-svc-gvkjt [188.799523ms]
  I0108 00:16:01.860580 20 service_latency.go:356] Created: latency-svc-7fwm5
  I0108 00:16:01.883938 20 service_latency.go:363] Got endpoints: latency-svc-7fwm5 [197.524885ms]
  I0108 00:16:01.893136 20 service_latency.go:356] Created: latency-svc-mwm2f
  I0108 00:16:01.916047 20 service_latency.go:363] Got endpoints: latency-svc-mwm2f [229.632638ms]
  I0108 00:16:01.943473 20 service_latency.go:356] Created: latency-svc-8z6xv
  I0108 00:16:01.979660 20 service_latency.go:356] Created: latency-svc-wkhts
  I0108 00:16:01.984953 20 service_latency.go:363] Got endpoints: latency-svc-8z6xv [298.409467ms]
  I0108 00:16:02.009844 20 service_latency.go:363] Got endpoints: latency-svc-wkhts [298.465287ms]
  I0108 00:16:02.025984 20 service_latency.go:356] Created: latency-svc-qv7tx
  I0108 00:16:02.066774 20 service_latency.go:363] Got endpoints: latency-svc-qv7tx [347.752961ms]
  I0108 00:16:02.080062 20 service_latency.go:356] Created: latency-svc-ff6vp
  I0108 00:16:02.101584 20 service_latency.go:363] Got endpoints: latency-svc-ff6vp [360.106824ms]
  I0108 00:16:02.113957 20 service_latency.go:356] Created: latency-svc-mhg7p
  I0108 00:16:02.145390 20 service_latency.go:363] Got endpoints: latency-svc-mhg7p [403.764791ms]
  I0108 00:16:02.166243 20 service_latency.go:356] Created: latency-svc-8f892
  I0108 00:16:02.191719 20 service_latency.go:356] Created: latency-svc-z6bj9
  I0108 00:16:02.192276 20 service_latency.go:363] Got endpoints: latency-svc-8f892 [445.977861ms]
  I0108 00:16:02.211891 20 service_latency.go:363] Got endpoints: latency-svc-z6bj9 [447.317906ms]
  I0108 00:16:02.221071 20 service_latency.go:356] Created: latency-svc-fq8pb
  I0108 00:16:02.250816 20 service_latency.go:363] Got endpoints: latency-svc-fq8pb [486.102997ms]
  I0108 00:16:02.261044 20 service_latency.go:356] Created: latency-svc-nwxpv
  I0108 00:16:02.289583 20 service_latency.go:363] Got endpoints: latency-svc-nwxpv [524.769277ms]
  I0108 00:16:02.300283 20 service_latency.go:356] Created: latency-svc-fzdg2
  I0108 00:16:02.322818 20 service_latency.go:363] Got endpoints: latency-svc-fzdg2 [558.230225ms]
  I0108 00:16:02.335254 20 service_latency.go:356] Created: latency-svc-m4d48
  I0108 00:16:02.360161 20 service_latency.go:363] Got endpoints: latency-svc-m4d48 [590.041095ms]
  I0108 00:16:02.375163 20 service_latency.go:356] Created: latency-svc-nn2lk
  I0108 00:16:02.395569 20 service_latency.go:363] Got endpoints: latency-svc-nn2lk [591.454591ms]
  I0108 00:16:02.408861 20 service_latency.go:356] Created: latency-svc-zcvsp
  I0108 00:16:02.431114 20 service_latency.go:363] Got endpoints: latency-svc-zcvsp [586.814237ms]
  I0108 00:16:02.442862 20 service_latency.go:356] Created: latency-svc-q465z
  I0108 00:16:02.472818 20 service_latency.go:363] Got endpoints: latency-svc-q465z [588.824241ms]
  I0108 00:16:02.484010 20 service_latency.go:356] Created: latency-svc-6nqns
  I0108 00:16:02.520242 20 service_latency.go:363] Got endpoints: latency-svc-6nqns [604.118539ms]
  I0108 00:16:02.520261 20 service_latency.go:356] Created: latency-svc-dqhk2
  I0108 00:16:02.534674 20 service_latency.go:363] Got endpoints: latency-svc-dqhk2 [548.873256ms]
  I0108 00:16:02.560779 20 service_latency.go:356] Created: latency-svc-66qlh
  I0108 00:16:02.583778 20 service_latency.go:363] Got endpoints: latency-svc-66qlh [516.942805ms]
  I0108 00:16:02.598322 20 service_latency.go:356] Created: latency-svc-jz9cd
  I0108 00:16:02.620140 20 service_latency.go:363] Got endpoints: latency-svc-jz9cd [518.481953ms]
  I0108 00:16:02.623488 20 service_latency.go:356] Created: latency-svc-tfbjx
  I0108 00:16:02.654861 20 service_latency.go:363] Got endpoints: latency-svc-tfbjx [509.401228ms]
  I0108 00:16:02.664901 20 service_latency.go:356] Created: latency-svc-x6d59
  I0108 00:16:02.695212 20 service_latency.go:363] Got endpoints: latency-svc-x6d59 [502.414177ms]
  I0108 00:16:02.712830 20 service_latency.go:356] Created: latency-svc-c42hh
  I0108 00:16:02.734828 20 service_latency.go:363] Got endpoints: latency-svc-c42hh [522.874544ms]
  I0108 00:16:02.747974 20 service_latency.go:356] Created: latency-svc-bbbxc
  I0108 00:16:02.772808 20 service_latency.go:363] Got endpoints: latency-svc-bbbxc [521.929783ms]
  I0108 00:16:02.783527 20 service_latency.go:356] Created: latency-svc-j9zhm
  I0108 00:16:02.807489 20 service_latency.go:363] Got endpoints: latency-svc-j9zhm [517.849356ms]
  I0108 00:16:02.817956 20 service_latency.go:356] Created: latency-svc-9jjjv
  I0108 00:16:02.837846 20 service_latency.go:363] Got endpoints: latency-svc-9jjjv [514.899722ms]
  I0108 00:16:02.846534 20 service_latency.go:356] Created: latency-svc-jx9kn
  I0108 00:16:02.868449 20 service_latency.go:363] Got endpoints: latency-svc-jx9kn [507.83379ms]
  I0108 00:16:02.899490 20 service_latency.go:356] Created: latency-svc-k8cfs
  I0108 00:16:02.899490 20 service_latency.go:356] Created: latency-svc-nwp2k
  I0108 00:16:02.942696 20 service_latency.go:363] Got endpoints: latency-svc-nwp2k [547.051555ms]
  I0108 00:16:02.942835 20 service_latency.go:363] Got endpoints: latency-svc-k8cfs [511.068606ms]
  I0108 00:16:02.948060 20 service_latency.go:356] Created: latency-svc-6kxxq
  I0108 00:16:02.978905 20 service_latency.go:363] Got endpoints: latency-svc-6kxxq [505.844337ms]
  I0108 00:16:02.982558 20 service_latency.go:356] Created: latency-svc-gvz6w
  I0108 00:16:02.994637 20 service_latency.go:356] Created: latency-svc-g7qmg
  I0108 00:16:03.039490 20 service_latency.go:356] Created: latency-svc-zbcns
  I0108 00:16:03.044751 20 service_latency.go:363] Got endpoints: latency-svc-g7qmg [524.420372ms]
  I0108 00:16:03.044757 20 service_latency.go:363] Got endpoints: latency-svc-gvz6w [1.034854682s]
  I0108 00:16:03.068998 20 service_latency.go:363] Got endpoints: latency-svc-zbcns [533.780721ms]
  I0108 00:16:03.076458 20 service_latency.go:356] Created: latency-svc-8qdzl
  I0108 00:16:03.103291 20 service_latency.go:363] Got endpoints: latency-svc-8qdzl [519.441335ms]
  I0108 00:16:03.109527 20 service_latency.go:356] Created: latency-svc-bb5jk
  I0108 00:16:03.150001 20 service_latency.go:363] Got endpoints: latency-svc-bb5jk [529.768475ms]
  I0108 00:16:03.150171 20 service_latency.go:356] Created: latency-svc-xmnbm
  I0108 00:16:03.187479 20 service_latency.go:363] Got endpoints: latency-svc-xmnbm [532.559797ms]
  I0108 00:16:03.191524 20 service_latency.go:356] Created: latency-svc-2859d
  I0108 00:16:03.212409 20 service_latency.go:363] Got endpoints: latency-svc-2859d [517.121407ms]
  I0108 00:16:03.224841 20 service_latency.go:356] Created: latency-svc-jrdzz
  I0108 00:16:03.257664 20 service_latency.go:363] Got endpoints: latency-svc-jrdzz [522.781153ms]
  I0108 00:16:03.270928 20 service_latency.go:356] Created: latency-svc-qtt9t
  I0108 00:16:03.299624 20 service_latency.go:363] Got endpoints: latency-svc-qtt9t [526.725879ms]
  I0108 00:16:03.313836 20 service_latency.go:356] Created: latency-svc-skjz9
  I0108 00:16:03.325890 20 service_latency.go:363] Got endpoints: latency-svc-skjz9 [518.337982ms]
  I0108 00:16:03.675535 20 service_latency.go:356] Created: latency-svc-fj67k
  I0108 00:16:03.677063 20 service_latency.go:356] Created: latency-svc-46hlv
  I0108 00:16:03.682498 20 service_latency.go:356] Created: latency-svc-8746r
  I0108 00:16:03.683014 20 service_latency.go:356] Created: latency-svc-6pmqb
  I0108 00:16:03.683055 20 service_latency.go:356] Created: latency-svc-pwrlg
  I0108 00:16:03.683090 20 service_latency.go:356] Created: latency-svc-qpx2t
  I0108 00:16:03.683179 20 service_latency.go:356] Created: latency-svc-9gqk5
  I0108 00:16:03.684907 20 service_latency.go:356] Created: latency-svc-6w8n8
  I0108 00:16:03.691846 20 service_latency.go:356] Created: latency-svc-6k7qr
  I0108 00:16:03.691846 20 service_latency.go:356] Created: latency-svc-n9gvk
  I0108 00:16:03.694925 20 service_latency.go:356] Created: latency-svc-tp8xg
  I0108 00:16:03.696336 20 service_latency.go:356] Created: latency-svc-rh4xq
  I0108 00:16:03.698186 20 service_latency.go:356] Created: latency-svc-gvkkq
  I0108 00:16:03.721367 20 service_latency.go:356] Created: latency-svc-mpt9b
  I0108 00:16:03.721428 20 service_latency.go:356] Created: latency-svc-8lgkx
  I0108 00:16:03.743182 20 service_latency.go:363] Got endpoints: latency-svc-fj67k [530.360491ms]
  I0108 00:16:03.758129 20 service_latency.go:363] Got endpoints: latency-svc-pwrlg [920.20484ms]
  I0108 00:16:03.758157 20 service_latency.go:363] Got endpoints: latency-svc-46hlv [500.440203ms]
  I0108 00:16:03.769469 20 service_latency.go:363] Got endpoints: latency-svc-6pmqb [790.14934ms]
  I0108 00:16:03.799004 20 service_latency.go:363] Got endpoints: latency-svc-6w8n8 [729.93647ms]
  I0108 00:16:03.799028 20 service_latency.go:363] Got endpoints: latency-svc-qpx2t [499.26584ms]
  I0108 00:16:03.806852 20 service_latency.go:363] Got endpoints: latency-svc-tp8xg [618.91926ms]
  I0108 00:16:03.807170 20 service_latency.go:363] Got endpoints: latency-svc-n9gvk [762.034283ms]
  I0108 00:16:03.807713 20 service_latency.go:363] Got endpoints: latency-svc-6k7qr [481.764377ms]
  I0108 00:16:03.837145 20 service_latency.go:363] Got endpoints: latency-svc-rh4xq [968.634173ms]
  I0108 00:16:03.839504 20 service_latency.go:363] Got endpoints: latency-svc-gvkkq [896.745167ms]
  I0108 00:16:03.837246 20 service_latency.go:363] Got endpoints: latency-svc-mpt9b [894.38485ms]
  I0108 00:16:03.849035 20 service_latency.go:363] Got endpoints: latency-svc-8lgkx [698.91479ms]
  I0108 00:16:03.855380 20 service_latency.go:356] Created: latency-svc-n7qmn
  I0108 00:16:03.857301 20 service_latency.go:363] Got endpoints: latency-svc-9gqk5 [753.862258ms]
  I0108 00:16:03.859424 20 service_latency.go:363] Got endpoints: latency-svc-8746r [814.614364ms]
  I0108 00:16:03.881140 20 service_latency.go:363] Got endpoints: latency-svc-n7qmn [137.887732ms]
  I0108 00:16:03.902480 20 service_latency.go:356] Created: latency-svc-5skhw
  I0108 00:16:03.945225 20 service_latency.go:363] Got endpoints: latency-svc-5skhw [186.190522ms]
  I0108 00:16:03.959339 20 service_latency.go:356] Created: latency-svc-jh57g
  I0108 00:16:03.984287 20 service_latency.go:363] Got endpoints: latency-svc-jh57g [224.964623ms]
  I0108 00:16:03.999454 20 service_latency.go:356] Created: latency-svc-p8zc4
  I0108 00:16:04.032056 20 service_latency.go:363] Got endpoints: latency-svc-p8zc4 [262.515759ms]
  I0108 00:16:04.041946 20 service_latency.go:356] Created: latency-svc-vj4wq
  I0108 00:16:04.063208 20 service_latency.go:363] Got endpoints: latency-svc-vj4wq [263.411239ms]
  I0108 00:16:04.076579 20 service_latency.go:356] Created: latency-svc-nffv7
  I0108 00:16:04.110954 20 service_latency.go:363] Got endpoints: latency-svc-nffv7 [304.040781ms]
  I0108 00:16:04.112255 20 service_latency.go:356] Created: latency-svc-lnfn6
  I0108 00:16:04.138643 20 service_latency.go:363] Got endpoints: latency-svc-lnfn6 [331.42252ms]
  I0108 00:16:04.162118 20 service_latency.go:356] Created: latency-svc-vkzkd
  I0108 00:16:04.196997 20 service_latency.go:363] Got endpoints: latency-svc-vkzkd [397.835441ms]
  I0108 00:16:04.201275 20 service_latency.go:356] Created: latency-svc-zx69c
  I0108 00:16:04.235131 20 service_latency.go:363] Got endpoints: latency-svc-zx69c [427.371725ms]
  I0108 00:16:04.265849 20 service_latency.go:356] Created: latency-svc-gk8n7
  I0108 00:16:04.309738 20 service_latency.go:363] Got endpoints: latency-svc-gk8n7 [470.296823ms]
  I0108 00:16:04.322538 20 service_latency.go:356] Created: latency-svc-sbrw2
  I0108 00:16:04.353853 20 service_latency.go:363] Got endpoints: latency-svc-sbrw2 [513.727258ms]
  I0108 00:16:04.367889 20 service_latency.go:356] Created: latency-svc-cqm4f
  I0108 00:16:04.390680 20 service_latency.go:363] Got endpoints: latency-svc-cqm4f [550.606516ms]
  I0108 00:16:04.405637 20 service_latency.go:356] Created: latency-svc-7x8ss
  I0108 00:16:04.435259 20 service_latency.go:363] Got endpoints: latency-svc-7x8ss [586.165269ms]
  I0108 00:16:04.449777 20 service_latency.go:356] Created: latency-svc-bhb5r
  I0108 00:16:04.472514 20 service_latency.go:363] Got endpoints: latency-svc-bhb5r [614.891303ms]
  I0108 00:16:04.489985 20 service_latency.go:356] Created: latency-svc-cr7ck
  I0108 00:16:04.506991 20 service_latency.go:356] Created: latency-svc-h2wsr
  I0108 00:16:04.520623 20 service_latency.go:363] Got endpoints: latency-svc-cr7ck [661.143431ms]
  I0108 00:16:04.557291 20 service_latency.go:356] Created: latency-svc-5xtz5
  I0108 00:16:04.567357 20 service_latency.go:363] Got endpoints: latency-svc-h2wsr [686.10924ms]
  I0108 00:16:04.595604 20 service_latency.go:356] Created: latency-svc-dhqm6
  I0108 00:16:04.608348 20 service_latency.go:363] Got endpoints: latency-svc-5xtz5 [663.053404ms]
  I0108 00:16:04.632502 20 service_latency.go:356] Created: latency-svc-tmgtt
  I0108 00:16:04.667944 20 service_latency.go:363] Got endpoints: latency-svc-dhqm6 [683.599432ms]
  I0108 00:16:04.675105 20 service_latency.go:356] Created: latency-svc-28cgq
  I0108 00:16:04.682667 20 service_latency.go:356] Created: latency-svc-kdvgn
  I0108 00:16:04.713546 20 service_latency.go:363] Got endpoints: latency-svc-tmgtt [681.421276ms]
  I0108 00:16:04.718434 20 service_latency.go:356] Created: latency-svc-rpprc
  I0108 00:16:04.740693 20 service_latency.go:356] Created: latency-svc-47lxk
  I0108 00:16:04.758623 20 service_latency.go:363] Got endpoints: latency-svc-28cgq [694.906983ms]
  I0108 00:16:04.785929 20 service_latency.go:356] Created: latency-svc-d9bmv
  I0108 00:16:04.808435 20 service_latency.go:363] Got endpoints: latency-svc-kdvgn [697.414572ms]
  I0108 00:16:04.824073 20 service_latency.go:356] Created: latency-svc-mj7r9
  I0108 00:16:04.850173 20 service_latency.go:356] Created: latency-svc-mmqvb
  I0108 00:16:04.867532 20 service_latency.go:363] Got endpoints: latency-svc-rpprc [728.285001ms]
  I0108 00:16:04.903797 20 service_latency.go:356] Created: latency-svc-wg26p
  I0108 00:16:04.906324 20 service_latency.go:363] Got endpoints: latency-svc-47lxk [708.948487ms]
  I0108 00:16:04.919078 20 service_latency.go:356] Created: latency-svc-v7t8f
  I0108 00:16:04.951270 20 service_latency.go:356] Created: latency-svc-8q97v
  I0108 00:16:04.961452 20 service_latency.go:363] Got endpoints: latency-svc-d9bmv [726.126186ms]
  I0108 00:16:04.976252 20 service_latency.go:356] Created: latency-svc-nk9gc
  I0108 00:16:05.006008 20 service_latency.go:356] Created: latency-svc-4wbbq
  I0108 00:16:05.020060 20 service_latency.go:363] Got endpoints: latency-svc-mj7r9 [710.261252ms]
  I0108 00:16:05.054344 20 service_latency.go:363] Got endpoints: latency-svc-mmqvb [699.80093ms]
  I0108 00:16:05.063327 20 service_latency.go:356] Created: latency-svc-5r5rx
  I0108 00:16:05.084852 20 service_latency.go:356] Created: latency-svc-g8l2v
  I0108 00:16:05.108153 20 service_latency.go:363] Got endpoints: latency-svc-wg26p [716.408623ms]
  I0108 00:16:05.117581 20 service_latency.go:356] Created: latency-svc-dk42k
  I0108 00:16:05.160207 20 service_latency.go:356] Created: latency-svc-x7p29
  I0108 00:16:05.160241 20 service_latency.go:363] Got endpoints: latency-svc-v7t8f [724.484157ms]
  I0108 00:16:05.189359 20 service_latency.go:356] Created: latency-svc-m87c5
  I0108 00:16:05.219094 20 service_latency.go:356] Created: latency-svc-45r2r
  I0108 00:16:05.263484 20 service_latency.go:356] Created: latency-svc-xclrq
  I0108 00:16:05.264132 20 service_latency.go:363] Got endpoints: latency-svc-8q97v [791.559946ms]
  I0108 00:16:05.309475 20 service_latency.go:363] Got endpoints: latency-svc-nk9gc [788.370629ms]
  I0108 00:16:05.319666 20 service_latency.go:356] Created: latency-svc-tbgmn
  I0108 00:16:05.358464 20 service_latency.go:356] Created: latency-svc-qkwrn
  I0108 00:16:05.382330 20 service_latency.go:363] Got endpoints: latency-svc-4wbbq [814.724885ms]
  I0108 00:16:05.398304 20 service_latency.go:356] Created: latency-svc-m8x7w
  I0108 00:16:05.405322 20 service_latency.go:363] Got endpoints: latency-svc-5r5rx [796.748096ms]
  I0108 00:16:05.417653 20 service_latency.go:356] Created: latency-svc-mz677
  I0108 00:16:05.443625 20 service_latency.go:356] Created: latency-svc-lv24f
  I0108 00:16:05.457094 20 service_latency.go:363] Got endpoints: latency-svc-g8l2v [788.948044ms]
  I0108 00:16:05.472388 20 service_latency.go:356] Created: latency-svc-w445r
  I0108 00:16:05.504918 20 service_latency.go:363] Got endpoints: latency-svc-dk42k [791.290112ms]
  I0108 00:16:05.511246 20 service_latency.go:356] Created: latency-svc-nbwpg
  I0108 00:16:05.544194 20 service_latency.go:356] Created: latency-svc-csls5
  I0108 00:16:05.565320 20 service_latency.go:363] Got endpoints: latency-svc-x7p29 [806.632281ms]
  I0108 00:16:05.573470 20 service_latency.go:356] Created: latency-svc-9f4nz
  I0108 00:16:05.593968 20 service_latency.go:356] Created: latency-svc-9kqtc
  I0108 00:16:05.614871 20 service_latency.go:363] Got endpoints: latency-svc-m87c5 [806.367408ms]
  I0108 00:16:05.625882 20 service_latency.go:356] Created: latency-svc-tb62q
  I0108 00:16:05.661079 20 service_latency.go:356] Created: latency-svc-9479k
  I0108 00:16:05.662934 20 service_latency.go:363] Got endpoints: latency-svc-45r2r [795.321128ms]
  I0108 00:16:05.691750 20 service_latency.go:356] Created: latency-svc-q26mf
  I0108 00:16:05.704755 20 service_latency.go:363] Got endpoints: latency-svc-xclrq [797.604416ms]
  I0108 00:16:05.732421 20 service_latency.go:356] Created: latency-svc-sz7rw
  I0108 00:16:05.765027 20 service_latency.go:363] Got endpoints: latency-svc-tbgmn [803.345632ms]
  I0108 00:16:05.765589 20 service_latency.go:356] Created: latency-svc-rclhx
  I0108 00:16:05.798464 20 service_latency.go:356] Created: latency-svc-82htg
  I0108 00:16:05.810846 20 service_latency.go:363] Got endpoints: latency-svc-qkwrn [790.707095ms]
  I0108 00:16:05.853890 20 service_latency.go:356] Created: latency-svc-rvl8r
  I0108 00:16:05.856693 20 service_latency.go:363] Got endpoints: latency-svc-m8x7w [800.614541ms]
  I0108 00:16:05.886092 20 service_latency.go:356] Created: latency-svc-7zc2w
  I0108 00:16:05.912091 20 service_latency.go:363] Got endpoints: latency-svc-mz677 [794.601281ms]
  I0108 00:16:05.941038 20 service_latency.go:356] Created: latency-svc-jd2jz
  I0108 00:16:05.968382 20 service_latency.go:363] Got endpoints: latency-svc-lv24f [808.033707ms]
  I0108 00:16:06.004958 20 service_latency.go:363] Got endpoints: latency-svc-w445r [739.365649ms]
  I0108 00:16:06.012346 20 service_latency.go:356] Created: latency-svc-vt79t
  I0108 00:16:06.042708 20 service_latency.go:356] Created: latency-svc-9c7hk
  I0108 00:16:06.057079 20 service_latency.go:363] Got endpoints: latency-svc-nbwpg [747.542984ms]
  I0108 00:16:06.102740 20 service_latency.go:356] Created: latency-svc-58mrr
  I0108 00:16:06.106422 20 service_latency.go:363] Got endpoints: latency-svc-csls5 [724.000501ms]
  I0108 00:16:06.151302 20 service_latency.go:356] Created: latency-svc-cjxbb
  I0108 00:16:06.154564 20 service_latency.go:363] Got endpoints: latency-svc-9f4nz [749.171803ms]
  I0108 00:16:06.183008 20 service_latency.go:356] Created: latency-svc-vswjp
  I0108 00:16:06.202997 20 service_latency.go:363] Got endpoints: latency-svc-9kqtc [745.824835ms]
  I0108 00:16:06.236271 20 service_latency.go:356] Created: latency-svc-xp6zj
  I0108 00:16:06.256274 20 service_latency.go:363] Got endpoints: latency-svc-tb62q [751.296068ms]
  I0108 00:16:06.297485 20 service_latency.go:356] Created: latency-svc-fdqf9
  I0108 00:16:06.300303 20 service_latency.go:363] Got endpoints: latency-svc-9479k [734.926407ms]
  I0108 00:16:06.359418 20 service_latency.go:363] Got endpoints: latency-svc-q26mf [743.885192ms]
  I0108 00:16:06.364041 20 service_latency.go:356] Created: latency-svc-zndzl
  I0108 00:16:06.388844 20 service_latency.go:356] Created: latency-svc-zvvqw
  I0108 00:16:06.404716 20 service_latency.go:363] Got endpoints: latency-svc-sz7rw [741.191661ms]
  I0108 00:16:06.455664 20 service_latency.go:356] Created: latency-svc-r7wpx
  I0108 00:16:06.458779 20 service_latency.go:363] Got endpoints: latency-svc-rclhx [753.947548ms]
  I0108 00:16:06.490828 20 service_latency.go:356] Created: latency-svc-v5hkd
  I0108 00:16:06.499469 20 service_latency.go:363] Got endpoints: latency-svc-82htg [734.342941ms]
  I0108 00:16:06.530351 20 service_latency.go:356] Created: latency-svc-czzsl
  I0108 00:16:06.564495 20 service_latency.go:363] Got endpoints: latency-svc-rvl8r [753.535033ms]
  I0108 00:16:06.602994 20 service_latency.go:363] Got endpoints: latency-svc-7zc2w [746.220949ms]
  I0108 00:16:06.608056 20 service_latency.go:356] Created: latency-svc-xwmh7
  I0108 00:16:06.631599 20 service_latency.go:356] Created: latency-svc-l29sv
  I0108 00:16:06.672184 20 service_latency.go:363] Got endpoints: latency-svc-jd2jz [760.03681ms]
  I0108 00:16:06.702073 20 service_latency.go:363] Got endpoints: latency-svc-vt79t [733.618483ms]
  I0108 00:16:06.730461 20 service_latency.go:356] Created: latency-svc-g4w6g
  I0108 00:16:06.744496 20 service_latency.go:356] Created: latency-svc-ftxn7
  I0108 00:16:06.757023 20 service_latency.go:363] Got endpoints: latency-svc-9c7hk [751.994476ms]
  I0108 00:16:06.812056 20 service_latency.go:356] Created: latency-svc-z6fbp
  I0108 00:16:06.812125 20 service_latency.go:363] Got endpoints: latency-svc-58mrr [754.730199ms]
  I0108 00:16:06.844863 20 service_latency.go:356] Created: latency-svc-54shp
  I0108 00:16:06.853315 20 service_latency.go:363] Got endpoints: latency-svc-cjxbb [746.817736ms]
  I0108 00:16:06.881959 20 service_latency.go:356] Created: latency-svc-468xr
  I0108 00:16:06.907295 20 service_latency.go:363] Got endpoints: latency-svc-vswjp [752.086627ms]
  I0108 00:16:06.956334 20 service_latency.go:356] Created: latency-svc-ldpd4
  I0108 00:16:06.969897 20 service_latency.go:363] Got endpoints: latency-svc-xp6zj [766.685188ms]
  I0108 00:16:07.008419 20 service_latency.go:363] Got endpoints: latency-svc-fdqf9 [752.078358ms]
  I0108 00:16:07.025794 20 service_latency.go:356] Created: latency-svc-l5fcb
  I0108 00:16:07.058313 20 service_latency.go:363] Got endpoints: latency-svc-zndzl [756.903734ms]
  I0108 00:16:07.078175 20 service_latency.go:356] Created: latency-svc-clczj
  I0108 00:16:07.105379 20 service_latency.go:356] Created: latency-svc-s9kx9
  I0108 00:16:07.114027 20 service_latency.go:363] Got endpoints: latency-svc-zvvqw [754.383725ms]
  I0108 00:16:07.157744 20 service_latency.go:363] Got endpoints: latency-svc-r7wpx [752.952658ms]
  I0108 00:16:07.166220 20 service_latency.go:356] Created: latency-svc-4wzkh
  I0108 00:16:07.215539 20 service_latency.go:363] Got endpoints: latency-svc-v5hkd [756.691501ms]
  I0108 00:16:07.224053 20 service_latency.go:356] Created: latency-svc-n9srl
  I0108 00:16:07.271921 20 service_latency.go:363] Got endpoints: latency-svc-czzsl [772.389723ms]
  I0108 00:16:07.291202 20 service_latency.go:356] Created: latency-svc-jt46v
  I0108 00:16:07.333106 20 service_latency.go:363] Got endpoints: latency-svc-xwmh7 [768.097514ms]
  I0108 00:16:07.376360 20 service_latency.go:356] Created: latency-svc-zs9hz
  I0108 00:16:07.377529 20 service_latency.go:363] Got endpoints: latency-svc-l29sv [774.474127ms]
  I0108 00:16:07.415026 20 service_latency.go:363] Got endpoints: latency-svc-g4w6g [741.879049ms]
  I0108 00:16:07.436820 20 service_latency.go:356] Created: latency-svc-8zgbx
  I0108 00:16:07.464065 20 service_latency.go:363] Got endpoints: latency-svc-ftxn7 [761.837401ms]
  I0108 00:16:07.480501 20 service_latency.go:356] Created: latency-svc-6jdqq
  I0108 00:16:07.516077 20 service_latency.go:363] Got endpoints: latency-svc-z6fbp [758.729026ms]
  I0108 00:16:07.539845 20 service_latency.go:356] Created: latency-svc-2bj4w
  I0108 00:16:07.572061 20 service_latency.go:356] Created: latency-svc-7zcn4
  I0108 00:16:07.572074 20 service_latency.go:363] Got endpoints: latency-svc-54shp [759.564376ms]
  I0108 00:16:07.596155 20 service_latency.go:356] Created: latency-svc-kqv2x
  I0108 00:16:07.606655 20 service_latency.go:363] Got endpoints: latency-svc-468xr [752.66157ms]
  I0108 00:16:07.640800 20 service_latency.go:356] Created: latency-svc-ffdk6
  I0108 00:16:07.658697 20 service_latency.go:363] Got endpoints: latency-svc-ldpd4 [751.322694ms]
  I0108 00:16:07.674261 20 service_latency.go:356] Created: latency-svc-dm8cx
  I0108 00:16:07.703568 20 service_latency.go:363] Got endpoints: latency-svc-l5fcb [733.529669ms]
  I0108 00:16:07.720413 20 service_latency.go:356] Created: latency-svc-ql89c
  I0108 00:16:07.753140 20 service_latency.go:363] Got endpoints: latency-svc-clczj [744.641149ms]
  I0108 00:16:07.762168 20 service_latency.go:356] Created: latency-svc-qdjjr
  I0108 00:16:07.787098 20 service_latency.go:356] Created: latency-svc-lx442
  I0108 00:16:07.808152 20 service_latency.go:363] Got endpoints: latency-svc-s9kx9 [749.423164ms]
  I0108 00:16:07.847857 20 service_latency.go:356] Created: latency-svc-nvxcp
  I0108 00:16:07.863790 20 service_latency.go:363] Got endpoints: latency-svc-4wzkh [749.663367ms]
  I0108 00:16:07.899013 20 service_latency.go:356] Created: latency-svc-n2mls
  I0108 00:16:07.903448 20 service_latency.go:363] Got endpoints: latency-svc-n9srl [745.631593ms]
  I0108 00:16:07.941620 20 service_latency.go:356] Created: latency-svc-dwsmh
  I0108 00:16:07.962798 20 service_latency.go:363] Got endpoints: latency-svc-jt46v [747.054079ms]
  I0108 00:16:08.011702 20 service_latency.go:363] Got endpoints: latency-svc-zs9hz [738.972237ms]
  I0108 00:16:08.014038 20 service_latency.go:356] Created: latency-svc-lk6m6
  I0108 00:16:08.047692 20 service_latency.go:356] Created: latency-svc-t6n77
  I0108 00:16:08.053123 20 service_latency.go:363] Got endpoints: latency-svc-8zgbx [719.944768ms]
  I0108 00:16:08.111533 20 service_latency.go:363] Got endpoints: latency-svc-6jdqq [733.946789ms]
  I0108 00:16:08.111995 20 service_latency.go:356] Created: latency-svc-hzpw2
  I0108 00:16:08.149782 20 service_latency.go:356] Created: latency-svc-xb6dc
  I0108 00:16:08.155544 20 service_latency.go:363] Got endpoints: latency-svc-2bj4w [739.87738ms]
  I0108 00:16:08.184669 20 service_latency.go:356] Created: latency-svc-jqxr6
  I0108 00:16:08.218582 20 service_latency.go:363] Got endpoints: latency-svc-7zcn4 [754.123753ms]
  I0108 00:16:08.260868 20 service_latency.go:363] Got endpoints: latency-svc-kqv2x [744.715166ms]
  I0108 00:16:08.267747 20 service_latency.go:356] Created: latency-svc-5dpdk
  I0108 00:16:08.303450 20 service_latency.go:363] Got endpoints: latency-svc-ffdk6 [730.19019ms]
  I0108 00:16:08.310581 20 service_latency.go:356] Created: latency-svc-4vkgq
  I0108 00:16:08.353058 20 service_latency.go:356] Created: latency-svc-42pqx
  I0108 00:16:08.357838 20 service_latency.go:363] Got endpoints: latency-svc-dm8cx [750.880917ms]
  I0108 00:16:08.391422 20 service_latency.go:356] Created: latency-svc-6g48b
  I0108 00:16:08.401770 20 service_latency.go:363] Got endpoints: latency-svc-ql89c [743.001626ms]
  I0108 00:16:08.427859 20 service_latency.go:356] Created: latency-svc-zw4hc
  I0108 00:16:08.455155 20 service_latency.go:363] Got endpoints: latency-svc-qdjjr [751.511113ms]
  I0108 00:16:08.501498 20 service_latency.go:356] Created: latency-svc-spx2q
  I0108 00:16:08.507822 20 service_latency.go:363] Got endpoints: latency-svc-lx442 [754.214554ms]
  I0108 00:16:08.555905 20 service_latency.go:363] Got endpoints: latency-svc-nvxcp [747.68926ms]
  I0108 00:16:08.565018 20 service_latency.go:356] Created: latency-svc-t47mw
  I0108 00:16:08.616120 20 service_latency.go:363] Got endpoints: latency-svc-n2mls [752.264822ms]
  I0108 00:16:08.617909 20 service_latency.go:356] Created: latency-svc-nd5w7
  I0108 00:16:08.652003 20 service_latency.go:363] Got endpoints: latency-svc-dwsmh [748.421339ms]
  I0108 00:16:08.709017 20 service_latency.go:363] Got endpoints: latency-svc-lk6m6 [746.143472ms]
  I0108 00:16:08.753608 20 service_latency.go:363] Got endpoints: latency-svc-t6n77 [741.657381ms]
  I0108 00:16:08.817853 20 service_latency.go:363] Got endpoints: latency-svc-hzpw2 [764.648543ms]
  I0108 00:16:08.844637 20 service_latency.go:363] Got endpoints: latency-svc-xb6dc [733.044183ms]
  I0108 00:16:08.929935 20 service_latency.go:363] Got endpoints: latency-svc-jqxr6 [774.237454ms]
  I0108 00:16:08.954539 20 service_latency.go:363] Got endpoints: latency-svc-5dpdk [735.307628ms]
  I0108 00:16:09.000916 20 service_latency.go:363] Got endpoints: latency-svc-4vkgq [739.979951ms]
  I0108 00:16:09.058198 20 service_latency.go:363] Got endpoints: latency-svc-42pqx [754.69341ms]
  I0108 00:16:09.093769 20 service_latency.go:363] Got endpoints: latency-svc-6g48b [735.869385ms]
  I0108 00:16:09.150402 20 service_latency.go:363] Got endpoints: latency-svc-zw4hc [748.56378ms]
  I0108 00:16:09.200526 20 service_latency.go:363] Got endpoints: latency-svc-spx2q [745.296833ms]
  I0108 00:16:09.252016 20 service_latency.go:363] Got endpoints: latency-svc-t47mw [744.125608ms]
  I0108 00:16:09.294492 20 service_latency.go:363] Got endpoints: latency-svc-nd5w7 [738.516775ms]
  I0108 00:16:09.294653 20 service_latency.go:114] Latencies: [57.815052ms 96.136587ms 137.887732ms 140.857946ms 149.367615ms 160.135421ms 164.476101ms 186.190522ms 188.799523ms 194.328677ms 197.524885ms 224.964623ms 229.632638ms 236.283715ms 262.515759ms 263.411239ms 281.650432ms 298.409467ms 298.465287ms 304.040781ms 316.74781ms 331.42252ms 347.752961ms 353.047851ms 360.106824ms 395.407754ms 397.835441ms 403.432706ms 403.764791ms 407.269112ms 427.371725ms 429.492799ms 445.977861ms 447.317906ms 461.280949ms 470.296823ms 481.764377ms 486.102997ms 490.090883ms 499.26584ms 500.440203ms 502.414177ms 505.30011ms 505.844337ms 507.83379ms 509.401228ms 511.068606ms 513.727258ms 514.899722ms 516.942805ms 517.121407ms 517.135648ms 517.849356ms 518.337982ms 518.481953ms 519.441335ms 519.689557ms 521.911713ms 521.929783ms 522.624191ms 522.781153ms 522.874544ms 524.420372ms 524.769277ms 526.725879ms 527.247425ms 529.768475ms 530.360491ms 532.559797ms 533.780721ms 547.051555ms 548.873256ms 549.451282ms 550.606516ms 558.230225ms 558.841402ms 577.318218ms 582.624979ms 586.165269ms 586.814237ms 588.824241ms 590.041095ms 591.454591ms 604.118539ms 604.580414ms 614.891303ms 618.91926ms 661.143431ms 663.053404ms 681.421276ms 683.599432ms 686.10924ms 694.906983ms 697.414572ms 698.91479ms 699.80093ms 708.948487ms 710.261252ms 716.408623ms 719.944768ms 724.000501ms 724.484157ms 726.126186ms 728.285001ms 729.93647ms 730.19019ms 733.044183ms 733.529669ms 733.618483ms 733.946789ms 734.342941ms 734.926407ms 735.307628ms 735.869385ms 738.516775ms 738.972237ms 739.365649ms 739.87738ms 739.979951ms 741.191661ms 741.657381ms 741.879049ms 743.001626ms 743.885192ms 744.125608ms 744.641149ms 744.715166ms 745.296833ms 745.631593ms 745.824835ms 746.143472ms 746.220949ms 746.817736ms 747.054079ms 747.542984ms 747.68926ms 748.421339ms 748.56378ms 749.171803ms 749.423164ms 749.663367ms 750.880917ms 751.296068ms 751.322694ms 751.511113ms 751.560011ms 751.994476ms 752.078358ms 752.086627ms 752.264822ms 752.66157ms 752.952658ms 753.535033ms 753.862258ms 753.947548ms 754.123753ms 754.214554ms 754.383725ms 754.69341ms 754.730199ms 756.691501ms 756.903734ms 758.729026ms 759.564376ms 760.03681ms 761.837401ms 762.034283ms 762.175225ms 764.648543ms 766.685188ms 768.097514ms 772.389723ms 774.237454ms 774.474127ms 788.370629ms 788.948044ms 790.14934ms 790.707095ms 791.290112ms 791.559946ms 794.601281ms 795.122027ms 795.321128ms 796.748096ms 797.604416ms 800.614541ms 803.345632ms 806.367408ms 806.632281ms 808.033707ms 814.614364ms 814.724885ms 814.830636ms 832.486781ms 860.203874ms 894.38485ms 896.745167ms 920.20484ms 968.634173ms 1.034854682s]
  I0108 00:16:09.294677 20 service_latency.go:118] 50 %ile: 724.000501ms
  I0108 00:16:09.294691 20 service_latency.go:119] 90 %ile: 794.601281ms
  I0108 00:16:09.294706 20 service_latency.go:120] 99 %ile: 968.634173ms
  I0108 00:16:09.294721 20 service_latency.go:121] Total sample count: 200
  I0108 00:16:09.294840 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3001" for this suite. @ 01/08/25 00:16:09.307
• [10.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/08/25 00:16:09.327
  I0108 00:16:09.327568 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:16:09.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:09.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:09.389
  I0108 00:16:09.393362 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/08/25 00:16:11.525
  I0108 00:16:11.525803 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-7492 --namespace=crd-publish-openapi-7492 create -f -'
  I0108 00:16:11.665788 20 builder.go:146] stderr: ""
  I0108 00:16:11.665859 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-30-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0108 00:16:11.665926 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-7492 --namespace=crd-publish-openapi-7492 delete e2e-test-crd-publish-openapi-30-crds test-cr'
  I0108 00:16:11.793517 20 builder.go:146] stderr: ""
  I0108 00:16:11.793666 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-30-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0108 00:16:11.793733 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-7492 --namespace=crd-publish-openapi-7492 apply -f -'
  I0108 00:16:11.917411 20 builder.go:146] stderr: ""
  I0108 00:16:11.917471 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-30-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0108 00:16:11.917524 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-7492 --namespace=crd-publish-openapi-7492 delete e2e-test-crd-publish-openapi-30-crds test-cr'
  I0108 00:16:12.036426 20 builder.go:146] stderr: ""
  I0108 00:16:12.036497 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-30-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/08/25 00:16:12.036
  I0108 00:16:12.036607 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-7492 explain e2e-test-crd-publish-openapi-30-crds'
  I0108 00:16:12.126116 20 builder.go:146] stderr: ""
  I0108 00:16:12.126317 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-30-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0108 00:16:14.367096 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7492" for this suite. @ 01/08/25 00:16:14.423
• [5.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/08/25 00:16:14.448
  I0108 00:16:14.448310 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:16:14.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:14.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:14.5
  STEP: Creating secret with name secret-test-1de0e1c8-dddd-446e-9d6b-b59609f38d57 @ 01/08/25 00:16:14.609
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:16:14.627
  STEP: Saw pod success @ 01/08/25 00:16:18.682
  I0108 00:16:18.693702 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-b127ba8b-d675-40d9-9445-429c1426e98b container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:16:18.737
  I0108 00:16:18.796127 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-730" for this suite. @ 01/08/25 00:16:18.815
  STEP: Destroying namespace "secret-namespace-5204" for this suite. @ 01/08/25 00:16:18.831
• [4.413 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/08/25 00:16:18.862
  I0108 00:16:18.862379 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:16:18.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:18.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:18.943
  I0108 00:16:18.949584 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0108 00:16:18.967645 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0108 00:16:19.024640 20 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0108 00:16:21.048519 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0108 00:16:21.056236 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0108 00:16:21.101452 20 deployment.go:314] Updating deployment test-recreate-deployment
  I0108 00:16:21.101514 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0108 00:16:21.405679 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "702a8d9a-29b0-4a9b-bec3-86ff429493d7",
      ResourceVersion: (string) (len=5) "27172",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892178,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892178,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 00:16:21.418684 20 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f722436b-0512-4118-bd37-a660389c3bca",
      ResourceVersion: (string) (len=5) "27170",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892181,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "702a8d9a-29b0-4a9b-bec3-86ff429493d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 30 32 61 38 64  39 61 2d 32 39 62 30 2d  |\"702a8d9a-29b0-|
              00000120  34 61 39 62 2d 62 65 63  33 2d 38 36 66 66 34 32  |4a9b-bec3-86ff42|
              00000130  39 34 39 33 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9493d7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:16:21.425225 20 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0108 00:16:21.425789 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d6e146c-de6a-4101-8d6b-64f337268047",
      ResourceVersion: (string) (len=5) "27157",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892178,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "702a8d9a-29b0-4a9b-bec3-86ff429493d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 30 32 61 38 64  39 61 2d 32 39 62 30 2d  |\"702a8d9a-29b0-|
              00000120  34 61 39 62 2d 62 65 63  33 2d 38 36 66 66 34 32  |4a9b-bec3-86ff42|
              00000130  39 34 39 33 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9493d7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:16:21.449865 20 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-8g6ph" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-8g6ph",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-9732",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31f60186-f86f-41a8-afae-572039e70c90",
      ResourceVersion: (string) (len=5) "27174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892181,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "f722436b-0512-4118-bd37-a660389c3bca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 37  32 32 34 33 36 62 2d 30  |d\":\"f722436b-0|
              00000090  35 31 32 2d 34 31 31 38  2d 62 64 33 37 2d 61 36  |512-4118-bd37-a6|
              000000a0  36 30 33 38 39 63 33 62  63 61 5c 22 7d 22 3a 7b  |60389c3bca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4qw6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4qw6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892181,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t4qw6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:16:21.454966 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9732" for this suite. @ 01/08/25 00:16:21.463
• [2.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/08/25 00:16:21.492
  I0108 00:16:21.492077 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:16:21.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:21.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:21.539
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/08/25 00:16:21.546
  STEP: Saw pod success @ 01/08/25 00:16:25.632
  I0108 00:16:25.639210 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-7e2e4ad0-decd-4671-8485-13979d27dfdf container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:16:25.656
  I0108 00:16:25.700400 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5569" for this suite. @ 01/08/25 00:16:25.724
• [4.257 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 01/08/25 00:16:25.75
  I0108 00:16:25.750357 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 00:16:25.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:25.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:25.811
  STEP: Looking for a node to schedule job pod @ 01/08/25 00:16:25.818
  STEP: Creating a job @ 01/08/25 00:16:25.845
  STEP: Ensuring job fails @ 01/08/25 00:16:25.868
  I0108 00:16:35.963684 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3201" for this suite. @ 01/08/25 00:16:35.968
• [10.229 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/08/25 00:16:35.98
  I0108 00:16:35.980636 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:16:35.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:36.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:36.027
  STEP: Creating a ResourceQuota with best effort scope @ 01/08/25 00:16:36.032
  STEP: Ensuring ResourceQuota status is calculated @ 01/08/25 00:16:36.041
  STEP: Creating a ResourceQuota with not best effort scope @ 01/08/25 00:16:38.045
  STEP: Ensuring ResourceQuota status is calculated @ 01/08/25 00:16:38.055
  STEP: Creating a best-effort pod @ 01/08/25 00:16:40.06
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/08/25 00:16:40.094
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/08/25 00:16:42.098
  STEP: Deleting the pod @ 01/08/25 00:16:44.104
  STEP: Ensuring resource quota status released the pod usage @ 01/08/25 00:16:44.143
  STEP: Creating a not best-effort pod @ 01/08/25 00:16:46.15
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/08/25 00:16:46.182
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/08/25 00:16:48.19
  STEP: Deleting the pod @ 01/08/25 00:16:50.194
  STEP: Ensuring resource quota status released the pod usage @ 01/08/25 00:16:50.238
  I0108 00:16:52.242750 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9097" for this suite. @ 01/08/25 00:16:52.248
• [16.279 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/08/25 00:16:52.261
  I0108 00:16:52.261708 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename watch @ 01/08/25 00:16:52.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:52.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:52.308
  STEP: creating a watch on configmaps @ 01/08/25 00:16:52.311
  STEP: creating a new configmap @ 01/08/25 00:16:52.315
  STEP: modifying the configmap once @ 01/08/25 00:16:52.334
  STEP: closing the watch once it receives two notifications @ 01/08/25 00:16:52.347
  I0108 00:16:52.347411 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-14  f7f9f9b9-866c-4558-8568-1c123b6108da 27832 0 2025-01-08 00:16:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-08 00:16:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:16:52.348006 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-14  f7f9f9b9-866c-4558-8568-1c123b6108da 27833 0 2025-01-08 00:16:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-08 00:16:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/08/25 00:16:52.348
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/08/25 00:16:52.36
  STEP: deleting the configmap @ 01/08/25 00:16:52.362
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/08/25 00:16:52.377
  I0108 00:16:52.377636 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-14  f7f9f9b9-866c-4558-8568-1c123b6108da 27834 0 2025-01-08 00:16:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-08 00:16:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:16:52.377983 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-14  f7f9f9b9-866c-4558-8568-1c123b6108da 27835 0 2025-01-08 00:16:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-08 00:16:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 00:16:52.378163 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-14" for this suite. @ 01/08/25 00:16:52.382
• [0.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/08/25 00:16:52.395
  I0108 00:16:52.395361 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sysctl @ 01/08/25 00:16:52.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:52.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:52.461
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/08/25 00:16:52.464
  STEP: Watching for error events or started pod @ 01/08/25 00:16:52.482
  STEP: Waiting for pod completion @ 01/08/25 00:16:54.487
  STEP: Checking that the pod succeeded @ 01/08/25 00:16:56.503
  STEP: Getting logs from the pod @ 01/08/25 00:16:56.503
  STEP: Checking that the sysctl is actually updated @ 01/08/25 00:16:56.512
  I0108 00:16:56.512288 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7542" for this suite. @ 01/08/25 00:16:56.518
• [4.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/08/25 00:16:56.531
  I0108 00:16:56.531546 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 00:16:56.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:16:56.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:16:56.574
  STEP: Creating a pod to test substitution in container's args @ 01/08/25 00:16:56.579
  STEP: Saw pod success @ 01/08/25 00:17:00.633
  I0108 00:17:00.637029 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod var-expansion-68b73972-09f1-454c-af65-250137d21e76 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:17:00.644
  I0108 00:17:00.674187 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5579" for this suite. @ 01/08/25 00:17:00.68
• [4.163 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/08/25 00:17:00.694
  I0108 00:17:00.694888 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 00:17:00.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:00.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:00.746
  STEP: Creating a test namespace @ 01/08/25 00:17:00.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:00.843
  STEP: Creating a pod in the namespace @ 01/08/25 00:17:00.85
  STEP: Waiting for the pod to have running status @ 01/08/25 00:17:00.868
  STEP: Deleting the namespace @ 01/08/25 00:17:02.878
  STEP: Waiting for the namespace to be removed. @ 01/08/25 00:17:02.892
  STEP: Recreating the namespace @ 01/08/25 00:17:14.896
  STEP: Verifying there are no pods in the namespace @ 01/08/25 00:17:14.932
  I0108 00:17:14.936290 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9879" for this suite. @ 01/08/25 00:17:14.941
  STEP: Destroying namespace "nsdeletetest-2100" for this suite. @ 01/08/25 00:17:14.952
  I0108 00:17:14.957006 20 framework.go:370] Namespace nsdeletetest-2100 was already deleted
  STEP: Destroying namespace "nsdeletetest-2022" for this suite. @ 01/08/25 00:17:14.957
• [14.273 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/08/25 00:17:14.969
  I0108 00:17:14.969738 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename proxy @ 01/08/25 00:17:14.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:15.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:15.053
  I0108 00:17:15.056299 20 proxy.go:293] Creating pod...
  I0108 00:17:17.101018 20 proxy.go:317] Creating service...
  I0108 00:17:17.125091 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/DELETE
  I0108 00:17:17.140828 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0108 00:17:17.140890 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/GET
  I0108 00:17:17.160695 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0108 00:17:17.161090 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/HEAD
  I0108 00:17:17.166232 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0108 00:17:17.166279 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/OPTIONS
  I0108 00:17:17.170457 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0108 00:17:17.170508 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/PATCH
  I0108 00:17:17.174733 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0108 00:17:17.174798 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/POST
  I0108 00:17:17.178918 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0108 00:17:17.178979 20 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/pods/agnhost/proxy/some/path/with/PUT
  I0108 00:17:17.183121 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0108 00:17:17.183185 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/DELETE
  I0108 00:17:17.189396 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0108 00:17:17.190102 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/GET
  I0108 00:17:17.211396 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0108 00:17:17.211567 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/HEAD
  I0108 00:17:17.217526 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0108 00:17:17.217586 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/OPTIONS
  I0108 00:17:17.222589 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0108 00:17:17.222650 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/PATCH
  I0108 00:17:17.227479 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0108 00:17:17.227539 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/POST
  I0108 00:17:17.233515 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0108 00:17:17.233574 20 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4411/services/test-service/proxy/some/path/with/PUT
  I0108 00:17:17.238675 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0108 00:17:17.238925 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4411" for this suite. @ 01/08/25 00:17:17.243
• [2.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/08/25 00:17:17.254
  I0108 00:17:17.254768 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 00:17:17.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:17.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:17.296
  STEP: Creating simple DaemonSet "daemon-set" @ 01/08/25 00:17:17.368
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 00:17:17.378
  I0108 00:17:17.528494 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:17:17.528552 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:17:18.390652 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:17:18.390835 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:17:19.392634 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 00:17:19.392803 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 01/08/25 00:17:19.4
  I0108 00:17:19.406169 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/08/25 00:17:19.406
  I0108 00:17:19.432526 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/08/25 00:17:19.432
  I0108 00:17:19.435753 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0108 00:17:19.436062 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.436337 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.436725 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.436988 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.437376 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.437434 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7989 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0108 00:17:19.437460 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/08/25 00:17:19.437
  STEP: watching for the daemon set status to be patched @ 01/08/25 00:17:19.453
  I0108 00:17:19.456603 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0108 00:17:19.457018 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.457347 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.457787 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.458366 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.458820 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.458873 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7989 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0108 00:17:19.459281 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0108 00:17:19.459335 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7989 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0108 00:17:19.459356 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 00:17:19.482
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7989, will wait for the garbage collector to delete the pods @ 01/08/25 00:17:19.482
  I0108 00:17:19.550462 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.106842ms
  I0108 00:17:19.650922 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.45866ms
  I0108 00:17:22.155476 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:17:22.155736 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 00:17:22.160005 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28151"},"items":null}

  I0108 00:17:22.164886 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28151"},"items":null}

  I0108 00:17:22.188610 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7989" for this suite. @ 01/08/25 00:17:22.193
• [4.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/08/25 00:17:22.219
  I0108 00:17:22.219302 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context-test @ 01/08/25 00:17:22.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:22.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:22.257
  I0108 00:17:26.306996 20 security_context.go:538] Got logs for pod "busybox-privileged-false-0a4053cc-420a-4091-8ec2-24ea67b859d2": "ip: RTNETLINK answers: Operation not permitted\n"
  I0108 00:17:26.307154 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-807" for this suite. @ 01/08/25 00:17:26.311
• [4.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/08/25 00:17:26.327
  I0108 00:17:26.327241 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:17:26.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:26.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:26.374
  STEP: Creating secret with name projected-secret-test-4d7e1ae9-8979-4f9b-b0bf-82377ef77a4e @ 01/08/25 00:17:26.377
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:17:26.387
  STEP: Saw pod success @ 01/08/25 00:17:30.418
  I0108 00:17:30.422100 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-7d40a509-469a-4b90-8855-2d9b62a96722 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:17:30.43
  I0108 00:17:30.464687 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8026" for this suite. @ 01/08/25 00:17:30.469
• [4.153 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/08/25 00:17:30.481
  I0108 00:17:30.482175 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename aggregator @ 01/08/25 00:17:30.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:30.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:30.538
  I0108 00:17:30.541243 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Registering the sample API server. @ 01/08/25 00:17:30.542
  I0108 00:17:31.523618 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0108 00:17:31.619198 20 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0108 00:17:33.735010 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:35.742757 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:37.742689 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:39.739858 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:41.741566 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:43.749698 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:45.739138 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:47.739401 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:49.739749 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:51.740308 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:53.740948 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:55.738721 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0108 00:17:57.881610 20 aggregator.go:755] Waited 126.42172ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/08/25 00:17:57.964
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/08/25 00:17:57.968
  STEP: List APIServices @ 01/08/25 00:17:57.985
  I0108 00:17:57.992811 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/08/25 00:17:57.996
  I0108 00:17:58.024208 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/08/25 00:17:58.024
  I0108 00:17:58.044449 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 57, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/08/25 00:17:58.045
  I0108 00:17:58.053606 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-08 00:17:57 +0000 UTC Passed all checks passed}
  I0108 00:17:58.053662 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 00:17:58.053685 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/08/25 00:17:58.053
  I0108 00:17:58.074456 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-703767539" @ 01/08/25 00:17:58.075
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/08/25 00:17:58.101
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/08/25 00:17:58.116
  STEP: Patch APIService Status @ 01/08/25 00:17:58.125
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/08/25 00:17:58.141
  I0108 00:17:58.148875 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-08 00:17:57 +0000 UTC Passed all checks passed}
  I0108 00:17:58.149519 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 00:17:58.150038 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0108 00:17:58.150537 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/08/25 00:17:58.151
  STEP: Confirm that the generated APIService has been deleted @ 01/08/25 00:17:58.163
  I0108 00:17:58.164053 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0108 00:17:58.167377 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0108 00:17:58.167430 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0108 00:17:58.412494 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3063" for this suite. @ 01/08/25 00:17:58.437
• [27.978 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/08/25 00:17:58.459
  I0108 00:17:58.459762 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:17:58.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:17:58.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:17:58.504
  STEP: Setting up server cert @ 01/08/25 00:17:58.602
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:17:59.053
  STEP: Deploying the webhook pod @ 01/08/25 00:17:59.069
  STEP: Wait for the deployment to be ready @ 01/08/25 00:17:59.112
  I0108 00:17:59.137896 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0108 00:18:01.167164 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 17, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 17, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/08/25 00:18:03.175
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:18:03.198
  I0108 00:18:04.199922 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0108 00:18:04.214312 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/08/25 00:18:04.74
  STEP: Creating a custom resource that should be denied by the webhook @ 01/08/25 00:18:04.782
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/08/25 00:18:06.822
  STEP: Updating the custom resource with disallowed data should be denied @ 01/08/25 00:18:06.841
  STEP: Deleting the custom resource should be denied @ 01/08/25 00:18:06.851
  STEP: Remove the offending key and value from the custom resource data @ 01/08/25 00:18:06.859
  STEP: Deleting the updated custom resource should be successful @ 01/08/25 00:18:06.878
  I0108 00:18:07.581604 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1704" for this suite. @ 01/08/25 00:18:07.586
  STEP: Destroying namespace "webhook-markers-2258" for this suite. @ 01/08/25 00:18:07.598
• [9.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 01/08/25 00:18:07.621
  I0108 00:18:07.621269 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:18:07.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:18:07.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:18:07.67
  STEP: Creating a Serviceaccount "e2e-sa-zklt2" in namespace "svcaccounts-3138" @ 01/08/25 00:18:07.676
  STEP: Creating a ServiceaccountToken "e2e-sa-zklt2" in namespace "svcaccounts-3138" @ 01/08/25 00:18:07.695
  STEP: Creating a TokenReview for "e2e-sa-zklt2" in namespace "svcaccounts-3138" @ 01/08/25 00:18:07.705
  I0108 00:18:07.708955 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3138" for this suite. @ 01/08/25 00:18:07.73
• [0.123 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/08/25 00:18:07.745
  I0108 00:18:07.745452 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubelet-test @ 01/08/25 00:18:07.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:18:07.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:18:07.788
  I0108 00:18:11.851485 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4276" for this suite. @ 01/08/25 00:18:11.856
• [4.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/08/25 00:18:11.867
  I0108 00:18:11.867536 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:18:11.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:18:11.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:18:11.933
  I0108 00:18:11.942876 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6038" for this suite. @ 01/08/25 00:18:11.971
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 01/08/25 00:18:12.01
  I0108 00:18:12.010404 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption @ 01/08/25 00:18:12.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:18:12.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:18:12.06
  I0108 00:18:12.108611 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0108 00:19:12.117336 20 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/08/25 00:19:12.121
  I0108 00:19:12.121816 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/08/25 00:19:12.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:19:12.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:19:12.159
  I0108 00:19:12.204513 20 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0108 00:19:12.214424 20 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 01/08/25 00:19:12.336
  STEP: Removing a custom resource @ 01/08/25 00:19:12.35
  STEP: Removing a custom resource @ 01/08/25 00:19:12.369
  STEP: Removing a custom resource @ 01/08/25 00:19:12.384
  I0108 00:19:12.401015 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-566" for this suite. @ 01/08/25 00:19:12.409
  I0108 00:19:12.421476 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1004" for this suite. @ 01/08/25 00:19:12.512
• [60.515 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/08/25 00:19:12.526
  I0108 00:19:12.526999 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/08/25 00:19:12.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:19:12.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:19:12.567
  STEP: create the container to handle the HTTPGet hook request. @ 01/08/25 00:19:12.609
  STEP: create the pod with lifecycle hook @ 01/08/25 00:19:14.681
  STEP: check poststart hook @ 01/08/25 00:19:16.716
  STEP: delete the pod with lifecycle hook @ 01/08/25 00:19:16.801
  I0108 00:19:20.854783 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4621" for this suite. @ 01/08/25 00:19:20.86
• [8.351 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/08/25 00:19:20.878
  I0108 00:19:20.878071 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:19:20.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:19:20.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:19:20.932
  STEP: Create set of pods @ 01/08/25 00:19:20.938
  I0108 00:19:20.963899 20 pods.go:871] created test-pod-1
  I0108 00:19:20.994196 20 pods.go:871] created test-pod-2
  I0108 00:19:21.029396 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/08/25 00:19:21.029
  STEP: waiting for all pods to be deleted @ 01/08/25 00:19:25.137
  I0108 00:19:25.174275 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0108 00:19:26.144868 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0108 00:19:27.157703 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0108 00:19:28.144909 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9187" for this suite. @ 01/08/25 00:19:28.149
• [7.283 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/08/25 00:19:28.161
  I0108 00:19:28.161983 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename chunking @ 01/08/25 00:19:28.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:19:28.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:19:28.195
  STEP: creating a large number of resources @ 01/08/25 00:19:28.198
  STEP: retrieving the first page @ 01/08/25 00:19:45.874
  I0108 00:19:45.920318 20 chunking.go:163] Retrieved 40/40 results with rv 29558 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 01/08/25 00:19:45.92
  I0108 00:20:05.929908 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:20:25.935775 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:20:45.930602 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:21:05.938687 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:21:25.933892 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:21:45.930061 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:22:05.929522 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:22:25.931211 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:22:45.930034 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:23:05.930244 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:23:25.930035 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:23:45.931624 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:24:05.932121 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:24:25.930112 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:24:45.932931 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:25:05.930123 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:25:25.927122 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:25:45.930657 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:26:05.926753 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:26:25.929163 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:26:45.930625 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:27:05.931354 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:27:25.928524 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:27:45.930369 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:28:05.926211 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:28:25.932880 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:28:45.930518 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk1NTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0108 00:29:05.929483 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0108 00:29:05.929543 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/08/25 00:29:05.929
  STEP: retrieving all remaining pages @ 01/08/25 00:29:05.936
  I0108 00:29:05.943801 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0108 00:29:05.950819 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0108 00:29:05.961444 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0108 00:29:05.966519 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0108 00:29:05.971995 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0108 00:29:05.978096 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0108 00:29:05.983198 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0108 00:29:05.987611 20 chunking.go:221] Retrieved 40/40 results with rv 31701 and continue 
  I0108 00:29:05.988014 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4757" for this suite. @ 01/08/25 00:29:05.992
• [577.842 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/08/25 00:29:06.005
  I0108 00:29:06.005352 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:29:06.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:06.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:06.055
  I0108 00:29:06.060520 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/08/25 00:29:08.141
  I0108 00:29:08.141819 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-9518 --namespace=crd-publish-openapi-9518 create -f -'
  I0108 00:29:08.305220 20 builder.go:146] stderr: ""
  I0108 00:29:08.305286 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2865-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0108 00:29:08.305353 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-9518 --namespace=crd-publish-openapi-9518 delete e2e-test-crd-publish-openapi-2865-crds test-cr'
  I0108 00:29:08.420293 20 builder.go:146] stderr: ""
  I0108 00:29:08.420377 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2865-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0108 00:29:08.420453 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-9518 --namespace=crd-publish-openapi-9518 apply -f -'
  I0108 00:29:08.532336 20 builder.go:146] stderr: ""
  I0108 00:29:08.532406 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2865-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0108 00:29:08.532582 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-9518 --namespace=crd-publish-openapi-9518 delete e2e-test-crd-publish-openapi-2865-crds test-cr'
  I0108 00:29:08.649591 20 builder.go:146] stderr: ""
  I0108 00:29:08.649656 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2865-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/08/25 00:29:08.649
  I0108 00:29:08.649756 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-9518 explain e2e-test-crd-publish-openapi-2865-crds'
  I0108 00:29:08.746948 20 builder.go:146] stderr: ""
  I0108 00:29:08.747016 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2865-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0108 00:29:11.073713 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9518" for this suite. @ 01/08/25 00:29:11.083
• [5.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 01/08/25 00:29:11.096
  I0108 00:29:11.096419 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:29:11.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:11.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:11.164
  STEP: Creating ServiceAccount "e2e-sa-l9df8"  @ 01/08/25 00:29:11.168
  I0108 00:29:11.180395 20 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-l9df8"  @ 01/08/25 00:29:11.18
  I0108 00:29:11.198324 20 service_accounts.go:868] AutomountServiceAccountToken: true
  I0108 00:29:11.198922 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5416" for this suite. @ 01/08/25 00:29:11.205
• [0.131 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/08/25 00:29:11.228
  I0108 00:29:11.228385 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subpath @ 01/08/25 00:29:11.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:11.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:11.277
  STEP: Setting up data @ 01/08/25 00:29:11.283
  STEP: Creating pod pod-subpath-test-downwardapi-ngsn @ 01/08/25 00:29:11.309
  STEP: Creating a pod to test atomic-volume-subpath @ 01/08/25 00:29:11.309
  STEP: Saw pod success @ 01/08/25 00:29:35.418
  I0108 00:29:35.422666 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-subpath-test-downwardapi-ngsn container test-container-subpath-downwardapi-ngsn: <nil>
  STEP: delete the pod @ 01/08/25 00:29:35.443
  STEP: Deleting pod pod-subpath-test-downwardapi-ngsn @ 01/08/25 00:29:35.482
  I0108 00:29:35.483043 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-ngsn" in namespace "subpath-2638"
  I0108 00:29:35.486945 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2638" for this suite. @ 01/08/25 00:29:35.492
• [24.275 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/08/25 00:29:35.503
  I0108 00:29:35.503991 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename certificates @ 01/08/25 00:29:35.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:35.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:35.55
  STEP: getting /apis @ 01/08/25 00:29:36.679
  STEP: getting /apis/certificates.k8s.io @ 01/08/25 00:29:36.685
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/08/25 00:29:36.687
  STEP: creating @ 01/08/25 00:29:36.688
  STEP: getting @ 01/08/25 00:29:36.744
  STEP: listing @ 01/08/25 00:29:36.748
  STEP: watching @ 01/08/25 00:29:36.752
  I0108 00:29:36.752203 20 certificates.go:316] starting watch
  STEP: patching @ 01/08/25 00:29:36.753
  STEP: updating @ 01/08/25 00:29:36.77
  I0108 00:29:36.786353 20 certificates.go:332] waiting for watch events with expected annotations
  I0108 00:29:36.786470 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/08/25 00:29:36.786
  STEP: patching /approval @ 01/08/25 00:29:36.79
  STEP: updating /approval @ 01/08/25 00:29:36.807
  STEP: getting /status @ 01/08/25 00:29:36.818
  STEP: patching /status @ 01/08/25 00:29:36.821
  STEP: updating /status @ 01/08/25 00:29:36.84
  STEP: deleting @ 01/08/25 00:29:36.856
  STEP: deleting a collection @ 01/08/25 00:29:36.874
  I0108 00:29:36.900765 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4699" for this suite. @ 01/08/25 00:29:36.906
• [1.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/08/25 00:29:36.923
  I0108 00:29:36.923924 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:29:36.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:36.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:36.984
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:29:36.989
  STEP: Saw pod success @ 01/08/25 00:29:41.03
  I0108 00:29:41.034176 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-c5c8b73f-2402-441b-8229-9d488f6880a4 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:29:41.043
  I0108 00:29:41.088627 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6859" for this suite. @ 01/08/25 00:29:41.094
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/08/25 00:29:41.109
  I0108 00:29:41.109166 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption @ 01/08/25 00:29:41.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:41.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:41.16
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:29:41.177
  STEP: Updating PodDisruptionBudget status @ 01/08/25 00:29:43.182
  STEP: Waiting for all pods to be running @ 01/08/25 00:29:43.205
  I0108 00:29:43.226254 20 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 01/08/25 00:29:45.211
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:29:45.228
  STEP: Patching PodDisruptionBudget status @ 01/08/25 00:29:45.245
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:29:45.264
  I0108 00:29:45.267964 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9834" for this suite. @ 01/08/25 00:29:45.273
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/08/25 00:29:45.295
  I0108 00:29:45.295303 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:29:45.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:45.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:45.351
  STEP: Given a ReplicationController is created @ 01/08/25 00:29:45.356
  STEP: When the matched label of one of its pods change @ 01/08/25 00:29:45.381
  I0108 00:29:45.396044 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/08/25 00:29:45.451
  I0108 00:29:45.472608 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6647" for this suite. @ 01/08/25 00:29:45.502
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/08/25 00:29:45.534
  I0108 00:29:45.534150 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 00:29:45.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:45.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:45.601
  I0108 00:29:45.604640 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-f82c6e04-fc18-473f-8c76-9036db64304a
  I0108 00:29:45.619031 20 resource.go:87] Pod name my-hostname-basic-f82c6e04-fc18-473f-8c76-9036db64304a: Found 0 pods out of 1
  I0108 00:29:50.632692 20 resource.go:87] Pod name my-hostname-basic-f82c6e04-fc18-473f-8c76-9036db64304a: Found 1 pods out of 1
  I0108 00:29:50.632740 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-f82c6e04-fc18-473f-8c76-9036db64304a" is running
  I0108 00:29:50.636386 20 replica_set.go:220] Pod "my-hostname-basic-f82c6e04-fc18-473f-8c76-9036db64304a-bbgn7" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:29:47 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:29:45 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:29:47 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:29:47 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-08 00:29:45 +0000 UTC Reason: Message:}])
  I0108 00:29:50.636432 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/08/25 00:29:50.636
  I0108 00:29:50.660852 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1695" for this suite. @ 01/08/25 00:29:50.677
• [5.155 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/08/25 00:29:50.689
  I0108 00:29:50.689479 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:29:50.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:50.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:50.747
  I0108 00:29:50.750702 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I0108 00:29:50.780602 20 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/08/25 00:29:52.806
  STEP: updating a scale subresource @ 01/08/25 00:29:52.809
  STEP: verifying the deployment Spec.Replicas was modified @ 01/08/25 00:29:52.824
  STEP: Patch a scale subresource @ 01/08/25 00:29:52.839
  I0108 00:29:52.913821 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed1ec79b-ea41-4916-addf-aefa3052baad",
      ResourceVersion: (string) (len=5) "32510",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 00:29:52.939015 20 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07b5a1bc-9df9-4a0e-add7-742bd2879d9b",
      ResourceVersion: (string) (len=5) "32515",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "ed1ec79b-ea41-4916-addf-aefa3052baad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 31 65 63 37  39 62 2d 65 61 34 31 2d  |\"ed1ec79b-ea41-|
              00000120  34 39 31 36 2d 61 64 64  66 2d 61 65 66 61 33 30  |4916-addf-aefa30|
              00000130  35 32 62 61 61 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |52baad\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:29:52.965143 20 deployment.go:68] Pod "test-new-deployment-685b768f58-svxfr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-svxfr",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "030b5e84-f14f-4823-b4b3-aa86f8ce3ddf",
      ResourceVersion: (string) (len=5) "32516",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "07b5a1bc-9df9-4a0e-add7-742bd2879d9b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  62 35 61 31 62 63 2d 39  |d\":\"07b5a1bc-9|
              00000090  64 66 39 2d 34 61 30 65  2d 61 64 64 37 2d 37 34  |df9-4a0e-add7-74|
              000000a0  32 62 64 32 38 37 39 64  39 62 5c 22 7d 22 3a 7b  |2bd2879d9b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xvgvd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xvgvd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.249"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xvgvd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:29:52.971369 20 deployment.go:68] Pod "test-new-deployment-685b768f58-xd9vw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-xd9vw",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6022",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef726248-8a60-4d4f-aa7e-9c8f2ae028b9",
      ResourceVersion: (string) (len=5) "32503",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4fb389406af63aa907bfe67c3b8db00be8f4929186a332dd5fe757f1309f7259",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.111/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.111/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "07b5a1bc-9df9-4a0e-add7-742bd2879d9b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  62 35 61 31 62 63 2d 39  |d\":\"07b5a1bc-9|
              00000090  64 66 39 2d 34 61 30 65  2d 61 64 64 37 2d 37 34  |df9-4a0e-add7-74|
              000000a0  32 62 64 32 38 37 39 64  39 62 5c 22 7d 22 3a 7b  |2bd2879d9b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 31  31 5c 22 7d 22 3a 7b 22  |.42.4.111\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-45q4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-45q4j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871892990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=11) "10.42.4.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871892990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871892992,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d300e74dd688e9f14157fec6a42466c39d6a60a294db2423605ac52993e5ea29",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-45q4j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:29:52.982381 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6022" for this suite. @ 01/08/25 00:29:53.012
• [2.390 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/08/25 00:29:53.079
  I0108 00:29:53.079501 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:29:53.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:53.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:53.163
  STEP: Creating ReplicationController "e2e-rc-r5cmm" @ 01/08/25 00:29:53.165
  I0108 00:29:53.180946 20 rc.go:792] Get Replication Controller "e2e-rc-r5cmm" to confirm replicas
  I0108 00:29:54.181264 20 rc.go:792] Get Replication Controller "e2e-rc-r5cmm" to confirm replicas
  I0108 00:29:54.186851 20 rc.go:801] Found 1 replicas for "e2e-rc-r5cmm" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-r5cmm" @ 01/08/25 00:29:54.186
  STEP: Updating a scale subresource @ 01/08/25 00:29:54.19
  STEP: Verifying replicas where modified for replication controller "e2e-rc-r5cmm" @ 01/08/25 00:29:54.218
  I0108 00:29:54.218222 20 rc.go:792] Get Replication Controller "e2e-rc-r5cmm" to confirm replicas
  I0108 00:29:55.218667 20 rc.go:792] Get Replication Controller "e2e-rc-r5cmm" to confirm replicas
  I0108 00:29:55.222847 20 rc.go:801] Found 2 replicas for "e2e-rc-r5cmm" replication controller
  I0108 00:29:55.223104 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5877" for this suite. @ 01/08/25 00:29:55.235
• [2.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/08/25 00:29:55.254
  I0108 00:29:55.254456 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:29:55.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:55.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:55.294
  STEP: Creating a ResourceQuota @ 01/08/25 00:29:55.298
  STEP: Getting a ResourceQuota @ 01/08/25 00:29:55.313
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/08/25 00:29:55.322
  STEP: Patching the ResourceQuota @ 01/08/25 00:29:55.326
  STEP: Deleting a Collection of ResourceQuotas @ 01/08/25 00:29:55.343
  STEP: Verifying the deleted ResourceQuota @ 01/08/25 00:29:55.363
  I0108 00:29:55.369104 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6550" for this suite. @ 01/08/25 00:29:55.392
• [0.154 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/08/25 00:29:55.408
  I0108 00:29:55.408300 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/08/25 00:29:55.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:55.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:55.457
  I0108 00:29:55.464324 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:29:58.571683 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5879" for this suite. @ 01/08/25 00:29:58.577
• [3.195 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/08/25 00:29:58.603
  I0108 00:29:58.604101 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:29:58.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:29:58.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:29:58.654
  I0108 00:29:58.658385 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: creating the pod @ 01/08/25 00:29:58.659
  STEP: submitting the pod to kubernetes @ 01/08/25 00:29:58.659
  I0108 00:30:02.788782 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5986" for this suite. @ 01/08/25 00:30:02.799
• [4.214 seconds]
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 01/08/25 00:30:02.817
  I0108 00:30:02.818059 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-selectable-fields @ 01/08/25 00:30:02.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:30:02.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:30:02.887
  STEP: Setting up server cert @ 01/08/25 00:30:02.895
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/08/25 00:30:03.661
  STEP: Deploying the custom resource conversion webhook pod @ 01/08/25 00:30:03.677
  STEP: Wait for the deployment to be ready @ 01/08/25 00:30:03.72
  I0108 00:30:03.776395 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0108 00:30:05.796144 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 30, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 30, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 30, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 30, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/08/25 00:30:07.802
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:30:07.839
  I0108 00:30:08.840312 20 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 01/08/25 00:30:08.852
  I0108 00:30:08.852672 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Creating a custom resource conversion webhook @ 01/08/25 00:30:09.38
  STEP: Watching with field selectors @ 01/08/25 00:30:11.498
  STEP: Registering informers with field selectors @ 01/08/25 00:30:11.508
  STEP: Creating custom resources @ 01/08/25 00:30:11.508
  STEP: Listing v2 custom resources with field selector host=host1 @ 01/08/25 00:30:11.566
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 01/08/25 00:30:11.571
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 01/08/25 00:30:11.575
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 01/08/25 00:30:11.588
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 01/08/25 00:30:11.592
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 01/08/25 00:30:11.598
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 01/08/25 00:30:11.598
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 01/08/25 00:30:11.598
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 01/08/25 00:30:11.598
  STEP: Deleting one custom resources to ensure that deletions are observed @ 01/08/25 00:30:11.598
  STEP: Updating one custom resources to ensure that deletions are observed @ 01/08/25 00:30:11.623
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 01/08/25 00:30:11.659
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 01/08/25 00:30:11.663
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 01/08/25 00:30:11.677
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 01/08/25 00:30:11.683
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 01/08/25 00:30:11.683
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 01/08/25 00:30:11.683
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 01/08/25 00:30:11.683
  I0108 00:30:12.318327 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-5568" for this suite. @ 01/08/25 00:30:12.324
• [9.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/08/25 00:30:12.38
  I0108 00:30:12.380986 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:30:12.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:30:12.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:30:12.438
  STEP: Creating configMap with name configmap-test-upd-af1472a5-2a5c-4c38-b1f9-5dcf778d8a3a @ 01/08/25 00:30:12.447
  STEP: Creating the pod @ 01/08/25 00:30:12.461
  STEP: Waiting for pod with text data @ 01/08/25 00:30:16.504
  STEP: Waiting for pod with binary data @ 01/08/25 00:30:16.522
  I0108 00:30:16.542614 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9020" for this suite. @ 01/08/25 00:30:16.56
• [4.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/08/25 00:30:16.594
  I0108 00:30:16.594680 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subpath @ 01/08/25 00:30:16.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:30:16.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:30:16.661
  STEP: Setting up data @ 01/08/25 00:30:16.667
  STEP: Creating pod pod-subpath-test-secret-hvjw @ 01/08/25 00:30:16.692
  STEP: Creating a pod to test atomic-volume-subpath @ 01/08/25 00:30:16.693
  STEP: Saw pod success @ 01/08/25 00:30:42.82
  I0108 00:30:42.824525 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-subpath-test-secret-hvjw container test-container-subpath-secret-hvjw: <nil>
  STEP: delete the pod @ 01/08/25 00:30:42.837
  STEP: Deleting pod pod-subpath-test-secret-hvjw @ 01/08/25 00:30:42.874
  I0108 00:30:42.874103 20 delete.go:62] Deleting pod "pod-subpath-test-secret-hvjw" in namespace "subpath-4823"
  I0108 00:30:42.877974 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4823" for this suite. @ 01/08/25 00:30:42.883
• [26.307 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/08/25 00:30:42.903
  I0108 00:30:42.903632 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:30:42.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:30:42.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:30:42.963
  STEP: Discovering how many secrets are in namespace by default @ 01/08/25 00:30:42.967
  STEP: Counting existing ResourceQuota @ 01/08/25 00:30:47.975
  STEP: Creating a ResourceQuota @ 01/08/25 00:30:52.98
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:30:52.996
  STEP: Creating a Secret @ 01/08/25 00:30:55
  STEP: Ensuring resource quota status captures secret creation @ 01/08/25 00:30:55.033
  STEP: Deleting a secret @ 01/08/25 00:30:57.041
  STEP: Ensuring resource quota status released usage @ 01/08/25 00:30:57.057
  I0108 00:30:59.062421 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7786" for this suite. @ 01/08/25 00:30:59.067
• [16.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/08/25 00:30:59.081
  I0108 00:30:59.081630 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:30:59.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:30:59.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:30:59.123
  STEP: Creating configMap with name configmap-projected-all-test-volume-688a3487-b51c-4d12-849c-b16e5754fd6c @ 01/08/25 00:30:59.126
  STEP: Creating secret with name secret-projected-all-test-volume-1c6ad447-5d51-4e52-9093-757823746d70 @ 01/08/25 00:30:59.143
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/08/25 00:30:59.164
  W0108 00:30:59.186990      20 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 01/08/25 00:31:03.235
  I0108 00:31:03.246788 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod projected-volume-a2e5a250-daa4-4df2-8565-54b52c2b8280 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:31:03.287
  I0108 00:31:03.366698 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4986" for this suite. @ 01/08/25 00:31:03.374
• [4.318 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/08/25 00:31:03.399
  I0108 00:31:03.399932 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:31:03.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:31:03.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:31:03.45
  STEP: Setting up server cert @ 01/08/25 00:31:03.548
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:31:04.378
  STEP: Deploying the webhook pod @ 01/08/25 00:31:04.413
  STEP: Wait for the deployment to be ready @ 01/08/25 00:31:04.449
  I0108 00:31:04.484605 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/08/25 00:31:06.497
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:31:06.528
  I0108 00:31:07.529394 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/08/25 00:31:07.538
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/08/25 00:31:07.538
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/08/25 00:31:07.571
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/08/25 00:31:08.596
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/08/25 00:31:08.597
  STEP: Having no error when timeout is longer than webhook latency @ 01/08/25 00:31:09.675
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/08/25 00:31:09.675
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/08/25 00:31:14.754
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/08/25 00:31:14.754
  I0108 00:31:19.997998 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4029" for this suite. @ 01/08/25 00:31:20.009
  STEP: Destroying namespace "webhook-markers-9184" for this suite. @ 01/08/25 00:31:20.045
• [16.667 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/08/25 00:31:20.066
  I0108 00:31:20.066790 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:31:20.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:31:20.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:31:20.132
  STEP: set up a multi version CRD @ 01/08/25 00:31:20.139
  I0108 00:31:20.139913 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: mark a version not serverd @ 01/08/25 00:31:24.856
  STEP: check the unserved version gets removed @ 01/08/25 00:31:24.918
  STEP: check the other version is not changed @ 01/08/25 00:31:26.573
  I0108 00:31:30.425412 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1335" for this suite. @ 01/08/25 00:31:30.435
• [10.380 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/08/25 00:31:30.447
  I0108 00:31:30.447192 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-runtime @ 01/08/25 00:31:30.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:31:30.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:31:30.498
  STEP: create the container @ 01/08/25 00:31:30.504
  W0108 00:31:30.519510      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/08/25 00:31:30.519
  STEP: get the container status @ 01/08/25 00:31:33.57
  STEP: the container should be terminated @ 01/08/25 00:31:33.574
  STEP: the termination message should be set @ 01/08/25 00:31:33.574
  I0108 00:31:33.574283 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/08/25 00:31:33.574
  I0108 00:31:33.617498 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9506" for this suite. @ 01/08/25 00:31:33.626
• [3.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/08/25 00:31:33.655
  I0108 00:31:33.655535 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:31:33.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:31:33.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:31:33.719
  I0108 00:31:33.723594 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I0108 00:31:33.741412 20 deployment.go:1200] Waiting for observed generation 1
  I0108 00:31:35.765580 20 deployment.go:1205] Waiting for all required pods to come up
  I0108 00:31:35.778162 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/08/25 00:31:35.778
  I0108 00:31:39.819620 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0108 00:31:39.825940 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0108 00:31:39.842488 20 deployment.go:314] Updating deployment webserver-deployment
  I0108 00:31:39.842548 20 deployment.go:1224] Waiting for observed generation 2
  I0108 00:31:41.852198 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0108 00:31:41.860553 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0108 00:31:41.865067 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0108 00:31:41.893221 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0108 00:31:41.893297 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0108 00:31:41.896648 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0108 00:31:41.916939 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0108 00:31:41.917001 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0108 00:31:41.945396 20 deployment.go:314] Updating deployment webserver-deployment
  I0108 00:31:41.945459 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0108 00:31:41.982003 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0108 00:31:42.007461 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0108 00:31:42.032314 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06bac550-5a62-4754-9ba5-7348694cfba8",
      ResourceVersion: (string) (len=5) "33611",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 00:31:42.094807 20 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
      ResourceVersion: (string) (len=5) "33613",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "06bac550-5a62-4754-9ba5-7348694cfba8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 62 61 63 35  35 30 2d 35 61 36 32 2d  |\"06bac550-5a62-|
              00000120  34 37 35 34 2d 39 62 61  35 2d 37 33 34 38 36 39  |4754-9ba5-734869|
              00000130  34 63 66 62 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4cfba8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:31:42.117114 20 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0108 00:31:42.117591 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
      ResourceVersion: (string) (len=5) "33612",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "06bac550-5a62-4754-9ba5-7348694cfba8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 62 61 63 35  35 30 2d 35 61 36 32 2d  |\"06bac550-5a62-|
              00000120  34 37 35 34 2d 39 62 61  35 2d 37 33 34 38 36 39  |4754-9ba5-734869|
              00000130  34 63 66 62 61 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4cfba8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:31:42.211505 20 deployment.go:68] Pod "webserver-deployment-685b768f58-6s992" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6s992",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "277c9b39-6e94-490b-95c6-a08e33861ccc",
      ResourceVersion: (string) (len=5) "33481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.21/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "59d7b35d148747fd263fb912ef2dc8f8d16c1e62fc21e9d5f7a9adf112f4951e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 31  5c 22 7d 22 3a 7b 22 2e  |.42.0.21\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8n65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8n65",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bf5382ff938a5e1d7ac064360e9c526aa6c1c7ea85899e0c78f7cfd942c2c8a2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j8n65",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.214880 20 deployment.go:68] Pod "webserver-deployment-685b768f58-7qv8n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7qv8n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2951f3cb-24d6-44ae-82de-f4a36b4063bf",
      ResourceVersion: (string) (len=5) "33629",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdd7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdd7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.216972 20 deployment.go:68] Pod "webserver-deployment-685b768f58-99z49" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-99z49",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "443915b4-2148-4702-a828-4960bbfd6d7f",
      ResourceVersion: (string) (len=5) "33478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.20/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.20/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "62816f058ccb3a94347480ad5c7538b7de0d1d7f745fed0d979a5e1850ce340e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qn7vc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qn7vc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c205f994095d7a4fc36d99014d62301e211904240175c2b455f0276442ece144",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qn7vc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.227162 20 deployment.go:68] Pod "webserver-deployment-685b768f58-9km5n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9km5n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2418068b-b510-4308-bfc9-03334aef04f6",
      ResourceVersion: (string) (len=5) "33651",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vtfb2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vtfb2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.229011 20 deployment.go:68] Pod "webserver-deployment-685b768f58-bxvxp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bxvxp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baf3070a-ad3d-4902-815e-d04c2351c050",
      ResourceVersion: (string) (len=5) "33641",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-46rkr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-46rkr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.231195 20 deployment.go:68] Pod "webserver-deployment-685b768f58-ckn2d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ckn2d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eec7cfb2-c6a9-47dd-963f-dad66c49913a",
      ResourceVersion: (string) (len=5) "33647",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-llhld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-llhld",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.233501 20 deployment.go:68] Pod "webserver-deployment-685b768f58-dpmx8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dpmx8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9fb4338-af54-462f-8bbe-54a4655780bc",
      ResourceVersion: (string) (len=5) "33646",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5ljk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5ljk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.235928 20 deployment.go:68] Pod "webserver-deployment-685b768f58-j69kg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j69kg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "242a0e10-bb3e-4e13-85a4-2434ce248ed0",
      ResourceVersion: (string) (len=5) "33505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "94d811c4dbd84adb947d026c6e20094b8915b8e97e809862f0895aa465aff089",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 37  5c 22 7d 22 3a 7b 22 2e  |.42.2.27\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-768t2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-768t2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.249"
        }
      },
      PodIP: (string) (len=10) "10.42.2.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893097,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b7b365c30ee162a80c13ae1c718355364cd1f5e64afcf03d67754002d5b8e926",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-768t2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.239517 20 deployment.go:68] Pod "webserver-deployment-685b768f58-kvgnc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kvgnc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29929fec-fdb1-4847-8fa5-84772a53bc4e",
      ResourceVersion: (string) (len=5) "33502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b5af91563b0c0c5a8dbdce851998aac3c0dfc36ca160cb1d70219132482e370f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 38  5c 22 7d 22 3a 7b 22 2e  |.42.2.28\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h5vxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h5vxq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.249"
        }
      },
      PodIP: (string) (len=10) "10.42.2.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893097,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a41be0ec97e96f60fb8de7b3fbff751e148d0cec37463fa7495634063da7a243",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h5vxq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.243044 20 deployment.go:68] Pod "webserver-deployment-685b768f58-lv78s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lv78s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11c36abf-3c1a-4764-b5fb-bfbac9af3cbf",
      ResourceVersion: (string) (len=5) "33633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893101,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmphk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmphk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gmphk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.246185 20 deployment.go:68] Pod "webserver-deployment-685b768f58-nh8xk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nh8xk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b0cbf7b-5403-4a06-a68c-425f11bde578",
      ResourceVersion: (string) (len=5) "33649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qg2dq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qg2dq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.248266 20 deployment.go:68] Pod "webserver-deployment-685b768f58-nsxbd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nsxbd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f175752-ecab-475e-bdf0-4be6ac59ffad",
      ResourceVersion: (string) (len=5) "33492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "48398b1c83c0ef3c2481466f32b5734f650e781a28c1ad6b9f0f0768cbc82746",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 32 36  5c 22 7d 22 3a 7b 22 2e  |.42.2.26\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l48fr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l48fr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.249"
        }
      },
      PodIP: (string) (len=10) "10.42.2.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893097,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://51aa88c72d47d1c20f2da9b11e2b88f7af2b0f10dbec196fce0c13bd61a97215",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l48fr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.251710 20 deployment.go:68] Pod "webserver-deployment-685b768f58-ntz9h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ntz9h",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e5071a4-7acf-41c4-8480-f9d7d0b5270f",
      ResourceVersion: (string) (len=5) "33638",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4srj8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4srj8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.254123 20 deployment.go:68] Pod "webserver-deployment-685b768f58-pvkd7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pvkd7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92fee22e-0230-48c5-8415-0b75d85fdcb4",
      ResourceVersion: (string) (len=5) "33473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b5098924b447c3023b36d6bc43b302a0035442e8f55e03863f651e95e2ecb272",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.11/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.11/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.11\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bblmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bblmp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-25-234.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.234"
        }
      },
      PodIP: (string) (len=10) "10.42.1.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ac59435e5ca45dda003f9788467329af5695747f820bfc52742fd7862838c92",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bblmp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.277766 20 deployment.go:68] Pod "webserver-deployment-685b768f58-pznzs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pznzs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df7c01fd-5661-49e2-8cf9-33cec1e10f83",
      ResourceVersion: (string) (len=5) "33457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.121/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c6bb57a06402fecec02a952727606a6d343fd0e74b5217545248c962ebf2990f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 32  31 5c 22 7d 22 3a 7b 22  |.42.4.121\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pctzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pctzg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=11) "10.42.4.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c3c1fc14dfd56f52acf2fd01c5f37ff87011d2480bb1cf85b794cb035a1a7eb1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pctzg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.293762 20 deployment.go:68] Pod "webserver-deployment-685b768f58-shfhz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-shfhz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40ea11ff-e049-4734-a083-b15b23133833",
      ResourceVersion: (string) (len=5) "33631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sbfj8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sbfj8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.295827 20 deployment.go:68] Pod "webserver-deployment-685b768f58-skb6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-skb6x",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "803063f1-0045-4de8-ae62-3cf3336c7d67",
      ResourceVersion: (string) (len=5) "33636",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8lmz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8lmz9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-25-234.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.305304 20 deployment.go:68] Pod "webserver-deployment-685b768f58-v84gr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-v84gr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1924a8bf-e4da-49cc-b06f-51e0e53b780d",
      ResourceVersion: (string) (len=5) "33639",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nlgwz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nlgwz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.307763 20 deployment.go:68] Pod "webserver-deployment-685b768f58-xgf4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xgf4x",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b17d8bfc-0b21-485f-ac5c-bedd1f8fb975",
      ResourceVersion: (string) (len=5) "33645",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8qpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8qpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.310341 20 deployment.go:68] Pod "webserver-deployment-685b768f58-xzt2b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xzt2b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c2de276-0a44-4e99-bd17-ea2f1b4d3487",
      ResourceVersion: (string) (len=5) "33470",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "31a831b9715a994df80077aaa62051246e405aa9b9c86ca9cdb8f3a3ff4df52b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.10/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.10/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "1960ee63-e01c-4e27-b10c-c892a935d5c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  36 30 65 65 36 33 2d 65  |d\":\"1960ee63-e|
              00000090  30 31 63 2d 34 65 32 37  2d 62 31 30 63 2d 63 38  |01c-4e27-b10c-c8|
              000000a0  39 32 61 39 33 35 64 35  63 39 5c 22 7d 22 3a 7b  |92a935d5c9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.10\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bqfsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bqfsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-25-234.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.234"
        }
      },
      PodIP: (string) (len=10) "10.42.1.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871893096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b5dd6d3532f3db627fff888186ca399c16337c883ec09816a281789b1494a20e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bqfsl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.315238 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5zqpk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5zqpk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2d6121f-35b9-4dcd-9685-381d646d6f01",
      ResourceVersion: (string) (len=5) "33648",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gp4tn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gp4tn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.317065 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-77zkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-77zkf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a61dfc18-b695-4cee-b950-cbf322581dbd",
      ResourceVersion: (string) (len=5) "33643",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wv8p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wv8p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.319318 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bgw2g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bgw2g",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d55ab13-fe9e-4128-8f5e-ab062927c472",
      ResourceVersion: (string) (len=5) "33580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.124/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1c686efb47e4d368917ee2aa954d39dee49c02db06e254f1d68e3951ca972885",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.124/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kb9xx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kb9xx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kb9xx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.322865 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jk4lp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jk4lp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "530c29d8-d413-43f0-af1c-04356c2198b2",
      ResourceVersion: (string) (len=5) "33630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q78xv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q78xv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.324785 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lgp4g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lgp4g",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbe2ab67-b853-45a2-a560-37ad18704564",
      ResourceVersion: (string) (len=5) "33632",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbgc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbgc7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.327198 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nk5tf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nk5tf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3e089ae-cf55-4fe0-b011-bac9d4d367f5",
      ResourceVersion: (string) (len=5) "33577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1a385037f7485e8c530176257a6febc6ba7a44eebde2d80ce7fe594d3ce84bd4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.123/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.123/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cdbhv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cdbhv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cdbhv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.330569 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-npzfs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-npzfs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19a87196-5376-4eef-8810-f2c32778caf7",
      ResourceVersion: (string) (len=5) "33605",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "17d5577e352a286c6de57fa450e1d55c175ad812e42dd080cd232a4ed872732b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 32 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.22\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbrfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbrfq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hbrfq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.333462 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vj2dc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vj2dc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d60423f-0202-442d-9e84-25580500e761",
      ResourceVersion: (string) (len=5) "33593",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.29/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dbb9c5cfb239d7c71880466f854b5d13410e0d80839bd429b9bb431f9ef186af",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 32 39 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.29\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t86q4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t86q4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.20.249",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.20.249"
        }
      },
      PodIP: (string) (len=10) "10.42.2.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t86q4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.337103 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vrhpb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vrhpb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53159575-6836-4772-b154-8102fed000b4",
      ResourceVersion: (string) (len=5) "33625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7fdf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7fdf5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-20-249.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.339108 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xb5bb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xb5bb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "957c29d9-4bdf-4893-94f2-c808d9ad2c5b",
      ResourceVersion: (string) (len=5) "33650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wl6pn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wl6pn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.341492 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xgwc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xgwc6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd9fed69-d1d8-402e-8d9e-0f1092eac278",
      ResourceVersion: (string) (len=5) "33644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t42vs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t42vs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.345399 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xrsnt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xrsnt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-3517",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbad359f-5260-4d5d-b757-b5a0400466e8",
      ResourceVersion: (string) (len=5) "33598",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "12cfb19982bbdf750402c08a78af45d5b66a7ae2272b798e00269106cd62151f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.12/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "83a4438a-743b-4896-b79f-2421515ae619",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  61 34 34 33 38 61 2d 37  |d\":\"83a4438a-7|
              00000090  34 33 62 2d 34 38 39 36  2d 62 37 39 66 2d 32 34  |43b-4896-b79f-24|
              000000a0  32 31 35 31 35 61 65 36  31 39 5c 22 7d 22 3a 7b  |21515ae619\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.12\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vts9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vts9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-25-234.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871893099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.25.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.25.234"
        }
      },
      PodIP: (string) (len=10) "10.42.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871893099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vts9r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:31:42.348724 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3517" for this suite. @ 01/08/25 00:31:42.409
• [8.808 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 01/08/25 00:31:42.463
  I0108 00:31:42.463930 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption @ 01/08/25 00:31:42.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:31:42.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:31:42.587
  I0108 00:31:42.671101 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0108 00:32:42.685617 20 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/08/25 00:32:42.691
  I0108 00:32:42.691463 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/08/25 00:32:42.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:32:42.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:32:42.736
  STEP: Finding an available node @ 01/08/25 00:32:42.741
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/08/25 00:32:42.741
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/08/25 00:32:44.783
  I0108 00:32:44.818071 20 preemption.go:709] found a healthy node: ip-172-31-16-191.us-east-2.compute.internal
  STEP: Adding a custom resource @ 01/08/25 00:32:44.822
  I0108 00:32:50.995578 20 preemption.go:828] pods created so far: [1 1 1]
  I0108 00:32:50.995631 20 preemption.go:829] length of pods created so far: 3
  I0108 00:32:53.017597 20 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 01/08/25 00:33:00.019
  STEP: Removing a custom resource @ 01/08/25 00:33:00.166
  STEP: Removing a custom resource @ 01/08/25 00:33:00.179
  STEP: Removing a custom resource @ 01/08/25 00:33:00.193
  STEP: Removing a custom resource @ 01/08/25 00:33:00.209
  I0108 00:33:00.227260 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1368" for this suite. @ 01/08/25 00:33:00.231
  I0108 00:33:00.242809 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8525" for this suite. @ 01/08/25 00:33:00.338
• [77.889 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/08/25 00:33:00.353
  I0108 00:33:00.353737 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 00:33:00.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:00.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:00.407
  STEP: Creating simple DaemonSet "daemon-set" @ 01/08/25 00:33:00.459
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 00:33:00.476
  I0108 00:33:00.574369 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:33:00.574752 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:33:01.487511 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:33:01.487580 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:33:02.507203 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:33:02.507264 20 fixtures.go:131] Node ip-172-31-20-249.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:33:03.494331 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 00:33:03.494386 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/08/25 00:33:03.505
  STEP: DeleteCollection of the DaemonSets @ 01/08/25 00:33:03.511
  STEP: Verify that ReplicaSets have been deleted @ 01/08/25 00:33:03.529
  I0108 00:33:03.552623 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34457"},"items":null}

  I0108 00:33:03.589698 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34458"},"items":[{"metadata":{"name":"daemon-set-24stz","generateName":"daemon-set-","namespace":"daemonsets-4826","uid":"c51e01bd-4897-4779-9187-ad93b74a69f3","resourceVersion":"34458","creationTimestamp":"2025-01-08T00:33:00Z","deletionTimestamp":"2025-01-08T00:33:33Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"e2b01f28c216ab675bd4bde121c7b7de6643a56659e535d567a228de5d79725c","cni.projectcalico.org/podIP":"10.42.2.32/32","cni.projectcalico.org/podIPs":"10.42.2.32/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a41fb40d-4cd8-4cf2-9817-52ea881c1f58","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a41fb40d-4cd8-4cf2-9817-52ea881c1f58\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.32\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dtl8n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dtl8n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-249.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-249.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"}],"hostIP":"172.31.20.249","hostIPs":[{"ip":"172.31.20.249"}],"podIP":"10.42.2.32","podIPs":[{"ip":"10.42.2.32"}],"startTime":"2025-01-08T00:33:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-08T00:33:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://07f174248aa19ec9c606685bd3754469576c9a6ad0e90517430ab6b9e5ec73de","started":true,"volumeMounts":[{"name":"kube-api-access-dtl8n","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9wwk5","generateName":"daemon-set-","namespace":"daemonsets-4826","uid":"8e68556b-0245-42fc-a794-b840a125475e","resourceVersion":"34447","creationTimestamp":"2025-01-08T00:33:00Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f8343136b740a35424a24e154b2e783646266114026f892df3582be6d1538719","cni.projectcalico.org/podIP":"10.42.4.134/32","cni.projectcalico.org/podIPs":"10.42.4.134/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a41fb40d-4cd8-4cf2-9817-52ea881c1f58","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a41fb40d-4cd8-4cf2-9817-52ea881c1f58\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.4.134\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tksqq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tksqq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-16-191.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-16-191.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"}],"hostIP":"172.31.16.191","hostIPs":[{"ip":"172.31.16.191"}],"podIP":"10.42.4.134","podIPs":[{"ip":"10.42.4.134"}],"startTime":"2025-01-08T00:33:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-08T00:33:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7633d1923d38ccaf2906780c1ad93a0d332c5b4adbc060929a44feae7fa70b32","started":true,"volumeMounts":[{"name":"kube-api-access-tksqq","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lmrkj","generateName":"daemon-set-","namespace":"daemonsets-4826","uid":"c5a0f260-8d79-4f71-bb57-0b7c2e19689e","resourceVersion":"34444","creationTimestamp":"2025-01-08T00:33:00Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"daaaa54a9a4dedde60397e5732526cb91982ce6c315b2655d77040c2b56452fd","cni.projectcalico.org/podIP":"10.42.0.25/32","cni.projectcalico.org/podIPs":"10.42.0.25/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a41fb40d-4cd8-4cf2-9817-52ea881c1f58","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a41fb40d-4cd8-4cf2-9817-52ea881c1f58\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.25\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vpwwr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vpwwr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-100.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-100.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"}],"hostIP":"172.31.20.100","hostIPs":[{"ip":"172.31.20.100"}],"podIP":"10.42.0.25","podIPs":[{"ip":"10.42.0.25"}],"startTime":"2025-01-08T00:33:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-08T00:33:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3856a1a359bd4e5655cf50292975a488c3e41c991af40e895d2af19be76d19a0","started":true,"volumeMounts":[{"name":"kube-api-access-vpwwr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-phx4f","generateName":"daemon-set-","namespace":"daemonsets-4826","uid":"1657d79a-076e-4048-acfc-78ad5deeb225","resourceVersion":"34441","creationTimestamp":"2025-01-08T00:33:00Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"0b5aebb582b255eef75be02c7cf0bc056624f5c92c8e97de9ef420f75850b760","cni.projectcalico.org/podIP":"10.42.1.16/32","cni.projectcalico.org/podIPs":"10.42.1.16/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a41fb40d-4cd8-4cf2-9817-52ea881c1f58","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a41fb40d-4cd8-4cf2-9817-52ea881c1f58\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-08T00:33:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-whv2z","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-whv2z","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-25-234.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-25-234.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:01Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-08T00:33:00Z"}],"hostIP":"172.31.25.234","hostIPs":[{"ip":"172.31.25.234"}],"podIP":"10.42.1.16","podIPs":[{"ip":"10.42.1.16"}],"startTime":"2025-01-08T00:33:00Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-08T00:33:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a264ae1e63e96af1827a7faf9f29d28e086d3f2b86d5c929c16bd1b890408444","started":true,"volumeMounts":[{"name":"kube-api-access-whv2z","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0108 00:33:03.677678 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4826" for this suite. @ 01/08/25 00:33:03.727
• [3.397 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/08/25 00:33:03.751
  I0108 00:33:03.751472 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename podtemplate @ 01/08/25 00:33:03.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:03.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:03.847
  STEP: Create a pod template @ 01/08/25 00:33:03.851
  STEP: Replace a pod template @ 01/08/25 00:33:03.863
  I0108 00:33:03.878209 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0108 00:33:03.878635 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-514" for this suite. @ 01/08/25 00:33:03.883
• [0.147 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/08/25 00:33:03.899
  I0108 00:33:03.899539 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename limitrange @ 01/08/25 00:33:03.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:03.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:03.943
  STEP: Creating LimitRange "e2e-limitrange-k7x6r" in namespace "limitrange-2619" @ 01/08/25 00:33:03.95
  STEP: Creating another limitRange in another namespace @ 01/08/25 00:33:03.961
  I0108 00:33:04.037068 20 limit_range.go:299] Namespace "e2e-limitrange-k7x6r-1790" created
  I0108 00:33:04.038034 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-k7x6r" in namespace "e2e-limitrange-k7x6r-1790"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-k7x6r" @ 01/08/25 00:33:04.063
  I0108 00:33:04.069226 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-k7x6r" in "limitrange-2619" namespace @ 01/08/25 00:33:04.069
  I0108 00:33:04.085938 20 limit_range.go:335] LimitRange "e2e-limitrange-k7x6r" has been patched
  STEP: Delete LimitRange "e2e-limitrange-k7x6r" by Collection with labelSelector: "e2e-limitrange-k7x6r=patched" @ 01/08/25 00:33:04.086
  STEP: Confirm that the limitRange "e2e-limitrange-k7x6r" has been deleted @ 01/08/25 00:33:04.098
  I0108 00:33:04.098948 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0108 00:33:04.102682 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-k7x6r=patched"
  I0108 00:33:04.102749 20 limit_range.go:344] LimitRange "e2e-limitrange-k7x6r" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-k7x6r" @ 01/08/25 00:33:04.102
  I0108 00:33:04.106115 20 limit_range.go:350] Found 1 limitRange
  I0108 00:33:04.106430 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2619" for this suite. @ 01/08/25 00:33:04.111
  STEP: Destroying namespace "e2e-limitrange-k7x6r-1790" for this suite. @ 01/08/25 00:33:04.131
• [0.250 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/08/25 00:33:04.15
  I0108 00:33:04.150604 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:33:04.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:04.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:04.205
  STEP: Counting existing ResourceQuota @ 01/08/25 00:33:04.211
  STEP: Creating a ResourceQuota @ 01/08/25 00:33:09.221
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:33:09.235
  I0108 00:33:11.240391 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1741" for this suite. @ 01/08/25 00:33:11.244
• [7.107 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/08/25 00:33:11.258
  I0108 00:33:11.258974 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:33:11.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:11.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:11.3
  STEP: creating pod @ 01/08/25 00:33:11.305
  I0108 00:33:15.350780 20 pods.go:83] Pod pod-hostip-276aad21-1c77-4a46-be07-4d7a86d8f235 has hostIP: 172.31.16.191
  I0108 00:33:15.351085 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6598" for this suite. @ 01/08/25 00:33:15.376
• [4.149 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/08/25 00:33:15.408
  I0108 00:33:15.408956 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename events @ 01/08/25 00:33:15.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:15.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:15.485
  STEP: creating a test event @ 01/08/25 00:33:15.494
  STEP: listing all events in all namespaces @ 01/08/25 00:33:15.508
  STEP: patching the test event @ 01/08/25 00:33:15.524
  STEP: fetching the test event @ 01/08/25 00:33:15.551
  STEP: updating the test event @ 01/08/25 00:33:15.554
  STEP: getting the test event @ 01/08/25 00:33:15.586
  STEP: deleting the test event @ 01/08/25 00:33:15.589
  STEP: listing all events in all namespaces @ 01/08/25 00:33:15.601
  I0108 00:33:15.613955 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6795" for this suite. @ 01/08/25 00:33:15.62
• [0.225 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/08/25 00:33:15.635
  I0108 00:33:15.635569 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 00:33:15.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:33:15.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:33:15.685
  STEP: Creating pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111 @ 01/08/25 00:33:15.689
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 00:33:17.714
  I0108 00:33:17.718441 20 container_probe.go:1749] Initial restart count of pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 is 0
  I0108 00:33:17.721872 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:19.726545 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:21.737722 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:23.743451 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:25.749213 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:27.754172 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:29.761035 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:31.766519 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:33.772003 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:35.779292 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:37.786251 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:39.790290 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:41.796315 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:43.805862 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:45.812137 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:47.819567 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:49.825868 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:51.830457 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:53.836823 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:55.841157 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:57.845574 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:33:59.851628 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:01.856058 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:03.862962 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:05.870062 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:07.884978 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:09.889121 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:11.892964 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:13.898157 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:15.902151 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:17.907802 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:19.913503 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:21.919815 20 container_probe.go:1759] Get pod test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 in namespace container-probe-2111
  I0108 00:34:21.919868 20 container_probe.go:1763] Restart count of pod container-probe-2111/test-grpc-88678336-18b1-4bda-bc63-d0806879bbe4 is now 1 (1m4.201363928s elapsed)
  STEP: deleting the pod @ 01/08/25 00:34:21.92
  I0108 00:34:21.961778 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2111" for this suite. @ 01/08/25 00:34:21.969
• [66.371 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/08/25 00:34:22.01
  I0108 00:34:22.010631 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:34:22.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:34:22.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:34:22.075
  STEP: Creating secret with name secret-test-80ce0867-fe90-44c3-b90d-cb396d80a55a @ 01/08/25 00:34:22.078
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:34:22.088
  STEP: Saw pod success @ 01/08/25 00:34:26.121
  I0108 00:34:26.125480 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-2710be86-48df-4cc0-8b18-87163ad60f00 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:34:26.147
  I0108 00:34:26.185252 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1812" for this suite. @ 01/08/25 00:34:26.19
• [4.192 seconds]
------------------------------
S
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/08/25 00:34:26.201
  I0108 00:34:26.201521 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename csi-storageclass @ 01/08/25 00:34:26.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:34:26.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:34:26.259
  STEP: Creating a StorageClass @ 01/08/25 00:34:26.262
  STEP: Get StorageClass "e2e-hgzrw" @ 01/08/25 00:34:26.272
  STEP: Patching the StorageClass "e2e-hgzrw" @ 01/08/25 00:34:26.275
  STEP: Delete StorageClass "e2e-hgzrw" @ 01/08/25 00:34:26.287
  STEP: Confirm deletion of StorageClass "e2e-hgzrw" @ 01/08/25 00:34:26.302
  STEP: Create a replacement StorageClass @ 01/08/25 00:34:26.306
  STEP: Updating StorageClass "e2e-v2-sjtwc" @ 01/08/25 00:34:26.327
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-sjtwc=updated" @ 01/08/25 00:34:26.343
  STEP: Deleting StorageClass "e2e-v2-sjtwc" via DeleteCollection @ 01/08/25 00:34:26.347
  STEP: Confirm deletion of StorageClass "e2e-v2-sjtwc" @ 01/08/25 00:34:26.36
  I0108 00:34:26.363914 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3811" for this suite. @ 01/08/25 00:34:26.368
• [0.177 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/08/25 00:34:26.381
  I0108 00:34:26.381538 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-watch @ 01/08/25 00:34:26.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:34:26.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:34:26.424
  I0108 00:34:26.430826 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Creating first CR  @ 01/08/25 00:34:28.997
  I0108 00:34:29.009520 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:29Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:28Z]] name:name1 resourceVersion:35045 uid:eaa8c685-a2d8-4617-b7e3-f87dcadbe66c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/08/25 00:34:39.011
  I0108 00:34:39.022977 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:39Z]] name:name2 resourceVersion:35097 uid:26a3a92f-894e-4d45-9ed4-36df7f6481fe] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/08/25 00:34:49.023
  I0108 00:34:49.035655 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:49Z]] name:name1 resourceVersion:35136 uid:eaa8c685-a2d8-4617-b7e3-f87dcadbe66c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/08/25 00:34:59.037
  I0108 00:34:59.051215 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:59Z]] name:name2 resourceVersion:35176 uid:26a3a92f-894e-4d45-9ed4-36df7f6481fe] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/08/25 00:35:09.053
  I0108 00:35:09.071329 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:49Z]] name:name1 resourceVersion:35216 uid:eaa8c685-a2d8-4617-b7e3-f87dcadbe66c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/08/25 00:35:19.072
  I0108 00:35:19.085822 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-08T00:34:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-08T00:34:59Z]] name:name2 resourceVersion:35255 uid:26a3a92f-894e-4d45-9ed4-36df7f6481fe] num:map[num1:9223372036854775807 num2:1000000]]}
  I0108 00:35:29.610391 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7938" for this suite. @ 01/08/25 00:35:29.616
• [63.252 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/08/25 00:35:29.633
  I0108 00:35:29.633833 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:35:29.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:29.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:29.681
  STEP: Creating the pod @ 01/08/25 00:35:29.684
  I0108 00:35:32.246385 20 pod_client.go:173] Successfully updated pod "annotationupdate590b4140-0943-404e-aace-18a1d1b0221e"
  I0108 00:35:36.283311 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-213" for this suite. @ 01/08/25 00:35:36.288
• [6.672 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/08/25 00:35:36.308
  I0108 00:35:36.308099 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pv @ 01/08/25 00:35:36.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:36.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:36.358
  STEP: Creating initial PV and PVC @ 01/08/25 00:35:36.362
  I0108 00:35:36.362543 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-840" @ 01/08/25 00:35:36.389
  STEP: Listing PVCs in namespace "pv-840" @ 01/08/25 00:35:36.407
  STEP: Patching the PV "pv-840-s4x5x" @ 01/08/25 00:35:36.411
  STEP: Patching the PVC "pvc-99k72" @ 01/08/25 00:35:36.429
  STEP: Getting PV "pv-840-s4x5x" @ 01/08/25 00:35:36.443
  STEP: Getting PVC "pvc-99k72" @ 01/08/25 00:35:36.448
  STEP: Deleting PVC "pvc-99k72" @ 01/08/25 00:35:36.464
  STEP: Confirm deletion of PVC "pvc-99k72" @ 01/08/25 00:35:36.484
  STEP: Deleting PV "pv-840-s4x5x" @ 01/08/25 00:35:38.496
  STEP: Confirm deletion of PV "pv-840-s4x5x" @ 01/08/25 00:35:38.527
  STEP: Recreating another PV & PVC @ 01/08/25 00:35:40.543
  I0108 00:35:40.543257 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-840-ps8n2" @ 01/08/25 00:35:40.574
  STEP: Updating the PVC "pvc-929ct" @ 01/08/25 00:35:40.593
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-929ct=updated" @ 01/08/25 00:35:40.611
  STEP: Deleting PVC "pvc-929ct" via DeleteCollection @ 01/08/25 00:35:40.621
  STEP: Confirm deletion of PVC "pvc-929ct" @ 01/08/25 00:35:40.657
  STEP: Deleting PV "pv-840-ps8n2" via DeleteCollection @ 01/08/25 00:35:42.668
  STEP: Confirm deletion of PV "pv-840-ps8n2" @ 01/08/25 00:35:42.681
  I0108 00:35:44.691510 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0108 00:35:44.691563 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-929ct"
  I0108 00:35:44.695529 20 pv.go:193] Deleting PersistentVolume "pv-840-ps8n2"
  I0108 00:35:44.701502 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-840" for this suite. @ 01/08/25 00:35:44.717
• [8.421 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/08/25 00:35:44.729
  I0108 00:35:44.729429 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:35:44.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:44.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:44.769
  STEP: creating service nodeport-test with type=NodePort in namespace services-4897 @ 01/08/25 00:35:44.772
  STEP: creating replication controller nodeport-test in namespace services-4897 @ 01/08/25 00:35:44.829
  I0108 00:35:44.857052      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-4897, replica count: 2
  I0108 00:35:47.908458      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:35:47.908518 20 resource.go:361] Creating new exec pod
  I0108 00:35:52.952950 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0108 00:35:53.156875 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.15.104) 80 port [tcp/http] succeeded!\n"
  I0108 00:35:53.156933 20 builder.go:147] stdout: ""
  I0108 00:35:53.954017 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0108 00:35:54.160836 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.15.104) 80 port [tcp/http] succeeded!\n"
  I0108 00:35:54.160905 20 builder.go:147] stdout: ""
  I0108 00:35:54.954029 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0108 00:35:55.152717 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.15.104) 80 port [tcp/http] succeeded!\n"
  I0108 00:35:55.152781 20 builder.go:147] stdout: "nodeport-test-9bpdd"
  I0108 00:35:55.152873 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.15.104 80'
  I0108 00:35:55.396089 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.15.104 80\nConnection to 10.43.15.104 80 port [tcp/http] succeeded!\n"
  I0108 00:35:55.396155 20 builder.go:147] stdout: "nodeport-test-9bpdd"
  I0108 00:35:55.396384 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.191 30369'
  I0108 00:35:55.629254 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.191 30369\nConnection to 172.31.16.191 30369 port [tcp/*] succeeded!\n"
  I0108 00:35:55.629323 20 builder.go:147] stdout: ""
  I0108 00:35:56.396490 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.191 30369'
  I0108 00:35:56.611492 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.191 30369\nConnection to 172.31.16.191 30369 port [tcp/*] succeeded!\n"
  I0108 00:35:56.611550 20 builder.go:147] stdout: "nodeport-test-9bpdd"
  I0108 00:35:56.611639 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-4897 exec execpodqqdzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.100 30369'
  I0108 00:35:56.819436 20 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.20.100 30369\n+ echo hostName\nConnection to 172.31.20.100 30369 port [tcp/*] succeeded!\n"
  I0108 00:35:56.819493 20 builder.go:147] stdout: "nodeport-test-9bpdd"
  I0108 00:35:56.819638 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4897" for this suite. @ 01/08/25 00:35:56.824
• [12.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/08/25 00:35:56.838
  I0108 00:35:56.838174 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename ingressclass @ 01/08/25 00:35:56.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:56.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:56.884
  STEP: getting /apis @ 01/08/25 00:35:56.888
  STEP: getting /apis/networking.k8s.io @ 01/08/25 00:35:56.895
  STEP: getting /apis/networking.k8s.iov1 @ 01/08/25 00:35:56.897
  STEP: creating @ 01/08/25 00:35:56.899
  STEP: getting @ 01/08/25 00:35:56.93
  STEP: listing @ 01/08/25 00:35:56.934
  STEP: watching @ 01/08/25 00:35:56.938
  I0108 00:35:56.938798 20 ingressclass.go:348] starting watch
  STEP: patching @ 01/08/25 00:35:56.941
  STEP: updating @ 01/08/25 00:35:56.97
  I0108 00:35:56.982205 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0108 00:35:56.982456 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/08/25 00:35:56.982
  STEP: deleting a collection @ 01/08/25 00:35:57.014
  I0108 00:35:57.058555 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7782" for this suite. @ 01/08/25 00:35:57.065
• [0.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/08/25 00:35:57.096
  I0108 00:35:57.096145 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename lease-test @ 01/08/25 00:35:57.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:57.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:57.144
  I0108 00:35:57.248056 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4257" for this suite. @ 01/08/25 00:35:57.254
• [0.176 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/08/25 00:35:57.272
  I0108 00:35:57.272823 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:35:57.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:35:57.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:35:57.314
  STEP: Creating a pod to test downward api env vars @ 01/08/25 00:35:57.319
  STEP: Saw pod success @ 01/08/25 00:36:01.364
  I0108 00:36:01.368984 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-2438f7e9-37ec-48e6-9504-b20d1fff5b5d container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 00:36:01.377
  I0108 00:36:01.408045 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6874" for this suite. @ 01/08/25 00:36:01.412
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 01/08/25 00:36:01.429
  I0108 00:36:01.429275 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:36:01.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:01.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:01.464
  STEP: creating the pod @ 01/08/25 00:36:01.469
  I0108 00:36:01.469726 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 create -f -'
  I0108 00:36:01.678486 20 builder.go:146] stderr: ""
  I0108 00:36:01.678541 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/08/25 00:36:05.698
  I0108 00:36:05.698211 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 label pods pause testing-label=testing-label-value'
  I0108 00:36:05.813915 20 builder.go:146] stderr: ""
  I0108 00:36:05.813976 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/08/25 00:36:05.814
  I0108 00:36:05.814086 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 get pod pause -L testing-label'
  I0108 00:36:05.898947 20 builder.go:146] stderr: ""
  I0108 00:36:05.899129 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/08/25 00:36:05.899
  I0108 00:36:05.899239 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 label pods pause testing-label-'
  I0108 00:36:06.019090 20 builder.go:146] stderr: ""
  I0108 00:36:06.019164 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/08/25 00:36:06.019
  I0108 00:36:06.019262 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 get pod pause -L testing-label'
  I0108 00:36:06.114892 20 builder.go:146] stderr: ""
  I0108 00:36:06.114952 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 01/08/25 00:36:06.115
  I0108 00:36:06.115359 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 delete --grace-period=0 --force -f -'
  I0108 00:36:06.244337 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:36:06.244396 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0108 00:36:06.244468 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 get rc,svc -l name=pause --no-headers'
  I0108 00:36:06.375396 20 builder.go:146] stderr: "No resources found in kubectl-5101 namespace.\n"
  I0108 00:36:06.375451 20 builder.go:147] stdout: ""
  I0108 00:36:06.375602 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5101 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0108 00:36:06.476922 20 builder.go:146] stderr: ""
  I0108 00:36:06.476975 20 builder.go:147] stdout: ""
  I0108 00:36:06.477271 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5101" for this suite. @ 01/08/25 00:36:06.483
• [5.072 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/08/25 00:36:06.502
  I0108 00:36:06.502255 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:36:06.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:06.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:06.549
  STEP: Creating secret with name secret-test-788ae5aa-5cd7-43bf-9ffc-81c46f32a48c @ 01/08/25 00:36:06.552
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:36:06.563
  STEP: Saw pod success @ 01/08/25 00:36:10.613
  I0108 00:36:10.618484 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-60c7fa45-a683-452b-b4b9-71e1a0ef5f7b container secret-env-test: <nil>
  STEP: delete the pod @ 01/08/25 00:36:10.635
  I0108 00:36:10.678191 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1384" for this suite. @ 01/08/25 00:36:10.682
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/08/25 00:36:10.698
  I0108 00:36:10.698566 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-pred @ 01/08/25 00:36:10.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:10.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:10.737
  I0108 00:36:10.740933 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0108 00:36:10.885635 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 00:36:10.899487 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-191.us-east-2.compute.internal before test
  I0108 00:36:10.904737 20 predicates.go:957] kube-proxy-ip-172-31-16-191.us-east-2.compute.internal from kube-system started at 2025-01-07 22:55:54 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.904809 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:36:10.904828 20 predicates.go:957] rke2-canal-mvsmq from kube-system started at 2025-01-07 22:55:55 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.904841 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:36:10.904854 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:36:10.904869 20 predicates.go:957] rke2-ingress-nginx-controller-cz25t from kube-system started at 2025-01-07 22:56:15 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.904880 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:36:10.904897 20 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-08 00:00:32 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.904909 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0108 00:36:10.904923 20 predicates.go:957] sonobuoy-e2e-job-716815d5e1d345de from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.904935 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0108 00:36:10.904946 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:36:10.904958 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.904970 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:36:10.904985 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:36:10.904997 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-100.us-east-2.compute.internal before test
  I0108 00:36:10.912776 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:00 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.912917 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:36:10.912938 20 predicates.go:957] etcd-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.912950 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:36:10.912963 20 predicates.go:957] helm-install-rke2-canal-qzdhf from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913008 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913026 20 predicates.go:957] helm-install-rke2-coredns-cglhz from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913038 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913051 20 predicates.go:957] helm-install-rke2-ingress-nginx-bk9t5 from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913106 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913128 20 predicates.go:957] helm-install-rke2-metrics-server-6gfgc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913141 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913156 20 predicates.go:957] helm-install-rke2-snapshot-controller-2gqss from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913223 20 predicates.go:959] 	Container helm ready: false, restart count 1
  I0108 00:36:10.913240 20 predicates.go:957] helm-install-rke2-snapshot-controller-crd-r6cbj from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913252 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913268 20 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-mfczq from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913317 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:36:10.913336 20 predicates.go:957] kube-apiserver-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:52 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913348 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:36:10.913361 20 predicates.go:957] kube-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:58 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913412 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:36:10.913431 20 predicates.go:957] kube-proxy-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913442 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:36:10.913455 20 predicates.go:957] kube-scheduler-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:03 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913500 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:36:10.913521 20 predicates.go:957] rke2-canal-ppzvh from kube-system started at 2025-01-07 22:49:21 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.913533 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:36:10.913545 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:36:10.913557 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-49nnc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913606 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 00:36:10.913624 20 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-5868d76f68-fg8gc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913636 20 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0108 00:36:10.913650 20 predicates.go:957] rke2-ingress-nginx-controller-mvz85 from kube-system started at 2025-01-07 22:50:47 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913662 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:36:10.913712 20 predicates.go:957] rke2-metrics-server-55f5b7fcd8-lkl7k from kube-system started at 2025-01-07 22:50:17 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913726 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0108 00:36:10.913741 20 predicates.go:957] rke2-snapshot-controller-755fc86fc-gq4xt from kube-system started at 2025-01-07 22:50:24 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913755 20 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0108 00:36:10.913806 20 predicates.go:957] rke2-snapshot-validation-webhook-75bc6f574f-8qnm4 from kube-system started at 2025-01-07 22:50:22 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.913819 20 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0108 00:36:10.913832 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xf89t from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.913845 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:36:10.913894 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:36:10.913909 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-249.us-east-2.compute.internal before test
  I0108 00:36:10.921997 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922046 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:36:10.922064 20 predicates.go:957] etcd-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922077 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:36:10.922128 20 predicates.go:957] kube-apiserver-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:14 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922143 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:36:10.922157 20 predicates.go:957] kube-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922169 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:36:10.922182 20 predicates.go:957] kube-proxy-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922229 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:36:10.922245 20 predicates.go:957] kube-scheduler-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:24 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922257 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:36:10.922271 20 predicates.go:957] rke2-canal-6766w from kube-system started at 2025-01-07 22:53:38 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.922316 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:36:10.922330 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:36:10.922345 20 predicates.go:957] rke2-ingress-nginx-controller-vp2n2 from kube-system started at 2025-01-07 22:54:34 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.922358 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:36:10.922372 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-4rxjf from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.922419 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:36:10.922431 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:36:10.922443 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-25-234.us-east-2.compute.internal before test
  I0108 00:36:10.927811 20 predicates.go:957] cloud-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.927856 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:36:10.927874 20 predicates.go:957] etcd-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:58 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.927886 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:36:10.927929 20 predicates.go:957] kube-apiserver-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:14 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.927945 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:36:10.927959 20 predicates.go:957] kube-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.928116 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:36:10.928132 20 predicates.go:957] kube-proxy-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:59 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.928143 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:36:10.928193 20 predicates.go:957] kube-scheduler-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.928211 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:36:10.928227 20 predicates.go:957] rke2-canal-lwv6s from kube-system started at 2025-01-07 22:52:29 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.928238 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:36:10.928249 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:36:10.928299 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-rfstj from kube-system started at 2025-01-07 22:52:42 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.928315 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 00:36:10.928330 20 predicates.go:957] rke2-ingress-nginx-controller-qnq5t from kube-system started at 2025-01-07 22:52:43 +0000 UTC (1 container statuses recorded)
  I0108 00:36:10.928342 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:36:10.928389 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xb2qj from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:36:10.928405 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:36:10.928418 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/08/25 00:36:10.928
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1818908831126190], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 01/08/25 00:36:10.987
  I0108 00:36:11.985461 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3184" for this suite. @ 01/08/25 00:36:11.995
• [1.312 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/08/25 00:36:12.01
  I0108 00:36:12.011019 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption @ 01/08/25 00:36:12.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:12.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:12.059
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/08/25 00:36:12.063
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:36:12.072
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/08/25 00:36:14.089
  STEP: Waiting for all pods to be running @ 01/08/25 00:36:14.089
  I0108 00:36:14.094937 20 disruption.go:680] pods: 0 < 3
  I0108 00:36:16.095110 20 disruption.go:691] running pods: 1 < 3
  STEP: locating a running pod @ 01/08/25 00:36:18.094
  STEP: Updating the pdb to allow a pod to be evicted @ 01/08/25 00:36:18.107
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:36:18.122
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/08/25 00:36:20.129
  STEP: Waiting for all pods to be running @ 01/08/25 00:36:20.129
  STEP: Waiting for the pdb to observed all healthy pods @ 01/08/25 00:36:20.138
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/08/25 00:36:20.222
  STEP: Waiting for the pdb to be processed @ 01/08/25 00:36:20.283
  STEP: Waiting for all pods to be running @ 01/08/25 00:36:22.287
  STEP: locating a running pod @ 01/08/25 00:36:22.291
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/08/25 00:36:22.305
  STEP: Waiting for the pdb to be deleted @ 01/08/25 00:36:22.316
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/08/25 00:36:22.32
  STEP: Waiting for all pods to be running @ 01/08/25 00:36:22.32
  I0108 00:36:22.428277 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5911" for this suite. @ 01/08/25 00:36:22.435
• [10.458 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/08/25 00:36:22.469
  I0108 00:36:22.469844 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename endpointslice @ 01/08/25 00:36:22.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:22.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:22.531
  STEP: getting /apis @ 01/08/25 00:36:22.535
  STEP: getting /apis/discovery.k8s.io @ 01/08/25 00:36:22.541
  STEP: getting /apis/discovery.k8s.iov1 @ 01/08/25 00:36:22.543
  STEP: creating @ 01/08/25 00:36:22.545
  STEP: getting @ 01/08/25 00:36:22.582
  STEP: listing @ 01/08/25 00:36:22.585
  STEP: watching @ 01/08/25 00:36:22.588
  I0108 00:36:22.588881 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/08/25 00:36:22.59
  STEP: cluster-wide watching @ 01/08/25 00:36:22.593
  I0108 00:36:22.593054 20 endpointslice.go:459] starting watch
  STEP: patching @ 01/08/25 00:36:22.594
  STEP: updating @ 01/08/25 00:36:22.606
  I0108 00:36:22.621341 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0108 00:36:22.622474 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/08/25 00:36:22.623
  STEP: deleting a collection @ 01/08/25 00:36:22.652
  I0108 00:36:22.678408 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7842" for this suite. @ 01/08/25 00:36:22.694
• [0.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/08/25 00:36:22.713
  I0108 00:36:22.713592 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 00:36:22.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:22.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:22.781
  I0108 00:36:22.791511 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 00:36:25.927882 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3339" for this suite. @ 01/08/25 00:36:25.933
• [3.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/08/25 00:36:25.953
  I0108 00:36:25.953862 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:36:25.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:25.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:25.998
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:36:26.003
  STEP: Saw pod success @ 01/08/25 00:36:30.046
  I0108 00:36:30.051865 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-e1f4b181-581f-4df6-b22b-5abfae5439cd container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:36:30.061
  I0108 00:36:30.121238 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7067" for this suite. @ 01/08/25 00:36:30.134
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/08/25 00:36:30.163
  I0108 00:36:30.163792 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:36:30.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:30.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:30.223
  STEP: Creating projection with secret that has name projected-secret-test-map-8ee06d94-2ead-403e-b1ab-9f554d4c8a92 @ 01/08/25 00:36:30.227
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:36:30.245
  STEP: Saw pod success @ 01/08/25 00:36:34.284
  I0108 00:36:34.287820 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-b6c9b1a2-a55f-44cc-8711-a89caf8d9a6d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:36:34.294
  I0108 00:36:34.340854 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2877" for this suite. @ 01/08/25 00:36:34.348
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/08/25 00:36:34.361
  I0108 00:36:34.361781 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename podtemplate @ 01/08/25 00:36:34.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:34.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:34.4
  STEP: Create set of pod templates @ 01/08/25 00:36:34.406
  I0108 00:36:34.417444 20 podtemplates.go:143] created test-podtemplate-1
  I0108 00:36:34.427850 20 podtemplates.go:143] created test-podtemplate-2
  I0108 00:36:34.456218 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/08/25 00:36:34.456
  STEP: delete collection of pod templates @ 01/08/25 00:36:34.46
  I0108 00:36:34.460921 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/08/25 00:36:34.49
  I0108 00:36:34.490215 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0108 00:36:34.496595 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4450" for this suite. @ 01/08/25 00:36:34.5
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/08/25 00:36:34.515
  I0108 00:36:34.515247 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:36:34.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:34.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:34.556
  STEP: reading a file in the container @ 01/08/25 00:36:36.632
  I0108 00:36:36.632652 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4949 pod-service-account-2bbfceae-a578-48b0-bf35-f8e902b5d79a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/08/25 00:36:36.824
  I0108 00:36:36.824959 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4949 pod-service-account-2bbfceae-a578-48b0-bf35-f8e902b5d79a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/08/25 00:36:37.034
  I0108 00:36:37.034450 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4949 pod-service-account-2bbfceae-a578-48b0-bf35-f8e902b5d79a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0108 00:36:37.217863 20 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-4949"
  I0108 00:36:37.220559 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4949" for this suite. @ 01/08/25 00:36:37.225
• [2.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/08/25 00:36:37.263
  I0108 00:36:37.264041 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/08/25 00:36:37.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:37.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:37.307
  STEP: getting /apis @ 01/08/25 00:36:37.31
  STEP: getting /apis/storage.k8s.io @ 01/08/25 00:36:37.316
  STEP: getting /apis/storage.k8s.io/v1 @ 01/08/25 00:36:37.317
  STEP: creating @ 01/08/25 00:36:37.318
  STEP: watching @ 01/08/25 00:36:37.367
  I0108 00:36:37.367253 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/08/25 00:36:37.383
  STEP: listing in namespace @ 01/08/25 00:36:37.387
  STEP: listing across namespaces @ 01/08/25 00:36:37.395
  STEP: patching @ 01/08/25 00:36:37.398
  STEP: updating @ 01/08/25 00:36:37.409
  I0108 00:36:37.419873 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0108 00:36:37.420136 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/08/25 00:36:37.42
  STEP: deleting a collection @ 01/08/25 00:36:37.443
  I0108 00:36:37.478371 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2143" for this suite. @ 01/08/25 00:36:37.485
• [0.237 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/08/25 00:36:37.499
  I0108 00:36:37.499427 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 00:36:37.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:37.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:37.545
  STEP: create the rc @ 01/08/25 00:36:37.585
  W0108 00:36:37.595616      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/08/25 00:36:43.759
  STEP: wait for the rc to be deleted @ 01/08/25 00:36:43.973
  I0108 00:36:45.613758 20 garbage_collector.go:670] 80 pods remaining
  I0108 00:36:45.614100 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0108 00:36:45.614213 20 garbage_collector.go:678] 
  I0108 00:36:46.268365 20 garbage_collector.go:670] 80 pods remaining
  I0108 00:36:46.268533 20 garbage_collector.go:677] 77 pods has nil DeletionTimestamp
  I0108 00:36:46.268552 20 garbage_collector.go:678] 
  I0108 00:36:47.335279 20 garbage_collector.go:670] 59 pods remaining
  I0108 00:36:47.335459 20 garbage_collector.go:677] 56 pods has nil DeletionTimestamp
  I0108 00:36:47.335496 20 garbage_collector.go:678] 
  I0108 00:36:48.389437 20 garbage_collector.go:670] 44 pods remaining
  I0108 00:36:48.389494 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0108 00:36:48.389511 20 garbage_collector.go:678] 
  I0108 00:36:49.279012 20 garbage_collector.go:670] 32 pods remaining
  I0108 00:36:49.283954 20 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0108 00:36:49.284081 20 garbage_collector.go:678] 
  I0108 00:36:50.681082 20 garbage_collector.go:670] 21 pods remaining
  I0108 00:36:50.694245 20 garbage_collector.go:677] 13 pods has nil DeletionTimestamp
  I0108 00:36:50.694788 20 garbage_collector.go:678] 
  I0108 00:36:51.573546 20 garbage_collector.go:670] 8 pods remaining
  I0108 00:36:51.573634 20 garbage_collector.go:677] 3 pods has nil DeletionTimestamp
  I0108 00:36:51.573653 20 garbage_collector.go:678] 
  I0108 00:36:52.004330 20 garbage_collector.go:670] 0 pods remaining
  I0108 00:36:52.004404 20 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0108 00:36:52.004419 20 garbage_collector.go:678] 
  STEP: Gathering metrics @ 01/08/25 00:36:53.029
  I0108 00:36:55.411912 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 00:36:55.412180 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-809" for this suite. @ 01/08/25 00:36:55.43
• [17.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/08/25 00:36:55.474
  I0108 00:36:55.474206 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:36:55.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:36:55.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:36:55.612
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:36:55.617
  STEP: Saw pod success @ 01/08/25 00:37:10.268
  I0108 00:37:10.278365 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-5f28fd38-58c1-4cd0-92d0-6abede62ef90 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:37:10.297
  I0108 00:37:10.327357 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2245" for this suite. @ 01/08/25 00:37:10.332
• [14.887 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 01/08/25 00:37:10.361
  I0108 00:37:10.361713 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename csinodes @ 01/08/25 00:37:10.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:10.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:10.411
  STEP: Creating initial csiNode "e2e-csinode-fbdzv" @ 01/08/25 00:37:10.415
  STEP: Getting initial csiNode "e2e-csinode-fbdzv" @ 01/08/25 00:37:10.425
  STEP: Patching initial csiNode: "e2e-csinode-fbdzv" @ 01/08/25 00:37:10.428
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-fbdzv=patched" @ 01/08/25 00:37:10.441
  STEP: Delete initial csiNode: "e2e-csinode-fbdzv" @ 01/08/25 00:37:10.449
  STEP: Confirm deletion of csiNode "e2e-csinode-fbdzv" @ 01/08/25 00:37:10.473
  STEP: Creating replacement csiNode "e2e-csinode-w6jzl" @ 01/08/25 00:37:10.477
  STEP: Getting replacement csiNode "e2e-csinode-w6jzl" @ 01/08/25 00:37:10.486
  STEP: Updating replacement csiNode "e2e-csinode-w6jzl" @ 01/08/25 00:37:10.489
  STEP: DeleteCollection of CSINodes with "e2e-csinode-w6jzl=updated" label @ 01/08/25 00:37:10.501
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-w6jzl=updated" @ 01/08/25 00:37:10.518
  I0108 00:37:10.522251 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-5231" for this suite. @ 01/08/25 00:37:10.527
• [0.178 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/08/25 00:37:10.54
  I0108 00:37:10.541085 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:37:10.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:10.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:10.608
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3753 @ 01/08/25 00:37:10.613
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/08/25 00:37:10.638
  STEP: creating service externalsvc in namespace services-3753 @ 01/08/25 00:37:10.639
  STEP: creating replication controller externalsvc in namespace services-3753 @ 01/08/25 00:37:10.694
  I0108 00:37:10.716523      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-3753, replica count: 2
  I0108 00:37:13.768153      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:37:16.768728      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/08/25 00:37:16.772
  I0108 00:37:16.818855 20 resource.go:361] Creating new exec pod
  I0108 00:37:18.849488 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-3753 exec execpodxgnl9 -- /bin/sh -x -c nslookup clusterip-service.services-3753.svc.cluster.local'
  I0108 00:37:19.101490 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-3753.svc.cluster.local\n"
  I0108 00:37:19.101560 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-3753.svc.cluster.local\tcanonical name = externalsvc.services-3753.svc.cluster.local.\nName:\texternalsvc.services-3753.svc.cluster.local\nAddress: 10.43.249.94\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3753, will wait for the garbage collector to delete the pods @ 01/08/25 00:37:19.101
  I0108 00:37:19.191163 20 resources.go:139] Deleting ReplicationController externalsvc took: 35.791799ms
  I0108 00:37:19.291314 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.149116ms
  I0108 00:37:22.441121 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0108 00:37:22.468093 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3753" for this suite. @ 01/08/25 00:37:22.481
• [11.952 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/08/25 00:37:22.495
  I0108 00:37:22.495158 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:37:22.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:22.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:22.538
  STEP: Creating configMap with name projected-configmap-test-volume-cf2bf467-b0c3-4ef9-9ca0-16a564972ff0 @ 01/08/25 00:37:22.542
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:37:22.56
  STEP: Saw pod success @ 01/08/25 00:37:26.6
  I0108 00:37:26.604945 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-01ad3113-ffe6-4cdb-899b-d0856fb672fd container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:37:26.612
  I0108 00:37:26.680919 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7995" for this suite. @ 01/08/25 00:37:26.691
• [4.214 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/08/25 00:37:26.709
  I0108 00:37:26.709837 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename discovery @ 01/08/25 00:37:26.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:26.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:26.756
  STEP: Setting up server cert @ 01/08/25 00:37:26.762
  STEP: Requesting APIResourceList from "/api/v1" @ 01/08/25 00:37:27.28
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/08/25 00:37:27.283
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/08/25 00:37:27.284
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/08/25 00:37:27.285
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/08/25 00:37:27.287
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/08/25 00:37:27.29
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/08/25 00:37:27.291
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/08/25 00:37:27.293
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/08/25 00:37:27.294
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/08/25 00:37:27.297
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/08/25 00:37:27.301
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/08/25 00:37:27.305
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/08/25 00:37:27.307
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/08/25 00:37:27.309
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/08/25 00:37:27.311
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/08/25 00:37:27.313
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/08/25 00:37:27.317
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/08/25 00:37:27.32
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/08/25 00:37:27.322
  I0108 00:37:27.325417 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2093" for this suite. @ 01/08/25 00:37:27.334
• [0.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/08/25 00:37:27.355
  I0108 00:37:27.355496 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename watch @ 01/08/25 00:37:27.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:27.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:27.405
  STEP: getting a starting resourceVersion @ 01/08/25 00:37:27.408
  STEP: starting a background goroutine to produce watch events @ 01/08/25 00:37:27.413
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/08/25 00:37:27.413
  I0108 00:37:30.166647 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6082" for this suite. @ 01/08/25 00:37:30.219
• [2.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/08/25 00:37:30.275
  I0108 00:37:30.275532 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename discovery @ 01/08/25 00:37:30.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:30.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:30.318
  STEP: Setting up server cert @ 01/08/25 00:37:30.322
  I0108 00:37:30.959375 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0108 00:37:30.960519 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0108 00:37:30.960568 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0108 00:37:30.960585 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0108 00:37:30.961017 20 discovery.go:139] Checking APIGroup: apps
  I0108 00:37:30.962363 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0108 00:37:30.962418 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0108 00:37:30.962434 20 discovery.go:154] apps/v1 matches apps/v1
  I0108 00:37:30.962448 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0108 00:37:30.963805 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0108 00:37:30.963850 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0108 00:37:30.963866 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0108 00:37:30.963880 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0108 00:37:30.971312 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0108 00:37:30.971370 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0108 00:37:30.971387 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0108 00:37:30.971436 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0108 00:37:30.972833 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0108 00:37:30.972875 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0108 00:37:30.972890 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0108 00:37:30.972904 20 discovery.go:139] Checking APIGroup: autoscaling
  I0108 00:37:30.974095 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0108 00:37:30.974137 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0108 00:37:30.974152 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0108 00:37:30.974165 20 discovery.go:139] Checking APIGroup: batch
  I0108 00:37:30.975132 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0108 00:37:30.975170 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0108 00:37:30.975219 20 discovery.go:154] batch/v1 matches batch/v1
  I0108 00:37:30.975236 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0108 00:37:30.976197 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0108 00:37:30.976234 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0108 00:37:30.976251 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0108 00:37:30.976264 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0108 00:37:30.977848 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0108 00:37:30.977896 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0108 00:37:30.977909 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0108 00:37:30.977920 20 discovery.go:139] Checking APIGroup: policy
  I0108 00:37:30.979000 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0108 00:37:30.979056 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0108 00:37:30.979071 20 discovery.go:154] policy/v1 matches policy/v1
  I0108 00:37:30.979224 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0108 00:37:30.980607 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0108 00:37:30.980656 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0108 00:37:30.980671 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0108 00:37:30.980684 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0108 00:37:30.981709 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0108 00:37:30.981753 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0108 00:37:30.981768 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0108 00:37:30.981781 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0108 00:37:30.983709 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0108 00:37:30.983948 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0108 00:37:30.983968 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0108 00:37:30.983982 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0108 00:37:30.985277 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0108 00:37:30.985316 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0108 00:37:30.985330 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0108 00:37:30.985343 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0108 00:37:30.986174 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0108 00:37:30.986214 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0108 00:37:30.986229 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0108 00:37:30.986371 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0108 00:37:30.987401 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0108 00:37:30.987441 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0108 00:37:30.987458 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0108 00:37:30.987471 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0108 00:37:30.988566 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0108 00:37:30.988606 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0108 00:37:30.988621 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0108 00:37:30.988670 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0108 00:37:30.989835 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0108 00:37:30.989879 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0108 00:37:30.989898 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0108 00:37:30.989912 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0108 00:37:30.991598 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0108 00:37:30.991651 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0108 00:37:30.991666 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0108 00:37:30.991679 20 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0108 00:37:30.992756 20 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0108 00:37:30.992801 20 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0108 00:37:30.992815 20 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0108 00:37:30.992828 20 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0108 00:37:30.994084 20 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0108 00:37:30.994130 20 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0108 00:37:30.994144 20 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0108 00:37:30.994324 20 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0108 00:37:30.995431 20 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0108 00:37:30.995471 20 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0108 00:37:30.995486 20 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0108 00:37:30.995500 20 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0108 00:37:30.996564 20 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0108 00:37:30.996608 20 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0108 00:37:30.996622 20 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0108 00:37:30.996635 20 discovery.go:139] Checking APIGroup: groupsnapshot.storage.k8s.io
  I0108 00:37:30.998101 20 discovery.go:147] PreferredVersion.GroupVersion: groupsnapshot.storage.k8s.io/v1alpha1
  I0108 00:37:30.998175 20 discovery.go:148] Versions found [{groupsnapshot.storage.k8s.io/v1alpha1 v1alpha1}]
  I0108 00:37:30.998297 20 discovery.go:154] groupsnapshot.storage.k8s.io/v1alpha1 matches groupsnapshot.storage.k8s.io/v1alpha1
  I0108 00:37:30.998312 20 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0108 00:37:30.999548 20 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0108 00:37:30.999587 20 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0108 00:37:30.999601 20 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0108 00:37:30.999619 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0108 00:37:31.004049 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0108 00:37:31.004106 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0108 00:37:31.004121 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0108 00:37:31.004455 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7041" for this suite. @ 01/08/25 00:37:31.01
• [0.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/08/25 00:37:31.03
  I0108 00:37:31.030512 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:37:31.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:31.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:31.071
  STEP: Setting up server cert @ 01/08/25 00:37:31.16
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:37:32.115
  STEP: Deploying the webhook pod @ 01/08/25 00:37:32.133
  STEP: Wait for the deployment to be ready @ 01/08/25 00:37:32.17
  I0108 00:37:32.211115 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0108 00:37:34.222998 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/08/25 00:37:36.227
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:37:36.27
  I0108 00:37:37.272691 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/08/25 00:37:37.279
  STEP: verifying the validating webhook match conditions @ 01/08/25 00:37:37.331
  STEP: updating the validating webhook match conditions @ 01/08/25 00:37:37.336
  STEP: verifying the validating webhook match conditions @ 01/08/25 00:37:37.364
  I0108 00:37:37.484171 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2740" for this suite. @ 01/08/25 00:37:37.49
  STEP: Destroying namespace "webhook-markers-5374" for this suite. @ 01/08/25 00:37:37.533
• [6.522 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/08/25 00:37:37.553
  I0108 00:37:37.554062 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:37:37.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:37.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:37.593
  STEP: Setting up server cert @ 01/08/25 00:37:37.69
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:37:38.504
  STEP: Deploying the webhook pod @ 01/08/25 00:37:38.514
  STEP: Wait for the deployment to be ready @ 01/08/25 00:37:38.547
  I0108 00:37:38.560646 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/08/25 00:37:40.574
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:37:40.601
  I0108 00:37:41.602506 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0108 00:37:41.619053 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4763-crds.webhook.example.com via the AdmissionRegistration API @ 01/08/25 00:37:42.136
  STEP: Creating a custom resource while v1 is storage version @ 01/08/25 00:37:42.168
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/08/25 00:37:44.198
  STEP: Patching the custom resource while v2 is storage version @ 01/08/25 00:37:44.238
  I0108 00:37:45.089018 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5597" for this suite. @ 01/08/25 00:37:45.093
  STEP: Destroying namespace "webhook-markers-6077" for this suite. @ 01/08/25 00:37:45.104
• [7.564 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/08/25 00:37:45.118
  I0108 00:37:45.118427 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 00:37:45.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:45.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:45.167
  STEP: Creating a test namespace @ 01/08/25 00:37:45.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:45.263
  STEP: Creating a service in the namespace @ 01/08/25 00:37:45.269
  STEP: Deleting the namespace @ 01/08/25 00:37:45.313
  STEP: Waiting for the namespace to be removed. @ 01/08/25 00:37:45.345
  STEP: Recreating the namespace @ 01/08/25 00:37:51.35
  STEP: Verifying there is no service in the namespace @ 01/08/25 00:37:51.382
  I0108 00:37:51.389663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9718" for this suite. @ 01/08/25 00:37:51.395
  STEP: Destroying namespace "nsdeletetest-3201" for this suite. @ 01/08/25 00:37:51.411
  I0108 00:37:51.415303 20 framework.go:370] Namespace nsdeletetest-3201 was already deleted
  STEP: Destroying namespace "nsdeletetest-4861" for this suite. @ 01/08/25 00:37:51.415
• [6.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/08/25 00:37:51.436
  I0108 00:37:51.436232 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:37:51.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:51.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:51.5
  STEP: Creating configMap that has name configmap-test-emptyKey-cc16cdba-06d2-418c-9332-6f36cce69896 @ 01/08/25 00:37:51.504
  I0108 00:37:51.506957 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1915" for this suite. @ 01/08/25 00:37:51.512
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/08/25 00:37:51.532
  I0108 00:37:51.532117 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:37:51.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:51.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:51.594
  STEP: Creating configMap with name configmap-test-volume-map-67d3b3eb-3c80-4078-820b-1eb64d5a94a9 @ 01/08/25 00:37:51.598
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:37:51.607
  STEP: Saw pod success @ 01/08/25 00:37:55.643
  I0108 00:37:55.646490 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-cba71936-6e89-422f-babd-d4e01c1c24c0 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:37:55.654
  I0108 00:37:55.695119 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9745" for this suite. @ 01/08/25 00:37:55.699
• [4.183 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/08/25 00:37:55.715
  I0108 00:37:55.715436 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/08/25 00:37:55.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:55.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:55.766
  STEP: Creating two CSIDrivers @ 01/08/25 00:37:55.771
  STEP: Getting "inline-driver-edc3780b-a95d-46df-a222-21baad70c664" & "inline-driver-094c697b-3471-439b-85ba-50ce872e586b" @ 01/08/25 00:37:55.808
  STEP: Patching the CSIDriver "inline-driver-094c697b-3471-439b-85ba-50ce872e586b" @ 01/08/25 00:37:55.813
  STEP: Updating the CSIDriver "inline-driver-094c697b-3471-439b-85ba-50ce872e586b" @ 01/08/25 00:37:55.835
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-813" @ 01/08/25 00:37:55.859
  STEP: Deleting CSIDriver "inline-driver-edc3780b-a95d-46df-a222-21baad70c664" @ 01/08/25 00:37:55.875
  STEP: Confirm deletion of CSIDriver "inline-driver-edc3780b-a95d-46df-a222-21baad70c664" @ 01/08/25 00:37:55.886
  STEP: Deleting CSIDriver "inline-driver-094c697b-3471-439b-85ba-50ce872e586b" via DeleteCollection @ 01/08/25 00:37:55.89
  STEP: Confirm deletion of CSIDriver "inline-driver-094c697b-3471-439b-85ba-50ce872e586b" @ 01/08/25 00:37:55.903
  I0108 00:37:55.908587 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-813" for this suite. @ 01/08/25 00:37:55.913
• [0.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/08/25 00:37:55.938
  I0108 00:37:55.938691 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:37:55.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:55.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:55.978
  STEP: creating a ReplicationController @ 01/08/25 00:37:55.986
  STEP: waiting for RC to be added @ 01/08/25 00:37:56.003
  STEP: waiting for available Replicas @ 01/08/25 00:37:56.003
  STEP: patching ReplicationController @ 01/08/25 00:37:57.529
  STEP: waiting for RC to be modified @ 01/08/25 00:37:57.549
  STEP: patching ReplicationController status @ 01/08/25 00:37:57.549
  STEP: waiting for RC to be modified @ 01/08/25 00:37:57.567
  STEP: waiting for available Replicas @ 01/08/25 00:37:57.567
  STEP: fetching ReplicationController status @ 01/08/25 00:37:57.581
  STEP: patching ReplicationController scale @ 01/08/25 00:37:57.593
  STEP: waiting for RC to be modified @ 01/08/25 00:37:57.613
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/08/25 00:37:57.613
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/08/25 00:37:59.117
  STEP: updating ReplicationController status @ 01/08/25 00:37:59.122
  STEP: waiting for RC to be modified @ 01/08/25 00:37:59.138
  STEP: listing all ReplicationControllers @ 01/08/25 00:37:59.138
  STEP: checking that ReplicationController has expected values @ 01/08/25 00:37:59.15
  STEP: deleting ReplicationControllers by collection @ 01/08/25 00:37:59.15
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/08/25 00:37:59.167
  I0108 00:37:59.270181 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0108 00:37:59.270764      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8215" for this suite. @ 01/08/25 00:37:59.275
• [3.355 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/08/25 00:37:59.293
  I0108 00:37:59.293252 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename runtimeclass @ 01/08/25 00:37:59.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:59.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:59.35
  STEP: getting /apis @ 01/08/25 00:37:59.358
  STEP: getting /apis/node.k8s.io @ 01/08/25 00:37:59.376
  STEP: getting /apis/node.k8s.io/v1 @ 01/08/25 00:37:59.378
  STEP: creating @ 01/08/25 00:37:59.381
  STEP: watching @ 01/08/25 00:37:59.424
  I0108 00:37:59.424701 20 runtimeclass.go:275] starting watch
  STEP: getting @ 01/08/25 00:37:59.45
  STEP: listing @ 01/08/25 00:37:59.454
  STEP: patching @ 01/08/25 00:37:59.459
  STEP: updating @ 01/08/25 00:37:59.475
  I0108 00:37:59.489265 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/08/25 00:37:59.489
  STEP: deleting a collection @ 01/08/25 00:37:59.51
  I0108 00:37:59.535873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3004" for this suite. @ 01/08/25 00:37:59.54
• [0.260 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/08/25 00:37:59.554
  I0108 00:37:59.555011 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename init-container @ 01/08/25 00:37:59.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:37:59.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:37:59.593
  STEP: creating the pod @ 01/08/25 00:37:59.598
  I0108 00:37:59.598191 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0108 00:38:00.273347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:01.273449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:02.273670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:03.274125      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:04.274311      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:05.274784      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:06.274964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:07.275320      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:08.275483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:09.275527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:10.275817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:11.276062      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:12.276207      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:13.276380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:14.276430      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:15.276557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:16.277676      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:17.277803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:18.277882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:19.278481      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:20.279668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:21.280987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:22.281615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:23.281941      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:24.282121      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:25.282404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:26.282703      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:27.282828      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:28.283010      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:29.283458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:30.283604      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:31.283792      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:32.283966      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:33.284293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:34.284476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:35.284843      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:36.284946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:37.285072      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:38.285441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:39.285632      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:40.285830      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:41.286795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:41.696389 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bf8af37e-d319-430d-b171-70adbc9b89d3", GenerateName:"", Namespace:"init-container-9147", SelfLink:"", UID:"c2c939db-7096-464b-872b-1421687b9ddd", ResourceVersion:"38190", Generation:0, CreationTimestamp:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"598175271"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"634280bde9689cb4d76dde155e257bf041afc23406ea4fa1462271246f4abfff", "cni.projectcalico.org/podIP":"10.42.4.177/32", "cni.projectcalico.org/podIPs":"10.42.4.177/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037c0450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 0, 38, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037c0480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 0, 38, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037c04b0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-b2znt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003e686c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b2znt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b2znt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b2znt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003a18170), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-16-191.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00291cab0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003a181f0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003a18210)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003a18218), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003a1821c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000eecab0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 8, 0, 38, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.16.191", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.16.191"}}, PodIP:"10.42.4.177", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.4.177"}}, StartTime:time.Date(2025, time.January, 8, 0, 37, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000020ee0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000020f50)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://68b40ddb8b77ab39529f898a4a6762ce6e4cd5b5d6deb91afc0d55c5d1869cb4", Started:(*bool)(0xc003a182ca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b2znt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000eecae0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003e68780), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003a182dd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b2znt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000eecaf0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003e68760), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003a1829f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b2znt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000eecac0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0108 00:38:41.700791 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9147" for this suite. @ 01/08/25 00:38:41.714
• [42.175 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/08/25 00:38:41.73
  I0108 00:38:41.730772 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:38:41.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:38:41.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:38:41.771
  STEP: creating a replication controller @ 01/08/25 00:38:41.774
  I0108 00:38:41.774657 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 create -f -'
  I0108 00:38:41.969670 20 builder.go:146] stderr: ""
  I0108 00:38:41.969737 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/08/25 00:38:41.969
  I0108 00:38:41.969859 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0108 00:38:42.075992 20 builder.go:146] stderr: ""
  I0108 00:38:42.076055 20 builder.go:147] stdout: "update-demo-nautilus-k26l9 update-demo-nautilus-xbzlv "
  I0108 00:38:42.076323 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-k26l9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 00:38:42.179840 20 builder.go:146] stderr: ""
  I0108 00:38:42.179904 20 builder.go:147] stdout: ""
  I0108 00:38:42.179924 20 kubectl.go:2499] update-demo-nautilus-k26l9 is created but not running
  E0108 00:38:42.286521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:43.286822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:44.286951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:45.287198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:46.287450      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:47.181074 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0108 00:38:47.287699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:47.452814 20 builder.go:146] stderr: ""
  I0108 00:38:47.452881 20 builder.go:147] stdout: "update-demo-nautilus-k26l9 update-demo-nautilus-xbzlv "
  I0108 00:38:47.452949 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-k26l9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 00:38:47.539728 20 builder.go:146] stderr: ""
  I0108 00:38:47.539792 20 builder.go:147] stdout: ""
  I0108 00:38:47.539812 20 kubectl.go:2499] update-demo-nautilus-k26l9 is created but not running
  E0108 00:38:48.287851      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:49.287959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:50.288186      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:51.288415      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:52.288590      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:52.540114 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0108 00:38:52.667328 20 builder.go:146] stderr: ""
  I0108 00:38:52.667389 20 builder.go:147] stdout: "update-demo-nautilus-k26l9 update-demo-nautilus-xbzlv "
  I0108 00:38:52.667451 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-k26l9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 00:38:52.754391 20 builder.go:146] stderr: ""
  I0108 00:38:52.754450 20 builder.go:147] stdout: "true"
  I0108 00:38:52.754515 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-k26l9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 00:38:52.841325 20 builder.go:146] stderr: ""
  I0108 00:38:52.841483 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 00:38:52.841513 20 kubectl.go:2390] validating pod update-demo-nautilus-k26l9
  I0108 00:38:52.851975 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 00:38:52.852084 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 00:38:52.852104 20 kubectl.go:2517] update-demo-nautilus-k26l9 is verified up and running
  I0108 00:38:52.852252 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-xbzlv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 00:38:52.946140 20 builder.go:146] stderr: ""
  I0108 00:38:52.946236 20 builder.go:147] stdout: "true"
  I0108 00:38:52.946309 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods update-demo-nautilus-xbzlv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 00:38:53.047798 20 builder.go:146] stderr: ""
  I0108 00:38:53.047852 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 00:38:53.047873 20 kubectl.go:2390] validating pod update-demo-nautilus-xbzlv
  I0108 00:38:53.061481 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 00:38:53.061561 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 00:38:53.061710 20 kubectl.go:2517] update-demo-nautilus-xbzlv is verified up and running
  STEP: using delete to clean up resources @ 01/08/25 00:38:53.061
  I0108 00:38:53.062129 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 delete --grace-period=0 --force -f -'
  I0108 00:38:53.156117 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 00:38:53.156308 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0108 00:38:53.156565 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get rc,svc -l name=update-demo --no-headers'
  E0108 00:38:53.289429      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:53.316710 20 builder.go:146] stderr: "No resources found in kubectl-6469 namespace.\n"
  I0108 00:38:53.316774 20 builder.go:147] stdout: ""
  I0108 00:38:53.317035 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-6469 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0108 00:38:53.443205 20 builder.go:146] stderr: ""
  I0108 00:38:53.443295 20 builder.go:147] stdout: ""
  I0108 00:38:53.443812 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6469" for this suite. @ 01/08/25 00:38:53.45
• [11.732 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/08/25 00:38:53.463
  I0108 00:38:53.463072 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 00:38:53.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:38:53.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:38:53.52
  STEP: Creating pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756 @ 01/08/25 00:38:53.526
  E0108 00:38:54.290242      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:55.290359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:56.290480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:57.290801      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 00:38:57.585
  I0108 00:38:57.599800 20 container_probe.go:1749] Initial restart count of pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a is 0
  I0108 00:38:57.603595 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:38:58.291455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:38:59.291581      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:38:59.608290 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:00.292439      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:01.292575      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:01.615463 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:02.293143      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:03.293422      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:03.622537 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:04.293727      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:05.293892      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:05.627316 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:06.294496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:07.294921      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:07.630860 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:08.295593      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:09.295804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:09.635766 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:10.296038      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:11.296238      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:11.640828 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:12.296442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:13.297474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:13.654857 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:14.298518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:15.298645      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:15.659971 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:16.298709      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:17.299285      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:17.664298 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:18.300092      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:19.300337      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:19.670984 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:20.300682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:21.300914      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:21.675587 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:22.301064      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:23.301463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:23.684329 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:24.301601      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:25.301713      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:25.689259 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:26.302566      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:27.302883      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:27.697604 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:28.303347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:29.303544      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:29.702030 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:30.303689      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:31.303986      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:31.707009 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:32.304599      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:33.304818      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:33.711129 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:34.305578      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:35.305746      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:35.716079 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:36.306497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:37.306744      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:37.727154 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:38.307848      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:39.308001      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:39.732173 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:40.308909      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:41.309669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:41.736887 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:42.310564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:43.310764      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:43.741706 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:44.311584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:45.311787      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:45.746841 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:46.312147      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:47.312610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:47.750997 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:48.312750      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:49.313039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:49.755053 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:50.313855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:51.314198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:51.761979 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:52.314369      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:53.314568      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:53.770822 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:54.315865      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:55.316146      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:55.775275 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:56.316315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:57.316490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:57.782043 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:39:58.317016      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:39:59.317426      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:39:59.788396 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:00.318474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:01.318648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:01.793949 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:02.319661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:03.319967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:03.798157 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:04.320709      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:05.321418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:05.803660 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:06.322414      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:07.322571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:07.810670 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:08.323409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:09.323639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:09.819361 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:10.323943      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:11.324195      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:11.825788 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:12.324527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:13.325013      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:13.831141 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:14.325939      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:15.326236      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:15.834992 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:16.326672      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:17.326874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:17.838969 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:18.327512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:19.327838      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:19.844739 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:20.328009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:21.328869      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:21.849284 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:22.329874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:23.330299      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:23.854044 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:24.330589      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:25.330934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:25.858807 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:26.331302      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:27.331670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:27.862748 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:28.332412      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:29.332708      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:29.867444 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:30.333097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:31.333357      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:31.872739 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:32.334454      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:33.334609      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:33.880017 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:34.335293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:35.335469      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:35.886894 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:36.336032      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:37.336410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:37.891584 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:38.337571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:39.338513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:39.904126 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:40.338666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:41.338920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:41.908481 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:42.339090      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:43.339348      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:43.912763 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:44.340187      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:45.340460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:45.928198 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:46.340661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:47.341214      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:47.932436 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:48.342014      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:49.342438      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:49.936510 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:50.343198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:51.343188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:51.949090 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:52.345995      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:53.344251      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:53.953673 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:54.345365      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:55.345374      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:55.957856 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:56.346597      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:57.346782      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:57.963247 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:40:58.347793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:40:59.348164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:40:59.967871 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:00.348342      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:01.348572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:01.973280 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:02.348649      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:03.348991      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:03.980534 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:04.350019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:05.350421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:05.985115 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:06.350577      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:07.351867      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:07.989453 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:08.351553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:09.351757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:09.994345 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:10.353159      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:11.353405      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:11.999659 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:12.354403      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:13.355362      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:14.007037 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:14.355679      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:15.355795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:16.011237 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:16.356848      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:17.356989      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:18.017329 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:18.358060      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:19.358093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:20.022070 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:20.358496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:21.358638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:22.030444 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:22.358828      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:23.358957      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:24.036100 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:24.359492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:25.359936      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:26.043360 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:26.360022      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:27.360449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:28.048302 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:28.360580      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:29.360883      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:30.054034 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:30.361554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:31.361756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:32.058894 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:32.362623      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:33.362812      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:34.065271 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:34.363770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:35.363964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:36.069678 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:36.364027      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:37.364334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:38.074816 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:38.364837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:39.365004      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:40.079899 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:40.365845      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:41.366037      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:42.085722 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:42.366769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:43.366934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:44.090853 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:44.367091      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:45.367224      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:46.095180 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:46.367441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:47.367593      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:48.101446 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:48.368720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:49.368910      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:50.106806 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:50.369607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:51.369798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:52.114352 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:52.370039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:53.370084      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:54.118906 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:54.370215      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:55.370540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:56.125618 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:56.370708      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:57.371221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:41:58.130049 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:41:58.371424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:41:59.371689      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:00.140621 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:00.371945      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:01.372397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:02.146602 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:02.372995      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:03.374591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:04.151869 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:04.375470      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:05.375619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:06.155353 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:06.376803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:07.377096      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:08.159588 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:08.378643      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:09.378829      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:10.164787 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:10.379063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:11.379380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:12.172180 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:12.380475      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:13.380901      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:14.176421 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:14.381924      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:15.382525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:16.181046 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:16.383563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:17.385818      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:18.185453 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:18.385739      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:19.385884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:20.190503 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:20.386936      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:21.387485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:22.194655 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:22.387962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:23.390767      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:24.199246 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:24.390586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:25.390872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:26.203997 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:26.391275      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:27.391665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:28.209108 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:28.391653      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:29.391991      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:30.212957 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:30.392263      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:31.392540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:32.217782 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:32.393072      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:33.393289      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:34.222904 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:34.394173      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:35.394335      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:36.227318 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:36.394480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:37.394819      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:38.231445 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:38.395798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:39.396055      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:40.235425 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:40.396682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:41.396826      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:42.238910 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:42.397330      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:43.397397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:44.242989 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:44.398348      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:45.398831      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:46.248342 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:46.399727      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:47.399971      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:48.253680 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:48.400641      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:49.400960      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:50.258857 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:50.401061      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:51.401367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:52.269071 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:52.402242      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:53.402437      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:54.276076 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:54.403282      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:55.403613      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:42:56.280093 20 container_probe.go:1759] Get pod test-grpc-b49e095d-2d70-4659-889a-f9958d97dd1a in namespace container-probe-5756
  E0108 00:42:56.405496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:42:57.404344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/08/25 00:42:58.28
  I0108 00:42:58.332476 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5756" for this suite. @ 01/08/25 00:42:58.354
• [244.913 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/08/25 00:42:58.376
  I0108 00:42:58.376147 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename events @ 01/08/25 00:42:58.377
  E0108 00:42:58.405115      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:42:58.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:42:58.414
  STEP: creating a test event @ 01/08/25 00:42:58.418
  STEP: listing events in all namespaces @ 01/08/25 00:42:58.435
  STEP: listing events in test namespace @ 01/08/25 00:42:58.442
  STEP: listing events with field selection filtering on source @ 01/08/25 00:42:58.445
  STEP: listing events with field selection filtering on reportingController @ 01/08/25 00:42:58.448
  STEP: getting the test event @ 01/08/25 00:42:58.452
  STEP: patching the test event @ 01/08/25 00:42:58.456
  STEP: getting the test event @ 01/08/25 00:42:58.475
  STEP: updating the test event @ 01/08/25 00:42:58.483
  STEP: getting the test event @ 01/08/25 00:42:58.495
  STEP: deleting the test event @ 01/08/25 00:42:58.502
  STEP: listing events in all namespaces @ 01/08/25 00:42:58.524
  STEP: listing events in test namespace @ 01/08/25 00:42:58.529
  I0108 00:42:58.533263 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9210" for this suite. @ 01/08/25 00:42:58.537
• [0.173 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/08/25 00:42:58.548
  I0108 00:42:58.548923 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:42:58.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:42:58.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:42:58.598
  STEP: Setting up server cert @ 01/08/25 00:42:58.707
  E0108 00:42:59.409339      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:42:59.579
  STEP: Deploying the webhook pod @ 01/08/25 00:42:59.601
  STEP: Wait for the deployment to be ready @ 01/08/25 00:42:59.634
  I0108 00:42:59.651661 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 00:43:00.410855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:01.410933      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:43:01.668
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:43:01.695
  E0108 00:43:02.411100      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:43:02.697507 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/08/25 00:43:02.707
  STEP: create a pod that should be denied by the webhook @ 01/08/25 00:43:02.743
  STEP: create a pod that causes the webhook to hang @ 01/08/25 00:43:02.77
  E0108 00:43:03.411198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:04.411363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:05.411649      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:06.411965      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:07.412140      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:08.412416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:09.412684      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:10.413704      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:11.413842      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:12.414350      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 01/08/25 00:43:12.783
  STEP: create a configmap that should be admitted by the webhook @ 01/08/25 00:43:12.844
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/08/25 00:43:12.872
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/08/25 00:43:12.881
  STEP: create a namespace that bypass the webhook @ 01/08/25 00:43:12.893
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/08/25 00:43:12.92
  I0108 00:43:13.125090 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4257" for this suite. @ 01/08/25 00:43:13.131
  STEP: Destroying namespace "webhook-markers-3035" for this suite. @ 01/08/25 00:43:13.145
  STEP: Destroying namespace "exempted-namespace-6754" for this suite. @ 01/08/25 00:43:13.158
• [14.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 01/08/25 00:43:13.184
  I0108 00:43:13.184170 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 00:43:13.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:43:13.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:43:13.22
  STEP: Looking for a node to schedule job pods @ 01/08/25 00:43:13.223
  STEP: Creating a job @ 01/08/25 00:43:13.231
  STEP: Waiting for all the pods to be ready @ 01/08/25 00:43:13.248
  E0108 00:43:13.415286      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:14.415814      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:15.416347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:16.416529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:17.419104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:18.419152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 01/08/25 00:43:19.269
  STEP: Evict all the Pods @ 01/08/25 00:43:19.279
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-zzwb4/job-6743 @ 01/08/25 00:43:19.28
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-pnk4m/job-6743 @ 01/08/25 00:43:19.28
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-97l4l/job-6743 @ 01/08/25 00:43:19.28
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-pnk4m/job-6743 to be deleted @ 01/08/25 00:43:19.413
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-zzwb4/job-6743 to be deleted @ 01/08/25 00:43:19.418
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-97l4l/job-6743 to be deleted @ 01/08/25 00:43:19.418
  E0108 00:43:19.419347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:20.419619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:21.419849      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:22.420442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:23.420491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:24.421540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:25.421642      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 01/08/25 00:43:25.456
  E0108 00:43:26.421903      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:27.422094      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:28.422171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:29.422400      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:30.422537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:31.422652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:32.423079      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:33.423362      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:34.423605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:35.423671      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:36.423771      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:37.424200      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:38.424572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:39.424946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:40.425508      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:41.425687      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:42.425837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:43.426974      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:44.426889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:45.427138      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:46.427341      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:47.427740      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:48.427800      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:49.427952      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:50.428085      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:51.428402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:52.428800      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:53.429047      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:54.429472      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:55.430480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:56.431272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:57.431455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:58.432407      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:43:59.432582      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:00.433376      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:01.433479      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:02.433962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:03.433924      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:04.434605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:05.434625      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:06.435384      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:07.435478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:08.436111      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:09.436421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:09.613757 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6743" for this suite. @ 01/08/25 00:44:09.619
• [56.448 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/08/25 00:44:09.632
  I0108 00:44:09.632577 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:44:09.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:09.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:09.67
  STEP: set up a multi version CRD @ 01/08/25 00:44:09.675
  I0108 00:44:09.676482 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:44:10.437321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:11.438020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:12.438677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:13.438656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 01/08/25 00:44:14.371
  STEP: check the new version name is served @ 01/08/25 00:44:14.4
  E0108 00:44:14.439571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:15.440102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 01/08/25 00:44:16.169
  E0108 00:44:16.440690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 01/08/25 00:44:16.996
  E0108 00:44:17.441923      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:18.442649      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:19.443153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:20.443895      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:20.773238 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8930" for this suite. @ 01/08/25 00:44:20.781
• [11.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/08/25 00:44:20.799
  I0108 00:44:20.799556 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:44:20.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:20.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:20.842
  STEP: Creating secret with name secret-test-e050f35a-56ab-4b97-bc90-252ac09f853e @ 01/08/25 00:44:20.847
  STEP: Creating a pod to test consume secrets @ 01/08/25 00:44:20.857
  E0108 00:44:21.445153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:22.445367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:23.446483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:24.446725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:44:24.899
  I0108 00:44:24.904832 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-94466316-4277-491d-95db-602dbdedc343 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 00:44:24.926
  I0108 00:44:24.964757 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3477" for this suite. @ 01/08/25 00:44:24.972
• [4.185 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/08/25 00:44:24.984
  I0108 00:44:24.984286 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:44:24.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:25.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:25.034
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/08/25 00:44:25.042
  E0108 00:44:25.447377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:26.447504      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:27.447698      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:28.447859      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:44:29.091
  I0108 00:44:29.094138 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-170af13b-dc88-4396-878d-aadb2ce43e92 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:44:29.111
  I0108 00:44:29.153990 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3635" for this suite. @ 01/08/25 00:44:29.158
• [4.184 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/08/25 00:44:29.169
  I0108 00:44:29.169289 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename init-container @ 01/08/25 00:44:29.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:29.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:29.203
  STEP: creating the pod @ 01/08/25 00:44:29.206
  I0108 00:44:29.206850 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0108 00:44:29.447952      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:30.448737      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:31.448874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:32.449682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:33.450174      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:34.091630 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6126" for this suite. @ 01/08/25 00:44:34.099
• [4.964 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/08/25 00:44:34.134
  I0108 00:44:34.134977 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:44:34.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:34.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:34.17
  STEP: creating service in namespace services-1692 @ 01/08/25 00:44:34.178
  STEP: creating service affinity-nodeport-transition in namespace services-1692 @ 01/08/25 00:44:34.178
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1692 @ 01/08/25 00:44:34.233
  I0108 00:44:34.256794      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1692, replica count: 3
  E0108 00:44:34.450308      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:35.450648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:36.451235      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:37.307301      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 00:44:37.320977 20 resource.go:361] Creating new exec pod
  E0108 00:44:37.452071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:38.453024      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:39.453916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:40.372043 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0108 00:44:40.455004      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:40.586217 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.43.190.216) 80 port [tcp/http] succeeded!\n"
  I0108 00:44:40.586286 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:40.586400 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.190.216 80'
  I0108 00:44:40.801355 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.190.216 80\nConnection to 10.43.190.216 80 port [tcp/http] succeeded!\n"
  I0108 00:44:40.801418 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:40.801534 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.100 30619'
  I0108 00:44:40.990929 20 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.31.20.100 30619\nConnection to 172.31.20.100 30619 port [tcp/*] succeeded!\n"
  I0108 00:44:40.990993 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:40.991080 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.249 30619'
  I0108 00:44:41.212157 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.249 30619\nConnection to 172.31.20.249 30619 port [tcp/*] succeeded!\n"
  I0108 00:44:41.212228 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:41.245434 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.191:30619/ ; done'
  E0108 00:44:41.458623      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:41.589863 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n"
  I0108 00:44:41.589938 20 builder.go:147] stdout: "\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-5cd6g\naffinity-nodeport-transition-5cd6g\naffinity-nodeport-transition-4h255\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4h255\naffinity-nodeport-transition-4h255\naffinity-nodeport-transition-5cd6g\naffinity-nodeport-transition-5cd6g\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4h255\naffinity-nodeport-transition-4h255\naffinity-nodeport-transition-4h255"
  I0108 00:44:41.589962 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.589979 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.590043 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.590151 20 service.go:242] Received response from host: affinity-nodeport-transition-5cd6g
  I0108 00:44:41.590168 20 service.go:242] Received response from host: affinity-nodeport-transition-5cd6g
  I0108 00:44:41.590182 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.590196 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.590210 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.590227 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.590241 20 service.go:242] Received response from host: affinity-nodeport-transition-5cd6g
  I0108 00:44:41.590254 20 service.go:242] Received response from host: affinity-nodeport-transition-5cd6g
  I0108 00:44:41.590268 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.590283 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.590296 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.590308 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.590322 20 service.go:242] Received response from host: affinity-nodeport-transition-4h255
  I0108 00:44:41.606706 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1692 exec execpod-affinityblw9f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.191:30619/ ; done'
  I0108 00:44:41.989654 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.191:30619/\n"
  I0108 00:44:41.989737 20 builder.go:147] stdout: "\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c\naffinity-nodeport-transition-4x85c"
  I0108 00:44:41.989762 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989778 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989794 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989809 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989824 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989838 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989852 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989865 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989887 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989901 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989914 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989928 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989942 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989955 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989969 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.989982 20 service.go:242] Received response from host: affinity-nodeport-transition-4x85c
  I0108 00:44:41.990578 20 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1692, will wait for the garbage collector to delete the pods @ 01/08/25 00:44:42.027
  I0108 00:44:42.098920 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 11.015676ms
  I0108 00:44:42.199503 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.581181ms
  E0108 00:44:42.459511      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:43.460599      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:44.461500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:45.462587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:45.986839 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1692" for this suite. @ 01/08/25 00:44:46.009
• [11.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/08/25 00:44:46.035
  I0108 00:44:46.035618 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 00:44:46.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:46.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:46.07
  STEP: creating service endpoint-test2 in namespace services-5252 @ 01/08/25 00:44:46.075
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5252 to expose endpoints map[] @ 01/08/25 00:44:46.12
  I0108 00:44:46.146592 20 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5252 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5252 @ 01/08/25 00:44:46.146
  E0108 00:44:46.462747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:47.464126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5252 to expose endpoints map[pod1:[80]] @ 01/08/25 00:44:48.184
  I0108 00:44:48.198526 20 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5252 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/08/25 00:44:48.198
  I0108 00:44:48.198628 20 resource.go:361] Creating new exec pod
  E0108 00:44:48.464175      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:49.465637      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:50.466014      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:51.220217 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0108 00:44:51.430716 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.51.197) 80 port [tcp/http] succeeded!\n"
  I0108 00:44:51.430783 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:51.431238 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.51.197 80'
  E0108 00:44:51.466779      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:51.621030 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.51.197 80\nConnection to 10.43.51.197 80 port [tcp/http] succeeded!\n"
  I0108 00:44:51.621084 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5252 @ 01/08/25 00:44:51.621
  E0108 00:44:52.467123      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:53.467225      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5252 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/08/25 00:44:53.669
  I0108 00:44:53.688846 20 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5252 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/08/25 00:44:53.688
  E0108 00:44:54.467466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:54.695390 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0108 00:44:54.928643 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.51.197) 80 port [tcp/http] succeeded!\n"
  I0108 00:44:54.928716 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:54.928807 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.51.197 80'
  I0108 00:44:55.135480 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.51.197 80\nConnection to 10.43.51.197 80 port [tcp/http] succeeded!\n"
  I0108 00:44:55.135561 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5252 @ 01/08/25 00:44:55.135
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5252 to expose endpoints map[pod2:[80]] @ 01/08/25 00:44:55.186
  I0108 00:44:55.240995 20 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5252 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/08/25 00:44:55.241
  E0108 00:44:55.468360      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:56.241443 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0108 00:44:56.469057      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:44:56.471892 20 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.51.197) 80 port [tcp/http] succeeded!\n"
  I0108 00:44:56.471964 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 00:44:56.472404 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-5252 exec execpodnpchb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.51.197 80'
  I0108 00:44:56.704614 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.51.197 80\nConnection to 10.43.51.197 80 port [tcp/http] succeeded!\n"
  I0108 00:44:56.704677 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5252 @ 01/08/25 00:44:56.704
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5252 to expose endpoints map[] @ 01/08/25 00:44:56.754
  I0108 00:44:56.796087 20 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5252 exposes endpoints map[]
  I0108 00:44:56.850822 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5252" for this suite. @ 01/08/25 00:44:56.856
• [10.832 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/08/25 00:44:56.869
  I0108 00:44:56.869715 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context @ 01/08/25 00:44:56.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:44:56.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:44:56.922
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/08/25 00:44:56.927
  E0108 00:44:57.469527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:58.469625      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:44:59.469817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:00.470566      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:45:00.989
  I0108 00:45:00.993079 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod security-context-c1b4fab8-084f-4ae0-a8a1-42b5ed513814 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:45:01.002
  I0108 00:45:01.045224 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7215" for this suite. @ 01/08/25 00:45:01.051
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 01/08/25 00:45:01.063
  I0108 00:45:01.063612 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:45:01.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:01.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:01.114
  STEP: validating cluster-info @ 01/08/25 00:45:01.126
  I0108 00:45:01.126219 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5177 cluster-info'
  I0108 00:45:01.234871 20 builder.go:146] stderr: ""
  I0108 00:45:01.234933 20 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0108 00:45:01.235312 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5177" for this suite. @ 01/08/25 00:45:01.247
• [0.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/08/25 00:45:01.259
  I0108 00:45:01.259330 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:45:01.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:01.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:01.318
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/08/25 00:45:01.322
  E0108 00:45:01.470965      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:02.471541      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:03.472120      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:04.472287      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:45:05.353
  I0108 00:45:05.361045 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-a6e93cdf-a7f6-46b2-87e4-52d7cf939c07 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:45:05.369
  I0108 00:45:05.413411 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5046" for this suite. @ 01/08/25 00:45:05.421
• [4.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/08/25 00:45:05.442
  I0108 00:45:05.442613 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/08/25 00:45:05.444
  E0108 00:45:05.472393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:05.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:05.497
  I0108 00:45:05.508297 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5702" for this suite. @ 01/08/25 00:45:05.52
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/08/25 00:45:05.557
  I0108 00:45:05.557468 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:45:05.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:05.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:05.597
  STEP: creating a ConfigMap @ 01/08/25 00:45:05.603
  STEP: fetching the ConfigMap @ 01/08/25 00:45:05.614
  STEP: patching the ConfigMap @ 01/08/25 00:45:05.623
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/08/25 00:45:05.636
  STEP: deleting the ConfigMap by collection with a label selector @ 01/08/25 00:45:05.641
  STEP: listing all ConfigMaps in test namespace @ 01/08/25 00:45:05.66
  I0108 00:45:05.670568 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5888" for this suite. @ 01/08/25 00:45:05.675
• [0.136 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/08/25 00:45:05.694
  I0108 00:45:05.694127 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:45:05.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:05.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:05.743
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/08/25 00:45:05.746
  E0108 00:45:06.472762      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:07.473907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:08.474789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:09.474840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:45:09.793
  I0108 00:45:09.796308 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-e0667c60-7848-4528-976f-3f82ba6736f3 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:45:09.803
  I0108 00:45:09.839017 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7792" for this suite. @ 01/08/25 00:45:09.843
• [4.161 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/08/25 00:45:09.856
  I0108 00:45:09.856184 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-webhook @ 01/08/25 00:45:09.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:09.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:09.897
  STEP: Setting up server cert @ 01/08/25 00:45:09.901
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/08/25 00:45:10.447
  STEP: Deploying the custom resource conversion webhook pod @ 01/08/25 00:45:10.466
  E0108 00:45:10.476206      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/08/25 00:45:10.502
  I0108 00:45:10.531391 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0108 00:45:11.476219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:12.476462      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:45:12.545
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:45:12.579
  E0108 00:45:13.476654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:13.580815 20 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0108 00:45:13.589163 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:45:14.477681      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:15.477759      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/08/25 00:45:16.188
  STEP: v2 custom resource should be converted @ 01/08/25 00:45:16.211
  E0108 00:45:16.478904      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:16.852450 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1756" for this suite. @ 01/08/25 00:45:16.857
• [7.030 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/08/25 00:45:16.888
  I0108 00:45:16.888338 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/08/25 00:45:16.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:16.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:16.948
  STEP: creating the policy @ 01/08/25 00:45:16.968
  STEP: waiting until the marker is denied @ 01/08/25 00:45:16.999
  E0108 00:45:17.481421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 01/08/25 00:45:17.866
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/08/25 00:45:17.942
  I0108 00:45:18.117615 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8279" for this suite. @ 01/08/25 00:45:18.143
• [1.285 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/08/25 00:45:18.172
  I0108 00:45:18.173000 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 00:45:18.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:18.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:18.234
  STEP: Creating the pod @ 01/08/25 00:45:18.24
  E0108 00:45:18.482410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:19.482663      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:20.483197      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:21.483422      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:22.486576      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:22.840558 20 pod_client.go:173] Successfully updated pod "annotationupdate4f70cc28-7ce9-431c-9aed-5662592f9cf6"
  E0108 00:45:23.486848      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:24.486961      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:24.858736 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8816" for this suite. @ 01/08/25 00:45:24.864
• [6.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/08/25 00:45:24.879
  I0108 00:45:24.879059 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:45:24.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:24.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:24.932
  I0108 00:45:24.936455 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:45:25.487591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:26.487714      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/08/25 00:45:27.259
  I0108 00:45:27.259434 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-6896 --namespace=crd-publish-openapi-6896 create -f -'
  I0108 00:45:27.465478 20 builder.go:146] stderr: ""
  I0108 00:45:27.465662 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3233-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0108 00:45:27.465729 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-6896 --namespace=crd-publish-openapi-6896 delete e2e-test-crd-publish-openapi-3233-crds test-cr'
  E0108 00:45:27.488276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:27.640898 20 builder.go:146] stderr: ""
  I0108 00:45:27.640957 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3233-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0108 00:45:27.641049 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-6896 --namespace=crd-publish-openapi-6896 apply -f -'
  I0108 00:45:27.790935 20 builder.go:146] stderr: ""
  I0108 00:45:27.790986 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3233-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0108 00:45:27.791045 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-6896 --namespace=crd-publish-openapi-6896 delete e2e-test-crd-publish-openapi-3233-crds test-cr'
  I0108 00:45:27.956525 20 builder.go:146] stderr: ""
  I0108 00:45:27.956700 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3233-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/08/25 00:45:27.956
  I0108 00:45:27.956803 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-6896 explain e2e-test-crd-publish-openapi-3233-crds'
  I0108 00:45:28.076755 20 builder.go:146] stderr: ""
  I0108 00:45:28.076840 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3233-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0108 00:45:28.488745      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:29.489587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:30.378654 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6896" for this suite. @ 01/08/25 00:45:30.386
• [5.519 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 01/08/25 00:45:30.398
  I0108 00:45:30.398532 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 00:45:30.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:30.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:30.439
  STEP: Creating a test headless service @ 01/08/25 00:45:30.442
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4921.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-4921.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 01/08/25 00:45:30.452
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4921.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4921.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/08/25 00:45:30.452
  STEP: creating a pod to probe DNS @ 01/08/25 00:45:30.452
  STEP: submitting the pod to kubernetes @ 01/08/25 00:45:30.453
  E0108 00:45:30.489984      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:31.490398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:32.490681      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:33.491568      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:34.491876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/08/25 00:45:34.526
  STEP: looking for the results for each expected name from probers @ 01/08/25 00:45:34.529
  I0108 00:45:34.549242 20 dns_common.go:546] DNS probes using dns-4921/dns-test-752afcc8-4d01-46fd-8342-fa93b19861fe succeeded

  STEP: deleting the pod @ 01/08/25 00:45:34.549
  STEP: deleting the test headless service @ 01/08/25 00:45:34.593
  I0108 00:45:34.620217 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4921" for this suite. @ 01/08/25 00:45:34.642
• [4.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/08/25 00:45:34.662
  I0108 00:45:34.662927 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 00:45:34.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:34.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:34.709
  I0108 00:45:34.713424 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:45:35.492651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:36.493315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0108 00:45:37.272216      20 warnings.go:70] unknown field "alpha"
  W0108 00:45:37.272246      20 warnings.go:70] unknown field "beta"
  W0108 00:45:37.272254      20 warnings.go:70] unknown field "delta"
  W0108 00:45:37.272263      20 warnings.go:70] unknown field "epsilon"
  W0108 00:45:37.272271      20 warnings.go:70] unknown field "gamma"
  E0108 00:45:37.493444      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:45:37.838066 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4891" for this suite. @ 01/08/25 00:45:37.842
• [3.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/08/25 00:45:37.855
  I0108 00:45:37.855883 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:45:37.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:37.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:37.91
  STEP: Creating configMap configmap-346/configmap-test-82df9b61-d0d5-46d1-a95a-2692d4e249c9 @ 01/08/25 00:45:37.914
  STEP: Creating a pod to test consume configMaps @ 01/08/25 00:45:37.923
  E0108 00:45:38.494758      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:39.494824      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:40.495803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:41.496821      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:45:41.992
  I0108 00:45:41.996519 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-e85b7db2-38a8-4d17-8db7-360839036057 container env-test: <nil>
  STEP: delete the pod @ 01/08/25 00:45:42.016
  I0108 00:45:42.056928 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-346" for this suite. @ 01/08/25 00:45:42.061
• [4.217 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 01/08/25 00:45:42.073
  I0108 00:45:42.073558 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:45:42.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:42.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:42.112
  I0108 00:45:42.156486 20 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0108 00:45:42.156544 20 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0108 00:45:42.182769 20 service_accounts.go:282] created pod pod-service-account-mountsa
  I0108 00:45:42.183585 20 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0108 00:45:42.210699 20 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0108 00:45:42.210915 20 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0108 00:45:42.237326 20 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0108 00:45:42.237378 20 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0108 00:45:42.275876 20 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0108 00:45:42.276360 20 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0108 00:45:42.316457 20 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0108 00:45:42.319745 20 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0108 00:45:42.343399 20 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0108 00:45:42.345459 20 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0108 00:45:42.390036 20 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0108 00:45:42.390096 20 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0108 00:45:42.409048 20 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0108 00:45:42.409093 20 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0108 00:45:42.409322 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8038" for this suite. @ 01/08/25 00:45:42.443
• [0.384 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/08/25 00:45:42.458
  I0108 00:45:42.458034 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-runtime @ 01/08/25 00:45:42.459
  E0108 00:45:42.497132      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:45:42.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:45:42.524
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/08/25 00:45:42.556
  E0108 00:45:43.500137      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:44.500981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:45.501407      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:46.502080      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:47.502239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:48.502503      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:49.502858      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:50.503550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:51.504612      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:52.505399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:53.505667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:54.505846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:55.506457      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:56.507220      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:57.508083      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:58.508274      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:45:59.508967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:00.509847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/08/25 00:46:00.718
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/08/25 00:46:00.723
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/08/25 00:46:00.74
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/08/25 00:46:00.74
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/08/25 00:46:00.787
  E0108 00:46:01.510857      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:02.511980      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:03.512543      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:04.513638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/08/25 00:46:04.839
  E0108 00:46:05.514396      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/08/25 00:46:05.85
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/08/25 00:46:05.856
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/08/25 00:46:05.857
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/08/25 00:46:05.912
  E0108 00:46:06.515927      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/08/25 00:46:06.923
  E0108 00:46:07.516096      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:08.516246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:09.517387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/08/25 00:46:09.94
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/08/25 00:46:09.947
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/08/25 00:46:09.947
  I0108 00:46:09.986189 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8786" for this suite. @ 01/08/25 00:46:09.99
• [27.543 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/08/25 00:46:10.001
  I0108 00:46:10.001045 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 00:46:10.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:46:10.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:46:10.049
  STEP: creating the pod @ 01/08/25 00:46:10.054
  STEP: waiting for pod running @ 01/08/25 00:46:10.072
  E0108 00:46:10.518207      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:11.518611      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:12.519513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:13.519658      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 01/08/25 00:46:14.095
  I0108 00:46:14.098821 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6799 PodName:var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:46:14.098884 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:46:14.098954 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-6799/pods/var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/08/25 00:46:14.225
  I0108 00:46:14.230784 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6799 PodName:var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:46:14.230834 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:46:14.230903 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-6799/pods/var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/08/25 00:46:14.339
  E0108 00:46:14.520023      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:46:14.881576 20 pod_client.go:173] Successfully updated pod "var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c"
  STEP: waiting for annotated pod running @ 01/08/25 00:46:14.881
  STEP: deleting the pod gracefully @ 01/08/25 00:46:14.895
  I0108 00:46:14.895996 20 delete.go:62] Deleting pod "var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c" in namespace "var-expansion-6799"
  I0108 00:46:14.924057 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-15072571-1cd1-4b63-86c3-b2d12a03df2c" to be fully deleted
  E0108 00:46:15.520149      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:16.520880      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:17.521065      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:18.521412      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:19.521566      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:20.523075      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:21.524041      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:22.524532      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:23.524673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:24.524751      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:25.524909      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:26.525048      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:27.526229      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:28.527186      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:29.527295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:30.527530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:31.527937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:32.528360      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:33.528483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:34.528725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:35.528790      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:36.529050      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:37.529354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:38.529382      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:39.529623      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:40.529785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:41.529936      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:42.530014      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:43.530209      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:44.530309      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:45.531064      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:46.532257      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:46:47.038152 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6799" for this suite. @ 01/08/25 00:46:47.044
• [37.056 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/08/25 00:46:47.058
  I0108 00:46:47.058971 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/08/25 00:46:47.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:46:47.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:46:47.114
  STEP: creating a target pod @ 01/08/25 00:46:47.119
  E0108 00:46:47.532272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:48.532473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/08/25 00:46:49.156
  E0108 00:46:49.532700      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:50.533634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:51.534697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:52.534817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/08/25 00:46:53.213
  I0108 00:46:53.213350 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3957 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:46:53.213376 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:46:53.213439 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-3957/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0108 00:46:53.337145 20 exec_util.go:108] Exec stderr: ""
  I0108 00:46:53.344610 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3957" for this suite. @ 01/08/25 00:46:53.349
• [6.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/08/25 00:46:53.367
  I0108 00:46:53.367329 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:46:53.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:46:53.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:46:53.416
  I0108 00:46:53.419369 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: creating the pod @ 01/08/25 00:46:53.42
  STEP: submitting the pod to kubernetes @ 01/08/25 00:46:53.42
  E0108 00:46:53.535780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:54.535950      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:55.536504      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:46:55.721443 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6568" for this suite. @ 01/08/25 00:46:55.725
• [2.370 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/08/25 00:46:55.737
  I0108 00:46:55.737038 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 00:46:55.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:46:55.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:46:55.78
  STEP: creating a Deployment @ 01/08/25 00:46:55.787
  I0108 00:46:55.787248 20 deployment.go:507] Creating simple deployment test-deployment-7tglw
  I0108 00:46:55.828421 20 deployment.go:223] deployment "test-deployment-7tglw" doesn't have the required revision set
  E0108 00:46:56.536629      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:57.536772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/08/25 00:46:57.861
  I0108 00:46:57.867422 20 deployment.go:532] Deployment test-deployment-7tglw has Conditions: [{Available True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-7tglw-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/08/25 00:46:57.867
  I0108 00:46:57.893904 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 46, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 46, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 46, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 46, 55, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-7tglw-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/08/25 00:46:57.893
  I0108 00:46:57.898987 20 deployment.go:579] Observed &Deployment event: ADDED
  I0108 00:46:57.899060 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-7tglw-6fb4c74686"}
  I0108 00:46:57.899227 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0108 00:46:57.899319 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-7tglw-6fb4c74686"}
  I0108 00:46:57.899347 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0108 00:46:57.899529 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0108 00:46:57.899582 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0108 00:46:57.899608 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-7tglw-6fb4c74686" is progressing.}
  I0108 00:46:57.899765 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0108 00:46:57.899836 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0108 00:46:57.899884 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-7tglw-6fb4c74686" has successfully progressed.}
  I0108 00:46:57.900195 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I0108 00:46:57.900243 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0108 00:46:57.900266 20 deployment.go:575] Observed Deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-7tglw-6fb4c74686" has successfully progressed.}
  I0108 00:46:57.900293 20 deployment.go:572] Found Deployment test-deployment-7tglw in namespace deployment-2298 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 00:46:57.900312 20 deployment.go:583] Deployment test-deployment-7tglw has an updated status
  STEP: patching the Statefulset Status @ 01/08/25 00:46:57.9
  I0108 00:46:57.900451 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0108 00:46:57.921588 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/08/25 00:46:57.921
  I0108 00:46:57.924862 20 deployment.go:616] Observed &Deployment event: ADDED
  I0108 00:46:57.924922 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-7tglw-6fb4c74686"}
  I0108 00:46:57.925271 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0108 00:46:57.925329 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-7tglw-6fb4c74686"}
  I0108 00:46:57.925352 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0108 00:46:57.925978 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0108 00:46:57.926067 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0108 00:46:57.926272 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:55 +0000 UTC 2025-01-08 00:46:55 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-7tglw-6fb4c74686" is progressing.}
  I0108 00:46:57.926986 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0108 00:46:57.927057 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0108 00:46:57.927415 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-7tglw-6fb4c74686" has successfully progressed.}
  I0108 00:46:57.927668 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0108 00:46:57.928020 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0108 00:46:57.928191 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-08 00:46:57 +0000 UTC 2025-01-08 00:46:55 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-7tglw-6fb4c74686" has successfully progressed.}
  I0108 00:46:57.928216 20 deployment.go:612] Observed deployment test-deployment-7tglw in namespace deployment-2298 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 00:46:57.928494 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I0108 00:46:57.928709 20 deployment.go:609] Found deployment test-deployment-7tglw in namespace deployment-2298 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0108 00:46:57.928922 20 deployment.go:620] Deployment test-deployment-7tglw has a patched status
  I0108 00:46:57.942306 20 deployment.go:633] Deployment "test-deployment-7tglw":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-7tglw",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2298",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0eeec700-8727-4ca3-be67-c7285f722431",
      ResourceVersion: (string) (len=5) "41543",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871894015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-7tglw-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 00:46:57.956773 20 deployment.go:40] New ReplicaSet "test-deployment-7tglw-6fb4c74686" of Deployment "test-deployment-7tglw":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7tglw-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2298",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "941c8b15-1e70-48ca-9fd0-4d816ff64dc3",
      ResourceVersion: (string) (len=5) "41537",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871894015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-7tglw",
          UID: (types.UID) (len=36) "0eeec700-8727-4ca3-be67-c7285f722431",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 65 65  |k:{\"uid\":\"0ee|
              00000120  65 63 37 30 30 2d 38 37  32 37 2d 34 63 61 33 2d  |ec700-8727-4ca3-|
              00000130  62 65 36 37 2d 63 37 32  38 35 66 37 32 32 34 33  |be67-c7285f72243|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 00:46:57.974846 20 deployment.go:68] Pod "test-deployment-7tglw-6fb4c74686-l97mh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-7tglw-6fb4c74686-l97mh",
      GenerateName: (string) (len=33) "test-deployment-7tglw-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-2298",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ce421f3-0a7b-4668-9561-c3545a598783",
      ResourceVersion: (string) (len=5) "41536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871894015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9c2773457e0c1d32f004560cd3f6e938b1d3412b8d31a3fe30e8b335125839f7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.203/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.203/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-7tglw-6fb4c74686",
          UID: (types.UID) (len=36) "941c8b15-1e70-48ca-9fd0-4d816ff64dc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 34 31 63 38 62 31  35 2d 31 65 37 30 2d 34  |"941c8b15-1e70-4|
              000000a0  38 63 61 2d 39 66 64 30  2d 34 64 38 31 36 66 66  |8ca-9fd0-4d816ff|
              000000b0  36 34 64 63 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |64dc3\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 32 30  33 5c 22 7d 22 3a 7b 22  |.42.4.203\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l7s4t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l7s4t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871894015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=11) "10.42.4.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871894015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871894017,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f8471d299fd28c9d984f0b20513579f307cafac2a5814f2da5ffecbd84ac28a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l7s4t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 00:46:57.981666 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2298" for this suite. @ 01/08/25 00:46:57.991
• [2.270 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/08/25 00:46:58.007
  I0108 00:46:58.007818 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:46:58.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:46:58.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:46:58.05
  I0108 00:46:58.055240 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:46:58.537617      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:46:59.537890      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/08/25 00:47:00.356
  I0108 00:47:00.356901 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 create -f -'
  I0108 00:47:00.499468 20 builder.go:146] stderr: ""
  I0108 00:47:00.499534 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5622-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0108 00:47:00.499962 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 delete e2e-test-crd-publish-openapi-5622-crds test-foo'
  E0108 00:47:00.538856      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:00.627104 20 builder.go:146] stderr: ""
  I0108 00:47:00.627172 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5622-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0108 00:47:00.627238 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 apply -f -'
  I0108 00:47:00.749084 20 builder.go:146] stderr: ""
  I0108 00:47:00.749145 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5622-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0108 00:47:00.749233 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 delete e2e-test-crd-publish-openapi-5622-crds test-foo'
  I0108 00:47:00.863365 20 builder.go:146] stderr: ""
  I0108 00:47:00.863440 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5622-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/08/25 00:47:00.863
  I0108 00:47:00.863539 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 create -f -'
  I0108 00:47:00.952186 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/08/25 00:47:00.952
  I0108 00:47:00.952493 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 create -f -'
  I0108 00:47:01.063528 20 builder.go:135] rc: 1
  I0108 00:47:01.063760 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 apply -f -'
  I0108 00:47:01.156004 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/08/25 00:47:01.156
  I0108 00:47:01.156281 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 create -f -'
  I0108 00:47:01.244060 20 builder.go:135] rc: 1
  I0108 00:47:01.244188 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 --namespace=crd-publish-openapi-5862 apply -f -'
  I0108 00:47:01.401584 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/08/25 00:47:01.401
  I0108 00:47:01.401722 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 explain e2e-test-crd-publish-openapi-5622-crds'
  I0108 00:47:01.487948 20 builder.go:146] stderr: ""
  I0108 00:47:01.488033 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5622-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/08/25 00:47:01.488
  I0108 00:47:01.488649 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 explain e2e-test-crd-publish-openapi-5622-crds.metadata'
  E0108 00:47:01.539052      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:01.575742 20 builder.go:146] stderr: ""
  I0108 00:47:01.576202 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5622-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0108 00:47:01.576672 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 explain e2e-test-crd-publish-openapi-5622-crds.spec'
  I0108 00:47:01.660469 20 builder.go:146] stderr: ""
  I0108 00:47:01.660541 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5622-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0108 00:47:01.660669 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 explain e2e-test-crd-publish-openapi-5622-crds.spec.bars'
  I0108 00:47:01.753662 20 builder.go:146] stderr: ""
  I0108 00:47:01.753734 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5622-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/08/25 00:47:01.753
  I0108 00:47:01.754000 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=crd-publish-openapi-5862 explain e2e-test-crd-publish-openapi-5622-crds.spec.bars2'
  I0108 00:47:01.839587 20 builder.go:135] rc: 1
  E0108 00:47:02.539843      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:03.540172      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:03.910093 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5862" for this suite. @ 01/08/25 00:47:03.917
• [5.922 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/08/25 00:47:03.929
  I0108 00:47:03.929956 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename endpointslice @ 01/08/25 00:47:03.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:03.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:03.975
  E0108 00:47:04.540293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:05.541482      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:06.542056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:07.542296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/08/25 00:47:08.204
  STEP: referencing matching pods with named port @ 01/08/25 00:47:08.211
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/08/25 00:47:08.218
  STEP: recreating EndpointSlices after they've been deleted @ 01/08/25 00:47:08.227
  I0108 00:47:08.265059 20 endpointslice.go:938] EndpointSlice for Service endpointslice-7396/example-named-port not found
  E0108 00:47:08.542497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:09.542652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:10.269297 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7396" for this suite. @ 01/08/25 00:47:10.274
• [6.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/08/25 00:47:10.293
  I0108 00:47:10.293149 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:47:10.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:10.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:10.347
  STEP: Setting up server cert @ 01/08/25 00:47:10.435
  E0108 00:47:10.543060      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:47:10.991
  STEP: Deploying the webhook pod @ 01/08/25 00:47:11.006
  STEP: Wait for the deployment to be ready @ 01/08/25 00:47:11.044
  I0108 00:47:11.077093 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 00:47:11.543656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:12.544702      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:47:13.093
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:47:13.137
  E0108 00:47:13.545064      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:14.137556 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/08/25 00:47:14.147
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/08/25 00:47:14.186
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/08/25 00:47:14.206
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/08/25 00:47:14.226
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/08/25 00:47:14.251
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/08/25 00:47:14.267
  I0108 00:47:14.417353 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9351" for this suite. @ 01/08/25 00:47:14.422
  STEP: Destroying namespace "webhook-markers-9131" for this suite. @ 01/08/25 00:47:14.459
• [4.184 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/08/25 00:47:14.477
  I0108 00:47:14.478004 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replication-controller @ 01/08/25 00:47:14.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:14.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:14.533
  I0108 00:47:14.537019 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0108 00:47:14.548441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/08/25 00:47:14.566
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/08/25 00:47:14.577
  E0108 00:47:15.549385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/08/25 00:47:15.587
  I0108 00:47:15.620682 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/08/25 00:47:15.62
  E0108 00:47:16.549874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:16.663331 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8525" for this suite. @ 01/08/25 00:47:16.674
• [2.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/08/25 00:47:16.744
  I0108 00:47:16.745010 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pv @ 01/08/25 00:47:16.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:16.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:16.782
  STEP: Creating initial PV and PVC @ 01/08/25 00:47:16.785
  I0108 00:47:16.786027 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8371" @ 01/08/25 00:47:16.822
  STEP: Listing PVCs in namespace "pv-8371" @ 01/08/25 00:47:16.836
  STEP: Reading "pvc-9jbsm" Status @ 01/08/25 00:47:16.849
  STEP: Reading "pv-8371-bn6zl" Status @ 01/08/25 00:47:16.857
  STEP: Patching "pvc-9jbsm" Status @ 01/08/25 00:47:16.871
  STEP: Patching "pv-8371-bn6zl" Status @ 01/08/25 00:47:16.906
  STEP: Updating "pvc-9jbsm" Status @ 01/08/25 00:47:16.921
  STEP: Updating "pv-8371-bn6zl" Status @ 01/08/25 00:47:16.978
  I0108 00:47:17.005624 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0108 00:47:17.005675 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-9jbsm"
  I0108 00:47:17.036380 20 pv.go:193] Deleting PersistentVolume "pv-8371-bn6zl"
  I0108 00:47:17.061669 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8371" for this suite. @ 01/08/25 00:47:17.081
• [0.364 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/08/25 00:47:17.108
  I0108 00:47:17.108848 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-pred @ 01/08/25 00:47:17.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:17.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:17.167
  I0108 00:47:17.170981 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0108 00:47:17.197164 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 00:47:17.214694 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-191.us-east-2.compute.internal before test
  I0108 00:47:17.220289 20 predicates.go:957] pod1 from endpointslice-7396 started at 2025-01-08 00:47:04 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220358 20 predicates.go:959] 	Container container1 ready: false, restart count 0
  I0108 00:47:17.220378 20 predicates.go:957] pod2 from endpointslice-7396 started at 2025-01-08 00:47:04 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220391 20 predicates.go:959] 	Container container1 ready: false, restart count 0
  I0108 00:47:17.220406 20 predicates.go:957] ephemeral-containers-target-pod from ephemeral-containers-test-3957 started at 2025-01-08 00:46:47 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220418 20 predicates.go:959] 	Container test-container-1 ready: true, restart count 0
  I0108 00:47:17.220431 20 predicates.go:957] kube-proxy-ip-172-31-16-191.us-east-2.compute.internal from kube-system started at 2025-01-07 22:55:54 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220444 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:47:17.220457 20 predicates.go:957] rke2-canal-mvsmq from kube-system started at 2025-01-07 22:55:55 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.220470 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:47:17.220481 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:47:17.220494 20 predicates.go:957] rke2-ingress-nginx-controller-cz25t from kube-system started at 2025-01-07 22:56:15 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220506 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:47:17.220519 20 predicates.go:957] pod-exec-websocket-378da353-4bbe-45f1-81ae-6062e7023bd7 from pods-6568 started at 2025-01-08 00:46:53 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220531 20 predicates.go:959] 	Container main ready: true, restart count 0
  I0108 00:47:17.220544 20 predicates.go:957] condition-test-xt6sp from replication-controller-8525 started at 2025-01-08 00:47:14 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220555 20 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0108 00:47:17.220568 20 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-08 00:00:32 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.220588 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0108 00:47:17.220603 20 predicates.go:957] sonobuoy-e2e-job-716815d5e1d345de from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.220614 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0108 00:47:17.220625 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:47:17.220639 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.220650 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:47:17.220661 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:47:17.220673 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-100.us-east-2.compute.internal before test
  I0108 00:47:17.228829 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:00 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.228876 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:47:17.228892 20 predicates.go:957] etcd-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.228904 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:47:17.228917 20 predicates.go:957] helm-install-rke2-canal-qzdhf from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.228929 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.228942 20 predicates.go:957] helm-install-rke2-coredns-cglhz from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.228953 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.228967 20 predicates.go:957] helm-install-rke2-ingress-nginx-bk9t5 from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.228979 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.228992 20 predicates.go:957] helm-install-rke2-metrics-server-6gfgc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229005 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.229019 20 predicates.go:957] helm-install-rke2-snapshot-controller-2gqss from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229031 20 predicates.go:959] 	Container helm ready: false, restart count 1
  I0108 00:47:17.229044 20 predicates.go:957] helm-install-rke2-snapshot-controller-crd-r6cbj from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229056 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.229070 20 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-mfczq from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229081 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 00:47:17.229094 20 predicates.go:957] kube-apiserver-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:52 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229107 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:47:17.229121 20 predicates.go:957] kube-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:58 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229132 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:47:17.229145 20 predicates.go:957] kube-proxy-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229157 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:47:17.229170 20 predicates.go:957] kube-scheduler-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:03 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229253 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:47:17.229270 20 predicates.go:957] rke2-canal-ppzvh from kube-system started at 2025-01-07 22:49:21 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.229282 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:47:17.229293 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:47:17.229326 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-49nnc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229344 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 00:47:17.229360 20 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-5868d76f68-fg8gc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229373 20 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0108 00:47:17.229386 20 predicates.go:957] rke2-ingress-nginx-controller-mvz85 from kube-system started at 2025-01-07 22:50:47 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229397 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:47:17.229409 20 predicates.go:957] rke2-metrics-server-55f5b7fcd8-lkl7k from kube-system started at 2025-01-07 22:50:17 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229420 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0108 00:47:17.229433 20 predicates.go:957] rke2-snapshot-controller-755fc86fc-gq4xt from kube-system started at 2025-01-07 22:50:24 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229445 20 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0108 00:47:17.229458 20 predicates.go:957] rke2-snapshot-validation-webhook-75bc6f574f-8qnm4 from kube-system started at 2025-01-07 22:50:22 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.229469 20 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0108 00:47:17.229482 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xf89t from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.229494 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:47:17.229504 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:47:17.229516 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-249.us-east-2.compute.internal before test
  I0108 00:47:17.236334 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236479 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:47:17.236501 20 predicates.go:957] etcd-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236515 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:47:17.236622 20 predicates.go:957] kube-apiserver-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:14 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236639 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:47:17.236653 20 predicates.go:957] kube-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236665 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:47:17.236760 20 predicates.go:957] kube-proxy-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236774 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:47:17.236787 20 predicates.go:957] kube-scheduler-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:24 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.236798 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:47:17.237010 20 predicates.go:957] rke2-canal-6766w from kube-system started at 2025-01-07 22:53:38 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.237023 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:47:17.237034 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:47:17.237119 20 predicates.go:957] rke2-ingress-nginx-controller-vp2n2 from kube-system started at 2025-01-07 22:54:34 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.237134 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:47:17.237147 20 predicates.go:957] condition-test-jrh72 from replication-controller-8525 started at 2025-01-08 00:47:14 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.237158 20 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0108 00:47:17.237170 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-4rxjf from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.237288 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:47:17.237300 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 00:47:17.237311 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-25-234.us-east-2.compute.internal before test
  I0108 00:47:17.243880 20 predicates.go:957] cloud-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.244133 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 00:47:17.244255 20 predicates.go:957] etcd-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:58 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.244368 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 00:47:17.244538 20 predicates.go:957] kube-apiserver-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:14 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.244652 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 00:47:17.244984 20 predicates.go:957] kube-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.245134 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 00:47:17.245317 20 predicates.go:957] kube-proxy-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:59 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.245442 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 00:47:17.245542 20 predicates.go:957] kube-scheduler-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.245631 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 00:47:17.245740 20 predicates.go:957] rke2-canal-lwv6s from kube-system started at 2025-01-07 22:52:29 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.245850 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 00:47:17.246118 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 00:47:17.246394 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-rfstj from kube-system started at 2025-01-07 22:52:42 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.246507 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 00:47:17.246616 20 predicates.go:957] rke2-ingress-nginx-controller-qnq5t from kube-system started at 2025-01-07 22:52:43 +0000 UTC (1 container statuses recorded)
  I0108 00:47:17.246711 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 00:47:17.246802 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xb2qj from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 00:47:17.246909 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 00:47:17.247018 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-16-191.us-east-2.compute.internal @ 01/08/25 00:47:17.287
  STEP: verifying the node has the label node ip-172-31-20-100.us-east-2.compute.internal @ 01/08/25 00:47:17.359
  STEP: verifying the node has the label node ip-172-31-20-249.us-east-2.compute.internal @ 01/08/25 00:47:17.442
  STEP: verifying the node has the label node ip-172-31-25-234.us-east-2.compute.internal @ 01/08/25 00:47:17.495
  I0108 00:47:17.535712 20 predicates.go:372] Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.535781 20 predicates.go:372] Pod cloud-controller-manager-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.535798 20 predicates.go:372] Pod cloud-controller-manager-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.535812 20 predicates.go:372] Pod cloud-controller-manager-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.535826 20 predicates.go:372] Pod etcd-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.535839 20 predicates.go:372] Pod etcd-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.535852 20 predicates.go:372] Pod etcd-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.535868 20 predicates.go:372] Pod kube-apiserver-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.535880 20 predicates.go:372] Pod kube-apiserver-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.535897 20 predicates.go:372] Pod kube-apiserver-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.535910 20 predicates.go:372] Pod kube-controller-manager-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.535923 20 predicates.go:372] Pod kube-controller-manager-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.535936 20 predicates.go:372] Pod kube-controller-manager-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.535949 20 predicates.go:372] Pod kube-proxy-ip-172-31-16-191.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.535960 20 predicates.go:372] Pod kube-proxy-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.535973 20 predicates.go:372] Pod kube-proxy-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.535987 20 predicates.go:372] Pod kube-proxy-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536000 20 predicates.go:372] Pod kube-scheduler-ip-172-31-20-100.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536017 20 predicates.go:372] Pod kube-scheduler-ip-172-31-20-249.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.536031 20 predicates.go:372] Pod kube-scheduler-ip-172-31-25-234.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536045 20 predicates.go:372] Pod rke2-canal-6766w requesting resource cpu=250m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.536060 20 predicates.go:372] Pod rke2-canal-lwv6s requesting resource cpu=250m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536075 20 predicates.go:372] Pod rke2-canal-mvsmq requesting resource cpu=250m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536090 20 predicates.go:372] Pod rke2-canal-ppzvh requesting resource cpu=250m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536103 20 predicates.go:372] Pod rke2-coredns-rke2-coredns-7895c6f5d8-49nnc requesting resource cpu=100m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536117 20 predicates.go:372] Pod rke2-coredns-rke2-coredns-7895c6f5d8-rfstj requesting resource cpu=100m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536130 20 predicates.go:372] Pod rke2-coredns-rke2-coredns-autoscaler-5868d76f68-fg8gc requesting resource cpu=25m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536144 20 predicates.go:372] Pod rke2-ingress-nginx-controller-cz25t requesting resource cpu=100m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536159 20 predicates.go:372] Pod rke2-ingress-nginx-controller-mvz85 requesting resource cpu=100m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536174 20 predicates.go:372] Pod rke2-ingress-nginx-controller-qnq5t requesting resource cpu=100m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536188 20 predicates.go:372] Pod rke2-ingress-nginx-controller-vp2n2 requesting resource cpu=100m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.536203 20 predicates.go:372] Pod rke2-metrics-server-55f5b7fcd8-lkl7k requesting resource cpu=100m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536216 20 predicates.go:372] Pod rke2-snapshot-controller-755fc86fc-gq4xt requesting resource cpu=0m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536230 20 predicates.go:372] Pod rke2-snapshot-validation-webhook-75bc6f574f-8qnm4 requesting resource cpu=0m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.536243 20 predicates.go:372] Pod pod-exec-websocket-378da353-4bbe-45f1-81ae-6062e7023bd7 requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536257 20 predicates.go:372] Pod condition-test-jrh72 requesting resource cpu=0m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.536270 20 predicates.go:372] Pod condition-test-xt6sp requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536285 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536298 20 predicates.go:372] Pod sonobuoy-e2e-job-716815d5e1d345de requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536310 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-4rxjf requesting resource cpu=0m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.536323 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x requesting resource cpu=0m on Node ip-172-31-16-191.us-east-2.compute.internal
  I0108 00:47:17.536338 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xb2qj requesting resource cpu=0m on Node ip-172-31-25-234.us-east-2.compute.internal
  I0108 00:47:17.536351 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xf89t requesting resource cpu=0m on Node ip-172-31-20-100.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/08/25 00:47:17.536
  I0108 00:47:17.536399 20 predicates.go:382] Creating a pod which consumes cpu=980m on Node ip-172-31-16-191.us-east-2.compute.internal
  E0108 00:47:17.550117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:17.564664 20 predicates.go:382] Creating a pod which consumes cpu=227m on Node ip-172-31-20-100.us-east-2.compute.internal
  I0108 00:47:17.581571 20 predicates.go:382] Creating a pod which consumes cpu=385m on Node ip-172-31-20-249.us-east-2.compute.internal
  I0108 00:47:17.623753 20 predicates.go:382] Creating a pod which consumes cpu=315m on Node ip-172-31-25-234.us-east-2.compute.internal
  E0108 00:47:18.552388      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:19.552300      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:20.553529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:21.553993      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/08/25 00:47:21.703
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417.181891236be41948], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4509/filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417 to ip-172-31-20-249.us-east-2.compute.internal] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417.18189123a5faaf56], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417.18189123aaf59792], Reason = [Created], Message = [Created container: filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417.18189123baa1d221], Reason = [Started], Message = [Started container filler-pod-1d3fd2aa-a758-4bda-8567-e6987be14417] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5.181891236c495722], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4509/filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5 to ip-172-31-25-234.us-east-2.compute.internal] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5.18189123a694cc29], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5.18189123abcd3ee0], Reason = [Created], Message = [Created container: filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5.18189123be48a4b5], Reason = [Started], Message = [Started container filler-pod-459f2c39-c6a6-4f79-b05a-f699f78eafd5] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0.1818912368308062], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4509/filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0 to ip-172-31-20-100.us-east-2.compute.internal] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0.18189123a9c3b6b8], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0.18189123ecee1413], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 1.126s (1.126s including waiting). Image size: 320368 bytes.] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0.18189123f6bb28eb], Reason = [Created], Message = [Created container: filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0.1818912412a70420], Reason = [Started], Message = [Started container filler-pod-8126d2e8-a941-4126-9a24-79c4d3bcf0d0] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd.181891236834e9c4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4509/filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd to ip-172-31-16-191.us-east-2.compute.internal] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd.18189123a1593ff6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd.18189123a68cd056], Reason = [Created], Message = [Created container: filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd.18189123b2bb10d9], Reason = [Started], Message = [Started container filler-pod-89e2b7ae-fbef-43c0-a039-927c534434cd] @ 01/08/25 00:47:21.709
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.181891245db403db], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 01/08/25 00:47:21.746
  E0108 00:47:22.554218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-16-191.us-east-2.compute.internal @ 01/08/25 00:47:22.749
  STEP: verifying the node doesn't have the label node @ 01/08/25 00:47:22.805
  STEP: removing the label node off the node ip-172-31-20-100.us-east-2.compute.internal @ 01/08/25 00:47:22.909
  STEP: verifying the node doesn't have the label node @ 01/08/25 00:47:22.968
  STEP: removing the label node off the node ip-172-31-20-249.us-east-2.compute.internal @ 01/08/25 00:47:22.985
  STEP: verifying the node doesn't have the label node @ 01/08/25 00:47:23.039
  STEP: removing the label node off the node ip-172-31-25-234.us-east-2.compute.internal @ 01/08/25 00:47:23.057
  STEP: verifying the node doesn't have the label node @ 01/08/25 00:47:23.107
  I0108 00:47:23.128653 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4509" for this suite. @ 01/08/25 00:47:23.149
• [6.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 01/08/25 00:47:23.174
  I0108 00:47:23.174692 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 00:47:23.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:47:23.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:47:23.228
  STEP: Creating service test in namespace statefulset-929 @ 01/08/25 00:47:23.231
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/08/25 00:47:23.243
  STEP: Creating stateful set ss in namespace statefulset-929 @ 01/08/25 00:47:23.262
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-929 @ 01/08/25 00:47:23.278
  I0108 00:47:23.313007 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0108 00:47:23.554987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:24.555139      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:25.555250      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:26.556005      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:27.556199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:28.557268      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:29.557806      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:30.557945      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:31.558554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:32.558863      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:33.283878 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/08/25 00:47:33.283
  I0108 00:47:33.288273 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0108 00:47:33.561387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:33.718336 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:47:33.718389 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:47:33.718518 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 00:47:33.722515 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0108 00:47:34.561430      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:35.561628      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:36.561846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:37.562616      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:38.562789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:39.562935      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:40.563935      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:41.563941      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:42.564290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:43.564406      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:43.729730 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0108 00:47:43.729810 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0108 00:47:43.831146 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.99999956s
  E0108 00:47:44.564705      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:44.837951 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.939351335s
  E0108 00:47:45.565529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:45.842987 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.933028012s
  E0108 00:47:46.566610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:46.849556 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.927599188s
  E0108 00:47:47.567246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:47.856672 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.921241376s
  E0108 00:47:48.567665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:48.863336 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.913972862s
  E0108 00:47:49.568016      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:49.868764 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.907226314s
  E0108 00:47:50.568260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:50.881810 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.90195668s
  E0108 00:47:51.568849      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:51.889987 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.889567903s
  E0108 00:47:52.569539      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:47:52.896545 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 880.908154ms
  E0108 00:47:53.570548      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-929 @ 01/08/25 00:47:53.896
  I0108 00:47:53.901983 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 00:47:54.107703 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:47:54.107772 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:47:54.107795 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 00:47:54.111977 20 wait.go:40] Found 1 stateful pods, waiting for 3
  E0108 00:47:54.573371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:55.574174      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:56.574283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:57.575276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:58.575269      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:47:59.575382      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:00.575596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:01.576292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:02.576592      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:03.576803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:04.114147 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:48:04.114196 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:48:04.114215 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/08/25 00:48:04.114
  STEP: Scale down will halt with unhealthy stateful pod @ 01/08/25 00:48:04.114
  I0108 00:48:04.121672 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 00:48:04.355499 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:48:04.355695 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:48:04.355963 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 00:48:04.356253 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0108 00:48:04.577604      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:04.591956 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:48:04.592023 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:48:04.592046 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 00:48:04.592113 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 00:48:04.939262 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:48:04.939340 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:48:04.939376 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 00:48:04.939394 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0108 00:48:04.944379 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0108 00:48:05.578154      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:06.578642      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:07.579033      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:08.579881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:09.579885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:10.580265      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:11.581043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:12.581397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:13.581525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:14.582591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:14.948338 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0108 00:48:14.948401 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0108 00:48:14.948419 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0108 00:48:15.052566 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.9999996s
  E0108 00:48:15.583296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:16.059473 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.915314626s
  E0108 00:48:16.584070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:17.068304 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.908477487s
  E0108 00:48:17.584531      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:18.076822 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.898926115s
  E0108 00:48:18.585289      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:19.096057 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.890195238s
  E0108 00:48:19.585962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:20.102026 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.870981757s
  E0108 00:48:20.586551      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:21.109055 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.864914237s
  E0108 00:48:21.586653      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:22.118552 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.858837216s
  E0108 00:48:22.587145      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:23.126025 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.848313026s
  E0108 00:48:23.587447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:24.149480 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 841.027302ms
  E0108 00:48:24.587680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-929 @ 01/08/25 00:48:25.15
  I0108 00:48:25.155406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 00:48:25.389252 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:48:25.389329 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:48:25.389365 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 00:48:25.389432 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0108 00:48:25.589416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:48:25.595855 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:48:25.595917 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:48:25.595942 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 00:48:25.596012 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-929 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 00:48:25.821923 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:48:25.821981 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:48:25.822002 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 00:48:25.822021 20 rest.go:152] Scaling statefulset ss to 0
  E0108 00:48:26.590591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:27.591102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:28.591281      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:29.591382      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:30.591428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:31.593335      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:32.592561      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:33.592911      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:34.593284      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:35.593558      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/08/25 00:48:35.842
  I0108 00:48:35.842642 20 statefulset.go:138] Deleting all statefulset in ns statefulset-929
  I0108 00:48:35.847323 20 rest.go:152] Scaling statefulset ss to 0
  I0108 00:48:35.856292 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 00:48:35.859366 20 rest.go:90] Deleting statefulset ss
  I0108 00:48:35.886663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-929" for this suite. @ 01/08/25 00:48:35.895
• [72.740 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/08/25 00:48:35.914
  I0108 00:48:35.914361 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/08/25 00:48:35.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:48:35.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:48:35.961
  I0108 00:48:35.966051 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0108 00:48:36.594093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:37.594910      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:38.595046      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:39.595453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:40.596562      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:41.597283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:42.597422      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:43.597593      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:44.597726      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:45.597844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:46.598178      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:47.598404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:48.598594      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:49.598892      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:50.599245      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:51.600056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:52.601033      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:53.601226      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:54.602050      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:55.602224      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:56.603057      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:57.603703      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:58.603667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:48:59.604571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:00.605332      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:01.605712      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:02.605993      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:03.606565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:04.607542      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:05.607722      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:06.608151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:07.608487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:08.608764      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:09.609107      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:10.609334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:11.610050      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:12.610218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:13.613047      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:14.611601      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:15.611842      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:16.611886      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:17.612216      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:18.612514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:19.613086      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:20.613296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:21.614156      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:22.614355      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:23.615322      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:24.616495      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:25.623478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:26.617127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:27.617380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:28.618083      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:29.619013      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:30.619981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:31.620167      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:32.620313      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:33.620454      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:34.620719      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:35.621477      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:49:35.967162 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 00:49:35.972454 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/08/25 00:49:35.972
  I0108 00:49:36.201952 20 taints.go:463] Pod1 is running on ip-172-31-16-191.us-east-2.compute.internal. Tainting Node
  E0108 00:49:36.622494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:37.623707      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:49:38.431306 20 taints.go:471] Pod2 is running on ip-172-31-16-191.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/08/25 00:49:38.431
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/08/25 00:49:38.458
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/08/25 00:49:38.479
  E0108 00:49:38.627955      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:39.628212      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:40.628536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:41.628969      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:42.630089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:43.630843      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:44.631552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:49:44.903080 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0108 00:49:45.631902      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:46.632534      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:47.632705      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:48.632840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:49.633090      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:50.635679      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:51.634321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:52.634508      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:53.635495      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:54.635887      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:55.636105      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:56.636569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:57.637013      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:58.636939      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:49:59.637315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:00.637483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:01.637901      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:02.638594      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:03.641440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:04.642526      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:50:04.965813 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/08/25 00:50:05.007
  I0108 00:50:05.022489 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5883" for this suite. @ 01/08/25 00:50:05.032
• [89.162 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 01/08/25 00:50:05.077
  I0108 00:50:05.078068 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:50:05.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:05.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:05.229
  STEP: Creating a pod to test service account token:  @ 01/08/25 00:50:05.238
  E0108 00:50:05.643542      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:06.651345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:07.652370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:08.652680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:09.652922      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:10.653388      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:50:11.289
  I0108 00:50:11.293319 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod test-pod-5ed2520f-0d22-4d17-931f-fdf6c1708301 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:50:11.311
  I0108 00:50:11.346660 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6096" for this suite. @ 01/08/25 00:50:11.351
• [6.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/08/25 00:50:11.377
  I0108 00:50:11.377866 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/08/25 00:50:11.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:11.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:11.426
  I0108 00:50:11.430534 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:50:11.653882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:12.654528      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:13.654625      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:14.655282      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:50:14.695869 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6201" for this suite. @ 01/08/25 00:50:14.703
• [3.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/08/25 00:50:14.724
  I0108 00:50:14.724134 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-runtime @ 01/08/25 00:50:14.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:14.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:14.767
  STEP: create the container @ 01/08/25 00:50:14.774
  W0108 00:50:14.800550      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/08/25 00:50:14.801
  E0108 00:50:15.656795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:16.657343      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:17.657554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:18.657728      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/08/25 00:50:18.826
  STEP: the container should be terminated @ 01/08/25 00:50:18.834
  STEP: the termination message should be set @ 01/08/25 00:50:18.834
  I0108 00:50:18.834404 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/08/25 00:50:18.834
  I0108 00:50:18.883334 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3227" for this suite. @ 01/08/25 00:50:18.888
• [4.176 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/08/25 00:50:18.9
  I0108 00:50:18.900910 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:50:18.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:18.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:18.947
  STEP: Counting existing ResourceQuota @ 01/08/25 00:50:18.95
  E0108 00:50:19.657861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:20.658535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:21.658913      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:22.659699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:23.659838      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/08/25 00:50:23.963
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:50:23.977
  E0108 00:50:24.661354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:25.662257      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 01/08/25 00:50:25.986
  STEP: Ensuring resource quota status captures replication controller creation @ 01/08/25 00:50:26.012
  E0108 00:50:26.662134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:27.662475      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 01/08/25 00:50:28.019
  STEP: Ensuring resource quota status released usage @ 01/08/25 00:50:28.032
  E0108 00:50:28.662648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:29.662820      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:50:30.037762 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2346" for this suite. @ 01/08/25 00:50:30.043
• [11.156 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/08/25 00:50:30.057
  I0108 00:50:30.057153 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/08/25 00:50:30.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:30.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:30.109
  STEP: creating a target pod @ 01/08/25 00:50:30.113
  E0108 00:50:30.663980      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:31.663998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/08/25 00:50:32.15
  E0108 00:50:32.665043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:33.665164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:34.665529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:35.665534      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/08/25 00:50:36.187
  I0108 00:50:36.187275 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9011 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:50:36.187299 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:50:36.187358 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-9011/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0108 00:50:36.324445 20 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/08/25 00:50:36.335
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/08/25 00:50:36.34
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/08/25 00:50:36.373
  I0108 00:50:36.404241 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9011" for this suite. @ 01/08/25 00:50:36.415
• [6.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/08/25 00:50:36.447
  I0108 00:50:36.447680 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:50:36.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:36.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:36.516
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:50:36.519
  E0108 00:50:36.669392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:37.670498      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:38.670981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:39.671152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:50:40.564
  I0108 00:50:40.568829 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-765464fc-2663-4a48-869e-05be5d48562b container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:50:40.58
  I0108 00:50:40.621901 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4207" for this suite. @ 01/08/25 00:50:40.627
• [4.192 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/08/25 00:50:40.641
  I0108 00:50:40.641131 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename ingress @ 01/08/25 00:50:40.644
  E0108 00:50:40.671158      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:40.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:40.695
  STEP: getting /apis @ 01/08/25 00:50:40.702
  STEP: getting /apis/networking.k8s.io @ 01/08/25 00:50:40.708
  STEP: getting /apis/networking.k8s.iov1 @ 01/08/25 00:50:40.712
  STEP: creating @ 01/08/25 00:50:40.716
  STEP: getting @ 01/08/25 00:50:41.121
  STEP: listing @ 01/08/25 00:50:41.131
  STEP: watching @ 01/08/25 00:50:41.147
  I0108 00:50:41.147676 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/08/25 00:50:41.149
  STEP: cluster-wide watching @ 01/08/25 00:50:41.248
  I0108 00:50:41.248078 20 ingress.go:198] starting watch
  STEP: patching @ 01/08/25 00:50:41.249
  STEP: updating @ 01/08/25 00:50:41.304
  I0108 00:50:41.383003 20 ingress.go:221] waiting for watch events with expected annotations
  I0108 00:50:41.384064 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/08/25 00:50:41.384
  STEP: updating /status @ 01/08/25 00:50:41.405
  STEP: get /status @ 01/08/25 00:50:41.444
  STEP: deleting @ 01/08/25 00:50:41.47
  STEP: deleting a collection @ 01/08/25 00:50:41.538
  I0108 00:50:41.595261 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3398" for this suite. @ 01/08/25 00:50:41.601
• [0.981 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/08/25 00:50:41.621
  I0108 00:50:41.621850 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename chunking @ 01/08/25 00:50:41.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:50:41.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:50:41.67
  E0108 00:50:41.671215      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a large number of resources @ 01/08/25 00:50:41.674
  E0108 00:50:42.672386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:43.673130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:44.674213      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:45.674651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:46.674923      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:47.675032      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:48.675243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:49.676639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:50.676861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:51.677491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:52.678457      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:53.679172      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:54.679462      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:55.680441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:56.681054      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:57.681612      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:50:58.681733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 01/08/25 00:50:59.346
  I0108 00:50:59.383363 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0108 00:50:59.430586 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0108 00:50:59.479303 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0108 00:50:59.528901 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0108 00:50:59.580783 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0108 00:50:59.629204 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0108 00:50:59.679043 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0108 00:50:59.682132      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:50:59.728424 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0108 00:50:59.778196 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0108 00:50:59.828141 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0108 00:50:59.878933 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0108 00:50:59.927975 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0108 00:50:59.978997 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0108 00:51:00.035030 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0108 00:51:00.077833 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0108 00:51:00.130769 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0108 00:51:00.178627 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0108 00:51:00.228844 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0108 00:51:00.278410 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0108 00:51:00.330219 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0108 00:51:00.378518 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0108 00:51:00.430358 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0108 00:51:00.478739 20 chunking.go:98] Retrieved 17/17 results with rv 43835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0108 00:51:00.529531 20 chunking.go:98] Retrieved 9/17 results with rv 43835 and continue 
  I0108 00:51:00.579967 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0108 00:51:00.628714 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0108 00:51:00.683139      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:51:00.690459 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0108 00:51:00.728824 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0108 00:51:00.781285 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0108 00:51:00.828700 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0108 00:51:00.877890 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0108 00:51:00.939544 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0108 00:51:00.978194 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0108 00:51:01.030825 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0108 00:51:01.077720 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0108 00:51:01.127792 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0108 00:51:01.198544 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0108 00:51:01.231888 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0108 00:51:01.285715 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0108 00:51:01.331456 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0108 00:51:01.379190 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0108 00:51:01.428855 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0108 00:51:01.479056 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0108 00:51:01.527761 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0108 00:51:01.578287 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0108 00:51:01.628555 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0108 00:51:01.683500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:51:01.683796 20 chunking.go:98] Retrieved 17/17 results with rv 43837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0108 00:51:01.727877 20 chunking.go:98] Retrieved 9/17 results with rv 43837 and continue 
  I0108 00:51:01.779026 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0108 00:51:01.828511 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0108 00:51:01.879129 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0108 00:51:01.928354 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0108 00:51:01.980007 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0108 00:51:02.028862 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0108 00:51:02.078702 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0108 00:51:02.135701 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0108 00:51:02.182984 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0108 00:51:02.229254 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0108 00:51:02.279555 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0108 00:51:02.328500 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0108 00:51:02.378604 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0108 00:51:02.429027 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0108 00:51:02.478187 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0108 00:51:02.534804 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0108 00:51:02.581173 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0108 00:51:02.628701 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0108 00:51:02.678531 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E0108 00:51:02.684591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:51:02.730886 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0108 00:51:02.777878 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0108 00:51:02.829091 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0108 00:51:02.877780 20 chunking.go:98] Retrieved 17/17 results with rv 43843 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDM4NDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0108 00:51:02.932822 20 chunking.go:98] Retrieved 9/17 results with rv 43843 and continue 
  STEP: retrieving those results all at once @ 01/08/25 00:51:02.932
  I0108 00:51:02.983653 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9538" for this suite. @ 01/08/25 00:51:03.036
• [21.464 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 01/08/25 00:51:03.088
  I0108 00:51:03.088657 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption @ 01/08/25 00:51:03.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:51:03.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:51:03.133
  I0108 00:51:03.177374 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0108 00:51:03.685211      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:04.685356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:05.686323      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:06.687735      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:07.689565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:08.689715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:09.690193      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:10.690520      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:11.691083      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:12.691562      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:13.692638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:14.693371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:15.693535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:16.694147      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:17.694572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:18.694657      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:19.694841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:20.695076      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:21.697118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:22.697246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:23.698142      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:24.698577      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:25.698547      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:26.699424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:27.699564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:28.699860      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:29.699946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:30.700796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:31.701651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:32.701604      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:33.701796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:34.702474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:35.702709      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:36.702861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:37.703099      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:38.703256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:39.704036      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:40.704321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:41.705102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:42.705834      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:43.706584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:44.706646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:45.707425      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:46.707959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:47.708727      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:48.708845      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:49.709579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:50.709725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:51.709885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:52.710074      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:53.710149      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:54.710730      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:55.711722      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:56.712497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:57.712615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:58.712929      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:51:59.713328      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:00.713678      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:01.714323      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:02.714490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:03.183651 20 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/08/25 00:52:03.191
  STEP: Adding a custom resource @ 01/08/25 00:52:03.192
  I0108 00:52:03.247145 20 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0108 00:52:03.277729 20 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 00:52:03.277
  I0108 00:52:03.344887 20 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0108 00:52:03.370928 20 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 00:52:03.371
  I0108 00:52:03.484838 20 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0108 00:52:03.523553 20 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 00:52:03.523
  I0108 00:52:03.598121 20 preemption.go:168] Created pod: pod3-0-sched-preemption-medium-priority
  I0108 00:52:03.635923 20 preemption.go:168] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/08/25 00:52:03.636
  E0108 00:52:03.714806      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:04.717375      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:05.717747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:06.718533      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/08/25 00:52:07.692
  E0108 00:52:07.718947      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:08.719130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:09.729359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:10.730444      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:11.730847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/08/25 00:52:11.806
  STEP: Removing a custom resource @ 01/08/25 00:52:11.843
  STEP: Removing a custom resource @ 01/08/25 00:52:11.886
  STEP: Removing a custom resource @ 01/08/25 00:52:11.949
  I0108 00:52:12.007392 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1668" for this suite. @ 01/08/25 00:52:12.022
• [68.965 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 01/08/25 00:52:12.055
  I0108 00:52:12.055700 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 00:52:12.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:12.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:12.128
  STEP: Creating service test in namespace statefulset-8423 @ 01/08/25 00:52:12.134
  I0108 00:52:12.194547 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0108 00:52:12.730997      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:13.731414      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:14.732097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:15.732277      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:16.732675      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:17.733023      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:18.733336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:19.733494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:20.733671      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:21.733778      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:22.186736 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/08/25 00:52:22.193
  I0108 00:52:22.239100 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:52:22.239167 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0108 00:52:22.735198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:23.735485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:24.737352      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:25.738466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:26.739188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:27.739363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:28.739421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:29.739652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:30.740048      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:31.740218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:32.221889 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:52:32.221954 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/08/25 00:52:32.238
  STEP: Delete all of the StatefulSets @ 01/08/25 00:52:32.244
  STEP: Verify that StatefulSets have been deleted @ 01/08/25 00:52:32.266
  I0108 00:52:32.271475 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8423
  I0108 00:52:32.317652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8423" for this suite. @ 01/08/25 00:52:32.334
• [20.291 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/08/25 00:52:32.346
  I0108 00:52:32.346551 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:52:32.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:32.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:32.405
  STEP: Creating configMap with name configmap-test-upd-6b0efd05-5daa-4f00-8de9-166316840178 @ 01/08/25 00:52:32.429
  STEP: Creating the pod @ 01/08/25 00:52:32.439
  E0108 00:52:32.740344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:33.740527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-6b0efd05-5daa-4f00-8de9-166316840178 @ 01/08/25 00:52:34.489
  STEP: waiting to observe update in volume @ 01/08/25 00:52:34.5
  E0108 00:52:34.740808      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:35.740964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:36.522465 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7521" for this suite. @ 01/08/25 00:52:36.529
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/08/25 00:52:36.541
  I0108 00:52:36.541781 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/08/25 00:52:36.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:36.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:36.583
  I0108 00:52:36.586589 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:52:36.741005      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:37.166016 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5409" for this suite. @ 01/08/25 00:52:37.175
• [0.675 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 01/08/25 00:52:37.217
  I0108 00:52:37.217653 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename containers @ 01/08/25 00:52:37.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:37.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:37.281
  STEP: Creating a pod to test override all @ 01/08/25 00:52:37.288
  E0108 00:52:37.741352      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:38.741406      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:39.742081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:40.742168      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:52:41.316
  I0108 00:52:41.321941 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod client-containers-1c55f6f1-052a-4206-8cf9-79b4646dffa7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 00:52:41.332
  I0108 00:52:41.368946 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6168" for this suite. @ 01/08/25 00:52:41.374
• [4.170 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/08/25 00:52:41.387
  I0108 00:52:41.387327 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:52:41.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:41.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:41.447
  STEP: validating api versions @ 01/08/25 00:52:41.45
  I0108 00:52:41.452056 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9232 api-versions'
  I0108 00:52:41.548206 20 builder.go:146] stderr: ""
  I0108 00:52:41.548769 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngroupsnapshot.storage.k8s.io/v1alpha1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nv1\n"
  I0108 00:52:41.548923 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9232" for this suite. @ 01/08/25 00:52:41.565
• [0.204 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/08/25 00:52:41.591
  I0108 00:52:41.591639 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:52:41.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:41.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:41.639
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/08/25 00:52:41.642
  I0108 00:52:41.643237 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:52:41.743069      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:42.743450      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:43.744743      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:44.744959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:45.745958      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:46.746968      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:47.753835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:48.754499      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/08/25 00:52:49.19
  I0108 00:52:49.191297 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:52:49.755089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:50.755441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:51.275631 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:52:51.756355      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:52.756466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:53.756584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:54.757237      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:55.757404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:56.758022      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:57.759007      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:52:58.759525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:59.308337 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6153" for this suite. @ 01/08/25 00:52:59.317
• [17.743 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 01/08/25 00:52:59.336
  I0108 00:52:59.336229 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:52:59.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:59.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:59.383
  STEP: Starting the proxy @ 01/08/25 00:52:59.386
  I0108 00:52:59.387631 20 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5345 proxy --unix-socket=/tmp/kubectl-proxy-unix4224772162/test'
  STEP: retrieving proxy /api/ output @ 01/08/25 00:52:59.452
  I0108 00:52:59.453125 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5345" for this suite. @ 01/08/25 00:52:59.458
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/08/25 00:52:59.488
  I0108 00:52:59.488855 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sysctl @ 01/08/25 00:52:59.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:59.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:59.534
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/08/25 00:52:59.537
  I0108 00:52:59.544679 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-578" for this suite. @ 01/08/25 00:52:59.565
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/08/25 00:52:59.585
  I0108 00:52:59.585678 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 00:52:59.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:52:59.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:52:59.639
  I0108 00:52:59.689569 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0108 00:52:59.713153 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  E0108 00:52:59.760686      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:52:59.778609 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:52:59.778675 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0108 00:53:00.741930 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:53:00.743404 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:00.761615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:01.731010 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:01.731248 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:01.762109      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:02.728433 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 00:53:02.728492 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0108 00:53:02.728517 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0108 00:53:02.747820 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E0108 00:53:02.763181      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:03.766331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:04.766496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:04.774560 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0108 00:53:04.791628 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0108 00:53:04.791693 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0108 00:53:05.766934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:06.767370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:07.767876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:07.801655 20 daemon_set.go:1198] Pod daemon-set-tqmgn is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 00:53:07.816
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7767, will wait for the garbage collector to delete the pods @ 01/08/25 00:53:07.816
  I0108 00:53:07.885161 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.715447ms
  I0108 00:53:07.985348 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.169011ms
  E0108 00:53:08.767874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:09.768644      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:10.391645 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:53:10.391707 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 00:53:10.412694 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45310"},"items":null}

  I0108 00:53:10.419129 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45310"},"items":null}

  I0108 00:53:10.454706 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7767" for this suite. @ 01/08/25 00:53:10.46
• [10.892 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/08/25 00:53:10.478
  I0108 00:53:10.478597 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 00:53:10.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:10.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:10.534
  I0108 00:53:10.575400 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 00:53:10.592
  I0108 00:53:10.699126 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:53:10.699233 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:10.769399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:11.610858 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:53:11.611116 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:11.771587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:12.606380 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0108 00:53:12.606434 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:12.770403      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:13.604932 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 00:53:13.604985 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/08/25 00:53:13.635
  STEP: Check that daemon pods images are updated. @ 01/08/25 00:53:13.702
  I0108 00:53:13.720171 20 daemon_set.go:1193] Wrong image for pod: daemon-set-b29n9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:13.720245 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:13.720264 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:13.771251      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:14.709345 20 daemon_set.go:1193] Wrong image for pod: daemon-set-b29n9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:14.709397 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:14.709416 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:14.772103      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:15.721411 20 daemon_set.go:1193] Wrong image for pod: daemon-set-b29n9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:15.721480 20 daemon_set.go:1198] Pod daemon-set-hj98b is not available
  I0108 00:53:15.721501 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:15.721516 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:15.772942      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:16.707451 20 daemon_set.go:1193] Wrong image for pod: daemon-set-b29n9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:16.707505 20 daemon_set.go:1198] Pod daemon-set-hj98b is not available
  I0108 00:53:16.707523 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:16.707538 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:16.773692      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:17.716747 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:17.722616 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:17.774280      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:18.713510 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:18.713576 20 daemon_set.go:1198] Pod daemon-set-xq9hg is not available
  I0108 00:53:18.713594 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:18.774433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:19.708288 20 daemon_set.go:1193] Wrong image for pod: daemon-set-rvq6r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0108 00:53:19.708346 20 daemon_set.go:1198] Pod daemon-set-xq9hg is not available
  I0108 00:53:19.708365 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:19.774985      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:20.710052 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:20.775670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:21.708025 20 daemon_set.go:1198] Pod daemon-set-pl8sk is not available
  I0108 00:53:21.708088 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:21.775764      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:22.709779 20 daemon_set.go:1198] Pod daemon-set-pl8sk is not available
  I0108 00:53:22.709833 20 daemon_set.go:1193] Wrong image for pod: daemon-set-zmtkg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0108 00:53:22.776835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:23.777556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:24.711848 20 daemon_set.go:1198] Pod daemon-set-7jh6k is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/08/25 00:53:24.716
  I0108 00:53:24.724214 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:24.724273 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:24.778247      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:25.735704 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:25.735763 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:25.779072      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:26.728746 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:26.728803 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:26.779652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:27.742499 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:27.742558 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:27.780444      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:28.734885 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:28.739246 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:28.780749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:29.726782 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:29.726840 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:29.781778      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:30.728747 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 00:53:30.728820 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 00:53:30.782743      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:31.728568 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 00:53:31.728614 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 00:53:31.749
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8039, will wait for the garbage collector to delete the pods @ 01/08/25 00:53:31.749
  E0108 00:53:31.782846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:31.815877 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.787356ms
  I0108 00:53:31.916393 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.514715ms
  E0108 00:53:32.782968      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:33.783108      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:34.784146      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:35.021735 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 00:53:35.021795 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 00:53:35.026947 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"45603"},"items":null}

  I0108 00:53:35.031154 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"45603"},"items":null}

  I0108 00:53:35.052725 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8039" for this suite. @ 01/08/25 00:53:35.057
• [24.596 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/08/25 00:53:35.075
  I0108 00:53:35.076013 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/08/25 00:53:35.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:35.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:35.127
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/08/25 00:53:35.131
  I0108 00:53:35.132228 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:53:35.784188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:36.784784      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:37.238366 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:53:37.784867      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:38.786119      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:39.786378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:40.786881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:41.787736      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:42.788750      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:43.789401      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:44.790206      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:45.386260 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7283" for this suite. @ 01/08/25 00:53:45.396
• [10.334 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 01/08/25 00:53:45.411
  I0108 00:53:45.411786 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 00:53:45.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:45.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:45.45
  STEP: creating a ServiceAccount @ 01/08/25 00:53:45.455
  STEP: watching for the ServiceAccount to be added @ 01/08/25 00:53:45.475
  STEP: patching the ServiceAccount @ 01/08/25 00:53:45.479
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/08/25 00:53:45.494
  STEP: deleting the ServiceAccount @ 01/08/25 00:53:45.499
  I0108 00:53:45.547112 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5276" for this suite. @ 01/08/25 00:53:45.554
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/08/25 00:53:45.568
  I0108 00:53:45.568914 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 00:53:45.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:45.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:45.613
  STEP: Creating namespace "e2e-ns-5mgvg" @ 01/08/25 00:53:45.616
  I0108 00:53:45.716396 20 namespace.go:411] Namespace "e2e-ns-5mgvg-2403" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-5mgvg-2403" @ 01/08/25 00:53:45.716
  I0108 00:53:45.740756 20 namespace.go:434] Namespace "e2e-ns-5mgvg-2403" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-5mgvg-2403" @ 01/08/25 00:53:45.74
  I0108 00:53:45.761967 20 namespace.go:463] Namespace "e2e-ns-5mgvg-2403" has []v1.FinalizerName{"kubernetes"}
  I0108 00:53:45.762239 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9366" for this suite. @ 01/08/25 00:53:45.77
  STEP: Destroying namespace "e2e-ns-5mgvg-2403" for this suite. @ 01/08/25 00:53:45.785
  E0108 00:53:45.790886      20 retrywatcher.go:160] "Watch failed" err="context canceled"
• [0.237 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/08/25 00:53:45.805
  I0108 00:53:45.805989 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 00:53:45.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:45.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:45.855
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 00:53:45.858
  E0108 00:53:46.791164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:47.791452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:48.791788      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:49.792085      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:53:49.915
  I0108 00:53:49.919519 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-01140fb2-b976-4aef-b686-6d502724f3cc container client-container: <nil>
  STEP: delete the pod @ 01/08/25 00:53:49.954
  I0108 00:53:50.026222 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4009" for this suite. @ 01/08/25 00:53:50.037
• [4.247 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/08/25 00:53:50.053
  I0108 00:53:50.054858 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 00:53:50.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:50.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:50.114
  E0108 00:53:50.792231      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:51.792494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:52.792866      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:53.792987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:54.793477      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:55.793703      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:53:56.237
  I0108 00:53:56.240904 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod client-envvars-dceba914-3bdd-4328-947b-28696cd88dcb container env3cont: <nil>
  STEP: delete the pod @ 01/08/25 00:53:56.249
  I0108 00:53:56.285889 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8888" for this suite. @ 01/08/25 00:53:56.291
• [6.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 01/08/25 00:53:56.308
  I0108 00:53:56.308817 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename volumeattachment @ 01/08/25 00:53:56.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:56.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:56.355
  STEP: Create VolumeAttachment "va-e2e-7gp8c" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.391
  STEP: Get VolumeAttachment "va-e2e-7gp8c" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.403
  STEP: Patch VolumeAttachment "va-e2e-7gp8c" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.408
  STEP: List VolumeAttachments with "va-e2e-7gp8c=patched" label @ 01/08/25 00:53:56.424
  STEP: Delete VolumeAttachment "va-e2e-7gp8c" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.429
  STEP: Confirm deletion of VolumeAttachment "va-e2e-7gp8c" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.44
  STEP: Create VolumeAttachment "va-e2e-xkvnc" on node "ip-172-31-16-191.us-east-2.compute.internal" @ 01/08/25 00:53:56.492
  STEP: Update the VolumeAttachment "va-e2e-xkvnc" on node "ip-172-31-16-191.us-east-2.compute.internal" with label "va-e2e=updated" @ 01/08/25 00:53:56.507
  STEP: Create VolumeAttachment "va-e2e-wd6rv" on node "ip-172-31-20-100.us-east-2.compute.internal" @ 01/08/25 00:53:56.593
  STEP: Update the VolumeAttachment "va-e2e-wd6rv" on node "ip-172-31-20-100.us-east-2.compute.internal" with label "va-e2e=updated" @ 01/08/25 00:53:56.603
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/08/25 00:53:56.617
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/08/25 00:53:56.644
  I0108 00:53:56.647960 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4701" for this suite. @ 01/08/25 00:53:56.693
• [0.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/08/25 00:53:56.712
  I0108 00:53:56.712872 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 00:53:56.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:56.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:56.757
  E0108 00:53:56.794011      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:56.842409 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8513" for this suite. @ 01/08/25 00:53:56.847
• [0.150 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/08/25 00:53:56.863
  I0108 00:53:56.863231 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 00:53:56.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:56.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:56.927
  I0108 00:53:57.033724 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1584" for this suite. @ 01/08/25 00:53:57.04
• [0.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/08/25 00:53:57.057
  I0108 00:53:57.057311 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:53:57.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:53:57.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:53:57.105
  STEP: Setting up server cert @ 01/08/25 00:53:57.201
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:53:57.645
  STEP: Deploying the webhook pod @ 01/08/25 00:53:57.659
  STEP: Wait for the deployment to be ready @ 01/08/25 00:53:57.693
  I0108 00:53:57.701100 20 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0108 00:53:57.794548      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:53:58.795144      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:53:59.721645 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 0, 53, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 53, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 0, 53, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 0, 53, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 00:53:59.795801      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:00.796076      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:54:01.726
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:54:01.769
  E0108 00:54:01.796445      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:54:02.769615 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/08/25 00:54:02.779
  E0108 00:54:02.797369      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a namespace for the webhook @ 01/08/25 00:54:02.824
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/08/25 00:54:02.861
  I0108 00:54:03.115513 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7314" for this suite. @ 01/08/25 00:54:03.122
  STEP: Destroying namespace "webhook-markers-757" for this suite. @ 01/08/25 00:54:03.133
  STEP: Destroying namespace "fail-closed-namespace-157" for this suite. @ 01/08/25 00:54:03.155
• [6.123 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 01/08/25 00:54:03.181
  I0108 00:54:03.181245 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 00:54:03.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:54:03.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:54:03.22
  STEP: Creating service test in namespace statefulset-5848 @ 01/08/25 00:54:03.223
  STEP: Creating a new StatefulSet @ 01/08/25 00:54:03.239
  I0108 00:54:03.274827 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0108 00:54:03.799434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:04.799773      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:05.800289      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:06.800390      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:07.801080      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:08.801410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:09.802350      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:10.803098      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:11.803089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:12.804136      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:54:13.275301 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:54:13.275362 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:54:13.275381 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0108 00:54:13.296297 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-5848 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 00:54:13.518582 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:54:13.518650 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:54:13.518672 20 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0108 00:54:13.804902      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:14.805030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:15.805336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:16.806157      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:17.806354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:18.806762      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:19.807181      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:20.807376      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:21.807493      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:22.807897      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/08/25 00:54:23.539
  I0108 00:54:23.566703 20 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/08/25 00:54:23.566
  E0108 00:54:23.809045      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:24.809152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:25.809416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:26.809492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:27.809690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:28.809795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:29.811249      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:30.811252      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:31.811731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:32.811922      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 01/08/25 00:54:33.58
  I0108 00:54:33.584728 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-5848 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0108 00:54:33.812618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:54:33.815942 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:54:33.815997 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:54:33.816017 20 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 00:54:33.999822 20 wait.go:158] Waiting for StatefulSet statefulset-5848/ss2 to complete update
  I0108 00:54:33.999901 20 wait.go:165] Waiting for Pod statefulset-5848/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0108 00:54:33.999922 20 wait.go:165] Waiting for Pod statefulset-5848/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0108 00:54:33.999937 20 wait.go:165] Waiting for Pod statefulset-5848/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0108 00:54:34.813377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:35.813559      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:36.813745      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:37.813832      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:38.814055      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:39.814194      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:40.815460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:41.815090      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:42.815205      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:43.815538      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:54:43.898160 20 wait.go:158] Waiting for StatefulSet statefulset-5848/ss2 to complete update
  I0108 00:54:43.898230 20 wait.go:165] Waiting for Pod statefulset-5848/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0108 00:54:43.898248 20 wait.go:165] Waiting for Pod statefulset-5848/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0108 00:54:44.816073      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:45.816457      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:46.816810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:47.817035      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:48.817431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:49.817573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:50.817863      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:51.818404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:52.818527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:53.818720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:54:53.903339 20 wait.go:158] Waiting for StatefulSet statefulset-5848/ss2 to complete update
  E0108 00:54:54.818881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:55.819157      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:56.819297      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:57.819979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:58.820194      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:54:59.820316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:00.820475      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:01.820718      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:02.823146      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:03.821512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 01/08/25 00:55:03.9
  I0108 00:55:03.900974 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-5848 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 00:55:04.148025 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 00:55:04.148081 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 00:55:04.148105 20 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0108 00:55:04.822552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:05.822696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:06.823190      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:07.823338      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:08.823487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:09.823522      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:10.823847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:11.824166      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:12.824333      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:13.824631      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:55:14.187504 20 statefulset.go:2510] Updating stateful set ss2
  E0108 00:55:14.825621      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:15.825452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:16.826250      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:17.826473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:18.826756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:19.827201      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:20.827198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:21.827293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:22.827587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:23.827694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 01/08/25 00:55:24.334
  I0108 00:55:24.339890 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-5848 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 00:55:24.577484 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 00:55:24.577549 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 00:55:24.577574 20 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0108 00:55:24.828152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:25.828479      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:26.829279      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:27.829573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:28.830563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:29.831373      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:30.831496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:31.831742      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:32.832333      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:33.832447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:55:34.610699 20 wait.go:158] Waiting for StatefulSet statefulset-5848/ss2 to complete update
  E0108 00:55:34.832600      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:35.832875      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:36.833112      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:37.833446      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:38.833751      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:39.834890      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:40.835009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:41.835078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:42.835769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:43.835931      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:55:44.627292 20 statefulset.go:138] Deleting all statefulset in ns statefulset-5848
  I0108 00:55:44.632789 20 rest.go:152] Scaling statefulset ss2 to 0
  E0108 00:55:44.836295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:45.836991      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:46.837142      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:47.837634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:48.837819      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:49.837982      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:50.838177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:51.838415      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:52.838697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:53.839009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:55:54.663191 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 00:55:54.671344 20 rest.go:90] Deleting statefulset ss2
  I0108 00:55:54.711439 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5848" for this suite. @ 01/08/25 00:55:54.722
• [111.560 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/08/25 00:55:54.741
  I0108 00:55:54.741924 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 00:55:54.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:55:54.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:55:54.799
  E0108 00:55:54.839729      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:55.840353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:56.841330      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:57.841928      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:58.842247      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:55:59.842987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:00.843054      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:01.843480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:02.844532      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:03.845260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:04.845474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:05.846142      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:06.846854      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:07.847605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:08.848852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:09.849211      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:10.850065      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/08/25 00:56:11.808
  E0108 00:56:11.850353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:12.851489      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:13.851951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:14.852521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:15.853343      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/08/25 00:56:16.814
  STEP: Ensuring resource quota status is calculated @ 01/08/25 00:56:16.829
  E0108 00:56:16.854890      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:17.855041      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/08/25 00:56:18.835
  E0108 00:56:18.855199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures configMap creation @ 01/08/25 00:56:18.869
  E0108 00:56:19.855725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:20.855833      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/08/25 00:56:20.884
  STEP: Ensuring resource quota status released usage @ 01/08/25 00:56:20.897
  E0108 00:56:21.856124      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:22.856256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:56:22.903264 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6153" for this suite. @ 01/08/25 00:56:22.909
• [28.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/08/25 00:56:22.922
  I0108 00:56:22.922492 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename cronjob @ 01/08/25 00:56:22.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:56:22.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:56:22.979
  STEP: Creating a ForbidConcurrent cronjob @ 01/08/25 00:56:22.983
  STEP: Ensuring a job is scheduled @ 01/08/25 00:56:22.995
  E0108 00:56:23.856409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:24.856597      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:25.857684      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:26.858119      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:27.858314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:28.858780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:29.858986      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:30.859165      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:31.860012      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:32.860290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:33.860486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:34.860757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:35.860836      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:36.860972      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:37.861159      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:38.861468      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:39.862556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:40.862691      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:41.862908      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:42.863646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:43.863496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:44.863749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:45.863880      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:46.864008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:47.864731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:48.865142      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:49.865468      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:50.866629      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:51.867266      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:52.867524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:53.868523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:54.868711      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:55.869008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:56.869116      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:57.869403      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:58.869589      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:56:59.869757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:00.869845      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/08/25 00:57:01
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/08/25 00:57:01.005
  STEP: Ensuring no more jobs are scheduled @ 01/08/25 00:57:01.01
  STEP: Removing cronjob @ 01/08/25 00:57:01.017
  I0108 00:57:01.034204 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2820" for this suite. @ 01/08/25 00:57:01.044
• [38.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 01/08/25 00:57:01.061
  I0108 00:57:01.061300 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/08/25 00:57:01.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:01.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:01.121
  STEP: Setting up the test @ 01/08/25 00:57:01.125
  STEP: Creating hostNetwork=false pod @ 01/08/25 00:57:01.125
  E0108 00:57:01.869962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:02.870500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:03.870645      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:04.870789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/08/25 00:57:05.173
  E0108 00:57:05.871804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:06.872584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:07.872485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:08.873051      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/08/25 00:57:09.228
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/08/25 00:57:09.228
  I0108 00:57:09.228548 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.228605 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.228702 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0108 00:57:09.353905 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:09.353981 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.353999 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.354482 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0108 00:57:09.458490 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:09.458572 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.458926 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.459096 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0108 00:57:09.577235 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:09.577307 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.577326 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.577396 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0108 00:57:09.701776 20 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/08/25 00:57:09.702
  I0108 00:57:09.702301 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.702322 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.702424 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0108 00:57:09.800959 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:09.801044 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.801063 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.801371 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  E0108 00:57:09.873871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:09.901061 20 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/08/25 00:57:09.901
  I0108 00:57:09.901222 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:09.901276 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:09.901399 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0108 00:57:10.011333 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:10.011443 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:10.011462 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:10.011647 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0108 00:57:10.123059 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:10.123130 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:10.123156 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:10.123228 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0108 00:57:10.225739 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:10.225843 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7797 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 00:57:10.225861 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 00:57:10.226018 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7797/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0108 00:57:10.338124 20 exec_util.go:108] Exec stderr: ""
  I0108 00:57:10.338315 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7797" for this suite. @ 01/08/25 00:57:10.344
• [9.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/08/25 00:57:10.37
  I0108 00:57:10.370204 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 00:57:10.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:10.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:10.429
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/08/25 00:57:10.432
  E0108 00:57:10.874889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:11.875720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:12.876685      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:13.877096      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 00:57:14.468
  I0108 00:57:14.472510 20 output.go:207] Trying to get logs from node ip-172-31-20-249.us-east-2.compute.internal pod pod-767c51f4-1bd2-49a7-a3ab-7573e77415b2 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 00:57:14.493
  I0108 00:57:14.550176 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9622" for this suite. @ 01/08/25 00:57:14.556
• [4.201 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/08/25 00:57:14.571
  I0108 00:57:14.571299 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:57:14.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:14.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:14.641
  STEP: Setting up server cert @ 01/08/25 00:57:14.729
  E0108 00:57:14.877731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:57:15.333
  STEP: Deploying the webhook pod @ 01/08/25 00:57:15.355
  STEP: Wait for the deployment to be ready @ 01/08/25 00:57:15.39
  I0108 00:57:15.452959 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 00:57:15.877815      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:16.877845      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:57:17.469
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:57:17.501
  E0108 00:57:17.878550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:18.502148 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0108 00:57:18.512402 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 00:57:18.878683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3118-crds.webhook.example.com via the AdmissionRegistration API @ 01/08/25 00:57:19.032
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/08/25 00:57:19.076
  E0108 00:57:19.879744      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:20.879883      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:21.823186 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6368" for this suite. @ 01/08/25 00:57:21.829
  STEP: Destroying namespace "webhook-markers-5312" for this suite. @ 01/08/25 00:57:21.844
• [7.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/08/25 00:57:21.868
  I0108 00:57:21.868598 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 00:57:21.869
  E0108 00:57:21.880844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:21.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:21.91
  STEP: Setting up server cert @ 01/08/25 00:57:22.02
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 00:57:22.825
  STEP: Deploying the webhook pod @ 01/08/25 00:57:22.851
  E0108 00:57:22.881336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/08/25 00:57:22.89
  I0108 00:57:22.926084 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 00:57:23.881591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:24.881506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 00:57:24.943
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 00:57:24.986
  E0108 00:57:25.881995      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:25.987215 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/08/25 00:57:25.995
  STEP: create a pod that should be updated by the webhook @ 01/08/25 00:57:26.034
  I0108 00:57:26.235744 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1598" for this suite. @ 01/08/25 00:57:26.259
  STEP: Destroying namespace "webhook-markers-3261" for this suite. @ 01/08/25 00:57:26.278
• [4.422 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 01/08/25 00:57:26.291
  I0108 00:57:26.291078 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 00:57:26.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:26.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:26.35
  STEP: Creating a job @ 01/08/25 00:57:26.356
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/08/25 00:57:26.38
  E0108 00:57:26.882124      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:27.882467      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/08/25 00:57:28.393
  STEP: updating /status @ 01/08/25 00:57:28.413
  STEP: get /status @ 01/08/25 00:57:28.439
  I0108 00:57:28.444765 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6992" for this suite. @ 01/08/25 00:57:28.451
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/08/25 00:57:28.488
  I0108 00:57:28.489017 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename runtimeclass @ 01/08/25 00:57:28.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:28.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:28.52
  I0108 00:57:28.539239 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9825" for this suite. @ 01/08/25 00:57:28.555
• [0.080 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 01/08/25 00:57:28.568
  I0108 00:57:28.568782 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 00:57:28.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:28.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:28.636
  I0108 00:57:28.639767 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 create -f -'
  I0108 00:57:28.847747 20 builder.go:146] stderr: ""
  I0108 00:57:28.847801 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0108 00:57:28.847863 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 create -f -'
  E0108 00:57:28.882548      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:29.055598 20 builder.go:146] stderr: ""
  I0108 00:57:29.055670 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/08/25 00:57:29.055
  E0108 00:57:29.882652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:30.060635 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:57:30.060679 20 framework.go:733] Found 0 / 1
  E0108 00:57:30.882814      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:31.060730 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:57:31.060786 20 framework.go:733] Found 1 / 1
  I0108 00:57:31.060812 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0108 00:57:31.064722 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0108 00:57:31.064779 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0108 00:57:31.064836 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 describe pod agnhost-primary-9dwgj'
  I0108 00:57:31.177736 20 builder.go:146] stderr: ""
  I0108 00:57:31.178096 20 builder.go:147] stdout: "Name:             agnhost-primary-9dwgj\nNamespace:        kubectl-5784\nPriority:         0\nService Account:  default\nNode:             ip-172-31-16-191.us-east-2.compute.internal/172.31.16.191\nStart Time:       Wed, 08 Jan 2025 00:57:28 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 2e2e66bd968129d31c00e5792c14a005441a94b2c7097f9f0e5511d6fa957fa7\n                  cni.projectcalico.org/podIP: 10.42.4.240/32\n                  cni.projectcalico.org/podIPs: 10.42.4.240/32\nStatus:           Running\nIP:               10.42.4.240\nIPs:\n  IP:           10.42.4.240\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://86cdae6bf98421b5cdc7c9ce0116c6915e457da452bce198122587164d44e0a9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 08 Jan 2025 00:57:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7ngc5 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7ngc5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5784/agnhost-primary-9dwgj to ip-172-31-16-191.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0108 00:57:31.178255 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 describe rc agnhost-primary'
  I0108 00:57:31.278539 20 builder.go:146] stderr: ""
  I0108 00:57:31.278774 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5784\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-9dwgj\n"
  I0108 00:57:31.278897 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 describe service agnhost-primary'
  I0108 00:57:31.431349 20 builder.go:146] stderr: ""
  I0108 00:57:31.431626 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5784\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.4.220\nIPs:                      10.43.4.220\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.4.240:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0108 00:57:31.451712 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 describe node ip-172-31-16-191.us-east-2.compute.internal'
  I0108 00:57:31.674704 20 builder.go:146] stderr: ""
  I0108 00:57:31.674867 20 builder.go:147] stdout: "Name:               ip-172-31-16-191.us-east-2.compute.internal\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-16-191.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=rke2\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.16.191\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"fe:7e:f5:cc:73:a0\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.16.191\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/external-ip: 3.129.204.234\n                    rke2.io/hostname: ip-172-31-16-191\n                    rke2.io/internal-ip: 172.31.16.191\n                    rke2.io/node-args:\n                      [\"agent\",\"--server\",\"https://3.15.233.111:9345\",\"--token\",\"********\",\"--node-name\",\"ip-172-31-16-191.us-east-2.compute.internal\",\"--profil...\n                    rke2.io/node-config-hash: MN5RHAZIM4XE6EBEENGNOQXB2FHMP4MO5ARCBELAW4D7LEM7EXMQ====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 07 Jan 2025 22:55:54 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-16-191.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 08 Jan 2025 00:57:23 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 07 Jan 2025 22:56:32 +0000   Tue, 07 Jan 2025 22:56:32 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 08 Jan 2025 00:55:33 +0000   Tue, 07 Jan 2025 22:55:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 08 Jan 2025 00:55:33 +0000   Tue, 07 Jan 2025 22:55:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 08 Jan 2025 00:55:33 +0000   Tue, 07 Jan 2025 22:55:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 08 Jan 2025 00:55:33 +0000   Tue, 07 Jan 2025 22:56:15 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.16.191\n  ExternalIP:  3.129.204.234\n  Hostname:    ip-172-31-16-191\nCapacity:\n  cpu:                2\n  ephemeral-storage:  36666348Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  35669023307\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec29da149d8f67e685d664d4b176cca7\n  System UUID:                ec29da14-9d8f-67e6-85d6-64d4b176cca7\n  Boot ID:                    2f5e9358-10be-4018-b390-6910a69c96e6\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.23-k3s2\n  Kubelet Version:            v1.32.0+rke2r1\n  Kube-Proxy Version:         v1.32.0+rke2r1\nPodCIDR:                      10.42.4.0/24\nPodCIDRs:                     10.42.4.0/24\nProviderID:                   rke2://ip-172-31-16-191.us-east-2.compute.internal\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  cronjob-2820                forbid-28938297-f5jt4                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         31s\n  job-6992                    suspend-false-to-true-5vjkq                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\n  job-6992                    suspend-false-to-true-wkfl4                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\n  kube-system                 kube-proxy-ip-172-31-16-191.us-east-2.compute.internal     250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         121m\n  kube-system                 rke2-canal-mvsmq                                           250m (12%)    0 (0%)      0 (0%)           0 (0%)         121m\n  kube-system                 rke2-ingress-nginx-controller-8ttwr                        100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         7m26s\n  kubectl-5784                agnhost-primary-9dwgj                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\n  sonobuoy                    sonobuoy-e2e-job-716815d5e1d345de                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x    0 (0%)        0 (0%)      0 (0%)           0 (0%)         56m\n  webhook-1598                webhook-to-be-mutated                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                600m (30%)  0 (0%)\n  memory             218Mi (5%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0108 00:57:31.674955 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-5784 describe namespace kubectl-5784'
  I0108 00:57:31.863367 20 builder.go:146] stderr: ""
  I0108 00:57:31.863429 20 builder.go:147] stdout: "Name:         kubectl-5784\nLabels:       e2e-framework=kubectl\n              e2e-run=945931f3-bbf0-4a76-8743-a098b415c7c7\n              kubernetes.io/metadata.name=kubectl-5784\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0108 00:57:31.863574 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5784" for this suite. @ 01/08/25 00:57:31.869
  E0108 00:57:31.883550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
• [3.321 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/08/25 00:57:31.889
  I0108 00:57:31.889907 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 00:57:31.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 00:57:31.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 00:57:31.963
  STEP: Creating pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381 @ 01/08/25 00:57:31.967
  E0108 00:57:32.885126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:33.885402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:34.886543      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:35.886683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 00:57:36.014
  I0108 00:57:36.019731 20 container_probe.go:1749] Initial restart count of pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is 0
  I0108 00:57:36.023507 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:36.887701      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:37.891654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:38.028356 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:38.892277      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:39.892551      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:40.037354 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:40.893277      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:41.893501      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:42.046002 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:42.894551      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:43.894931      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:44.052939 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:44.895877      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:45.896760      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:46.056962 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:46.896925      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:47.897222      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:48.062251 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:48.897424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:49.897510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:50.068489 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:50.898608      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:51.899020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:52.073714 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:52.899596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:53.899680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:54.078269 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  I0108 00:57:54.078344 20 container_probe.go:1763] Restart count of pod container-probe-1381/liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is now 1 (18.058554471s elapsed)
  E0108 00:57:54.900196      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:55.900298      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:56.083481 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:56.900536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:57.900854      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:57:58.089525 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:57:58.901689      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:57:59.901786      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:00.095083 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:00.901922      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:01.902116      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:02.101892 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:02.903150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:03.903334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:04.111224 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:04.903803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:05.904117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:06.119306 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:06.905108      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:07.905376      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:08.133360 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:08.906686      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:09.906756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:10.138413 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:10.907580      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:11.908436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:12.143299 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:12.909239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:13.909400      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:14.150060 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  I0108 00:58:14.150143 20 container_probe.go:1763] Restart count of pod container-probe-1381/liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is now 2 (38.130353784s elapsed)
  E0108 00:58:14.909874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:15.910019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:16.155263 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:16.911150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:17.911655      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:18.160398 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:18.912216      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:19.912381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:20.164928 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:20.912506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:21.912924      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:22.171117 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:22.913135      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:23.913519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:24.176082 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:24.914579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:25.914710      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:26.183875 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:26.915884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:27.916286      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:28.199154 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:28.917019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:29.917320      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:30.214957 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:30.917604      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:31.918185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:32.227524 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:32.918239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:33.918433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:34.239606 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  I0108 00:58:34.239676 20 container_probe.go:1763] Restart count of pod container-probe-1381/liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is now 3 (58.219884955s elapsed)
  E0108 00:58:34.919367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:35.919716      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:36.244262 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:36.920294      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:37.920736      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:38.250126 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:38.920959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:39.921151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:40.254511 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:40.922155      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:41.922448      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:42.259879 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:42.922665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:43.923025      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:44.271204 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:44.923944      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:45.924888      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:46.277016 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:46.925796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:47.926508      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:48.282160 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:48.926882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:49.927043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:50.286823 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:50.927246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:51.927445      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:52.293982 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:52.927583      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:53.928427      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:54.301546 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  I0108 00:58:54.301622 20 container_probe.go:1763] Restart count of pod container-probe-1381/liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is now 4 (1m18.281832604s elapsed)
  E0108 00:58:54.928345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:55.928449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:56.306135 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:56.929392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:57.930499      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:58:58.314773 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:58:58.932102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:58:59.932436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:00.321955 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:00.932677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:01.932903      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:02.328544 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:02.933278      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:03.933878      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:04.333969 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:04.933833      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:05.933932      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:06.338343 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:06.934256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:07.934657      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:08.345528 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:08.934903      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:09.935063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:10.353732 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:10.936214      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:11.936095      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:12.367394 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:12.936196      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:13.936420      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:14.377940 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:14.936931      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:15.937723      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:16.384029 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:16.938575      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:17.938810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:18.390676 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:18.939260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:19.939243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:20.396869 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:20.940260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:21.940393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:22.402332 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:22.940571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:23.940688      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:24.407387 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:24.941031      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:25.941431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:26.411884 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:26.941776      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:27.941826      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:28.417245 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:28.942314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:29.942711      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:30.421568 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:30.943194      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:31.943243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:32.427088 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:32.943605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:33.943943      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:34.432778 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:34.944339      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:35.944649      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:36.438007 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:36.944619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:37.944810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:38.442605 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:38.945229      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:39.945393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:40.448054 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:40.946493      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:41.946636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:42.453911 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:42.947596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:43.947871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:44.458231 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:44.948835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:45.949037      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:46.462867 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:46.949793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:47.950507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:48.468778 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:48.951208      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:49.951470      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:50.475088 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:50.951773      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:51.952399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:52.487384 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:52.952967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:53.953814      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:54.503435 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:54.953840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:55.954565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:56.508361 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:56.954680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:57.954815      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 00:59:58.513435 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 00:59:58.955752      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 00:59:59.956072      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:00.517762 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 01:00:00.956265      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:01.957416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:02.522995 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  E0108 01:00:02.958518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:03.958983      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:04.535463 20 container_probe.go:1759] Get pod liveness-fe33850d-2c25-4140-96db-0f963bee85b8 in namespace container-probe-1381
  I0108 01:00:04.535959 20 container_probe.go:1763] Restart count of pod container-probe-1381/liveness-fe33850d-2c25-4140-96db-0f963bee85b8 is now 5 (2m28.516169796s elapsed)
  STEP: deleting the pod @ 01/08/25 01:00:04.536
  I0108 01:00:04.586686 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1381" for this suite. @ 01/08/25 01:00:04.595
• [152.721 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/08/25 01:00:04.611
  I0108 01:00:04.611216 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 01:00:04.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:04.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:04.673
  E0108 01:00:04.959301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:05.959626      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:06.709848 20 delete.go:62] Deleting pod "var-expansion-fca6e0a2-5504-4019-a275-d3b613f4b805" in namespace "var-expansion-3722"
  I0108 01:00:06.727425 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-fca6e0a2-5504-4019-a275-d3b613f4b805" to be fully deleted
  E0108 01:00:06.959696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:07.961345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:08.961500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:09.961694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:10.755298 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3722" for this suite. @ 01/08/25 01:00:10.77
• [6.171 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 01/08/25 01:00:10.784
  I0108 01:00:10.784327 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 01:00:10.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:10.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:10.83
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1828.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-1828.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 01/08/25 01:00:10.834
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1828.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1828.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/08/25 01:00:10.834
  STEP: creating a pod to probe /etc/hosts @ 01/08/25 01:00:10.834
  STEP: submitting the pod to kubernetes @ 01/08/25 01:00:10.834
  E0108 01:00:10.962841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:11.962455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/08/25 01:00:12.878
  STEP: looking for the results for each expected name from probers @ 01/08/25 01:00:12.882
  I0108 01:00:12.909324 20 dns_common.go:546] DNS probes using dns-1828/dns-test-9757aa80-4afa-43c4-8fdd-bf32c6dd2572 succeeded

  STEP: deleting the pod @ 01/08/25 01:00:12.909
  I0108 01:00:12.955138 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0108 01:00:12.964902      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-1828" for this suite. @ 01/08/25 01:00:12.972
• [2.222 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/08/25 01:00:13.006
  I0108 01:00:13.007072 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:00:13.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:13.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:13.075
  STEP: Setting up server cert @ 01/08/25 01:00:13.16
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:00:13.623
  STEP: Deploying the webhook pod @ 01/08/25 01:00:13.639
  STEP: Wait for the deployment to be ready @ 01/08/25 01:00:13.681
  I0108 01:00:13.709228 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:00:13.965837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:14.969480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:15.722359 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 1, 0, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 0, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 0, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 0, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:00:15.969579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:16.983188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:00:17.727
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:00:17.759
  E0108 01:00:17.984122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:18.761015 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/08/25 01:00:18.769
  I0108 01:00:18.917098 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3634" for this suite. @ 01/08/25 01:00:18.957
  STEP: Destroying namespace "webhook-markers-8228" for this suite. @ 01/08/25 01:00:18.971
  E0108 01:00:18.985035      20 retrywatcher.go:160] "Watch failed" err="context canceled"
• [5.983 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 01/08/25 01:00:18.991
  I0108 01:00:18.991204 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 01:00:18.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:19.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:19.061
  STEP: starting the proxy server @ 01/08/25 01:00:19.07
  I0108 01:00:19.070571 20 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-1823 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/08/25 01:00:19.181
  I0108 01:00:19.216782 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0108 01:00:19.222119 20 kubectl.go:2226] kubectl proxy stderr: W0108 01:00:19.180646     744 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0108 01:00:19.222287 20 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:34867

  STEP: Destroying namespace "kubectl-1823" for this suite. @ 01/08/25 01:00:19.224
• [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/08/25 01:00:19.235
  I0108 01:00:19.235735 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 01:00:19.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:19.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:19.279
  STEP: create the rc @ 01/08/25 01:00:19.283
  W0108 01:00:19.300231      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0108 01:00:19.989099      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:20.989251      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:21.989461      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:22.990958      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:23.990953      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/08/25 01:00:24.306
  STEP: wait for all pods to be garbage collected @ 01/08/25 01:00:24.32
  E0108 01:00:24.991109      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:25.991301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:26.992430      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:27.992727      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:28.993573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/08/25 01:00:29.331
  I0108 01:00:29.457855 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 01:00:29.458233 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9609" for this suite. @ 01/08/25 01:00:29.464
• [10.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/08/25 01:00:29.477
  I0108 01:00:29.477910 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:00:29.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:29.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:29.522
  STEP: Setting up server cert @ 01/08/25 01:00:29.631
  E0108 01:00:29.994523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:00:30.327
  STEP: Deploying the webhook pod @ 01/08/25 01:00:30.338
  STEP: Wait for the deployment to be ready @ 01/08/25 01:00:30.376
  I0108 01:00:30.389309 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:00:30.994732      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:31.998522      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:00:32.405
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:00:32.447
  E0108 01:00:32.999166      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:33.447627 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/08/25 01:00:33.456
  I0108 01:00:33.598035 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8340" for this suite. @ 01/08/25 01:00:33.622
  STEP: Destroying namespace "webhook-markers-5507" for this suite. @ 01/08/25 01:00:33.649
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/08/25 01:00:33.67
  I0108 01:00:33.670724 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename hostport @ 01/08/25 01:00:33.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:33.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:33.727
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/08/25 01:00:33.739
  E0108 01:00:33.999901      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:35.000061      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:36.001070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:37.001722      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.20.249 on the node which pod1 resides and expect scheduled @ 01/08/25 01:00:37.779
  E0108 01:00:38.002056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:39.002178      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:40.005673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:41.005750      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.20.249 but use UDP protocol on the node which pod2 resides @ 01/08/25 01:00:41.825
  E0108 01:00:42.006351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:43.006645      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:44.006594      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:45.006770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:46.007530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:47.008520      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/08/25 01:00:47.88
  I0108 01:00:47.880594 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.20.249 http://127.0.0.1:54323/hostname] Namespace:hostport-684 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:00:47.880792 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:00:47.881034 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-684/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.20.249+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  E0108 01:00:48.008835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.249, port: 54323 @ 01/08/25 01:00:48.025
  I0108 01:00:48.026051 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.20.249:54323/hostname] Namespace:hostport-684 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:00:48.026114 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:00:48.026305 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-684/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.20.249%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.249, port: 54323 UDP @ 01/08/25 01:00:48.167
  I0108 01:00:48.167935 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.20.249 54323] Namespace:hostport-684 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:00:48.168029 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:00:48.168175 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-684/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.20.249+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0108 01:00:49.009065      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:50.010010      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:51.010547      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:52.010850      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:53.010994      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:53.332495 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-684" for this suite. @ 01/08/25 01:00:53.341
• [19.692 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/08/25 01:00:53.362
  I0108 01:00:53.362636 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 01:00:53.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:53.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:53.4
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/08/25 01:00:53.403
  E0108 01:00:54.013414      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:00:55.011846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 01/08/25 01:00:55.451
  STEP: Then the orphan pod is adopted @ 01/08/25 01:00:55.463
  E0108 01:00:56.011939      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 01/08/25 01:00:56.475
  I0108 01:00:56.481696 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/08/25 01:00:56.511
  E0108 01:00:57.013382      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:00:57.521950 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4425" for this suite. @ 01/08/25 01:00:57.541
• [4.195 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/08/25 01:00:57.558
  I0108 01:00:57.558818 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:00:57.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:00:57.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:00:57.597
  STEP: Setting up server cert @ 01/08/25 01:00:57.709
  E0108 01:00:58.030761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:00:58.367
  STEP: Deploying the webhook pod @ 01/08/25 01:00:58.391
  STEP: Wait for the deployment to be ready @ 01/08/25 01:00:58.431
  I0108 01:00:58.454437 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:00:59.031676      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:00.032629      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:01:00.469
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:01:00.495
  E0108 01:01:01.033749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:01:01.496885 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/08/25 01:01:01.506
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/08/25 01:01:01.549
  STEP: Creating a configMap that should not be mutated @ 01/08/25 01:01:01.57
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/08/25 01:01:01.598
  STEP: Creating a configMap that should be mutated @ 01/08/25 01:01:01.618
  I0108 01:01:01.837302 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8972" for this suite. @ 01/08/25 01:01:01.842
  STEP: Destroying namespace "webhook-markers-8501" for this suite. @ 01/08/25 01:01:01.884
• [4.342 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 01/08/25 01:01:01.902
  I0108 01:01:01.902605 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename cronjob @ 01/08/25 01:01:01.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:01:01.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:01:01.961
  STEP: Creating a cronjob @ 01/08/25 01:01:01.965
  STEP: creating @ 01/08/25 01:01:01.965
  STEP: getting @ 01/08/25 01:01:01.985
  STEP: listing @ 01/08/25 01:01:01.991
  STEP: watching @ 01/08/25 01:01:02.012
  I0108 01:01:02.012566 20 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 01/08/25 01:01:02.014
  STEP: cluster-wide watching @ 01/08/25 01:01:02.019
  I0108 01:01:02.019380 20 cronjob.go:407] starting watch
  STEP: patching @ 01/08/25 01:01:02.021
  E0108 01:01:02.033877      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating @ 01/08/25 01:01:02.037
  I0108 01:01:02.069529 20 cronjob.go:431] waiting for watch events with expected annotations
  I0108 01:01:02.069600 20 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 01/08/25 01:01:02.07
  STEP: updating /status @ 01/08/25 01:01:02.101
  STEP: get /status @ 01/08/25 01:01:02.135
  STEP: deleting @ 01/08/25 01:01:02.155
  STEP: deleting a collection @ 01/08/25 01:01:02.199
  I0108 01:01:02.244970 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9734" for this suite. @ 01/08/25 01:01:02.25
• [0.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 01/08/25 01:01:02.27
  I0108 01:01:02.270042 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 01:01:02.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:01:02.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:01:02.323
  STEP: Creating service test in namespace statefulset-308 @ 01/08/25 01:01:02.328
  STEP: Creating statefulset ss in namespace statefulset-308 @ 01/08/25 01:01:02.364
  I0108 01:01:02.409816 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0108 01:01:03.035000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:04.037378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:05.037486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:06.038499      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:07.039106      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:08.039272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:09.039482      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:10.040424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:11.041268      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:12.041457      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:01:12.393345 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/08/25 01:01:12.403
  STEP: Getting /status @ 01/08/25 01:01:12.422
  I0108 01:01:12.430819 20 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/08/25 01:01:12.431
  I0108 01:01:12.455152 20 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/08/25 01:01:12.455
  I0108 01:01:12.458883 20 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0108 01:01:12.458947 20 statefulset.go:1114] Found Statefulset ss in namespace statefulset-308 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 01:01:12.458967 20 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/08/25 01:01:12.458
  I0108 01:01:12.459273 20 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0108 01:01:12.478137 20 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/08/25 01:01:12.478
  I0108 01:01:12.481135 20 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0108 01:01:12.481305 20 statefulset.go:138] Deleting all statefulset in ns statefulset-308
  I0108 01:01:12.486563 20 rest.go:152] Scaling statefulset ss to 0
  E0108 01:01:13.042606      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:14.042998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:15.043892      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:16.044227      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:17.044484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:18.044663      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:19.044886      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:20.045016      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:21.045171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:22.045358      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:01:22.516825 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 01:01:22.521431 20 rest.go:90] Deleting statefulset ss
  I0108 01:01:22.556134 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-308" for this suite. @ 01/08/25 01:01:22.56
• [20.304 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 01/08/25 01:01:22.575
  I0108 01:01:22.576058 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/08/25 01:01:22.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:01:22.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:01:22.623
  STEP: getting /apis @ 01/08/25 01:01:22.642
  STEP: getting /apis/admissionregistration.k8s.io @ 01/08/25 01:01:22.651
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/08/25 01:01:22.653
  STEP: creating @ 01/08/25 01:01:22.654
  STEP: getting @ 01/08/25 01:01:22.709
  STEP: listing @ 01/08/25 01:01:22.717
  STEP: watching @ 01/08/25 01:01:22.73
  I0108 01:01:22.730943 20 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 01/08/25 01:01:22.733
  STEP: updating @ 01/08/25 01:01:22.749
  I0108 01:01:22.778083 20 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0108 01:01:22.778354 20 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0108 01:01:22.778701 20 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/08/25 01:01:22.778
  STEP: patching /status @ 01/08/25 01:01:22.789
  STEP: updating /status @ 01/08/25 01:01:22.824
  STEP: deleting @ 01/08/25 01:01:22.846
  STEP: deleting a collection @ 01/08/25 01:01:22.864
  I0108 01:01:22.898570 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7865" for this suite. @ 01/08/25 01:01:22.903
• [0.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/08/25 01:01:22.922
  I0108 01:01:22.922101 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/08/25 01:01:22.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:01:22.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:01:22.976
  I0108 01:01:22.980055 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:01:23.046257      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:24.046454      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:25.047565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:26.048667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:27.049080      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:28.049581      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:29.050477      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:01:29.500673 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6998" for this suite. @ 01/08/25 01:01:29.506
• [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/08/25 01:01:29.526
  I0108 01:01:29.526524 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename cronjob @ 01/08/25 01:01:29.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:01:29.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:01:29.584
  STEP: Creating a ReplaceConcurrent cronjob @ 01/08/25 01:01:29.588
  STEP: Ensuring a job is scheduled @ 01/08/25 01:01:29.599
  E0108 01:01:30.051368      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:31.051556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:32.052225      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:33.052849      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:34.052839      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:35.054019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:36.054153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:37.054527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:38.055738      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:39.056124      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:40.056243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:41.056457      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:42.056723      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:43.056935      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:44.057594      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:45.058496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:46.058620      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:47.059572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:48.059741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:49.060203      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:50.060344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:51.060517      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:52.060643      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:53.060808      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:54.061026      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:55.061737      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:56.061589      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:57.062225      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:58.063292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:01:59.063552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:00.063759      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:01.064150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/08/25 01:02:01.605
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/08/25 01:02:01.609
  STEP: Ensuring the job is replaced with a new one @ 01/08/25 01:02:01.614
  E0108 01:02:02.064994      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:03.065175      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:04.066218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:05.066536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:06.066724      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:07.066860      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:08.067108      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:09.067318      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:10.067491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:11.067634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:12.067889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:13.068065      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:14.069136      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:15.069480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:16.069627      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:17.070517      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:18.071835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:19.072175      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:20.072239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:21.072392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:22.072753      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:23.073389      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:24.073557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:25.073677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:26.074001      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:27.074167      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:28.075284      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:29.075398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:30.075572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:31.076179      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:32.077410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:33.077585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:34.077829      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:35.078119      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:36.078223      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:37.078439      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:38.079267      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:39.079685      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:40.079891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:41.080118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:42.080333      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:43.080733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:44.081555      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:45.082098      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:46.083557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:47.084008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:48.084883      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:49.085069      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:50.085494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:51.085734      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:52.086735      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:53.087143      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:54.087487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:55.088106      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:56.088935      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:57.089345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:58.089777      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:02:59.090034      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:00.090839      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:01.090976      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/08/25 01:03:01.626
  I0108 01:03:01.644463 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4337" for this suite. @ 01/08/25 01:03:01.65
• [92.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/08/25 01:03:01.666
  I0108 01:03:01.666797 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 01:03:01.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:03:01.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:03:01.752
  STEP: Counting existing ResourceQuota @ 01/08/25 01:03:01.758
  E0108 01:03:02.092100      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:03.093458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:04.094476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:05.094563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:06.095276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/08/25 01:03:06.769
  STEP: Ensuring resource quota status is calculated @ 01/08/25 01:03:06.796
  E0108 01:03:07.099141      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:08.099984      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 01/08/25 01:03:08.801
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/08/25 01:03:08.838
  E0108 01:03:09.100644      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:10.100793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/08/25 01:03:10.843
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/08/25 01:03:10.846
  STEP: Ensuring a pod cannot update its resource requirements @ 01/08/25 01:03:10.848
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/08/25 01:03:10.854
  E0108 01:03:11.101268      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:12.101442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/08/25 01:03:12.86
  STEP: Ensuring resource quota status released the pod usage @ 01/08/25 01:03:12.91
  E0108 01:03:13.102693      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:14.102920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:14.918863 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6258" for this suite. @ 01/08/25 01:03:14.925
• [13.273 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/08/25 01:03:14.939
  I0108 01:03:14.939290 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pod-network-test @ 01/08/25 01:03:14.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:03:15.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:03:15.051
  STEP: Performing setup for networking test in namespace pod-network-test-1317 @ 01/08/25 01:03:15.062
  STEP: creating a selector @ 01/08/25 01:03:15.062
  STEP: Creating the service pods in kubernetes @ 01/08/25 01:03:15.062
  I0108 01:03:15.063011 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0108 01:03:15.103348      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:16.104189      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:17.104345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:18.104451      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:19.104642      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:20.104810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:21.105315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:22.105439      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:23.105552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:24.106516      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:25.106621      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:26.106872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:27.107513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:28.107812      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:29.108769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/08/25 01:03:29.38
  E0108 01:03:30.108805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:31.109492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:32.110589      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:33.110748      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:33.473259 20 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0108 01:03:33.473514 20 utils.go:496] Going to poll 10.42.4.253 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:03:33.478161 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.4.253:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1317 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:03:33.478218 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:03:33.478288 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1317/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.4.253%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0108 01:03:33.616847 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0108 01:03:33.617274 20 utils.go:496] Going to poll 10.42.0.43 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:03:33.629886 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.43:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1317 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:03:33.630075 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:03:33.630377 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1317/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.43%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0108 01:03:33.796788 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0108 01:03:33.796874 20 utils.go:496] Going to poll 10.42.2.73 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:03:33.806056 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.73:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1317 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:03:33.806249 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:03:33.806532 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1317/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.73%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0108 01:03:33.961551 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0108 01:03:33.961619 20 utils.go:496] Going to poll 10.42.1.51 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:03:33.965826 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.51:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1317 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:03:33.965884 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:03:33.965957 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1317/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.51%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0108 01:03:34.113292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:34.125691 20 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0108 01:03:34.126249 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1317" for this suite. @ 01/08/25 01:03:34.134
• [19.209 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 01/08/25 01:03:34.148
  I0108 01:03:34.148425 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:03:34.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:03:34.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:03:34.222
  STEP: creating service multiprotocol-test in namespace services-1538 @ 01/08/25 01:03:34.23
  STEP: creating pod pod1 in namespace services-1538 @ 01/08/25 01:03:34.26
  STEP: Creating pod pod1 in namespace services-1538 @ 01/08/25 01:03:34.26
  E0108 01:03:35.113380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:36.113605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:37.114846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:38.114772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1538 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/08/25 01:03:38.341
  I0108 01:03:38.363448 20 service.go:4553] successfully validated that service multiprotocol-test in namespace services-1538 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/08/25 01:03:38.363
  I0108 01:03:38.363583 20 resource.go:361] Creating new exec pod
  E0108 01:03:39.115458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:40.117437      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:41.122445      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:42.123379      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:42.391012 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80'
  I0108 01:03:42.671297 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.243.7 80\nConnection to 10.43.243.7 80 port [tcp/http] succeeded!\n"
  I0108 01:03:42.671356 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:03:42.671444 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.243.7 80'
  E0108 01:03:43.123874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:44.125085      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:44.874542 20 builder.go:146] stderr: "+ + nc -v -u -w 2 10.43.243.7 80\necho hostName\n"
  I0108 01:03:44.874600 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/08/25 01:03:44.874
  I0108 01:03:44.892070 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80'
  I0108 01:03:45.122701 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.243.7 80\nConnection to 10.43.243.7 80 port [tcp/http] succeeded!\n"
  I0108 01:03:45.122769 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:03:45.122884 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.243.7 80'
  E0108 01:03:45.125501      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:46.126596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:47.126876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:47.378950 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.243.7 80\n"
  I0108 01:03:47.379019 20 builder.go:147] stdout: ""
  I0108 01:03:47.379098 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.243.7 80'
  E0108 01:03:48.127760      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:49.127946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:49.569275 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.243.7 80\n"
  I0108 01:03:49.569347 20 builder.go:147] stdout: ""
  I0108 01:03:49.569430 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.243.7 80'
  E0108 01:03:50.129074      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:51.129561      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:51.756195 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.243.7 80\n"
  I0108 01:03:51.756262 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/08/25 01:03:51.756
  I0108 01:03:51.773927 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.243.7 80'
  E0108 01:03:52.129853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:53.130305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:53.980302 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.243.7 80\n"
  I0108 01:03:53.980368 20 builder.go:147] stdout: "pod1"
  I0108 01:03:53.980480 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80'
  E0108 01:03:54.131009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:55.131826      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:56.132219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:56.191023 20 builder.go:135] rc: 1
  I0108 01:03:56.191111 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.243.7 80
  nc: connect to 10.43.243.7 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0108 01:03:56.191229 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80'
  E0108 01:03:57.132260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:03:58.134035      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:03:58.401143 20 builder.go:135] rc: 1
  I0108 01:03:58.401263 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.243.7 80
  nc: connect to 10.43.243.7 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0108 01:03:58.401384 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80'
  E0108 01:03:59.135188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:00.135481      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:04:00.640751 20 builder.go:135] rc: 1
  I0108 01:04:00.640830 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1538 exec execpod9m8z9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.243.7 80:
  Command stdout:

  stderr:
  + + echonc -v hostName -t
   -w 2 10.43.243.7 80
  nc: connect to 10.43.243.7 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0108 01:04:00.642519 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1538" for this suite. @ 01/08/25 01:04:00.647
• [26.516 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 01/08/25 01:04:00.665
  I0108 01:04:00.665068 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename volumeattachment @ 01/08/25 01:04:00.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:04:00.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:04:00.714
  STEP: Create VolumeAttachment "va-e2e-cv4rt" on node "ip-172-31-20-100.us-east-2.compute.internal" @ 01/08/25 01:04:00.751
  STEP: Patch VolumeAttachment "va-e2e-cv4rt" on node "ip-172-31-20-100.us-east-2.compute.internal" @ 01/08/25 01:04:00.768
  STEP: Reading "va-e2e-cv4rt" Status @ 01/08/25 01:04:00.784
  STEP: Patching "va-e2e-cv4rt" Status @ 01/08/25 01:04:00.797
  I0108 01:04:00.807524 20 volume_attachment.go:224] "va-e2e-cv4rt" Status.Attached: true
  STEP: Updating "va-e2e-cv4rt" Status @ 01/08/25 01:04:00.807
  I0108 01:04:00.827625 20 volume_attachment.go:240] "va-e2e-cv4rt" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-cv4rt" on node "ip-172-31-20-100.us-east-2.compute.internal" @ 01/08/25 01:04:00.827
  STEP: Confirm deletion of VolumeAttachment "va-e2e-cv4rt" on node "ip-172-31-20-100.us-east-2.compute.internal" @ 01/08/25 01:04:00.847
  I0108 01:04:00.851292 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4933" for this suite. @ 01/08/25 01:04:00.856
• [0.203 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/08/25 01:04:00.868
  I0108 01:04:00.868218 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:04:00.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:04:00.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:04:00.933
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/08/25 01:04:00.937
  E0108 01:04:01.136567      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:02.136462      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:03.137386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:04.137437      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:04:04.987
  I0108 01:04:04.991251 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-80d9a8f0-d9a5-43ca-a6d8-a57473201659 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:04:05.011
  I0108 01:04:05.049989 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8518" for this suite. @ 01/08/25 01:04:05.056
• [4.201 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/08/25 01:04:05.07
  I0108 01:04:05.070274 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:04:05.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:04:05.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:04:05.108
  E0108 01:04:05.138367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/08/25 01:04:05.218
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:04:05.788
  STEP: Deploying the webhook pod @ 01/08/25 01:04:05.804
  STEP: Wait for the deployment to be ready @ 01/08/25 01:04:05.838
  I0108 01:04:05.855313 20 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0108 01:04:06.138559      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:07.141579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:04:07.878094 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 8, 1, 4, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 4, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 4, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 4, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:04:08.142546      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:09.143029      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:04:09.882
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:04:09.915
  E0108 01:04:10.143138      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:04:10.917007 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/08/25 01:04:10.925
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/08/25 01:04:10.964
  I0108 01:04:10.964561 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  I0108 01:04:11.111962 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3662" for this suite. @ 01/08/25 01:04:11.131
  E0108 01:04:11.144336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-2570" for this suite. @ 01/08/25 01:04:11.148
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/08/25 01:04:11.177
  I0108 01:04:11.177027 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-pred @ 01/08/25 01:04:11.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:04:11.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:04:11.223
  I0108 01:04:11.226526 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0108 01:04:11.236880 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 01:04:11.241675 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-191.us-east-2.compute.internal before test
  I0108 01:04:11.253023 20 predicates.go:957] kube-proxy-ip-172-31-16-191.us-east-2.compute.internal from kube-system started at 2025-01-07 22:55:54 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.253075 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:04:11.253093 20 predicates.go:957] rke2-canal-mvsmq from kube-system started at 2025-01-07 22:55:55 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.253105 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:04:11.253116 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:04:11.253129 20 predicates.go:957] rke2-ingress-nginx-controller-8ttwr from kube-system started at 2025-01-08 00:50:05 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.253641 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:04:11.253681 20 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-08 00:00:32 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.253696 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0108 01:04:11.253714 20 predicates.go:957] sonobuoy-e2e-job-716815d5e1d345de from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.253730 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0108 01:04:11.253743 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:04:11.254058 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.254077 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:04:11.254089 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:04:11.254103 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-100.us-east-2.compute.internal before test
  I0108 01:04:11.262679 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:00 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.262738 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:04:11.262755 20 predicates.go:957] etcd-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.262768 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:04:11.263087 20 predicates.go:957] helm-install-rke2-canal-qzdhf from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.263120 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.263138 20 predicates.go:957] helm-install-rke2-coredns-cglhz from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.263150 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.263461 20 predicates.go:957] helm-install-rke2-ingress-nginx-bk9t5 from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.263493 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.263512 20 predicates.go:957] helm-install-rke2-metrics-server-6gfgc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.263525 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.263539 20 predicates.go:957] helm-install-rke2-snapshot-controller-2gqss from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.263550 20 predicates.go:959] 	Container helm ready: false, restart count 1
  I0108 01:04:11.263981 20 predicates.go:957] helm-install-rke2-snapshot-controller-crd-r6cbj from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.264180 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.264225 20 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-mfczq from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.264427 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:04:11.264451 20 predicates.go:957] kube-apiserver-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:52 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.264467 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:04:11.264620 20 predicates.go:957] kube-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:58 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.264637 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:04:11.264652 20 predicates.go:957] kube-proxy-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.264664 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:04:11.264948 20 predicates.go:957] kube-scheduler-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:03 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.265285 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:04:11.265551 20 predicates.go:957] rke2-canal-ppzvh from kube-system started at 2025-01-07 22:49:21 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.265772 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:04:11.265960 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:04:11.266165 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-49nnc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.266626 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 01:04:11.266868 20 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-5868d76f68-fg8gc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.266957 20 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0108 01:04:11.267048 20 predicates.go:957] rke2-ingress-nginx-controller-mvz85 from kube-system started at 2025-01-07 22:50:47 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.267135 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:04:11.267252 20 predicates.go:957] rke2-metrics-server-55f5b7fcd8-lkl7k from kube-system started at 2025-01-07 22:50:17 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.267462 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0108 01:04:11.267656 20 predicates.go:957] rke2-snapshot-controller-755fc86fc-gq4xt from kube-system started at 2025-01-07 22:50:24 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.267676 20 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0108 01:04:11.267691 20 predicates.go:957] rke2-snapshot-validation-webhook-75bc6f574f-8qnm4 from kube-system started at 2025-01-07 22:50:22 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.267704 20 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0108 01:04:11.267723 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xf89t from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.268087 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:04:11.268248 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:04:11.268555 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-249.us-east-2.compute.internal before test
  I0108 01:04:11.279703 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.280345 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:04:11.280540 20 predicates.go:957] etcd-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.281105 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:04:11.281624 20 predicates.go:957] kube-apiserver-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:14 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.282100 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:04:11.282660 20 predicates.go:957] kube-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.283122 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:04:11.283593 20 predicates.go:957] kube-proxy-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.283834 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:04:11.283857 20 predicates.go:957] kube-scheduler-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:24 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.283870 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:04:11.283933 20 predicates.go:957] rke2-canal-6766w from kube-system started at 2025-01-07 22:53:38 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.283949 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:04:11.283959 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:04:11.283972 20 predicates.go:957] rke2-ingress-nginx-controller-vp2n2 from kube-system started at 2025-01-07 22:54:34 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.284033 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:04:11.284048 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-4rxjf from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.284058 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:04:11.284068 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:04:11.284127 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-25-234.us-east-2.compute.internal before test
  I0108 01:04:11.289985 20 predicates.go:957] cloud-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290030 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:04:11.290047 20 predicates.go:957] etcd-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:58 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290059 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:04:11.290072 20 predicates.go:957] kube-apiserver-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:14 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290084 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:04:11.290098 20 predicates.go:957] kube-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290110 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:04:11.290125 20 predicates.go:957] kube-proxy-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:59 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290136 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:04:11.290150 20 predicates.go:957] kube-scheduler-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290162 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:04:11.290175 20 predicates.go:957] rke2-canal-lwv6s from kube-system started at 2025-01-07 22:52:29 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.290187 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:04:11.290199 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:04:11.290212 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-rfstj from kube-system started at 2025-01-07 22:52:42 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290223 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 01:04:11.290236 20 predicates.go:957] rke2-ingress-nginx-controller-qnq5t from kube-system started at 2025-01-07 22:52:43 +0000 UTC (1 container statuses recorded)
  I0108 01:04:11.290248 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:04:11.290260 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xb2qj from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:04:11.290272 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:04:11.290284 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/08/25 01:04:11.29
  E0108 01:04:12.144767      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:13.144833      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:14.145353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:15.145377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/08/25 01:04:15.327
  STEP: Trying to apply a random label on the found node. @ 01/08/25 01:04:15.368
  STEP: verifying the node has the label kubernetes.io/e2e-e1282565-0dd1-4f35-a76e-6adc052fba91 95 @ 01/08/25 01:04:15.405
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/08/25 01:04:15.411
  E0108 01:04:16.145520      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:17.146634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:18.146681      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:19.147006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.16.191 on the node which pod4 resides and expect not scheduled @ 01/08/25 01:04:19.448
  E0108 01:04:20.148299      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:21.148634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:22.149602      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:23.149793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:24.149912      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:25.150048      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:26.150364      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:27.150832      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:28.150977      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:29.151123      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:30.151330      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:31.151458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:32.151643      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:33.151847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:34.152022      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:35.152190      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:36.152358      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:37.152856      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:38.154092      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:39.154262      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:40.154742      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:41.154869      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:42.155049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:43.155766      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:44.156008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:45.156206      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:46.156292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:47.156476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:48.156629      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:49.157071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:50.157669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:51.158578      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:52.159338      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:53.159527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:54.159878      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:55.160068      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:56.160951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:57.161789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:58.161867      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:04:59.161676      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:00.162353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:01.162693      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:02.162976      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:03.163146      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:04.163697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:05.164078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:06.164660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:07.164837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:08.165564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:09.168464      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:10.169305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:11.169421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:12.170813      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:13.171328      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:14.171569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:15.172609      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:16.172727      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:17.172911      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:18.173660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:19.173740      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:20.173886      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:21.174057      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:22.174263      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:23.174654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:24.175681      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:25.175882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:26.177203      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:27.177395      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:28.177595      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:29.178582      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:30.179391      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:31.179645      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:32.180243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:33.180289      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:34.180673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:35.185351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:36.185518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:37.186529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:38.187517      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:39.187694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:40.187953      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:41.188144      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:42.188604      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:43.189041      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:44.189410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:45.189661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:46.190557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:47.190728      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:48.190994      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:49.191111      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:50.191321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:51.191473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:52.192275      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:53.192468      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:54.193900      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:55.194719      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:56.195378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:57.195529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:58.196691      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:05:59.196809      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:00.197873      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:01.198029      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:02.198293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:03.198636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:04.198822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:05.198999      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:06.199493      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:07.199669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:08.199919      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:09.200127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:10.200280      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:11.200385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:12.200651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:13.200785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:14.201934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:15.202005      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:16.202168      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:17.202643      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:18.203617      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:19.203893      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:20.204563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:21.204666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:22.205389      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:23.205510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:24.206240      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:25.206434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:26.206888      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:27.207269      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:28.207418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:29.207717      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:30.207800      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:31.207945      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:32.208540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:33.208824      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:34.208992      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:35.209145      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:36.210204      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:37.210742      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:38.211171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:39.211519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:40.211836      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:41.211987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:42.212044      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:43.212089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:44.213233      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:45.213406      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:46.214338      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:47.214528      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:48.215139      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:49.215321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:50.216034      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:51.216147      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:52.217045      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:53.217318      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:54.217390      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:55.217550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:56.217731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:57.218505      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:58.219207      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:06:59.219737      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:00.219896      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:01.220030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:02.220979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:03.221389      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:04.222089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:05.222412      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:06.222834      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:07.223185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:08.223800      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:09.223990      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:10.224630      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:11.225210      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:12.225846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:13.227010      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:14.227230      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:15.227567      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:16.228441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:17.228717      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:18.229270      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:19.229377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:20.230518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:21.230910      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:22.230882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:23.231214      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:24.231774      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:25.231967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:26.232578      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:27.232797      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:28.233171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:29.233506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:30.234434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:31.234582      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:32.235452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:33.235939      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:34.236828      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:35.237270      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:36.237572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:37.238571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:38.238712      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:39.238915      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:40.239921      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:41.240100      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:42.240754      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:43.241374      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:44.242317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:45.242572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:46.243020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:47.244042      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:48.244235      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:49.244428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:50.245448      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:51.245664      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:52.245706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:53.245933      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:54.246196      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:55.246354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:56.247211      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:57.247396      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:58.248155      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:07:59.248446      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:00.249433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:01.250590      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:02.250651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:03.250853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:04.251478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:05.252455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:06.253381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:07.253420      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:08.253950      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:09.254458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:10.254852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:11.255169      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:12.255726      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:13.255895      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:14.256171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:15.256312      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:16.256407      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:17.257004      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:18.257151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:19.257402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:20.257628      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:21.257818      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:22.258008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:23.258904      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:24.258932      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:25.259126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:26.259416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:27.259535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:28.259788      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:29.259962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:30.260380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:31.260519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:32.260691      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:33.260850      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:34.261245      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:35.261367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:36.261513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:37.262523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:38.262841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:39.262889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:40.263056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:41.263252      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:42.263502      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:43.264063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:44.264189      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:45.264420      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:46.264575      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:47.265607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:48.265741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:49.266569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:50.266733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:51.266899      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:52.267164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:53.267264      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:54.267567      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:55.267757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:56.268123      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:57.268465      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:58.269004      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:08:59.269314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:00.269843      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:01.271425      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:02.270769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:03.270934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:04.271321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:05.271494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:06.271874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:07.273143      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:08.273466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:09.274523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:10.274833      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:11.275072      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:12.275177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:13.275621      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:14.276297      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:15.275670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:16.275813      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:17.275979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:18.276276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:19.277092      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e1282565-0dd1-4f35-a76e-6adc052fba91 off the node ip-172-31-16-191.us-east-2.compute.internal @ 01/08/25 01:09:19.47
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e1282565-0dd1-4f35-a76e-6adc052fba91 @ 01/08/25 01:09:19.499
  I0108 01:09:19.511981 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-641" for this suite. @ 01/08/25 01:09:19.518
• [308.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/08/25 01:09:19.561
  I0108 01:09:19.562243 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/08/25 01:09:19.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:19.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:19.602
  E0108 01:09:20.278139      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:21.278346      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 01/08/25 01:09:21.667
  STEP: Cleaning up the configmap @ 01/08/25 01:09:21.678
  STEP: Cleaning up the pod @ 01/08/25 01:09:21.691
  I0108 01:09:21.733798 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-866" for this suite. @ 01/08/25 01:09:21.745
• [2.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/08/25 01:09:21.765
  I0108 01:09:21.765677 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:09:21.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:21.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:21.813
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:09:21.817
  E0108 01:09:22.279300      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:23.279479      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:24.280118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:25.280877      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:09:25.869
  I0108 01:09:25.873607 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-bcc58fe3-0d09-4e2c-84ce-58100a8acb34 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:09:25.901
  I0108 01:09:25.957231 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6210" for this suite. @ 01/08/25 01:09:25.962
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/08/25 01:09:25.981
  I0108 01:09:25.981467 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 01:09:25.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:26.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:26.045
  STEP: creating the pod @ 01/08/25 01:09:26.048
  STEP: submitting the pod to kubernetes @ 01/08/25 01:09:26.048
  W0108 01:09:26.074986      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0108 01:09:26.281354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:27.281387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/08/25 01:09:28.09
  STEP: updating the pod @ 01/08/25 01:09:28.097
  E0108 01:09:28.282131      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:09:28.625004 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-464341d9-9d75-4e23-b91e-d9d42155a3db"
  E0108 01:09:29.282581      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:30.282777      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:31.282959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:32.283170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:33.284093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:34.284548      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:09:34.653646 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1825" for this suite. @ 01/08/25 01:09:34.658
• [8.689 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/08/25 01:09:34.67
  I0108 01:09:34.670498 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 01:09:34.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:34.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:34.726
  STEP: creating a secret @ 01/08/25 01:09:34.735
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/08/25 01:09:34.747
  STEP: patching the secret @ 01/08/25 01:09:34.753
  STEP: deleting the secret using a LabelSelector @ 01/08/25 01:09:34.77
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/08/25 01:09:34.783
  I0108 01:09:34.788875 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7095" for this suite. @ 01/08/25 01:09:34.795
• [0.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/08/25 01:09:34.815
  I0108 01:09:34.815388 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:09:34.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:34.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:34.864
  STEP: Setting up server cert @ 01/08/25 01:09:34.958
  E0108 01:09:35.284552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:09:35.711
  STEP: Deploying the webhook pod @ 01/08/25 01:09:35.73
  STEP: Wait for the deployment to be ready @ 01/08/25 01:09:35.764
  I0108 01:09:35.778458 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:09:36.284889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:37.285051      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:09:37.794
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:09:37.83
  E0108 01:09:38.285975      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:09:38.831493 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/08/25 01:09:38.839
  STEP: verifying the mutating webhook match conditions @ 01/08/25 01:09:38.871
  STEP: updating the mutating webhook match conditions @ 01/08/25 01:09:38.882
  STEP: verifying the mutating webhook match conditions @ 01/08/25 01:09:38.901
  I0108 01:09:39.077464 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9216" for this suite. @ 01/08/25 01:09:39.115
  STEP: Destroying namespace "webhook-markers-7077" for this suite. @ 01/08/25 01:09:39.143
• [4.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/08/25 01:09:39.172
  I0108 01:09:39.172740 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 01:09:39.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:39.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:39.218
  STEP: Creating a pod to test substitution in volume subpath @ 01/08/25 01:09:39.222
  E0108 01:09:39.287083      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:40.287217      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:41.287317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:42.287540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:09:43.267
  I0108 01:09:43.271310 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod var-expansion-01b780e3-271e-4118-ae62-f95d9b823b07 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 01:09:43.284
  E0108 01:09:43.287840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:09:43.325560 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9187" for this suite. @ 01/08/25 01:09:43.335
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/08/25 01:09:43.359
  I0108 01:09:43.359421 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:09:43.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:43.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:43.397
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:09:43.4
  E0108 01:09:44.287948      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:45.288134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:46.288964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:47.289283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:09:47.444
  I0108 01:09:47.449465 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-72c3557a-9844-41db-8f11-a703af352416 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:09:47.456
  I0108 01:09:47.507523 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3635" for this suite. @ 01/08/25 01:09:47.515
• [4.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/08/25 01:09:47.529
  I0108 01:09:47.529417 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:09:47.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:47.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:47.582
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/08/25 01:09:47.585
  E0108 01:09:48.290286      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:49.290746      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:50.290882      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:51.291232      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:52.291302      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:53.291519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:09:53.635
  I0108 01:09:53.640455 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-5d1c5f11-dd25-483d-8b33-a009b836fc07 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:09:53.65
  I0108 01:09:53.684652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7914" for this suite. @ 01/08/25 01:09:53.692
• [6.175 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/08/25 01:09:53.704
  I0108 01:09:53.704516 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/08/25 01:09:53.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:09:53.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:09:53.762
  STEP: create the container to handle the HTTPGet hook request. @ 01/08/25 01:09:53.792
  E0108 01:09:54.292336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:55.292943      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:56.293272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:57.293409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/08/25 01:09:57.843
  E0108 01:09:58.293606      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:09:59.293661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 01/08/25 01:09:59.892
  E0108 01:10:00.294371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:01.294661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:02.295412      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:03.295543      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 01/08/25 01:10:03.944
  I0108 01:10:03.967900 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2616" for this suite. @ 01/08/25 01:10:03.974
• [10.282 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 01/08/25 01:10:03.987
  I0108 01:10:03.987945 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 01:10:03.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:04.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:04.032
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/08/25 01:10:04.038
  I0108 01:10:04.038556 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-3097 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0108 01:10:04.172511 20 builder.go:146] stderr: ""
  I0108 01:10:04.172575 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/08/25 01:10:04.172
  I0108 01:10:04.196960 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-3097 delete pods e2e-test-httpd-pod'
  E0108 01:10:04.296402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:05.296576      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:10:05.757124 20 builder.go:146] stderr: ""
  I0108 01:10:05.757208 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0108 01:10:05.757515 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3097" for this suite. @ 01/08/25 01:10:05.764
• [1.789 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/08/25 01:10:05.777
  I0108 01:10:05.777720 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:10:05.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:05.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:05.828
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/08/25 01:10:05.831
  E0108 01:10:06.297088      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:07.297288      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:08.298198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:09.298510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:10:09.881
  I0108 01:10:09.889756 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-a3f63646-0563-4ca7-8e3c-6f47c1b36fc4 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:10:09.904
  I0108 01:10:09.936391 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-32" for this suite. @ 01/08/25 01:10:09.942
• [4.177 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/08/25 01:10:09.955
  I0108 01:10:09.955280 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:10:09.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:10.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:10.01
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:10:10.013
  E0108 01:10:10.300136      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:11.300633      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:12.301613      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:13.302492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:10:14.056
  I0108 01:10:14.061757 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-ae81a3cb-e47f-49dd-9c94-3b3f6d52ec04 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:10:14.078
  I0108 01:10:14.120652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5681" for this suite. @ 01/08/25 01:10:14.127
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/08/25 01:10:14.146
  I0108 01:10:14.146063 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:10:14.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:14.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:14.204
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2937 @ 01/08/25 01:10:14.21
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/08/25 01:10:14.252
  STEP: creating service externalsvc in namespace services-2937 @ 01/08/25 01:10:14.254
  E0108 01:10:14.303301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-2937 @ 01/08/25 01:10:14.304
  I0108 01:10:14.330668      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2937, replica count: 2
  E0108 01:10:15.303841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:16.304778      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:17.305834      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:10:17.382320      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/08/25 01:10:17.387
  I0108 01:10:17.428973 20 resource.go:361] Creating new exec pod
  E0108 01:10:18.305510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:19.305801      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:10:19.464664 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2937 exec execpodjq7l6 -- /bin/sh -x -c nslookup nodeport-service.services-2937.svc.cluster.local'
  I0108 01:10:19.783468 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-2937.svc.cluster.local\n"
  I0108 01:10:19.783543 20 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-2937.svc.cluster.local\tcanonical name = externalsvc.services-2937.svc.cluster.local.\nName:\texternalsvc.services-2937.svc.cluster.local\nAddress: 10.43.131.192\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2937, will wait for the garbage collector to delete the pods @ 01/08/25 01:10:19.783
  I0108 01:10:19.851103 20 resources.go:139] Deleting ReplicationController externalsvc took: 11.883369ms
  I0108 01:10:19.951491 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.386013ms
  E0108 01:10:20.306670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:21.307730      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:22.308514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:23.308855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:10:23.632468 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0108 01:10:23.673329 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2937" for this suite. @ 01/08/25 01:10:23.687
• [9.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/08/25 01:10:23.708
  I0108 01:10:23.708943 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:10:23.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:23.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:23.765
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/08/25 01:10:23.769
  E0108 01:10:24.308961      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:25.309278      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:26.309302      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:27.309399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:10:27.821
  I0108 01:10:27.825373 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-b9c948fc-e940-435d-8877-79df6c2e568e container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:10:27.832
  I0108 01:10:27.887456 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9608" for this suite. @ 01/08/25 01:10:27.892
• [4.200 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/08/25 01:10:27.909
  I0108 01:10:27.909671 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:10:27.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:27.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:27.959
  STEP: Creating configMap with name configmap-test-volume-7c9afb6e-050d-4003-bf4b-84b1f9c0631e @ 01/08/25 01:10:27.962
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:10:27.985
  E0108 01:10:28.310267      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:29.312421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:30.313058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:31.313698      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:10:32.033
  I0108 01:10:32.037281 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-92b9a21a-036f-4e39-900a-82b59797f7f9 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:10:32.046
  I0108 01:10:32.089025 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4673" for this suite. @ 01/08/25 01:10:32.094
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/08/25 01:10:32.11
  I0108 01:10:32.110185 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption @ 01/08/25 01:10:32.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:32.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:32.158
  STEP: Creating a kubernetes client @ 01/08/25 01:10:32.163
  I0108 01:10:32.163625 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption-2 @ 01/08/25 01:10:32.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:32.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:32.249
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:10:32.279
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:10:32.305
  E0108 01:10:32.314100      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:10:32.334
  STEP: listing a collection of PDBs across all namespaces @ 01/08/25 01:10:32.346
  STEP: listing a collection of PDBs in namespace disruption-3728 @ 01/08/25 01:10:32.361
  STEP: deleting a collection of PDBs @ 01/08/25 01:10:32.37
  STEP: Waiting for the PDB collection to be deleted @ 01/08/25 01:10:32.489
  I0108 01:10:32.501349 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9609" for this suite. @ 01/08/25 01:10:32.507
  I0108 01:10:32.520059 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3728" for this suite. @ 01/08/25 01:10:32.613
• [0.524 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/08/25 01:10:32.635
  I0108 01:10:32.635234 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename server-version @ 01/08/25 01:10:32.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:32.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:32.691
  STEP: Request ServerVersion @ 01/08/25 01:10:32.705
  STEP: Confirm major version @ 01/08/25 01:10:32.714
  I0108 01:10:32.714452 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/08/25 01:10:32.714
  I0108 01:10:32.714558 20 server_version.go:58] cleanMinorVersion: 32
  I0108 01:10:32.714591 20 server_version.go:62] Minor version: 32
  I0108 01:10:32.714873 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9392" for this suite. @ 01/08/25 01:10:32.728
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 01/08/25 01:10:32.747
  I0108 01:10:32.747959 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 01:10:32.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:32.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:32.801
  I0108 01:10:32.809312 20 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-121"
  I0108 01:10:32.820921 20 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-121"
  E0108 01:10:33.314233      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 01/08/25 01:10:33.321
  I0108 01:10:33.327118 20 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-121"
  I0108 01:10:33.338927 20 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-121"
  STEP: waiting for the root ca configmap reconciled @ 01/08/25 01:10:33.839
  I0108 01:10:33.844313 20 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-121"
  I0108 01:10:33.844502 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-121" for this suite. @ 01/08/25 01:10:33.858
• [1.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/08/25 01:10:33.871
  I0108 01:10:33.871994 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:10:33.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:33.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:33.93
  STEP: Creating configMap with name projected-configmap-test-volume-55cd6703-7756-412f-8421-6bbe5361247c @ 01/08/25 01:10:33.935
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:10:33.946
  E0108 01:10:34.315300      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:35.316188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:36.316792      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:37.316593      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:10:37.999
  I0108 01:10:38.003008 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-e3a1c20a-22c9-48b5-af70-38c08c72d29b container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:10:38.012
  I0108 01:10:38.052465 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1765" for this suite. @ 01/08/25 01:10:38.058
• [4.207 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/08/25 01:10:38.079
  I0108 01:10:38.079454 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 01:10:38.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:38.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:38.13
  I0108 01:10:38.135279 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:10:38.316851      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:39.317440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:40.317536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0108 01:10:40.713449      20 warnings.go:70] unknown field "alpha"
  W0108 01:10:40.713493      20 warnings.go:70] unknown field "beta"
  W0108 01:10:40.713527      20 warnings.go:70] unknown field "delta"
  W0108 01:10:40.713579      20 warnings.go:70] unknown field "epsilon"
  W0108 01:10:40.713593      20 warnings.go:70] unknown field "gamma"
  I0108 01:10:41.307187 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0108 01:10:41.317737      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-7564" for this suite. @ 01/08/25 01:10:41.319
• [3.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/08/25 01:10:41.35
  I0108 01:10:41.350814 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:10:41.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:41.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:41.401
  STEP: Setting up server cert @ 01/08/25 01:10:41.495
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:10:41.974
  STEP: Deploying the webhook pod @ 01/08/25 01:10:41.993
  STEP: Wait for the deployment to be ready @ 01/08/25 01:10:42.032
  I0108 01:10:42.057772 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:10:42.317933      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:43.318524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:10:44.071
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:10:44.1
  E0108 01:10:44.318747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:10:45.100613 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0108 01:10:45.319865      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 01/08/25 01:10:45.335
  STEP: Creating a configMap that should be mutated @ 01/08/25 01:10:45.373
  STEP: Deleting the collection of validation webhooks @ 01/08/25 01:10:45.449
  STEP: Creating a configMap that should not be mutated @ 01/08/25 01:10:45.623
  I0108 01:10:45.763849 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4649" for this suite. @ 01/08/25 01:10:45.772
  STEP: Destroying namespace "webhook-markers-1687" for this suite. @ 01/08/25 01:10:45.791
• [4.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/08/25 01:10:45.838
  I0108 01:10:45.838922 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 01:10:45.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:45.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:45.878
  STEP: Create a pod @ 01/08/25 01:10:45.885
  E0108 01:10:46.320550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:47.320690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/08/25 01:10:47.921
  I0108 01:10:47.946846 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0108 01:10:47.946995 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-350" for this suite. @ 01/08/25 01:10:47.952
• [2.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/08/25 01:10:47.972
  I0108 01:10:47.972595 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename cronjob @ 01/08/25 01:10:47.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:10:48.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:10:48.016
  STEP: Creating a suspended cronjob @ 01/08/25 01:10:48.019
  STEP: Ensuring no jobs are scheduled @ 01/08/25 01:10:48.034
  E0108 01:10:48.320820      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:49.321304      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:50.321960      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:51.322126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:52.323038      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:53.323377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:54.324364      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:55.325063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:56.325541      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:57.326603      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:58.327788      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:10:59.327831      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:00.328769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:01.329332      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:02.330172      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:03.330873      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:04.331130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:05.331866      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:06.332314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:07.332641      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:08.332708      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:09.332937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:10.333971      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:11.334199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:12.334418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:13.334512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:14.334652      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:15.334807      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:16.334907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:17.335212      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:18.335962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:19.336268      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:20.337077      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:21.337395      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:22.338392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:23.338540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:24.338716      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:25.339010      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:26.339633      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:27.339785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:28.340158      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:29.340366      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:30.340550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:31.340820      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:32.341667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:33.342152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:34.343035      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:35.343487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:36.344417      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:37.344638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:38.345587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:39.346512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:40.346668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:41.346830      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:42.347775      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:43.347880      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:44.348796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:45.348955      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:46.350055      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:47.350359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:48.350889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:49.351049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:50.351870      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:51.352058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:52.352544      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:53.352758      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:54.353264      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:55.353757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:56.354175      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:57.354524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:58.354900      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:11:59.355039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:00.356093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:01.356832      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:02.357888      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:03.358556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:04.359447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:05.359640      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:06.360449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:07.360628      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:08.360860      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:09.361068      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:10.362040      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:11.362452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:12.363481      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:13.363834      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:14.363898      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:15.364204      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:16.364775      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:17.365535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:18.366377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:19.366778      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:20.366978      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:21.367026      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:22.368036      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:23.368179      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:24.368871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:25.369355      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:26.371551      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:27.371929      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:28.372239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:29.372426      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:30.373129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:31.373448      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:32.374428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:33.374584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:34.375037      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:35.375386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:36.375495      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:37.375806      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:38.376419      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:39.376857      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:40.377434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:41.378501      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:42.378531      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:43.378771      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:44.379070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:45.379537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:46.379774      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:47.379858      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:48.380091      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:49.380304      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:50.380539      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:51.381039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:52.381455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:53.381761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:54.381884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:55.382130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:56.382265      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:57.382786      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:58.383255      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:12:59.383436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:00.383684      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:01.384012      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:02.384241      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:03.384558      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:04.385772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:05.385761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:06.385908      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:07.386599      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:08.387009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:09.387164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:10.387238      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:11.387411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:12.387687      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:13.387880      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:14.388219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:15.389379      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:16.389538      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:17.389623      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:18.389836      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:19.390008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:20.390252      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:21.390570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:22.390703      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:23.390920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:24.391088      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:25.391260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:26.391587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:27.391871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:28.392247      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:29.392359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:30.392730      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:31.393586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:32.393821      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:33.395497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:34.395439      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:35.395715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:36.395783      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:37.395920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:38.396068      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:39.396246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:40.396769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:41.396996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:42.397426      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:43.397615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:44.397725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:45.398648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:46.399012      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:47.399279      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:48.399453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:49.399650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:50.399772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:51.399926      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:52.400170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:53.400354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:54.401463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:55.401648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:56.401829      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:57.402044      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:58.402154      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:13:59.402372      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:00.402554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:01.402790      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:02.403013      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:03.403241      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:04.403465      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:05.403654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:06.404020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:07.404284      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:08.404427      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:09.405326      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:10.405482      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:11.405616      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:12.405881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:13.406362      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:14.406212      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:15.406906      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:16.407572      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:17.408390      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:18.408633      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:19.408763      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:20.409052      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:21.409431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:22.410529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:23.411474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:24.412300      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:25.413423      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:26.414485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:27.414646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:28.415910      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:29.416126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:30.416720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:31.416944      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:32.417229      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:33.417706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:34.417774      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:35.417891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:36.418835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:37.419006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:38.419303      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:39.419840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:40.420032      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:41.420328      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:42.421037      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:43.421203      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:44.421435      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:45.422334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:46.423192      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:47.423404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:48.423597      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:49.423734      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:50.424007      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:51.425296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:52.425553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:53.426501      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:54.427947      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:55.427965      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:56.428118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:57.428840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:58.429339      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:14:59.429492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:00.429660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:01.429812      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:02.430385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:03.431395      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:04.431610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:05.432097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:06.432320      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:07.432514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:08.432850      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:09.433213      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:10.433440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:11.434577      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:12.435596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:13.435782      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:14.435934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:15.436122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:16.436257      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:17.436545      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:18.436772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:19.436971      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:20.437226      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:21.437524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:22.438595      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:23.439357      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:24.439732      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:25.439875      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:26.440506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:27.441605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:28.441733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:29.442036      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:30.442707      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:31.443616      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:32.443876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:33.444051      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:34.444210      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:35.444536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:36.444634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:37.444799      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:38.444928      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:39.445078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:40.445236      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:41.451151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:42.451749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:43.451814      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:44.451951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:45.453101      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:46.453140      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:47.453627      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/08/25 01:15:48.035
  STEP: Removing cronjob @ 01/08/25 01:15:48.039
  I0108 01:15:48.050163 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5058" for this suite. @ 01/08/25 01:15:48.055
• [300.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/08/25 01:15:48.068
  I0108 01:15:48.068633 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:15:48.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:15:48.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:15:48.114
  STEP: Creating configMap with name configmap-test-volume-map-0fca59db-08c0-4250-b5f3-7d6b5e69e10f @ 01/08/25 01:15:48.117
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:15:48.127
  E0108 01:15:48.454240      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:49.454769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:50.454861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:51.455756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:15:52.161
  I0108 01:15:52.164675 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-77c7ae59-82ef-42ab-b261-bf70d139b304 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:15:52.198
  I0108 01:15:52.235078 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4127" for this suite. @ 01/08/25 01:15:52.242
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/08/25 01:15:52.274
  I0108 01:15:52.274515 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subpath @ 01/08/25 01:15:52.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:15:52.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:15:52.312
  STEP: Setting up data @ 01/08/25 01:15:52.316
  STEP: Creating pod pod-subpath-test-projected-2cd2 @ 01/08/25 01:15:52.341
  STEP: Creating a pod to test atomic-volume-subpath @ 01/08/25 01:15:52.342
  E0108 01:15:52.456128      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:53.456238      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:54.456418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:55.457075      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:56.456904      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:57.457150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:58.458061      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:15:59.459664      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:00.460041      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:01.460226      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:02.461317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:03.462868      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:04.461824      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:05.462113      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:06.462870      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:07.463225      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:08.465036      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:09.465411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:10.465607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:11.465667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:12.466857      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:13.466975      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:14.467859      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:15.468034      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:16:16.447
  I0108 01:16:16.451837 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-subpath-test-projected-2cd2 container test-container-subpath-projected-2cd2: <nil>
  STEP: delete the pod @ 01/08/25 01:16:16.464
  E0108 01:16:16.468898      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-projected-2cd2 @ 01/08/25 01:16:16.503
  I0108 01:16:16.503622 20 delete.go:62] Deleting pod "pod-subpath-test-projected-2cd2" in namespace "subpath-4439"
  I0108 01:16:16.507323 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4439" for this suite. @ 01/08/25 01:16:16.512
• [24.250 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/08/25 01:16:16.525
  I0108 01:16:16.526034 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 01:16:16.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:16:16.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:16:16.572
  E0108 01:16:17.469436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:18.469487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:19.469998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:20.470492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:21.470433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:22.470681      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:23.470879      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:24.471172      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:25.471371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:26.471493      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:27.471530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:28.471745      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:29.472575      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:30.473225      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:31.474295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:32.475363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:33.475532      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:34.476101      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:35.476280      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:36.476432      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:37.476619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:38.476819      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:39.477276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:40.477605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:41.478876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:42.479048      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:42.699179 20 container_probe.go:92] Container started at 2025-01-08 01:16:17 +0000 UTC, pod became ready at 2025-01-08 01:16:40 +0000 UTC
  I0108 01:16:42.699382 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8994" for this suite. @ 01/08/25 01:16:42.704
• [26.191 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/08/25 01:16:42.718
  I0108 01:16:42.718230 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:16:42.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:16:42.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:16:42.769
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7744 @ 01/08/25 01:16:42.772
  STEP: changing the ExternalName service to type=ClusterIP @ 01/08/25 01:16:42.794
  STEP: creating replication controller externalname-service in namespace services-7744 @ 01/08/25 01:16:42.832
  I0108 01:16:42.854358      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7744, replica count: 2
  E0108 01:16:43.481513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:44.482144      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:45.482354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:45.906740      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 01:16:45.906810 20 resource.go:361] Creating new exec pod
  E0108 01:16:46.483248      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:47.483560      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:48.484157      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:48.960027 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7744 exec execpodhp4xh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0108 01:16:49.198560 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.252.61) 80 port [tcp/http] succeeded!\n"
  I0108 01:16:49.198613 20 builder.go:147] stdout: "externalname-service-g4m5r"
  I0108 01:16:49.198707 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-7744 exec execpodhp4xh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.252.61 80'
  I0108 01:16:49.456289 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.252.61 80\nConnection to 10.43.252.61 80 port [tcp/http] succeeded!\n"
  I0108 01:16:49.456358 20 builder.go:147] stdout: "externalname-service-qhmd2"
  I0108 01:16:49.456610 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  E0108 01:16:49.484557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:49.510581 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7744" for this suite. @ 01/08/25 01:16:49.525
• [6.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/08/25 01:16:49.549
  I0108 01:16:49.549740 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 01:16:49.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:16:49.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:16:49.609
  I0108 01:16:49.648979 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/08/25 01:16:49.664
  I0108 01:16:49.676726 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:49.676786 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/08/25 01:16:49.676
  I0108 01:16:49.788460 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:49.789407 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:50.484647      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:50.772539 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:50.772613 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:51.485636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:51.769138 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:51.769219 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:52.486184      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:52.769655 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0108 01:16:52.769707 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/08/25 01:16:52.773
  I0108 01:16:52.820063 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:52.821316 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/08/25 01:16:52.821
  I0108 01:16:52.871367 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:52.871811 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:53.487109      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:53.844515 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:53.844908 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:54.487609      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:54.844287 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:54.844341 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:55.487739      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:55.845686 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:55.845831 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:16:56.488736      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:56.844984 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0108 01:16:56.845277 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 01:16:56.862
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7657, will wait for the garbage collector to delete the pods @ 01/08/25 01:16:56.862
  I0108 01:16:56.931988 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.461126ms
  I0108 01:16:57.033122 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.131774ms
  E0108 01:16:57.489732      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:58.489805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:16:59.490154      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:16:59.938906 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:16:59.939353 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 01:16:59.943902 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"54140"},"items":null}

  I0108 01:16:59.948585 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"54140"},"items":null}

  I0108 01:17:00.020615 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7657" for this suite. @ 01/08/25 01:17:00.027
• [10.495 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/08/25 01:17:00.055
  I0108 01:17:00.055549 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 01:17:00.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:17:00.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:17:00.124
  STEP: creating a replication controller @ 01/08/25 01:17:00.128
  I0108 01:17:00.128404 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 create -f -'
  I0108 01:17:00.457392 20 builder.go:146] stderr: ""
  I0108 01:17:00.457446 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/08/25 01:17:00.457
  I0108 01:17:00.457554 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0108 01:17:00.490455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:00.605690 20 builder.go:146] stderr: ""
  I0108 01:17:00.605740 20 builder.go:147] stdout: "update-demo-nautilus-dxbvm update-demo-nautilus-ssjkn "
  I0108 01:17:00.605805 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:00.761326 20 builder.go:146] stderr: ""
  I0108 01:17:00.761396 20 builder.go:147] stdout: ""
  I0108 01:17:00.761416 20 kubectl.go:2499] update-demo-nautilus-dxbvm is created but not running
  E0108 01:17:01.491345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:02.491436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:03.491653      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:04.491799      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:05.491936      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:05.762482 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0108 01:17:05.881212 20 builder.go:146] stderr: ""
  I0108 01:17:05.881278 20 builder.go:147] stdout: "update-demo-nautilus-dxbvm update-demo-nautilus-ssjkn "
  I0108 01:17:05.881394 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:05.983781 20 builder.go:146] stderr: ""
  I0108 01:17:05.983837 20 builder.go:147] stdout: "true"
  I0108 01:17:05.983907 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 01:17:06.083726 20 builder.go:146] stderr: ""
  I0108 01:17:06.085778 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:06.085815 20 kubectl.go:2390] validating pod update-demo-nautilus-dxbvm
  I0108 01:17:06.096435 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:06.096513 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:06.096540 20 kubectl.go:2517] update-demo-nautilus-dxbvm is verified up and running
  I0108 01:17:06.096681 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-ssjkn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:06.202165 20 builder.go:146] stderr: ""
  I0108 01:17:06.202246 20 builder.go:147] stdout: "true"
  I0108 01:17:06.202315 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-ssjkn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 01:17:06.298624 20 builder.go:146] stderr: ""
  I0108 01:17:06.298690 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:06.298719 20 kubectl.go:2390] validating pod update-demo-nautilus-ssjkn
  I0108 01:17:06.309276 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:06.309363 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:06.309384 20 kubectl.go:2517] update-demo-nautilus-ssjkn is verified up and running
  STEP: scaling down the replication controller @ 01/08/25 01:17:06.309
  I0108 01:17:06.312150 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0108 01:17:06.312195 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0108 01:17:06.492768      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:07.429066 20 builder.go:146] stderr: ""
  I0108 01:17:07.429141 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/08/25 01:17:07.429
  I0108 01:17:07.429709 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0108 01:17:07.493292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:07.523474 20 builder.go:146] stderr: ""
  I0108 01:17:07.524012 20 builder.go:147] stdout: "update-demo-nautilus-dxbvm "
  I0108 01:17:07.524267 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:07.620517 20 builder.go:146] stderr: ""
  I0108 01:17:07.620583 20 builder.go:147] stdout: "true"
  I0108 01:17:07.620656 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 01:17:07.717672 20 builder.go:146] stderr: ""
  I0108 01:17:07.717724 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:07.717745 20 kubectl.go:2390] validating pod update-demo-nautilus-dxbvm
  I0108 01:17:07.722681 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:07.722802 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:07.722823 20 kubectl.go:2517] update-demo-nautilus-dxbvm is verified up and running
  STEP: scaling up the replication controller @ 01/08/25 01:17:07.722
  I0108 01:17:07.726413 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0108 01:17:07.726508 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0108 01:17:08.493828      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:08.855968 20 builder.go:146] stderr: ""
  I0108 01:17:08.856036 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/08/25 01:17:08.856
  I0108 01:17:08.856145 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0108 01:17:08.948656 20 builder.go:146] stderr: ""
  I0108 01:17:08.948730 20 builder.go:147] stdout: "update-demo-nautilus-dxbvm update-demo-nautilus-t5js4 "
  I0108 01:17:08.948798 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:09.045754 20 builder.go:146] stderr: ""
  I0108 01:17:09.045819 20 builder.go:147] stdout: "true"
  I0108 01:17:09.045887 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 01:17:09.154411 20 builder.go:146] stderr: ""
  I0108 01:17:09.154466 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:09.154491 20 kubectl.go:2390] validating pod update-demo-nautilus-dxbvm
  I0108 01:17:09.162300 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:09.162375 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:09.162392 20 kubectl.go:2517] update-demo-nautilus-dxbvm is verified up and running
  I0108 01:17:09.162452 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-t5js4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:09.251225 20 builder.go:146] stderr: ""
  I0108 01:17:09.251288 20 builder.go:147] stdout: ""
  I0108 01:17:09.251307 20 kubectl.go:2499] update-demo-nautilus-t5js4 is created but not running
  E0108 01:17:09.494677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:10.495301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:11.495719      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:12.495990      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:13.496124      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:14.251889 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0108 01:17:14.353708 20 builder.go:146] stderr: ""
  I0108 01:17:14.353771 20 builder.go:147] stdout: "update-demo-nautilus-dxbvm update-demo-nautilus-t5js4 "
  I0108 01:17:14.353837 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:14.450101 20 builder.go:146] stderr: ""
  I0108 01:17:14.450159 20 builder.go:147] stdout: "true"
  I0108 01:17:14.450412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-dxbvm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0108 01:17:14.496879      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:14.553272 20 builder.go:146] stderr: ""
  I0108 01:17:14.553333 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:14.553350 20 kubectl.go:2390] validating pod update-demo-nautilus-dxbvm
  I0108 01:17:14.559309 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:14.559370 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:14.559394 20 kubectl.go:2517] update-demo-nautilus-dxbvm is verified up and running
  I0108 01:17:14.559442 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-t5js4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0108 01:17:14.712159 20 builder.go:146] stderr: ""
  I0108 01:17:14.712334 20 builder.go:147] stdout: "true"
  I0108 01:17:14.712411 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods update-demo-nautilus-t5js4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0108 01:17:14.826097 20 builder.go:146] stderr: ""
  I0108 01:17:14.826156 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0108 01:17:14.826177 20 kubectl.go:2390] validating pod update-demo-nautilus-t5js4
  I0108 01:17:14.839905 20 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0108 01:17:14.839996 20 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0108 01:17:14.840017 20 kubectl.go:2517] update-demo-nautilus-t5js4 is verified up and running
  STEP: using delete to clean up resources @ 01/08/25 01:17:14.84
  I0108 01:17:14.840105 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 delete --grace-period=0 --force -f -'
  I0108 01:17:14.944483 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0108 01:17:14.944548 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0108 01:17:14.944615 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get rc,svc -l name=update-demo --no-headers'
  I0108 01:17:15.102604 20 builder.go:146] stderr: "No resources found in kubectl-9512 namespace.\n"
  I0108 01:17:15.102801 20 builder.go:147] stdout: ""
  I0108 01:17:15.102873 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-9512 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0108 01:17:15.242162 20 builder.go:146] stderr: ""
  I0108 01:17:15.242228 20 builder.go:147] stdout: ""
  I0108 01:17:15.242397 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9512" for this suite. @ 01/08/25 01:17:15.258
• [15.222 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 01/08/25 01:17:15.278
  I0108 01:17:15.278025 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 01:17:15.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:17:15.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:17:15.347
  STEP: Creating a job @ 01/08/25 01:17:15.351
  STEP: Ensuring job reaches completions @ 01/08/25 01:17:15.368
  E0108 01:17:15.497978      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:16.498290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:17.499177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:18.499414      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:19.499982      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:20.501884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:21.502810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:22.504202      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:23.504409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:24.504973      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:25.504743      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:26.505027      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:27.414855 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-462" for this suite. @ 01/08/25 01:17:27.422
• [12.170 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/08/25 01:17:27.453
  I0108 01:17:27.453523 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 01:17:27.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:17:27.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:17:27.5
  E0108 01:17:27.505008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/08/25 01:17:27.505
  STEP: Getting a ResourceQuota @ 01/08/25 01:17:27.524
  STEP: Updating a ResourceQuota @ 01/08/25 01:17:27.534
  STEP: Verifying a ResourceQuota was modified @ 01/08/25 01:17:27.546
  STEP: Deleting a ResourceQuota @ 01/08/25 01:17:27.551
  STEP: Verifying the deleted ResourceQuota @ 01/08/25 01:17:27.578
  I0108 01:17:27.582976 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2037" for this suite. @ 01/08/25 01:17:27.588
• [0.157 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/08/25 01:17:27.609
  I0108 01:17:27.609236 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:17:27.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:17:27.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:17:27.656
  STEP: Creating projection with secret that has name projected-secret-test-f35fa326-80ec-40e7-b7c8-318556a3d272 @ 01/08/25 01:17:27.659
  STEP: Creating a pod to test consume secrets @ 01/08/25 01:17:27.672
  E0108 01:17:28.505353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:29.505563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:30.505706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:31.505915      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:17:31.707
  I0108 01:17:31.710731 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-secrets-9f2f5ef6-7222-45aa-bef9-a43b0b4f0b6a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 01:17:31.722
  I0108 01:17:31.764518 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3366" for this suite. @ 01/08/25 01:17:31.77
• [4.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/08/25 01:17:31.783
  I0108 01:17:31.783398 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 01:17:31.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:17:31.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:17:31.838
  STEP: create the rc1 @ 01/08/25 01:17:31.872
  STEP: create the rc2 @ 01/08/25 01:17:31.898
  E0108 01:17:32.506113      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:33.506256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:34.507004      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:35.510742      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:36.511053      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/08/25 01:17:36.836
  E0108 01:17:37.512130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:38.512070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:39.512186      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:40.512690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:41.513728      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:42.514213      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:43.515271      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:44.525492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:45.529507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:46.529682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:47.529774      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:48.529976      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:49.530570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:50.531073      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/08/25 01:17:50.958
  E0108 01:17:51.531185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:52.531329      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 01/08/25 01:17:52.669
  E0108 01:17:53.534425      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:54.535675      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:55.536585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:56.537122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:57.537398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:17:57.992169 20 garbage_collector.go:762] 74 pods remaining
  I0108 01:17:57.992595 20 garbage_collector.go:769] 73 pods has nil DeletionTimestamp
  I0108 01:17:57.992712 20 garbage_collector.go:770] 
  E0108 01:17:58.538021      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:17:59.541166      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:00.541372      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:01.545386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:02.545491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/08/25 01:18:02.683
  I0108 01:18:02.952322 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 01:18:02.952488 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2pwt9" in namespace "gc-4666"
  I0108 01:18:02.985449 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wmdz" in namespace "gc-4666"
  I0108 01:18:03.019093 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2x6f7" in namespace "gc-4666"
  I0108 01:18:03.102415 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-44cf6" in namespace "gc-4666"
  I0108 01:18:03.150671 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46pkx" in namespace "gc-4666"
  I0108 01:18:03.205452 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gcmj" in namespace "gc-4666"
  I0108 01:18:03.244220 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jx8v" in namespace "gc-4666"
  I0108 01:18:03.286997 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58qjk" in namespace "gc-4666"
  I0108 01:18:03.355832 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5l2f9" in namespace "gc-4666"
  I0108 01:18:03.388572 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62wnn" in namespace "gc-4666"
  I0108 01:18:03.439503 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-67dzq" in namespace "gc-4666"
  I0108 01:18:03.480119 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rw64" in namespace "gc-4666"
  I0108 01:18:03.539651 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7sbv2" in namespace "gc-4666"
  E0108 01:18:03.550029      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:03.593796 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86s2c" in namespace "gc-4666"
  I0108 01:18:03.643577 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8dlnw" in namespace "gc-4666"
  I0108 01:18:03.681586 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8dm7z" in namespace "gc-4666"
  I0108 01:18:03.724282 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fsdz" in namespace "gc-4666"
  I0108 01:18:03.772414 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nqz5" in namespace "gc-4666"
  I0108 01:18:03.847826 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9qmw4" in namespace "gc-4666"
  I0108 01:18:03.901290 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b84ln" in namespace "gc-4666"
  I0108 01:18:03.953726 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bb24s" in namespace "gc-4666"
  I0108 01:18:04.012980 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6cxj" in namespace "gc-4666"
  I0108 01:18:04.075674 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c8955" in namespace "gc-4666"
  I0108 01:18:04.131647 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9xh2" in namespace "gc-4666"
  I0108 01:18:04.188915 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cb5gb" in namespace "gc-4666"
  I0108 01:18:04.254266 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cc8h2" in namespace "gc-4666"
  I0108 01:18:04.289882 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cj5jc" in namespace "gc-4666"
  I0108 01:18:04.339742 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9gqn" in namespace "gc-4666"
  I0108 01:18:04.404417 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzgmk" in namespace "gc-4666"
  I0108 01:18:04.445119 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzzpd" in namespace "gc-4666"
  I0108 01:18:04.504650 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmf9w" in namespace "gc-4666"
  I0108 01:18:04.549473 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmtxs" in namespace "gc-4666"
  E0108 01:18:04.550033      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:04.604457 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g4t8t" in namespace "gc-4666"
  I0108 01:18:04.665074 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g6dvn" in namespace "gc-4666"
  I0108 01:18:04.700702 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggfmz" in namespace "gc-4666"
  I0108 01:18:04.765409 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggncb" in namespace "gc-4666"
  I0108 01:18:04.828242 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggxsc" in namespace "gc-4666"
  I0108 01:18:04.870894 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gw4pg" in namespace "gc-4666"
  I0108 01:18:04.921504 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gwwmz" in namespace "gc-4666"
  I0108 01:18:04.990296 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h86jk" in namespace "gc-4666"
  I0108 01:18:05.019082 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcmsl" in namespace "gc-4666"
  I0108 01:18:05.065372 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkffz" in namespace "gc-4666"
  I0108 01:18:05.131823 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hvnmd" in namespace "gc-4666"
  I0108 01:18:05.189865 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hx5z8" in namespace "gc-4666"
  I0108 01:18:05.246787 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hz8xf" in namespace "gc-4666"
  I0108 01:18:05.282878 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j846w" in namespace "gc-4666"
  I0108 01:18:05.312076 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbz22" in namespace "gc-4666"
  I0108 01:18:05.365241 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k544x" in namespace "gc-4666"
  I0108 01:18:05.419105 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k58b4" in namespace "gc-4666"
  I0108 01:18:05.456758 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kpzdl" in namespace "gc-4666"
  I0108 01:18:05.489136 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4666" for this suite. @ 01/08/25 01:18:05.5
• [33.752 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/08/25 01:18:05.536
  I0108 01:18:05.536480 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:18:05.537
  E0108 01:18:05.550622      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:05.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:05.589
  STEP: Creating configMap with name configmap-test-volume-de1d7721-8a23-410d-ad2f-956389dfbc38 @ 01/08/25 01:18:05.593
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:18:05.614
  E0108 01:18:06.551536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:07.551991      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:08.552584      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:09.553012      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:10.553446      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:11.553865      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:12.557122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:13.557673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:18:13.691
  I0108 01:18:13.698281 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-ab73364e-b31f-4259-a2f8-46f7a5f9a5ec container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 01:18:13.712
  I0108 01:18:13.792866 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3985" for this suite. @ 01/08/25 01:18:13.808
• [8.287 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/08/25 01:18:13.824
  I0108 01:18:13.824626 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename endpointslice @ 01/08/25 01:18:13.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:13.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:13.893
  I0108 01:18:14.099808 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5823" for this suite. @ 01/08/25 01:18:14.11
• [0.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/08/25 01:18:14.133
  I0108 01:18:14.133943 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 01:18:14.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:14.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:14.198
  I0108 01:18:14.237925 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0108 01:18:14.558808      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:15.559070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:16.560585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:17.560889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:18.561122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:19.244009 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 01:18:19.244
  I0108 01:18:19.244118 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0108 01:18:19.561464      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:20.561625      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:21.249160 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0108 01:18:21.275275 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0108 01:18:21.562666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:22.563082      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:23.285858 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0108 01:18:23.294108 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0108 01:18:23.305081 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0108 01:18:23.322219 20 deployment.go:314] Updating deployment test-rollover-deployment
  I0108 01:18:23.322273 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0108 01:18:23.564025      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:24.564179      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:25.343280 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0108 01:18:25.351623 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0108 01:18:25.361250 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0108 01:18:25.361460 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:18:25.565326      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:26.565741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:27.372224 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0108 01:18:27.372347 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:18:27.566256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:28.567306      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:29.373090 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0108 01:18:29.373231 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:18:29.568081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:30.568277      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:31.372786 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0108 01:18:31.373051 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:18:31.569316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:32.569398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:33.376790 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0108 01:18:33.376876 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 8, 1, 18, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 8, 1, 18, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0108 01:18:33.569942      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:34.570051      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:35.371806 20 deployment.go:95] 
  I0108 01:18:35.371885 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I0108 01:18:35.384542 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "346ca14c-5cff-4f3a-8eec-00d6d9444938",
      ResourceVersion: (string) (len=5) "56789",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 01:18:35.395721 20 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58a19a87-8872-419e-b616-798f5f2a2d6f",
      ResourceVersion: (string) (len=5) "56779",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "346ca14c-5cff-4f3a-8eec-00d6d9444938",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 34 36 63 61 31  34 63 2d 35 63 66 66 2d  |\"346ca14c-5cff-|
              00000120  34 66 33 61 2d 38 65 65  63 2d 30 30 64 36 64 39  |4f3a-8eec-00d6d9|
              00000130  34 34 34 39 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |444938\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 01:18:35.397136 20 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0108 01:18:35.397610 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3e2ceb3-74e9-49a7-938a-1389be274b04",
      ResourceVersion: (string) (len=5) "56788",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "346ca14c-5cff-4f3a-8eec-00d6d9444938",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  33 34 36 63 61 31 34 63  2d 35 63 66 66 2d 34 66  |346ca14c-5cff-4f|
              000000c0  33 61 2d 38 65 65 63 2d  30 30 64 36 64 39 34 34  |3a-8eec-00d6d944|
              000000d0  34 39 33 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4938\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 01:18:35.399402 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84dc682e-5074-49b6-a5f8-ec87b8ba0d00",
      ResourceVersion: (string) (len=5) "56718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "346ca14c-5cff-4f3a-8eec-00d6d9444938",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 34 36 63 61 31  34 63 2d 35 63 66 66 2d  |\"346ca14c-5cff-|
              00000120  34 66 33 61 2d 38 65 65  63 2d 30 30 64 36 64 39  |4f3a-8eec-00d6d9|
              00000130  34 34 34 39 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |444938\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 01:18:35.406369 20 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-sddgj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-sddgj",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfd868d2-1851-435e-8e6d-0a503a1d0b3b",
      ResourceVersion: (string) (len=5) "56737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1fe7fb3a9dba043fa9bc5fdac4498c46f37d95d7ea51f2d182b137ae8ee405c0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "58a19a87-8872-419e-b616-798f5f2a2d6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  61 31 39 61 38 37 2d 38  |d\":\"58a19a87-8|
              00000090  38 37 32 2d 34 31 39 65  2d 62 36 31 36 2d 37 39  |872-419e-b616-79|
              000000a0  38 66 35 66 32 61 32 64  36 66 5c 22 7d 22 3a 7b  |8f5f2a2d6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 36 37  5c 22 7d 22 3a 7b 22 2e  |.42.4.67\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-68jjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-68jjp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871895903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=10) "10.42.4.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871895903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871895904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://0522052046abd9e737cd1881360d9c0d08e051eab9176f9e639ebb7ff8c620b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-68jjp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 01:18:35.409792 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2812" for this suite. @ 01/08/25 01:18:35.415
• [21.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/08/25 01:18:35.437
  I0108 01:18:35.437703 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename init-container @ 01/08/25 01:18:35.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:35.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:35.485
  STEP: creating the pod @ 01/08/25 01:18:35.489
  I0108 01:18:35.489676 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0108 01:18:35.570840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:36.571694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:37.572692      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:38.573660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:39.574163      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:18:39.958416 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6504" for this suite. @ 01/08/25 01:18:39.965
• [4.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/08/25 01:18:39.984
  I0108 01:18:39.984714 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:18:39.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:40.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:40.033
  STEP: Creating configMap with name configmap-test-volume-map-907f1a41-a989-4e0b-81a4-5a387e119165 @ 01/08/25 01:18:40.036
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:18:40.046
  E0108 01:18:40.574533      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:41.574714      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:42.575825      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:43.575988      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:18:44.086
  I0108 01:18:44.089838 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-b512d136-701c-4d2c-b956-bd66937e7165 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:18:44.102
  I0108 01:18:44.150989 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1354" for this suite. @ 01/08/25 01:18:44.156
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/08/25 01:18:44.171
  I0108 01:18:44.171487 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption @ 01/08/25 01:18:44.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:44.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:44.217
  STEP: creating the pdb @ 01/08/25 01:18:44.22
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:18:44.23
  E0108 01:18:44.576716      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:45.577008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 01/08/25 01:18:46.234
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:18:46.253
  E0108 01:18:46.577156      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:47.577387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 01/08/25 01:18:48.26
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:18:48.276
  E0108 01:18:48.577767      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:49.577913      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 01/08/25 01:18:50.297
  I0108 01:18:50.307549 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-999" for this suite. @ 01/08/25 01:18:50.318
• [6.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/08/25 01:18:50.332
  I0108 01:18:50.332903 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pod-network-test @ 01/08/25 01:18:50.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:18:50.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:18:50.385
  STEP: Performing setup for networking test in namespace pod-network-test-5167 @ 01/08/25 01:18:50.391
  STEP: creating a selector @ 01/08/25 01:18:50.391
  STEP: Creating the service pods in kubernetes @ 01/08/25 01:18:50.391
  I0108 01:18:50.391975 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0108 01:18:50.578501      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:51.578478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:52.579127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:53.579168      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:54.580207      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:55.581383      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:56.581346      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:57.581396      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:58.582034      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:18:59.582659      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:00.583150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:01.583505      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:02.584027      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:03.584305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:04.584808      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/08/25 01:19:04.641
  E0108 01:19:05.585614      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:06.586000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:19:06.681345 20 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0108 01:19:06.681398 20 networking.go:42] Breadth first check of 10.42.4.70 on host 172.31.16.191...
  I0108 01:19:06.685616 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.71:9080/dial?request=hostname&protocol=udp&host=10.42.4.70&port=8081&tries=1'] Namespace:pod-network-test-5167 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:19:06.685675 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:19:06.685774 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5167/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.4.70%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:19:06.807223 20 utils.go:356] Waiting for responses: map[]
  I0108 01:19:06.807275 20 utils.go:360] reached 10.42.4.70 after 0/1 tries
  I0108 01:19:06.807299 20 networking.go:42] Breadth first check of 10.42.0.69 on host 172.31.20.100...
  I0108 01:19:06.812525 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.71:9080/dial?request=hostname&protocol=udp&host=10.42.0.69&port=8081&tries=1'] Namespace:pod-network-test-5167 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:19:06.812709 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:19:06.812789 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5167/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.69%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:19:06.933911 20 utils.go:356] Waiting for responses: map[]
  I0108 01:19:06.933971 20 utils.go:360] reached 10.42.0.69 after 0/1 tries
  I0108 01:19:06.933992 20 networking.go:42] Breadth first check of 10.42.2.105 on host 172.31.20.249...
  I0108 01:19:06.938538 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.71:9080/dial?request=hostname&protocol=udp&host=10.42.2.105&port=8081&tries=1'] Namespace:pod-network-test-5167 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:19:06.938595 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:19:06.938697 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5167/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.105%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:19:07.057174 20 utils.go:356] Waiting for responses: map[]
  I0108 01:19:07.057400 20 utils.go:360] reached 10.42.2.105 after 0/1 tries
  I0108 01:19:07.057501 20 networking.go:42] Breadth first check of 10.42.1.77 on host 172.31.25.234...
  I0108 01:19:07.066802 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.71:9080/dial?request=hostname&protocol=udp&host=10.42.1.77&port=8081&tries=1'] Namespace:pod-network-test-5167 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:19:07.066857 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:19:07.066927 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5167/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.77%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:19:07.240716 20 utils.go:356] Waiting for responses: map[]
  I0108 01:19:07.240773 20 utils.go:360] reached 10.42.1.77 after 0/1 tries
  I0108 01:19:07.240848 20 networking.go:53] Going to retry 0 out of 4 pods....
  I0108 01:19:07.241438 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5167" for this suite. @ 01/08/25 01:19:07.249
• [16.932 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/08/25 01:19:07.265
  I0108 01:19:07.265471 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 01:19:07.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:19:07.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:19:07.339
  STEP: Creating projection with secret that has name secret-emptykey-test-1de35eec-1f60-473e-8dfc-f239a0b84279 @ 01/08/25 01:19:07.349
  I0108 01:19:07.352243 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-400" for this suite. @ 01/08/25 01:19:07.361
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/08/25 01:19:07.383
  I0108 01:19:07.383158 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename conformance-tests @ 01/08/25 01:19:07.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:19:07.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:19:07.447
  STEP: Getting node addresses @ 01/08/25 01:19:07.453
  I0108 01:19:07.454086 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0108 01:19:07.470078 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1074" for this suite. @ 01/08/25 01:19:07.485
• [0.116 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/08/25 01:19:07.499
  I0108 01:19:07.500085 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:19:07.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:19:07.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:19:07.575
  E0108 01:19:07.586354      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/08/25 01:19:07.656
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:19:08.141
  STEP: Deploying the webhook pod @ 01/08/25 01:19:08.155
  STEP: Wait for the deployment to be ready @ 01/08/25 01:19:08.192
  I0108 01:19:08.231433 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:19:08.588020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:09.587740      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:19:10.246
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:19:10.275
  E0108 01:19:10.587931      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:19:11.275384 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/08/25 01:19:11.285
  STEP: create a pod @ 01/08/25 01:19:11.326
  E0108 01:19:11.588380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:12.589135      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/08/25 01:19:13.358
  I0108 01:19:13.358979 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=webhook-7351 attach --namespace=webhook-7351 to-be-attached-pod -i -c=container1'
  I0108 01:19:13.573225 20 builder.go:135] rc: 1
  E0108 01:19:13.589331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:19:13.883701 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7351" for this suite. @ 01/08/25 01:19:13.903
  STEP: Destroying namespace "webhook-markers-2274" for this suite. @ 01/08/25 01:19:13.953
• [6.478 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 01/08/25 01:19:13.978
  I0108 01:19:13.978393 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-preemption @ 01/08/25 01:19:13.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:19:14.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:19:14.02
  I0108 01:19:14.059310 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0108 01:19:14.592192      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:15.594530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:16.595039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:17.595335      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:18.595902      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:19.595986      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:20.597007      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:21.597909      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:22.600221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:23.601351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:24.601250      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:25.601397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:26.601926      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:27.602204      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:28.602411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:29.602534      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:30.603393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:31.604453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:32.605418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:33.605558      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:34.605809      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:35.607690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:36.608433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:37.608757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:38.608948      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:39.609244      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:40.611536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:41.611047      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:42.611782      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:43.612151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:44.613325      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:45.613786      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:46.613911      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:47.614173      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:48.615123      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:49.615176      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:50.615393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:51.615922      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:52.616081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:53.616891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:54.617331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:55.617413      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:56.618632      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:57.619660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:58.619804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:19:59.620821      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:00.620946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:01.621378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:02.621564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:03.622460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:04.623061      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:05.623221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:06.624127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:07.625490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:08.626222      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:09.626165      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:10.626333      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:11.627020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:12.627132      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:13.628203      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:14.065089 20 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/08/25 01:20:14.069
  STEP: Adding a custom resource @ 01/08/25 01:20:14.069
  I0108 01:20:14.115596 20 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0108 01:20:14.134429 20 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 01:20:14.134
  I0108 01:20:14.190960 20 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0108 01:20:14.213435 20 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 01:20:14.217
  I0108 01:20:14.303399 20 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0108 01:20:14.335533 20 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/08/25 01:20:14.335
  I0108 01:20:14.416778 20 preemption.go:255] Created pod: pod3-0-sched-preemption-medium-priority
  I0108 01:20:14.454822 20 preemption.go:255] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/08/25 01:20:14.454
  E0108 01:20:14.628424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:15.628549      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:16.629317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:17.629514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/08/25 01:20:18.515
  E0108 01:20:18.630503      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:19.630595      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:20.631065      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:21.631269      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:22.631383      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/08/25 01:20:22.697
  STEP: Removing a custom resource @ 01/08/25 01:20:22.728
  STEP: Removing a custom resource @ 01/08/25 01:20:22.763
  STEP: Removing a custom resource @ 01/08/25 01:20:22.806
  I0108 01:20:22.837490 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5275" for this suite. @ 01/08/25 01:20:22.844
• [68.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 01/08/25 01:20:22.866
  I0108 01:20:22.866543 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 01:20:22.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:20:22.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:20:22.911
  STEP: Creating a test headless service @ 01/08/25 01:20:22.916
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.2.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.2.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.2.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.2.235_tcp@PTR;sleep 1; done
   @ 01/08/25 01:20:22.984
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.2.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.2.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.2.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.2.235_tcp@PTR;sleep 1; done
   @ 01/08/25 01:20:22.984
  STEP: creating a pod to probe DNS @ 01/08/25 01:20:22.984
  STEP: submitting the pod to kubernetes @ 01/08/25 01:20:22.984
  E0108 01:20:23.632071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:24.633381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:25.633507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:26.633974      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/08/25 01:20:27.062
  STEP: looking for the results for each expected name from probers @ 01/08/25 01:20:27.069
  I0108 01:20:27.078566 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.084575 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.089775 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.094908 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.121732 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.128685 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.133897 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.139910 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:27.162920 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:27.183230 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:27.195040 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:27.205001 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:27.634553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:28.634769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:29.635196      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:30.635463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:31.635650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:32.084252 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.090156 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.095740 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.100472 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.127571 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.135643 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.142109 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.146513 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:32.167600 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:32.178713 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:32.187910 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:32.197961 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:32.636436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:33.636453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:34.636553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:35.636668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:36.636977      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:37.075941 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.081007 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.085477 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.089976 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.113895 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.118406 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.122438 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.126923 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:37.148983 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:37.156929 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:37.165639 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:37.173926 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:37.637619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:38.638650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:39.638659      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:40.638841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:41.638841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:42.076094 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.084454 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.088623 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.092536 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.111887 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.115556 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.119826 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.123423 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:42.140093 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:42.147519 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:42.157365 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:42.165299 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:42.639000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:43.639200      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:44.640850      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:45.640947      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:46.642018      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:47.075284 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.080920 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.091208 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.095570 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.120823 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.125395 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.130334 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.136210 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:47.159696 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:47.168293 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:47.179057 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:47.190192 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:47.643008      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:48.643312      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:49.644073      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:50.644576      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:51.644927      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:52.075938 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.080077 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.084802 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.089319 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.111470 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.117033 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.122103 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.127456 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c: the server could not find the requested resource (get pods dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c)
  I0108 01:20:52.146368 20 dns_common.go:506] Lookups using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c failed for: [agnhost_udp@dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@dns-test-service.dns-7887.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0108 01:20:52.156986 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:20:52.165381 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:20:52.173679 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:20:52.645014      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:53.645375      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:54.653379      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:55.653555      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:56.654437      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:20:57.192897 20 dns_common.go:546] DNS probes using dns-7887/dns-test-eec92c8b-b4c0-48ee-8b87-55c1ead7881c succeeded

  STEP: deleting the pod @ 01/08/25 01:20:57.193
  STEP: deleting the test service @ 01/08/25 01:20:57.273
  STEP: deleting the test headless service @ 01/08/25 01:20:57.353
  I0108 01:20:57.384905 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7887" for this suite. @ 01/08/25 01:20:57.39
• [34.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/08/25 01:20:57.414
  I0108 01:20:57.414404 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pod-network-test @ 01/08/25 01:20:57.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:20:57.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:20:57.454
  STEP: Performing setup for networking test in namespace pod-network-test-9148 @ 01/08/25 01:20:57.456
  STEP: creating a selector @ 01/08/25 01:20:57.457
  STEP: Creating the service pods in kubernetes @ 01/08/25 01:20:57.457
  I0108 01:20:57.457543 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0108 01:20:57.655223      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:58.655973      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:20:59.658657      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:00.658866      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:01.659516      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:02.659979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:03.660170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:04.660433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:05.660828      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:06.661274      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:07.661680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:08.662234      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:09.662573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:10.662752      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:11.662927      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:12.663049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:13.664028      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/08/25 01:21:13.756
  E0108 01:21:14.665366      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:15.665496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:15.823262 20 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0108 01:21:15.823421 20 utils.go:496] Going to poll 10.42.4.78 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:21:15.826934 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.4.78 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9148 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:21:15.826974 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:21:15.827060 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9148/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.4.78+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0108 01:21:16.666258      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:16.949905 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0108 01:21:16.950113 20 utils.go:496] Going to poll 10.42.0.72 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:21:16.955928 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.72 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9148 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:21:16.956213 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:21:16.956704 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9148/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.72+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0108 01:21:17.666797      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:18.098495 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0108 01:21:18.098722 20 utils.go:496] Going to poll 10.42.2.108 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:21:18.103570 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.108 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9148 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:21:18.103628 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:21:18.103697 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9148/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.108+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0108 01:21:18.666957      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:19.210381 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0108 01:21:19.210445 20 utils.go:496] Going to poll 10.42.1.80 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0108 01:21:19.214811 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.80 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9148 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:21:19.214918 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:21:19.214988 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9148/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.80+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0108 01:21:19.667579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:20.329678 20 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0108 01:21:20.329858 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9148" for this suite. @ 01/08/25 01:21:20.335
• [22.945 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/08/25 01:21:20.362
  I0108 01:21:20.362474 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:21:20.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:20.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:20.406
  STEP: Creating a pod to test downward api env vars @ 01/08/25 01:21:20.413
  E0108 01:21:20.668293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:21.669171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:22.669345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:23.669447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:21:24.472
  I0108 01:21:24.477130 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-09df43dc-2193-4060-9274-42a5e31129f0 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 01:21:24.489
  I0108 01:21:24.533673 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4071" for this suite. @ 01/08/25 01:21:24.539
• [4.194 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/08/25 01:21:24.556
  I0108 01:21:24.556417 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pods @ 01/08/25 01:21:24.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:24.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:24.613
  STEP: creating the pod @ 01/08/25 01:21:24.62
  STEP: submitting the pod to kubernetes @ 01/08/25 01:21:24.62
  STEP: verifying QOS class is set on the pod @ 01/08/25 01:21:24.64
  I0108 01:21:24.656200 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0108 01:21:24.669615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-126" for this suite. @ 01/08/25 01:21:24.68
• [0.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/08/25 01:21:24.712
  I0108 01:21:24.712961 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:21:24.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:24.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:24.767
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/08/25 01:21:24.77
  E0108 01:21:25.673371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:26.673915      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:27.674562      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:28.675084      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:29.675654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:30.675943      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:21:30.834
  I0108 01:21:30.839149 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-1fe847bc-cba3-404e-9d33-1f7974865139 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:21:30.849
  I0108 01:21:30.890695 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5123" for this suite. @ 01/08/25 01:21:30.896
• [6.221 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/08/25 01:21:30.934
  I0108 01:21:30.934697 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 01:21:30.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:30.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:30.99
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/08/25 01:21:31.052
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 01:21:31.072
  I0108 01:21:31.171067 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:21:31.171117 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:31.676960      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:32.134461 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:21:32.134521 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:32.677360      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:33.082091 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0108 01:21:33.082151 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:33.678176      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:34.084809 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 01:21:34.085311 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/08/25 01:21:34.096
  I0108 01:21:34.208534 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:21:34.208597 20 fixtures.go:131] Node ip-172-31-20-249.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:34.678486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:35.136762 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:21:35.136816 20 fixtures.go:131] Node ip-172-31-20-249.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:35.678901      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:36.137883 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:21:36.137945 20 fixtures.go:131] Node ip-172-31-20-249.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:21:36.679620      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:37.136331 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 01:21:37.136392 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/08/25 01:21:37.136
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 01:21:37.144
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8661, will wait for the garbage collector to delete the pods @ 01/08/25 01:21:37.144
  I0108 01:21:37.218080 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 17.803769ms
  I0108 01:21:37.319082 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.999834ms
  E0108 01:21:37.680017      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:38.680179      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:39.523694 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:21:39.523747 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 01:21:39.527048 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"58358"},"items":null}

  I0108 01:21:39.530445 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"58358"},"items":null}

  I0108 01:21:39.549389 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8661" for this suite. @ 01/08/25 01:21:39.553
• [8.632 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/08/25 01:21:39.567
  I0108 01:21:39.567374 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename security-context-test @ 01/08/25 01:21:39.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:39.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:39.615
  E0108 01:21:39.681153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:40.681546      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:41.682583      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:42.682885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:43.658028 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1135" for this suite. @ 01/08/25 01:21:43.67
  E0108 01:21:43.683903      20 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/08/25 01:21:43.693
  I0108 01:21:43.693828 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:21:43.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:43.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:43.734
  STEP: Creating configMap with name cm-test-opt-del-aabdf8fb-02d1-4ea5-973b-31d1c1f0c71a @ 01/08/25 01:21:43.769
  STEP: Creating configMap with name cm-test-opt-upd-98433e63-fcb1-4b06-b806-0074fefa57c9 @ 01/08/25 01:21:43.78
  STEP: Creating the pod @ 01/08/25 01:21:43.791
  E0108 01:21:44.689371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:45.689459      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-aabdf8fb-02d1-4ea5-973b-31d1c1f0c71a @ 01/08/25 01:21:45.888
  STEP: Updating configmap cm-test-opt-upd-98433e63-fcb1-4b06-b806-0074fefa57c9 @ 01/08/25 01:21:45.91
  STEP: Creating configMap with name cm-test-opt-create-f6c6709b-5659-48ff-bda2-e777141a0212 @ 01/08/25 01:21:45.928
  STEP: waiting to observe update in volume @ 01/08/25 01:21:45.939
  E0108 01:21:46.690064      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:47.690183      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:47.984387 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-461" for this suite. @ 01/08/25 01:21:47.988
• [4.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/08/25 01:21:48.007
  I0108 01:21:48.007336 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename sched-pred @ 01/08/25 01:21:48.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:48.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:48.054
  I0108 01:21:48.057698 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0108 01:21:48.096646 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 01:21:48.102947 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-16-191.us-east-2.compute.internal before test
  I0108 01:21:48.108444 20 predicates.go:957] pod-configmaps-ff693ab4-d364-4c07-bdfc-de3054d92735 from configmap-461 started at 2025-01-08 01:21:43 +0000 UTC (3 container statuses recorded)
  I0108 01:21:48.108484 20 predicates.go:959] 	Container createcm-volume-test ready: true, restart count 0
  I0108 01:21:48.108500 20 predicates.go:959] 	Container delcm-volume-test ready: true, restart count 0
  I0108 01:21:48.108512 20 predicates.go:959] 	Container updcm-volume-test ready: true, restart count 0
  I0108 01:21:48.108692 20 predicates.go:957] kube-proxy-ip-172-31-16-191.us-east-2.compute.internal from kube-system started at 2025-01-07 22:55:54 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.108710 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:21:48.108725 20 predicates.go:957] rke2-canal-mvsmq from kube-system started at 2025-01-07 22:55:55 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.108785 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:21:48.108801 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:21:48.108817 20 predicates.go:957] rke2-ingress-nginx-controller-8ttwr from kube-system started at 2025-01-08 00:50:05 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.108829 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:21:48.108890 20 predicates.go:957] busybox-readonly-false-2a4440ea-7df0-4ecf-9dc7-4f941af0c451 from security-context-test-1135 started at 2025-01-08 01:21:39 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.108907 20 predicates.go:959] 	Container busybox-readonly-false-2a4440ea-7df0-4ecf-9dc7-4f941af0c451 ready: false, restart count 0
  I0108 01:21:48.108922 20 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-08 00:00:32 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.108973 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0108 01:21:48.108993 20 predicates.go:957] sonobuoy-e2e-job-716815d5e1d345de from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.109005 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0108 01:21:48.109017 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:21:48.109031 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-wq99x from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.109084 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:21:48.109096 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:21:48.109107 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-100.us-east-2.compute.internal before test
  I0108 01:21:48.116909 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:00 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.116953 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:21:48.116971 20 predicates.go:957] etcd-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.116984 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:21:48.117001 20 predicates.go:957] helm-install-rke2-canal-qzdhf from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117013 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117026 20 predicates.go:957] helm-install-rke2-coredns-cglhz from kube-system started at 2025-01-07 22:49:11 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117037 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117049 20 predicates.go:957] helm-install-rke2-ingress-nginx-bk9t5 from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117077 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117094 20 predicates.go:957] helm-install-rke2-metrics-server-6gfgc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117106 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117118 20 predicates.go:957] helm-install-rke2-snapshot-controller-2gqss from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117164 20 predicates.go:959] 	Container helm ready: false, restart count 1
  I0108 01:21:48.117265 20 predicates.go:957] helm-install-rke2-snapshot-controller-crd-r6cbj from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117281 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117294 20 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-mfczq from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117352 20 predicates.go:959] 	Container helm ready: false, restart count 0
  I0108 01:21:48.117370 20 predicates.go:957] kube-apiserver-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:52 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117468 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:21:48.117532 20 predicates.go:957] kube-controller-manager-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:58 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117710 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:21:48.117734 20 predicates.go:957] kube-proxy-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:48:43 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.117983 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:21:48.118086 20 predicates.go:957] kube-scheduler-ip-172-31-20-100.us-east-2.compute.internal from kube-system started at 2025-01-07 22:49:03 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.118103 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:21:48.118145 20 predicates.go:957] rke2-canal-ppzvh from kube-system started at 2025-01-07 22:49:21 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.118159 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:21:48.118487 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:21:48.118552 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-49nnc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.118569 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 01:21:48.118583 20 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-5868d76f68-fg8gc from kube-system started at 2025-01-07 22:49:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.118595 20 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0108 01:21:48.118759 20 predicates.go:957] rke2-ingress-nginx-controller-mvz85 from kube-system started at 2025-01-07 22:50:47 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.118775 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:21:48.118789 20 predicates.go:957] rke2-metrics-server-55f5b7fcd8-lkl7k from kube-system started at 2025-01-07 22:50:17 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.118943 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0108 01:21:48.119280 20 predicates.go:957] rke2-snapshot-controller-755fc86fc-gq4xt from kube-system started at 2025-01-07 22:50:24 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.119312 20 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0108 01:21:48.119329 20 predicates.go:957] rke2-snapshot-validation-webhook-75bc6f574f-8qnm4 from kube-system started at 2025-01-07 22:50:22 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.119340 20 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0108 01:21:48.119353 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xf89t from sonobuoy started at 2025-01-08 00:00:40 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.119560 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:21:48.119850 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:21:48.119869 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-249.us-east-2.compute.internal before test
  I0108 01:21:48.135075 20 predicates.go:957] cloud-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.135589 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:21:48.135898 20 predicates.go:957] etcd-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.136265 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:21:48.136434 20 predicates.go:957] kube-apiserver-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:14 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.136542 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:21:48.136671 20 predicates.go:957] kube-controller-manager-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:23 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.136690 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:21:48.136974 20 predicates.go:957] kube-proxy-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:28 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.136991 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:21:48.137007 20 predicates.go:957] kube-scheduler-ip-172-31-20-249.us-east-2.compute.internal from kube-system started at 2025-01-07 22:53:24 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.137018 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:21:48.137032 20 predicates.go:957] rke2-canal-6766w from kube-system started at 2025-01-07 22:53:38 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.137220 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:21:48.137237 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:21:48.137253 20 predicates.go:957] rke2-ingress-nginx-controller-vp2n2 from kube-system started at 2025-01-07 22:54:34 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.137660 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:21:48.137798 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-4rxjf from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.137816 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:21:48.137828 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0108 01:21:48.137841 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-25-234.us-east-2.compute.internal before test
  I0108 01:21:48.147314 20 predicates.go:957] cloud-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.147360 20 predicates.go:959] 	Container cloud-controller-manager ready: true, restart count 0
  I0108 01:21:48.147378 20 predicates.go:957] etcd-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:58 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.147390 20 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0108 01:21:48.147403 20 predicates.go:957] kube-apiserver-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:14 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.147893 20 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0108 01:21:48.148049 20 predicates.go:957] kube-controller-manager-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.148067 20 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0108 01:21:48.148082 20 predicates.go:957] kube-proxy-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:51:59 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.148094 20 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0108 01:21:48.148112 20 predicates.go:957] kube-scheduler-ip-172-31-25-234.us-east-2.compute.internal from kube-system started at 2025-01-07 22:52:23 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.148258 20 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0108 01:21:48.148282 20 predicates.go:957] rke2-canal-lwv6s from kube-system started at 2025-01-07 22:52:29 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.148294 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0108 01:21:48.148305 20 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0108 01:21:48.148574 20 predicates.go:957] rke2-coredns-rke2-coredns-7895c6f5d8-rfstj from kube-system started at 2025-01-07 22:52:42 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.148908 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0108 01:21:48.149164 20 predicates.go:957] rke2-ingress-nginx-controller-qnq5t from kube-system started at 2025-01-07 22:52:43 +0000 UTC (1 container statuses recorded)
  I0108 01:21:48.149206 20 predicates.go:959] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0108 01:21:48.149222 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-e92962e1615d4578-xb2qj from sonobuoy started at 2025-01-08 00:00:41 +0000 UTC (2 container statuses recorded)
  I0108 01:21:48.149558 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0108 01:21:48.149882 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/08/25 01:21:48.15
  E0108 01:21:48.690560      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:49.690694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/08/25 01:21:50.199
  STEP: Trying to apply a random label on the found node. @ 01/08/25 01:21:50.234
  STEP: verifying the node has the label kubernetes.io/e2e-9e9661ee-3356-4418-910b-de6705e658bf 42 @ 01/08/25 01:21:50.257
  STEP: Trying to relaunch the pod, now with labels. @ 01/08/25 01:21:50.286
  E0108 01:21:50.690822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:51.690969      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-9e9661ee-3356-4418-910b-de6705e658bf off the node ip-172-31-16-191.us-east-2.compute.internal @ 01/08/25 01:21:52.325
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9e9661ee-3356-4418-910b-de6705e658bf @ 01/08/25 01:21:52.352
  I0108 01:21:52.363487 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3767" for this suite. @ 01/08/25 01:21:52.374
• [4.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/08/25 01:21:52.403
  I0108 01:21:52.403177 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 01:21:52.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:52.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:52.453
  STEP: create the deployment @ 01/08/25 01:21:52.457
  W0108 01:21:52.473042      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/08/25 01:21:52.473
  STEP: delete the deployment @ 01/08/25 01:21:52.62
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/08/25 01:21:52.685
  E0108 01:21:52.691399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/08/25 01:21:53.421
  I0108 01:21:53.602276 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 01:21:53.602605 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5513" for this suite. @ 01/08/25 01:21:53.607
• [1.221 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/08/25 01:21:53.624
  I0108 01:21:53.624650 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 01:21:53.625
  E0108 01:21:53.692110      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:53.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:53.699
  E0108 01:21:54.692392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:55.692656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:56.692959      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:57.693168      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:57.757507 20 delete.go:62] Deleting pod "var-expansion-edd97b67-f474-48a1-87fa-8104dc8e25b1" in namespace "var-expansion-4715"
  I0108 01:21:57.777980 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-edd97b67-f474-48a1-87fa-8104dc8e25b1" to be fully deleted
  E0108 01:21:58.694333      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:21:59.694621      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:21:59.793267 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4715" for this suite. @ 01/08/25 01:21:59.799
• [6.190 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/08/25 01:21:59.814
  I0108 01:21:59.814930 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:21:59.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:21:59.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:21:59.858
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:21:59.861
  E0108 01:22:00.697425      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:01.698218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:02.698539      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:03.698679      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:22:03.901
  I0108 01:22:03.910531 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-f541020e-21ca-42e2-8080-a6833427fa3b container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:22:03.936
  I0108 01:22:03.984068 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9443" for this suite. @ 01/08/25 01:22:03.989
• [4.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/08/25 01:22:04.007
  I0108 01:22:04.007595 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename disruption @ 01/08/25 01:22:04.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:22:04.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:22:04.061
  STEP: Waiting for the pdb to be processed @ 01/08/25 01:22:04.077
  E0108 01:22:04.699202      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:05.699804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/08/25 01:22:06.145
  I0108 01:22:06.180248 20 disruption.go:691] running pods: 0 < 3
  E0108 01:22:06.701424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:07.701543      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:08.153020 20 disruption.go:691] running pods: 0 < 3
  E0108 01:22:08.702387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:09.702495      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:10.155169 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1573" for this suite. @ 01/08/25 01:22:10.168
• [6.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/08/25 01:22:10.19
  I0108 01:22:10.191026 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 01:22:10.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:22:10.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:22:10.256
  STEP: Creating pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121 @ 01/08/25 01:22:10.264
  E0108 01:22:10.703001      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:11.704070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 01:22:12.289
  I0108 01:22:12.293777 20 container_probe.go:1749] Initial restart count of pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 is 0
  I0108 01:22:12.298951 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:12.704287      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:13.704885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:14.304295 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:14.705615      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:15.706464      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:16.315241 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:16.707102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:17.707431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:18.321899 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:18.708505      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:19.709040      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:20.326825 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:20.709401      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:21.710494      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:22.331543 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:22.711133      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:23.712253      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:24.338931 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:24.712385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:25.712535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:26.344711 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:26.713487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:27.713673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:28.355325 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:28.713801      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:29.713841      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:30.366938 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:30.714503      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:31.714973      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:32.384351 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:32.715768      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:33.718006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:34.393936 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:34.718351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:35.718528      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:36.410131 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:36.718701      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:37.719092      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:38.419577 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:38.719859      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:39.720471      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:40.430519 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:40.721433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:41.721497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:42.435282 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:42.721740      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:43.721946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:44.440058 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:44.722482      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:45.722924      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:46.445157 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:46.723831      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:47.724006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:48.450787 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:48.724664      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:49.724677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:50.455179 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:50.725735      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:51.726381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:52.460785 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:52.727636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:53.728367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:54.474335 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:54.728618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:55.729393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:56.482405 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:56.729983      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:57.730117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:22:58.487776 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:22:58.731206      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:22:59.731378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:00.495605 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:00.732049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:01.732872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:02.501659 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:02.734756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:03.735733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:04.505999 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:04.736345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:05.736477      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:06.513095 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:06.737523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:07.737677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:08.520353 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:08.738347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:09.738509      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:10.524861 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:10.739193      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:11.739427      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:12.540120 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:12.740428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:13.740690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:14.550658 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:14.740914      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:15.741293      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:16.577371 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:16.741804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:17.742210      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:18.582012 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:18.742253      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:19.742559      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:20.589438 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:20.742738      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:21.742950      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:22.594202 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:22.743586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:23.744295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:24.599605 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:24.746516      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:25.745424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:26.604536 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:26.745591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:27.745712      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:28.615963 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:28.746233      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:29.746616      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:30.625779 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:30.747452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:31.747753      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:32.639078 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:32.748314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:33.748488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:34.649024 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:34.749638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:35.749844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:36.666692 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:36.750866      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:37.750996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:38.675686 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:38.751940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:39.752099      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:40.681318 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:40.752525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:41.752726      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:42.689941 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:42.753323      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:43.753619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:44.698541 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:44.754161      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:45.754592      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:46.706830 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:46.755120      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:47.755765      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:48.719847 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:48.756144      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:49.756301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:50.725941 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:50.757078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:51.758218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:52.731424 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:52.758831      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:53.759694      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:54.736015 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:54.760086      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:55.760340      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:56.740732 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:56.761136      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:57.761418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:23:58.746494 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:23:58.761951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:23:59.762198      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:00.758087 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:00.763279      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:01.763607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:02.762605 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:02.763650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:03.763853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:04.765437      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:04.767981 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:05.766618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:06.767187      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:06.773917 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:07.767969      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:08.768071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:08.779760 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:09.768772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:10.768911      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:10.786673 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:11.769815      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:12.769916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:12.791453 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:13.770738      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:14.770889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:14.797011 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:15.771068      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:16.771183      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:16.801597 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:17.771340      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:18.771640      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:18.811297 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:19.771861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:20.772082      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:20.819315 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:21.773377      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:22.773732      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:22.825768 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:23.773900      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:24.774247      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:24.831464 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:25.774409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:26.774680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:26.837170 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:27.777275      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:28.776740      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:28.842692 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:29.777392      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:30.777569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:30.848020 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:31.778130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:32.778537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:32.852676 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:33.779292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:34.779749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:34.857303 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:35.780305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:36.781166      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:36.862749 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:37.781798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:38.781949      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:38.867821 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:39.782722      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:40.782898      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:40.873163 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:41.783029      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:42.783152      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:42.878855 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:43.784089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:44.784303      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:44.884699 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:45.784569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:46.784920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:46.889743 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:47.785381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:48.785605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:48.896173 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:49.785770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:50.785867      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:50.901071 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:51.786111      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:52.786274      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:52.905787 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:53.786733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:54.786822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:54.911967 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:55.786928      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:56.787053      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:56.918065 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:57.787863      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:24:58.788194      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:24:58.923014 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:24:59.788928      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:00.789111      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:00.927055 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:01.789434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:02.789590      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:02.936066 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:03.789741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:04.789840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:04.942295 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:05.791625      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:06.792133      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:06.951902 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:07.792297      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:08.792413      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:08.985033 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:09.792940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:10.793071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:10.991398 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:11.793490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:12.793500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:12.996235 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:13.794602      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:14.794739      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:15.001602 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:15.794860      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:16.795920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:17.007254 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:17.796154      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:18.796299      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:19.016840 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:19.796634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:20.796963      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:21.024684 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:21.798135      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:22.798170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:23.031463 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:23.798784      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:24.799165      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:25.036562 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:25.799338      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:26.799499      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:27.040748 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:27.800646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:28.800797      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:29.050202 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:29.800944      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:30.801250      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:31.056715 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:31.803071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:32.803171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:33.061961 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:33.803605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:34.803978      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:35.067410 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:35.804677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:36.805171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:37.072456 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:37.805435      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:38.805792      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:39.078672 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:39.806521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:40.806715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:41.083098 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:41.807007      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:42.807635      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:43.088269 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:43.808110      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:44.808162      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:45.092550 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:45.808294      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:46.808998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:47.097890 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:47.809554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:48.809747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:49.102482 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:49.810259      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:50.810352      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:51.112724 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:51.810998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:52.811082      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:53.119171 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:53.812043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:54.812216      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:55.124611 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:55.812302      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:56.812514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:57.129434 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:57.813167      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:25:58.813421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:25:59.134642 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:25:59.814193      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:00.814570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:01.140326 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:01.815313      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:02.815903      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:03.146353 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:03.815888      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:04.816305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:05.162403 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:05.816313      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:06.816451      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:07.168233 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:07.816605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:08.816996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:09.174952 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:09.817817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:10.818455      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:11.180454 20 container_probe.go:1759] Get pod busybox-117b338e-7986-4b51-bd75-920118d17dc4 in namespace container-probe-9121
  E0108 01:26:11.819185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:12.819388      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/08/25 01:26:13.18
  I0108 01:26:13.226914 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9121" for this suite. @ 01/08/25 01:26:13.234
• [243.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/08/25 01:26:13.253
  I0108 01:26:13.253810 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename proxy @ 01/08/25 01:26:13.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:26:13.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:26:13.298
  STEP: starting an echo server on multiple ports @ 01/08/25 01:26:13.33
  STEP: creating replication controller proxy-service-tm2lt in namespace proxy-7692 @ 01/08/25 01:26:13.33
  I0108 01:26:13.361917      20 runners.go:193] Created replication controller with name: proxy-service-tm2lt, namespace: proxy-7692, replica count: 1
  E0108 01:26:13.820006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:14.413871      20 runners.go:193] proxy-service-tm2lt Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0108 01:26:14.820465      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:15.414078      20 runners.go:193] proxy-service-tm2lt Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0108 01:26:15.821147      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:16.415127      20 runners.go:193] proxy-service-tm2lt Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0108 01:26:16.422687 20 proxy.go:230] setup took 3.120695043s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/08/25 01:26:16.422
  I0108 01:26:16.480028 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 56.617926ms)
  I0108 01:26:16.482221 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 59.158944ms)
  I0108 01:26:16.500040 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 76.197377ms)
  I0108 01:26:16.500774 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 77.831081ms)
  I0108 01:26:16.510633 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 87.001699ms)
  I0108 01:26:16.511339 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 88.004032ms)
  I0108 01:26:16.511984 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 88.534805ms)
  I0108 01:26:16.512555 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 88.755335ms)
  I0108 01:26:16.513332 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 89.569858ms)
  I0108 01:26:16.514147 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 90.50384ms)
  I0108 01:26:16.514681 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 90.957462ms)
  I0108 01:26:16.519522 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 95.835517ms)
  I0108 01:26:16.520566 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 97.263451ms)
  I0108 01:26:16.521225 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 98.039364ms)
  I0108 01:26:16.521827 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 98.271654ms)
  I0108 01:26:16.528313 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 104.794985ms)
  I0108 01:26:16.543544 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 14.870715ms)
  I0108 01:26:16.544011 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 14.898396ms)
  I0108 01:26:16.544247 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 14.814686ms)
  I0108 01:26:16.544489 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 15.710978ms)
  I0108 01:26:16.545025 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 16.14751ms)
  I0108 01:26:16.545269 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 15.382488ms)
  I0108 01:26:16.546111 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 16.154549ms)
  I0108 01:26:16.546212 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.216523ms)
  I0108 01:26:16.546248 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 16.728392ms)
  I0108 01:26:16.546270 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 16.664681ms)
  I0108 01:26:16.546295 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 16.507991ms)
  I0108 01:26:16.547012 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 17.671454ms)
  I0108 01:26:16.549033 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 18.946428ms)
  I0108 01:26:16.549516 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 21.114895ms)
  I0108 01:26:16.549883 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 20.186252ms)
  I0108 01:26:16.550188 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 20.943855ms)
  I0108 01:26:16.559436 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 8.906678ms)
  I0108 01:26:16.559473 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 8.367246ms)
  I0108 01:26:16.559565 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 8.820097ms)
  I0108 01:26:16.564952 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 12.92597ms)
  I0108 01:26:16.567766 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 16.305541ms)
  I0108 01:26:16.568221 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 16.16507ms)
  I0108 01:26:16.568457 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 17.160124ms)
  I0108 01:26:16.568784 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 17.800445ms)
  I0108 01:26:16.569288 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 17.350214ms)
  I0108 01:26:16.569486 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.582165ms)
  I0108 01:26:16.569586 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 17.770735ms)
  I0108 01:26:16.569597 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 17.733245ms)
  I0108 01:26:16.569976 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 18.002746ms)
  I0108 01:26:16.572197 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 21.733737ms)
  I0108 01:26:16.572252 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 20.500184ms)
  I0108 01:26:16.572729 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 21.025815ms)
  I0108 01:26:16.582671 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 8.811337ms)
  I0108 01:26:16.583418 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 9.303339ms)
  I0108 01:26:16.583934 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 9.924711ms)
  I0108 01:26:16.583960 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 9.993941ms)
  I0108 01:26:16.583978 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 9.902151ms)
  I0108 01:26:16.584002 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 10.117961ms)
  I0108 01:26:16.584368 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 10.611943ms)
  I0108 01:26:16.585714 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 11.915158ms)
  I0108 01:26:16.588432 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 15.263927ms)
  I0108 01:26:16.588527 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 15.501658ms)
  I0108 01:26:16.589572 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 16.00192ms)
  I0108 01:26:16.594238 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 20.190883ms)
  I0108 01:26:16.595513 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 21.594587ms)
  I0108 01:26:16.596036 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 22.59904ms)
  I0108 01:26:16.596408 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 22.6983ms)
  I0108 01:26:16.597207 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 24.243635ms)
  I0108 01:26:16.616373 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 18.728798ms)
  I0108 01:26:16.616401 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 18.510328ms)
  I0108 01:26:16.616889 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 19.1555ms)
  I0108 01:26:16.616906 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 19.21984ms)
  I0108 01:26:16.619209 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 21.663907ms)
  I0108 01:26:16.619262 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 21.320516ms)
  I0108 01:26:16.619330 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 21.334587ms)
  I0108 01:26:16.619372 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 21.710627ms)
  I0108 01:26:16.619392 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 21.988009ms)
  I0108 01:26:16.619443 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 22.100259ms)
  I0108 01:26:16.619484 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 22.031638ms)
  I0108 01:26:16.622085 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 24.045225ms)
  I0108 01:26:16.623400 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 25.81361ms)
  I0108 01:26:16.623841 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 26.067721ms)
  I0108 01:26:16.624252 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 26.422982ms)
  I0108 01:26:16.624235 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 26.967134ms)
  I0108 01:26:16.639854 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 15.436148ms)
  I0108 01:26:16.642099 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 16.612111ms)
  I0108 01:26:16.642993 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 17.324464ms)
  I0108 01:26:16.644523 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 19.61811ms)
  I0108 01:26:16.645220 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 19.2997ms)
  I0108 01:26:16.645734 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 21.002745ms)
  I0108 01:26:16.646034 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 21.388726ms)
  I0108 01:26:16.646114 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 20.364012ms)
  I0108 01:26:16.646225 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 21.410446ms)
  I0108 01:26:16.646260 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 21.273486ms)
  I0108 01:26:16.647787 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 22.62648ms)
  I0108 01:26:16.656174 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 31.078106ms)
  I0108 01:26:16.657347 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 31.507437ms)
  I0108 01:26:16.657736 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 33.183143ms)
  I0108 01:26:16.657787 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 31.665778ms)
  I0108 01:26:16.658248 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 32.664021ms)
  I0108 01:26:16.671708 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 12.73513ms)
  I0108 01:26:16.671708 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 12.78363ms)
  I0108 01:26:16.672101 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 13.308341ms)
  I0108 01:26:16.672131 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 12.82781ms)
  I0108 01:26:16.672391 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 13.249791ms)
  I0108 01:26:16.672426 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 13.161531ms)
  I0108 01:26:16.673872 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 14.660686ms)
  I0108 01:26:16.674699 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 15.479258ms)
  I0108 01:26:16.674945 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 15.558138ms)
  I0108 01:26:16.674793 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 16.11538ms)
  I0108 01:26:16.675257 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 15.909939ms)
  I0108 01:26:16.677421 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 18.317177ms)
  I0108 01:26:16.677881 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 18.818638ms)
  I0108 01:26:16.677936 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 19.102459ms)
  I0108 01:26:16.677958 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 19.472301ms)
  I0108 01:26:16.678037 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 19.020689ms)
  I0108 01:26:16.687654 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 8.987087ms)
  I0108 01:26:16.690709 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 11.680066ms)
  I0108 01:26:16.695850 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 16.615032ms)
  I0108 01:26:16.695893 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 15.808179ms)
  I0108 01:26:16.696109 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 16.021139ms)
  I0108 01:26:16.696982 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 17.498724ms)
  I0108 01:26:16.697077 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.682174ms)
  I0108 01:26:16.697247 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 18.320946ms)
  I0108 01:26:16.697378 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 17.385043ms)
  I0108 01:26:16.697824 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 18.999969ms)
  I0108 01:26:16.702305 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 22.996891ms)
  I0108 01:26:16.702901 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 24.345466ms)
  I0108 01:26:16.704073 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 24.503495ms)
  I0108 01:26:16.704447 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 24.668416ms)
  I0108 01:26:16.704475 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 24.817517ms)
  I0108 01:26:16.704534 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 25.022997ms)
  I0108 01:26:16.717639 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 12.659989ms)
  I0108 01:26:16.717671 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 12.594339ms)
  I0108 01:26:16.719579 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 14.493625ms)
  I0108 01:26:16.719773 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 14.638375ms)
  I0108 01:26:16.719773 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 15.179817ms)
  I0108 01:26:16.720801 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 15.132527ms)
  I0108 01:26:16.722189 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 17.252764ms)
  I0108 01:26:16.722355 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.514624ms)
  I0108 01:26:16.724681 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 19.149449ms)
  I0108 01:26:16.725121 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 19.699822ms)
  I0108 01:26:16.725991 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 20.617074ms)
  I0108 01:26:16.726417 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 21.096966ms)
  I0108 01:26:16.727238 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 21.612417ms)
  I0108 01:26:16.727410 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 21.950028ms)
  I0108 01:26:16.728543 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 22.973251ms)
  I0108 01:26:16.729746 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 24.065185ms)
  I0108 01:26:16.738946 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 9.056968ms)
  I0108 01:26:16.742955 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 12.388209ms)
  I0108 01:26:16.743602 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 13.788073ms)
  I0108 01:26:16.743602 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 12.95823ms)
  I0108 01:26:16.747800 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 17.261534ms)
  I0108 01:26:16.749213 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 18.957689ms)
  I0108 01:26:16.749269 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 19.097349ms)
  I0108 01:26:16.749341 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 18.927019ms)
  I0108 01:26:16.749703 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 18.908979ms)
  I0108 01:26:16.750181 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 20.060522ms)
  I0108 01:26:16.750181 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 19.48159ms)
  I0108 01:26:16.750223 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 19.716371ms)
  I0108 01:26:16.750243 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 19.49353ms)
  I0108 01:26:16.750606 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 20.256193ms)
  I0108 01:26:16.751076 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 20.777854ms)
  I0108 01:26:16.751407 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 21.337446ms)
  I0108 01:26:16.763666 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 11.099434ms)
  I0108 01:26:16.765650 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 13.925603ms)
  I0108 01:26:16.765743 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 13.260872ms)
  I0108 01:26:16.765833 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 13.640553ms)
  I0108 01:26:16.765878 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 13.053811ms)
  I0108 01:26:16.765958 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 13.642802ms)
  I0108 01:26:16.765988 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 14.180634ms)
  I0108 01:26:16.766653 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 14.756175ms)
  I0108 01:26:16.766659 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 14.259664ms)
  I0108 01:26:16.766781 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 15.212678ms)
  I0108 01:26:16.766685 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 13.948454ms)
  I0108 01:26:16.768351 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 16.364251ms)
  I0108 01:26:16.770430 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 18.921829ms)
  I0108 01:26:16.770485 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 18.418267ms)
  I0108 01:26:16.771077 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 18.847288ms)
  I0108 01:26:16.771074 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 18.427317ms)
  I0108 01:26:16.786084 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 14.080833ms)
  I0108 01:26:16.786742 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 14.699065ms)
  I0108 01:26:16.787198 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 14.993686ms)
  I0108 01:26:16.787537 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 15.027976ms)
  I0108 01:26:16.787635 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 15.703588ms)
  I0108 01:26:16.787745 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 15.849688ms)
  I0108 01:26:16.787856 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 15.772009ms)
  I0108 01:26:16.800404 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 28.068597ms)
  I0108 01:26:16.801795 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 29.434361ms)
  I0108 01:26:16.802322 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 30.038783ms)
  I0108 01:26:16.802409 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 30.285264ms)
  I0108 01:26:16.802470 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 30.229613ms)
  I0108 01:26:16.802665 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 30.266974ms)
  I0108 01:26:16.802667 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 30.505904ms)
  I0108 01:26:16.802691 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 30.223533ms)
  I0108 01:26:16.807735 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 35.29487ms)
  I0108 01:26:16.817846 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 9.62862ms)
  I0108 01:26:16.817844 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 9.53109ms)
  E0108 01:26:16.821127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:16.838831 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 30.333274ms)
  I0108 01:26:16.838820 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 30.534365ms)
  I0108 01:26:16.838864 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 30.990826ms)
  I0108 01:26:16.838895 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 30.359654ms)
  I0108 01:26:16.839754 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 30.537795ms)
  I0108 01:26:16.840211 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 31.882459ms)
  I0108 01:26:16.840211 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 31.509187ms)
  I0108 01:26:16.840233 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 31.615628ms)
  I0108 01:26:16.840252 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 31.595647ms)
  I0108 01:26:16.840264 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 32.4468ms)
  I0108 01:26:16.847503 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 39.128691ms)
  I0108 01:26:16.850796 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 42.342751ms)
  I0108 01:26:16.850796 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 42.375091ms)
  I0108 01:26:16.850837 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 42.704572ms)
  I0108 01:26:16.861548 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 9.45668ms)
  I0108 01:26:16.864860 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 12.93861ms)
  I0108 01:26:16.864853 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 12.96374ms)
  I0108 01:26:16.865082 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 13.088211ms)
  I0108 01:26:16.865130 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 13.321612ms)
  I0108 01:26:16.866048 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 14.832287ms)
  I0108 01:26:16.866344 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 14.795977ms)
  I0108 01:26:16.866770 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 14.727316ms)
  I0108 01:26:16.866797 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 15.124107ms)
  I0108 01:26:16.866774 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 15.391458ms)
  I0108 01:26:16.869672 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 17.953716ms)
  I0108 01:26:16.871868 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 20.099132ms)
  I0108 01:26:16.872070 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 20.462873ms)
  I0108 01:26:16.872109 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 20.263123ms)
  I0108 01:26:16.872202 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 20.707174ms)
  I0108 01:26:16.872352 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 20.394913ms)
  I0108 01:26:16.883960 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 11.203905ms)
  I0108 01:26:16.887809 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 14.664026ms)
  I0108 01:26:16.890387 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 17.942856ms)
  I0108 01:26:16.894811 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 21.745368ms)
  I0108 01:26:16.895000 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 22.396979ms)
  I0108 01:26:16.895086 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 22.385569ms)
  I0108 01:26:16.895489 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 22.698181ms)
  I0108 01:26:16.895559 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 22.489419ms)
  I0108 01:26:16.895619 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 22.64335ms)
  I0108 01:26:16.895702 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 22.6811ms)
  I0108 01:26:16.895769 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 22.675581ms)
  I0108 01:26:16.895892 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 22.990172ms)
  I0108 01:26:16.895978 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 22.690801ms)
  I0108 01:26:16.896009 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 23.182432ms)
  I0108 01:26:16.896276 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 23.408153ms)
  I0108 01:26:16.896630 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 23.561393ms)
  I0108 01:26:16.913720 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 16.828582ms)
  I0108 01:26:16.918216 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 20.668174ms)
  I0108 01:26:16.918304 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 20.475364ms)
  I0108 01:26:16.919369 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 20.907275ms)
  I0108 01:26:16.920247 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 23.500992ms)
  I0108 01:26:16.920282 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 23.036881ms)
  I0108 01:26:16.920282 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 22.265528ms)
  I0108 01:26:16.920299 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 22.84353ms)
  I0108 01:26:16.920314 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 21.485076ms)
  I0108 01:26:16.920314 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 22.206128ms)
  I0108 01:26:16.923677 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 25.74579ms)
  I0108 01:26:16.923690 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 26.660483ms)
  I0108 01:26:16.923751 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 25.389768ms)
  I0108 01:26:16.923975 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 26.846523ms)
  I0108 01:26:16.924538 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 27.176895ms)
  I0108 01:26:16.925444 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 26.900383ms)
  I0108 01:26:16.935029 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 9.518919ms)
  I0108 01:26:16.941689 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 14.945487ms)
  I0108 01:26:16.950483 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 23.268672ms)
  I0108 01:26:16.954334 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 27.217034ms)
  I0108 01:26:16.957244 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 31.415788ms)
  I0108 01:26:16.957316 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 30.995636ms)
  I0108 01:26:16.957343 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 31.663309ms)
  I0108 01:26:16.957360 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 31.448498ms)
  I0108 01:26:16.957379 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 31.379698ms)
  I0108 01:26:16.957407 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 30.382295ms)
  I0108 01:26:16.957443 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 30.946796ms)
  I0108 01:26:16.957472 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 30.853116ms)
  I0108 01:26:16.964452 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 38.217139ms)
  I0108 01:26:16.964514 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 38.102809ms)
  I0108 01:26:16.964452 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 37.507907ms)
  I0108 01:26:16.965007 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 38.184498ms)
  I0108 01:26:16.985369 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 19.907751ms)
  I0108 01:26:16.985376 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 19.63194ms)
  I0108 01:26:16.986183 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 20.506414ms)
  I0108 01:26:16.986235 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 20.367023ms)
  I0108 01:26:16.986352 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 21.301135ms)
  I0108 01:26:16.987010 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 21.512386ms)
  I0108 01:26:16.987073 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 21.434397ms)
  I0108 01:26:16.988085 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 22.54553ms)
  I0108 01:26:16.988802 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 23.204792ms)
  I0108 01:26:16.995695 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 30.444784ms)
  I0108 01:26:16.995665 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 30.309834ms)
  I0108 01:26:16.995662 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 29.744122ms)
  I0108 01:26:16.995745 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 30.332374ms)
  I0108 01:26:16.995798 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 29.972673ms)
  I0108 01:26:16.995773 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 30.064083ms)
  I0108 01:26:16.997066 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 31.284307ms)
  I0108 01:26:17.011367 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 13.293491ms)
  I0108 01:26:17.011437 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 13.803873ms)
  I0108 01:26:17.015554 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 17.580975ms)
  I0108 01:26:17.015570 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 17.558504ms)
  I0108 01:26:17.015596 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.697155ms)
  I0108 01:26:17.016188 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 18.498877ms)
  I0108 01:26:17.017318 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 20.033352ms)
  I0108 01:26:17.017746 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 20.171952ms)
  I0108 01:26:17.020254 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 22.098218ms)
  I0108 01:26:17.020331 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 23.171612ms)
  I0108 01:26:17.021129 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 22.927281ms)
  I0108 01:26:17.021167 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 24.014874ms)
  I0108 01:26:17.021235 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 23.494322ms)
  I0108 01:26:17.021886 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 24.097704ms)
  I0108 01:26:17.021882 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 23.641783ms)
  I0108 01:26:17.023671 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 25.509869ms)
  I0108 01:26:17.042777 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 17.580934ms)
  I0108 01:26:17.044238 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">... (200; 19.726502ms)
  I0108 01:26:17.044321 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 18.881079ms)
  I0108 01:26:17.047150 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:1080/proxy/rewriteme">test<... (200; 22.061339ms)
  I0108 01:26:17.047226 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/http:proxy-service-tm2lt-47mj7:160/proxy/: foo (200; 23.477903ms)
  I0108 01:26:17.047250 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7:162/proxy/: bar (200; 21.871128ms)
  I0108 01:26:17.047315 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/proxy-service-tm2lt-47mj7/proxy/rewriteme">test</a> (200; 22.904891ms)
  I0108 01:26:17.047381 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/: <a href="/api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:443/proxy/tlsrewritem... (200; 22.788011ms)
  I0108 01:26:17.047400 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:462/proxy/: tls qux (200; 22.685161ms)
  I0108 01:26:17.047416 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/pods/https:proxy-service-tm2lt-47mj7:460/proxy/: tls baz (200; 23.259103ms)
  I0108 01:26:17.047435 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname1/proxy/: tls baz (200; 23.131482ms)
  I0108 01:26:17.056663 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname2/proxy/: bar (200; 31.770379ms)
  I0108 01:26:17.056728 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/https:proxy-service-tm2lt:tlsportname2/proxy/: tls qux (200; 31.237057ms)
  I0108 01:26:17.056757 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname1/proxy/: foo (200; 31.95819ms)
  I0108 01:26:17.056788 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/proxy-service-tm2lt:portname1/proxy/: foo (200; 31.812679ms)
  I0108 01:26:17.056823 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7692/services/http:proxy-service-tm2lt:portname2/proxy/: bar (200; 31.526158ms)
  STEP: deleting ReplicationController proxy-service-tm2lt in namespace proxy-7692, will wait for the garbage collector to delete the pods @ 01/08/25 01:26:17.056
  I0108 01:26:17.126762 20 resources.go:139] Deleting ReplicationController proxy-service-tm2lt took: 12.201458ms
  I0108 01:26:17.227424 20 resources.go:163] Terminating ReplicationController proxy-service-tm2lt pods took: 100.715422ms
  E0108 01:26:17.821759      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:18.825349      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:19.628517 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7692" for this suite. @ 01/08/25 01:26:19.635
• [6.401 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/08/25 01:26:19.655
  I0108 01:26:19.655487 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:26:19.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:26:19.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:26:19.708
  STEP: Creating configMap with name projected-configmap-test-volume-map-f1869a16-a8a6-42e6-8698-e206f8d15a3b @ 01/08/25 01:26:19.725
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:26:19.74
  E0108 01:26:19.825937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:20.826917      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:21.827484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:22.827852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:26:23.781
  I0108 01:26:23.785640 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-fb2b3ff5-b3e6-4770-b2d5-b5a3dcb88a96 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:26:23.803
  E0108 01:26:23.828474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:23.847182 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5354" for this suite. @ 01/08/25 01:26:23.852
• [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/08/25 01:26:23.865
  I0108 01:26:23.865851 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename deployment @ 01/08/25 01:26:23.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:26:23.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:26:23.908
  I0108 01:26:23.911015 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0108 01:26:23.930331 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0108 01:26:24.829386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:25.829539      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:26.829787      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:27.829893      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:28.830070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:28.936489 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 01:26:28.936
  I0108 01:26:28.936618 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0108 01:26:28.947400 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0108 01:26:28.969967 20 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0108 01:26:29.830391      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:30.831056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:26:30.979799 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0108 01:26:30.984409 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0108 01:26:31.000808 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3233",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f08ec48-fc9e-4b41-8b35-54df1f5f5eda",
      ResourceVersion: (string) (len=5) "59961",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871896388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0108 01:26:31.022655 20 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3233",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "181e67d3-9337-4f3a-8896-83e5f076592c",
      ResourceVersion: (string) (len=5) "59951",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871896388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8f08ec48-fc9e-4b41-8b35-54df1f5f5eda",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 66 30 38 65 63  34 38 2d 66 63 39 65 2d  |\"8f08ec48-fc9e-|
              00000120  34 62 34 31 2d 38 62 33  35 2d 35 34 64 66 31 66  |4b41-8b35-54df1f|
              00000130  35 66 35 65 64 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5f5eda\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 01:26:31.024024 20 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0108 01:26:31.024484 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3233",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7279cf6b-6e35-4570-b99c-970c5b46a5ff",
      ResourceVersion: (string) (len=5) "59960",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871896383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8f08ec48-fc9e-4b41-8b35-54df1f5f5eda",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 66 30 38 65 63 34  |"uid\":\"8f08ec4|
              000000b0  38 2d 66 63 39 65 2d 34  62 34 31 2d 38 62 33 35  |8-fc9e-4b41-8b35|
              000000c0  2d 35 34 64 66 31 66 35  66 35 65 64 61 5c 22 7d  |-54df1f5f5eda\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0108 01:26:31.034324 20 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-qjzmd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-qjzmd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-3233",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e667d8c-d331-4a51-9b4f-ded75f1611c3",
      ResourceVersion: (string) (len=5) "59950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871896388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "951e357a769ada5dd60f63a990dbe8dd5dfaa9a9d7b101dff354421c8f17cd59",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.97/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.97/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "181e67d3-9337-4f3a-8896-83e5f076592c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  31 65 36 37 64 33 2d 39  |d\":\"181e67d3-9|
              00000090  33 33 37 2d 34 66 33 61  2d 38 38 39 36 2d 38 33  |337-4f3a-8896-83|
              000000a0  65 35 66 30 37 36 35 39  32 63 5c 22 7d 22 3a 7b  |e5f076592c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 39 37  5c 22 7d 22 3a 7b 22 2e  |.42.4.97\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmwd6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmwd6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-16-191.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871896389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.191",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.16.191"
        }
      },
      PodIP: (string) (len=10) "10.42.4.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871896389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871896390,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4f6fbbf1ab58b89c747c9573b1751d0abb08e1e28d40e94c35ca1906cbf2b435",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jmwd6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0108 01:26:31.047041 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3233" for this suite. @ 01/08/25 01:26:31.054
• [7.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/08/25 01:26:31.072
  I0108 01:26:31.072720 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename taint-single-pod @ 01/08/25 01:26:31.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:26:31.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:26:31.12
  I0108 01:26:31.123168 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0108 01:26:31.831940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:32.832122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:33.833265      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:34.833402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:35.833476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:36.833816      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:37.834301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:38.834488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:39.834811      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:40.835182      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:41.836112      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:42.836391      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:43.836548      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:44.836809      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:45.837091      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:46.837708      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:47.837849      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:48.837989      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:49.838236      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:50.838356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:51.839383      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:52.839964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:53.840126      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:54.840264      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:55.840510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:56.840536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:57.840717      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:58.841808      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:26:59.842006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:00.842530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:01.843184      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:02.843755      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:03.845115      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:04.845363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:05.845535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:06.845954      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:07.846113      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:08.846509      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:09.846628      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:10.846968      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:11.847597      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:12.847749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:13.848892      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:14.848951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:15.849678      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:16.851138      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:17.851317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:18.851554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:19.851707      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:20.852021      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:21.852129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:22.852295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:23.852608      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:24.852945      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:25.853219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:26.853332      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:27.853471      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:28.854039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:29.854136      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:30.854394      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:27:31.123927 20 util.go:396] Waiting for terminating namespaces to be deleted...
  I0108 01:27:31.128365 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/08/25 01:27:31.128
  I0108 01:27:31.349262 20 taints.go:294] Pod is running on ip-172-31-16-191.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/08/25 01:27:31.349
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/08/25 01:27:31.378
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/08/25 01:27:31.386
  I0108 01:27:31.386906 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0108 01:27:31.386930 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/08/25 01:27:31.427
  STEP: Waiting some time to make sure that toleration time passed. @ 01/08/25 01:27:31.479
  E0108 01:27:31.855618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:32.855996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:33.856264      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:34.856402      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:35.856530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:36.856702      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:37.857097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:38.857364      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:39.858634      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:40.858651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:41.858940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:42.859093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:43.859187      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:44.859336      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:45.859725      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:46.860049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:47.860371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:48.860505      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:49.861079      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:50.861438      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:51.861683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:52.861835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:53.861995      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:54.862158      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:55.862400      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:56.862852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:57.863290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:58.865301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:27:59.865385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:00.866482      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:01.866696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:02.867280      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:03.867325      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:04.872964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:05.873323      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:06.873485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:07.873667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:08.873853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:09.874491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:10.875470      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:11.876178      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:12.876283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:13.877309      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:14.877469      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:15.877565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:16.877865      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:17.878095      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:18.878464      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:19.878376      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:20.878510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:21.878699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:22.879317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:23.879706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:24.879944      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:25.880266      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:26.881342      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:27.881684      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:28.882449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:29.882676      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:30.882852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:31.883344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:32.883488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:33.883806      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:34.883921      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:35.884102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:36.884228      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:37.884360      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:38.884552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:39.884696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:40.890585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:41.890856      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:42.891127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:43.891430      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:44.891744      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:45.891856      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:28:46.480397 20 taints.go:329] Pod wasn't evicted. Test successful
  I0108 01:28:46.480999 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1903" for this suite. @ 01/08/25 01:28:46.486
• [135.431 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/08/25 01:28:46.504
  I0108 01:28:46.504157 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename crd-webhook @ 01/08/25 01:28:46.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:28:46.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:28:46.546
  STEP: Setting up server cert @ 01/08/25 01:28:46.549
  E0108 01:28:46.892545      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/08/25 01:28:46.976
  STEP: Deploying the custom resource conversion webhook pod @ 01/08/25 01:28:46.991
  STEP: Wait for the deployment to be ready @ 01/08/25 01:28:47.023
  I0108 01:28:47.044458 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0108 01:28:47.892788      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:48.892851      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:28:49.094
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:28:49.122
  E0108 01:28:49.893255      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:28:50.122350 20 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0108 01:28:50.131416 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:28:50.893502      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:51.893718      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/08/25 01:28:52.732
  STEP: Create a v2 custom resource @ 01/08/25 01:28:52.767
  STEP: List CRs in v1 @ 01/08/25 01:28:52.821
  STEP: List CRs in v2 @ 01/08/25 01:28:52.887
  E0108 01:28:52.893697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:28:53.544049 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-588" for this suite. @ 01/08/25 01:28:53.548
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/08/25 01:28:53.565
  I0108 01:28:53.565450 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:28:53.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:28:53.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:28:53.634
  STEP: Setting up server cert @ 01/08/25 01:28:53.727
  E0108 01:28:53.894428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:28:54.348
  STEP: Deploying the webhook pod @ 01/08/25 01:28:54.361
  STEP: Wait for the deployment to be ready @ 01/08/25 01:28:54.394
  I0108 01:28:54.433948 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:28:54.895295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:55.895665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:28:56.447
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:28:56.479
  E0108 01:28:56.896157      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:28:57.479751 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/08/25 01:28:57.493
  STEP: create the configmap with a random name @ 01/08/25 01:28:57.537
  STEP: verify the configmap is mutated @ 01/08/25 01:28:57.57
  STEP: create the configmap with 'skip-me' name @ 01/08/25 01:28:57.57
  I0108 01:28:57.716912 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3918" for this suite. @ 01/08/25 01:28:57.739
  STEP: Destroying namespace "webhook-markers-6058" for this suite. @ 01/08/25 01:28:57.753
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/08/25 01:28:57.766
  I0108 01:28:57.767138 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 01:28:57.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:28:57.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:28:57.824
  STEP: Creating secret with name s-test-opt-del-27695ded-1c61-4b8b-a3a1-0c6fd070c1b7 @ 01/08/25 01:28:57.838
  STEP: Creating secret with name s-test-opt-upd-f8f2ccc2-455e-4472-9e58-59ce08b97621 @ 01/08/25 01:28:57.847
  STEP: Creating the pod @ 01/08/25 01:28:57.857
  E0108 01:28:57.896533      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:58.896708      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:28:59.897590      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:00.898463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:01.899901      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-27695ded-1c61-4b8b-a3a1-0c6fd070c1b7 @ 01/08/25 01:29:01.96
  STEP: Updating secret s-test-opt-upd-f8f2ccc2-455e-4472-9e58-59ce08b97621 @ 01/08/25 01:29:01.973
  STEP: Creating secret with name s-test-opt-create-49f6c5e3-a434-4aad-bfe8-7f506846892b @ 01/08/25 01:29:01.991
  STEP: waiting to observe update in volume @ 01/08/25 01:29:02.003
  E0108 01:29:02.900177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:03.900540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:04.900738      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:05.900844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:06.901117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:07.901438      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:08.901784      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:09.901983      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:10.902452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:11.903117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:12.903337      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:13.903487      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:14.904491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:15.905789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:16.905898      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:17.906570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:18.907553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:19.907817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:20.908086      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:21.908226      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:22.909227      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:23.909473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:24.909609      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:25.909759      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:26.910015      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:27.910116      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:28.910521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:29.911054      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:30.910872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:31.911027      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:32.912125      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:33.912450      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:34.913088      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:35.913371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:36.913373      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:37.913592      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:38.913744      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:39.914606      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:40.915500      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:41.915669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:42.284577 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2031" for this suite. @ 01/08/25 01:29:42.292
• [44.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/08/25 01:29:42.307
  I0108 01:29:42.307739 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:29:42.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:29:42.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:29:42.364
  STEP: creating service multi-endpoint-test in namespace services-1340 @ 01/08/25 01:29:42.367
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1340 to expose endpoints map[] @ 01/08/25 01:29:42.397
  I0108 01:29:42.426883 20 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1340 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1340 @ 01/08/25 01:29:42.427
  E0108 01:29:42.915831      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:43.915968      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1340 to expose endpoints map[pod1:[100]] @ 01/08/25 01:29:44.479
  I0108 01:29:44.497058 20 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1340 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1340 @ 01/08/25 01:29:44.497
  E0108 01:29:44.916331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:45.916610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:46.917844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:47.918658      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1340 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/08/25 01:29:48.544
  I0108 01:29:48.572060 20 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1340 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/08/25 01:29:48.572
  I0108 01:29:48.572160 20 resource.go:361] Creating new exec pod
  E0108 01:29:48.918793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:49.918935      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:50.920018      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:51.605944 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1340 exec execpod2m2zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0108 01:29:51.826335 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.43.152.205) 80 port [tcp/http] succeeded!\n"
  I0108 01:29:51.826403 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:29:51.826505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1340 exec execpod2m2zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.152.205 80'
  E0108 01:29:51.921118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:52.074754 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.152.205 80\nConnection to 10.43.152.205 80 port [tcp/http] succeeded!\n"
  I0108 01:29:52.074825 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:29:52.075104 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1340 exec execpod2m2zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0108 01:29:52.273801 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.152.205) 81 port [tcp/*] succeeded!\n"
  I0108 01:29:52.273860 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:29:52.273952 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-1340 exec execpod2m2zm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.152.205 81'
  I0108 01:29:52.483796 20 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.152.205 81\necho hostName\nConnection to 10.43.152.205 81 port [tcp/*] succeeded!\n"
  I0108 01:29:52.483872 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1340 @ 01/08/25 01:29:52.483
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1340 to expose endpoints map[pod2:[101]] @ 01/08/25 01:29:52.537
  I0108 01:29:52.592428 20 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1340 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1340 @ 01/08/25 01:29:52.592
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1340 to expose endpoints map[] @ 01/08/25 01:29:52.653
  I0108 01:29:52.682046 20 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1340 exposes endpoints map[]
  I0108 01:29:52.743861 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1340" for this suite. @ 01/08/25 01:29:52.754
• [10.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/08/25 01:29:52.766
  I0108 01:29:52.767032 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:29:52.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:29:52.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:29:52.816
  STEP: creating service in namespace services-2731 @ 01/08/25 01:29:52.819
  STEP: creating service affinity-clusterip in namespace services-2731 @ 01/08/25 01:29:52.819
  STEP: creating replication controller affinity-clusterip in namespace services-2731 @ 01/08/25 01:29:52.843
  I0108 01:29:52.870038      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-2731, replica count: 3
  E0108 01:29:52.921760      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:53.922447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:54.923316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:55.922314      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0108 01:29:55.923629      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:55.929329 20 resource.go:361] Creating new exec pod
  E0108 01:29:56.924683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:57.925448      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:29:58.925638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:29:58.976832 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2731 exec execpod-affinitysxkbd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0108 01:29:59.192835 20 builder.go:146] stderr: "+ + nc -v -t -w 2 affinity-clusterip 80\necho hostName\nConnection to affinity-clusterip (10.43.82.240) 80 port [tcp/http] succeeded!\n"
  I0108 01:29:59.192892 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:29:59.193111 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2731 exec execpod-affinitysxkbd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.82.240 80'
  I0108 01:29:59.395828 20 builder.go:146] stderr: "+ + echo hostNamenc\n -v -t -w 2 10.43.82.240 80\nConnection to 10.43.82.240 80 port [tcp/http] succeeded!\n"
  I0108 01:29:59.395903 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0108 01:29:59.395989 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=services-2731 exec execpod-affinitysxkbd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.82.240:80/ ; done'
  I0108 01:29:59.783642 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.82.240:80/\n"
  I0108 01:29:59.783804 20 builder.go:147] stdout: "\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv\naffinity-clusterip-pgrpv"
  I0108 01:29:59.783936 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.783957 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.783972 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.783987 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784002 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784135 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784155 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784170 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784185 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784201 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784216 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784230 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784244 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784258 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784272 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784286 20 service.go:242] Received response from host: affinity-clusterip-pgrpv
  I0108 01:29:59.784441 20 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-2731, will wait for the garbage collector to delete the pods @ 01/08/25 01:29:59.831
  I0108 01:29:59.901607 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 12.943405ms
  E0108 01:29:59.926093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:00.002464 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.839263ms
  E0108 01:30:00.926804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:01.927170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:02.927696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:03.373652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2731" for this suite. @ 01/08/25 01:30:03.38
• [10.629 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/08/25 01:30:03.396
  I0108 01:30:03.396730 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:30:03.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:30:03.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:30:03.467
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:30:03.47
  E0108 01:30:03.927855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:04.928378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:05.929002      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:06.929393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:30:07.531
  I0108 01:30:07.541936 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-51f34936-977a-42d0-9188-8888e5c53df4 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:30:07.551
  I0108 01:30:07.593082 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-197" for this suite. @ 01/08/25 01:30:07.599
• [4.219 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/08/25 01:30:07.615
  I0108 01:30:07.616016 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 01:30:07.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:30:07.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:30:07.666
  STEP: Creating pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437 @ 01/08/25 01:30:07.669
  E0108 01:30:07.930246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:08.930433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 01:30:09.72
  I0108 01:30:09.726623 20 container_probe.go:1749] Initial restart count of pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 is 0
  I0108 01:30:09.733858 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:09.931329      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:10.931593      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:11.740183 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:11.932690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:12.932853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:13.754299 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:13.933715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:14.933872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:15.759120 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:15.934641      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:16.934970      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:17.765029 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:17.935316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:18.935770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:19.770594 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:19.935852      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:20.936189      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:21.781090 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:21.936789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:22.936751      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:23.785311 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:23.937641      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:24.937817      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:25.790346 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:25.937893      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:26.938164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:27.796299 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:27.938956      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:28.940088      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:29.801204 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:29.940307      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:30.940839      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:31.809055 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:31.941610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:32.942265      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:33.821535 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:33.942794      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:34.943000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:35.827274 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:35.944153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:36.944296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:37.841174 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:37.944668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:38.945081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:39.851513 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:39.945824      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:40.946512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:41.858973 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:41.947276      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:42.947561      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:43.869076 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:43.948081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:44.948887      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:45.873841 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:45.950015      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:46.950540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:47.878225 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:47.950746      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:48.950915      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:49.883488 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:49.950992      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:50.951104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:51.890653 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:51.952016      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:52.952280      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:53.896180 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:53.952554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:54.952928      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:55.901562 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:55.953785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:56.954084      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:57.907761 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:57.954879      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:30:58.955747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:30:59.913482 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:30:59.956648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:00.956850      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:01.922600 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:01.957290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:02.957458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:03.930083 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:03.958433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:04.959436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:05.934696 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:05.960166      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:06.960429      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:07.943947 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:07.961355      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:08.961391      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:09.949912 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:09.962214      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:10.962555      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:11.963295      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:11.974917 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:12.963496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:13.963720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:13.988212 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:14.964134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:15.964335      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:15.994593 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:16.965275      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:17.965546      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:18.000514 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:18.965596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:19.966506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:20.008009 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:20.967021      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:21.967334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:22.014518 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:22.967951      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:23.968440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:24.019969 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:24.968958      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:25.969570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:26.026053 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:26.970654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:27.970853      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:28.032471 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:28.971603      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:29.972199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:30.038502 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:30.972460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:31.972536      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:32.042965 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:32.972927      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:33.973329      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:34.048491 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:34.973463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:35.973807      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:36.052510 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:36.974591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:37.975477      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:38.063400 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:38.976281      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:39.976619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:40.068355 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:40.977648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:41.978486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:42.073505 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:42.978706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:43.979364      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:44.086610 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:44.979639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:45.979965      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:46.091598 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:46.980989      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:47.980989      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:48.100239 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:48.981254      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:49.981516      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:50.104905 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:50.981709      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:51.982312      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:52.122082 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:52.983077      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:53.983423      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:54.129327 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:54.984163      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:55.984370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:56.143706 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:56.985571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:57.985523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:31:58.149642 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:31:58.985731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:31:59.986127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:00.157774 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:00.986796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:01.986966      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:02.170791 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:02.987446      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:03.987642      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:04.175745 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:04.988731      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:05.988872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:06.188469 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:06.989410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:07.990545      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:08.193527 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:08.990301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:09.990497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:10.199315 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:10.990641      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:11.990780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:12.204544 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:12.991356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:13.991746      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:14.216835 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:14.992777      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:15.993439      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:16.228926 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:16.994261      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:17.994383      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:18.240228 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:18.994639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:19.998380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:20.252195 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:20.998650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:21.998872      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:22.270616 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:22.999009      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:23.999199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:24.288753 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:24.999393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:25.999979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:26.294644 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:26.999758      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:28.000006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:28.299870 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:29.000149      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:30.000323      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:30.304631 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:31.000508      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:32.000666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:32.310355 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:33.000870      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:34.001033      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:34.317543 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:35.002045      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:36.001996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:36.322944 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:37.002122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:38.002521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:38.328426 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:39.002695      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:40.003059      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:40.336311 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:41.003107      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:42.003345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:42.341638 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:43.004561      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:44.005403      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:44.347552 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:45.006245      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:46.006261      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:46.352172 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:47.006405      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:48.006556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:48.360097 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:49.007112      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:50.007493      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:50.366892 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:51.007622      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:52.007964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:52.372526 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:53.008129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:54.008317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:54.377489 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:55.008471      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:56.009271      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:56.382465 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:57.009461      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:32:58.009827      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:32:58.388276 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:32:59.010929      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:00.011114      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:00.394089 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:01.011795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:02.012346      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:02.399760 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:03.012398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:04.012554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:04.405107 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:05.013104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:06.013372      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:06.410436 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:07.014335      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:08.014688      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:08.415999 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:09.015327      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:10.015650      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:10.421410 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:11.016183      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:12.017172      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:12.426963 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:13.017486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:14.017587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:14.431209 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:15.017916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:16.018438      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:16.436223 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:17.019232      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:18.019401      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:18.442331 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:19.019574      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:20.020231      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:20.449989 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:21.020586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:22.021053      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:22.456019 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:23.021416      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:24.021690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:24.468598 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:25.021832      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:26.022506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:26.472975 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:27.022757      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:28.023031      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:28.478075 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:29.023246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:30.023722      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:30.484267 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:31.023884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:32.024117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:32.490366 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:33.025099      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:34.025298      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:34.495287 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:35.025660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:36.026810      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:36.501301 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:37.026855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:38.027349      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:38.510233 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:39.028011      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:40.028521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:40.516827 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:41.029339      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:42.029357      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:42.522331 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:43.029526      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:44.030513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:44.528345 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:45.030772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:46.031091      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:46.533565 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:47.031960      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:48.032696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:48.539422 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:49.033397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:50.034157      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:50.544197 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:51.034340      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:52.034398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:52.550475 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:53.035337      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:54.035431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:54.556909 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:55.036221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:56.036549      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:56.562313 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:57.036884      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:33:58.036991      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:33:58.568469 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:33:59.038151      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:00.038254      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:00.573923 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:34:01.038307      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:02.038577      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:02.580754 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:34:03.039349      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:04.039690      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:04.586192 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:34:05.039871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:06.040175      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:06.592840 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:34:07.040405      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:08.040597      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:08.597305 20 container_probe.go:1759] Get pod test-webserver-2724e1b6-342a-49be-aeef-d4661e602862 in namespace container-probe-6437
  E0108 01:34:09.040793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:10.041107      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/08/25 01:34:10.598
  I0108 01:34:10.656606 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6437" for this suite. @ 01/08/25 01:34:10.682
• [243.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/08/25 01:34:10.695
  I0108 01:34:10.695696 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/08/25 01:34:10.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:10.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:10.745
  I0108 01:34:10.748926 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:34:11.041348      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:12.041605      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:13.041748      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:13.879901 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9843" for this suite. @ 01/08/25 01:34:13.888
• [3.221 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/08/25 01:34:13.917
  I0108 01:34:13.917231 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename podtemplate @ 01/08/25 01:34:13.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:13.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:13.963
  E0108 01:34:14.042394      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:14.048463 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9713" for this suite. @ 01/08/25 01:34:14.055
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 01/08/25 01:34:14.071
  I0108 01:34:14.071205 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename svcaccounts @ 01/08/25 01:34:14.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:14.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:14.147
  I0108 01:34:14.194559 20 service_accounts.go:647] created pod
  E0108 01:34:15.043637      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:16.043981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:17.044358      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:18.045079      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:34:18.214
  E0108 01:34:19.045400      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:20.045573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:21.046712      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:22.046728      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:23.047017      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:24.047519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:25.047586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:26.050894      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:27.051228      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:28.051712      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:29.052270      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:30.052741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:31.053100      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:32.053362      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:33.053504      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:34.054556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:35.054755      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:36.054870      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:37.055011      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:38.055221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:39.055981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:40.056101      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:41.056258      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:42.057515      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:43.058451      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:44.058797      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:45.059046      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:46.060039      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:47.060234      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:48.060525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:48.215368 20 service_accounts.go:653] polling logs
  I0108 01:34:48.236048 20 service_accounts.go:663] Pod logs: 
  I0108 01:34:15.428799       1 log.go:245] OK: Got token
  I0108 01:34:15.428910       1 log.go:245] validating with in-cluster discovery
  I0108 01:34:15.429826       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0108 01:34:15.429876       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4003:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00042d8e0), NotBefore:(*jwt.NumericDate)(0xc00042d9d0), IssuedAt:(*jwt.NumericDate)(0xc00042d8f0), ID:"b5f658c0-78fe-4a85-8a4e-5b217f1fc9b9"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4003", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"34adb7e0-40dc-4b7b-8c5d-7c975921383f"}}}
  I0108 01:34:15.444322       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0108 01:34:15.449117       1 log.go:245] OK: Validated signature on JWT
  I0108 01:34:15.449283       1 log.go:245] OK: Got valid claims from token!
  I0108 01:34:15.449318       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4003:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000d0d10), NotBefore:(*jwt.NumericDate)(0xc0000d0d38), IssuedAt:(*jwt.NumericDate)(0xc0000d0d18), ID:"b5f658c0-78fe-4a85-8a4e-5b217f1fc9b9"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4003", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"34adb7e0-40dc-4b7b-8c5d-7c975921383f"}}}

  I0108 01:34:48.236149 20 service_accounts.go:667] completed pod
  I0108 01:34:48.247738 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4003" for this suite. @ 01/08/25 01:34:48.257
• [34.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 01/08/25 01:34:48.272
  I0108 01:34:48.272815 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 01:34:48.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:48.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:48.321
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/08/25 01:34:48.325
  I0108 01:34:48.339751 20 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9690  5ad6b220-fb3e-451e-a960-5015be689782 62433 0 2025-01-08 01:34:48 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-08 01:34:48 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vm9p5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vm9p5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0108 01:34:49.061338      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:50.062470      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/08/25 01:34:50.365
  I0108 01:34:50.366114 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9690 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:34:50.367025 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:34:50.368400 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9690/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/08/25 01:34:50.507
  I0108 01:34:50.507628 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9690 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:34:50.507661 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:34:50.507732 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9690/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0108 01:34:50.636742 20 dns.go:450] Deleting pod test-dns-nameservers...
  I0108 01:34:50.671106 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9690" for this suite. @ 01/08/25 01:34:50.681
• [2.430 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/08/25 01:34:50.704
  I0108 01:34:50.704876 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:34:50.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:50.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:50.745
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:34:50.762
  E0108 01:34:51.063134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:52.063983      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:53.064484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:54.064596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:34:54.81
  I0108 01:34:54.815171 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-3ac6d1c3-c79d-41ed-9874-36deb28f3203 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:34:54.823
  I0108 01:34:54.862132 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8359" for this suite. @ 01/08/25 01:34:54.867
• [4.175 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 01/08/25 01:34:54.88
  I0108 01:34:54.881223 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/08/25 01:34:54.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:54.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:54.927
  STEP: getting /apis @ 01/08/25 01:34:54.944
  STEP: getting /apis/admissionregistration.k8s.io @ 01/08/25 01:34:54.951
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/08/25 01:34:54.952
  STEP: creating @ 01/08/25 01:34:54.954
  STEP: getting @ 01/08/25 01:34:54.989
  STEP: listing @ 01/08/25 01:34:54.999
  STEP: watching @ 01/08/25 01:34:55.003
  I0108 01:34:55.003790 20 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 01/08/25 01:34:55.005
  STEP: updating @ 01/08/25 01:34:55.02
  I0108 01:34:55.033474 20 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 01/08/25 01:34:55.033
  STEP: deleting a collection @ 01/08/25 01:34:55.063
  E0108 01:34:55.065240      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:34:55.105168 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6964" for this suite. @ 01/08/25 01:34:55.11
• [0.249 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/08/25 01:34:55.129
  I0108 01:34:55.129889 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:34:55.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:55.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:55.172
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/08/25 01:34:55.177
  E0108 01:34:56.065375      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:57.066486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:58.066561      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:34:59.066715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:34:59.231
  I0108 01:34:59.235708 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-b3df8be9-6729-4f2d-9574-cb5ad5d13125 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:34:59.246
  I0108 01:34:59.289152 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-932" for this suite. @ 01/08/25 01:34:59.309
• [4.203 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/08/25 01:34:59.332
  I0108 01:34:59.332569 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:34:59.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:34:59.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:34:59.378
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/08/25 01:34:59.383
  E0108 01:35:00.067699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:01.068153      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:02.068211      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:03.068642      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:35:03.445
  I0108 01:35:03.449685 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-bb8dc368-82d8-4255-9ecd-5c7e72f1f1ae container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:35:03.457
  I0108 01:35:03.520542 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8942" for this suite. @ 01/08/25 01:35:03.527
• [4.208 seconds]
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/08/25 01:35:03.54
  I0108 01:35:03.540964 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 01:35:03.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:03.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:03.623
  STEP: Creating secret with name secret-test-0cdd4ee8-55c9-4926-aea0-2c031d3c9d45 @ 01/08/25 01:35:03.628
  STEP: Creating a pod to test consume secrets @ 01/08/25 01:35:03.639
  E0108 01:35:04.069074      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:05.069290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:06.069861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:07.070463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:35:07.706
  I0108 01:35:07.710297 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-f460ed84-e635-4eda-9965-ef2bb871860e container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 01:35:07.722
  I0108 01:35:07.763995 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2567" for this suite. @ 01/08/25 01:35:07.783
• [4.256 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/08/25 01:35:07.797
  I0108 01:35:07.797528 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:35:07.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:07.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:07.843
  STEP: Creating configMap with name projected-configmap-test-volume-map-36b32de0-758c-4dfa-b928-9dfb0fbd64fc @ 01/08/25 01:35:07.847
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:35:07.873
  E0108 01:35:08.071409      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:09.071540      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:10.072617      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:11.072832      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:35:11.943
  I0108 01:35:11.948113 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-c8a34153-389f-4c4b-8d63-b390872f101f container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:35:11.956
  I0108 01:35:11.994809 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3339" for this suite. @ 01/08/25 01:35:11.999
• [4.215 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/08/25 01:35:12.012
  I0108 01:35:12.012246 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subpath @ 01/08/25 01:35:12.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:12.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:12.062
  STEP: Setting up data @ 01/08/25 01:35:12.067
  E0108 01:35:12.073363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-configmap-9pn5 @ 01/08/25 01:35:12.088
  STEP: Creating a pod to test atomic-volume-subpath @ 01/08/25 01:35:12.089
  E0108 01:35:13.074359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:14.074509      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:15.074607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:16.074814      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:17.075610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:18.075713      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:19.075907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:20.077420      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:21.078607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:22.078942      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:23.079228      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:24.079275      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:25.079373      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:26.079573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:27.079891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:28.080219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:29.081438      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:30.082067      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:31.082327      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:32.082453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:33.082891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:34.083239      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:35.086745      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:36.086964      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:35:36.212
  I0108 01:35:36.217518 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-subpath-test-configmap-9pn5 container test-container-subpath-configmap-9pn5: <nil>
  STEP: delete the pod @ 01/08/25 01:35:36.228
  STEP: Deleting pod pod-subpath-test-configmap-9pn5 @ 01/08/25 01:35:36.269
  I0108 01:35:36.269498 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-9pn5" in namespace "subpath-6696"
  I0108 01:35:36.273265 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6696" for this suite. @ 01/08/25 01:35:36.278
• [24.281 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/08/25 01:35:36.293
  I0108 01:35:36.293968 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 01:35:36.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:36.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:36.351
  STEP: apply creating a deployment @ 01/08/25 01:35:36.355
  I0108 01:35:36.376324 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1644" for this suite. @ 01/08/25 01:35:36.383
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/08/25 01:35:36.396
  I0108 01:35:36.396169 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename resourcequota @ 01/08/25 01:35:36.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:36.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:36.458
  STEP: Creating resourceQuota "e2e-rq-status-jgltf" @ 01/08/25 01:35:36.506
  I0108 01:35:36.529872 20 resource_quota.go:1102] Resource quota "e2e-rq-status-jgltf" reports spec: hard cpu limit of 500m
  I0108 01:35:36.529934 20 resource_quota.go:1104] Resource quota "e2e-rq-status-jgltf" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-jgltf" /status @ 01/08/25 01:35:36.529
  STEP: Confirm /status for "e2e-rq-status-jgltf" resourceQuota via watch @ 01/08/25 01:35:36.546
  I0108 01:35:36.551769 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-jgltf" in namespace "resourcequota-3708" with hard status: v1.ResourceList(nil)
  I0108 01:35:36.551871 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-jgltf" in namespace "resourcequota-3708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0108 01:35:36.551893 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-jgltf" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/08/25 01:35:36.565
  I0108 01:35:36.578171 20 resource_quota.go:1152] Resource quota "e2e-rq-status-jgltf" reports spec: hard cpu limit of 1
  I0108 01:35:36.578238 20 resource_quota.go:1153] Resource quota "e2e-rq-status-jgltf" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-jgltf" /status @ 01/08/25 01:35:36.578
  STEP: Confirm /status for "e2e-rq-status-jgltf" resourceQuota via watch @ 01/08/25 01:35:36.6
  I0108 01:35:36.607310 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-jgltf" in namespace "resourcequota-3708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0108 01:35:36.607426 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-jgltf" in namespace "resourcequota-3708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0108 01:35:36.607489 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-jgltf" /status was patched
  STEP: Get "e2e-rq-status-jgltf" /status @ 01/08/25 01:35:36.607
  I0108 01:35:36.612120 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-jgltf" reports status: hard cpu of 1
  I0108 01:35:36.612177 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-jgltf" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-jgltf" /status before checking Spec is unchanged @ 01/08/25 01:35:36.615
  I0108 01:35:36.627612 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-jgltf" reports status: hard cpu of 2
  I0108 01:35:36.627691 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-jgltf" reports status: hard memory of 2Gi
  I0108 01:35:36.629751 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-jgltf" in namespace "resourcequota-3708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0108 01:35:36.633782 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jgltf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jgltf", GenerateName:"", Namespace:"resourcequota-3708", SelfLink:"", UID:"cc4d503b-4949-46f2-ba51-41c829f7cb3a", ResourceVersion:"62828", Generation:0, CreationTimestamp:time.Date(2025, time.January, 8, 1, 35, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jgltf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 1, 35, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f2cac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 1, 35, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f2caf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 8, 1, 35, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f2cb40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E0108 01:35:37.087148      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:38.087563      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:39.088277      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:40.088822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:41.088939      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:35:41.635909 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-jgltf" Spec was unchanged and /status reset
  I0108 01:35:41.636188 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3708" for this suite. @ 01/08/25 01:35:41.641
• [5.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/08/25 01:35:41.655
  I0108 01:35:41.655047 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/08/25 01:35:41.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:41.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:41.752
  STEP: creating a policy with variables @ 01/08/25 01:35:41.767
  STEP: waiting until the marker is denied @ 01/08/25 01:35:41.817
  E0108 01:35:42.089626      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 01/08/25 01:35:42.212
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/08/25 01:35:42.313
  I0108 01:35:42.491677 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1509" for this suite. @ 01/08/25 01:35:42.5
• [0.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/08/25 01:35:42.555
  I0108 01:35:42.555728 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename secrets @ 01/08/25 01:35:42.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:42.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:42.61
  STEP: Creating secret with name secret-test-map-a6a4669b-6c30-48a2-a3e8-ff395652f87c @ 01/08/25 01:35:42.614
  STEP: Creating a pod to test consume secrets @ 01/08/25 01:35:42.63
  E0108 01:35:43.090698      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:44.091077      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:45.091689      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:46.092000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:35:46.67
  I0108 01:35:46.678652 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-secrets-c2e9d804-8bac-4992-a52e-619921b28d22 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 01:35:46.688
  I0108 01:35:46.736265 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2398" for this suite. @ 01/08/25 01:35:46.742
• [4.199 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/08/25 01:35:46.754
  I0108 01:35:46.754989 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 01:35:46.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:35:46.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:35:46.801
  STEP: creating the pod with failed condition @ 01/08/25 01:35:46.805
  E0108 01:35:47.092155      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:48.092475      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:49.092804      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:50.094666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:51.095140      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:52.095424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:53.095937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:54.096078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:55.096544      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:56.097420      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:57.098505      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:58.098897      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:35:59.099827      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:00.100259      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:01.100752      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:02.101417      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:03.102241      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:04.102760      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:05.102918      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:06.103286      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:07.104155      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:08.104971      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:09.105167      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:10.105529      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:11.106854      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:12.106873      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:13.107747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:14.108549      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:15.109243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:16.109528      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:17.109906      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:18.110111      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:19.110331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:20.110570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:21.111036      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:22.113789      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:23.112475      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:24.112606      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:25.112948      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:26.113397      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:27.114367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:28.114756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:29.115697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:30.116000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:31.116399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:32.116519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:33.116970      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:34.117062      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:35.117272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:36.117351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:37.117682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:38.117840      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:39.117937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:40.118094      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:41.119114      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:42.119315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:43.119945      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:44.119916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:45.120007      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:46.120622      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:47.120954      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:48.121053      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:49.121583      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:50.121680      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:51.122383      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:52.122581      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:53.123253      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:54.123499      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:55.123375      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:56.123907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:57.124756      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:58.124868      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:36:59.125586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:00.126490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:01.126780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:02.127424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:03.127553      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:04.127919      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:05.128763      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:06.129119      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:07.129777      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:08.130560      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:09.131491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:10.131669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:11.132677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:12.132929      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:13.133255      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:14.133406      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:15.134428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:16.134683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:17.135104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:18.135351      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:19.135761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:20.135998      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:21.136987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:22.138030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:23.138190      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:24.139047      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:25.139226      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:26.139393      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:27.139531      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:28.139750      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:29.139895      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:30.140366      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:31.140673      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:32.140803      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:33.141079      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:34.141389      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:35.141483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:36.141656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:37.141822      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:38.142212      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:39.142389      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:40.142765      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:41.143048      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:42.143318      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:43.143632      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:44.145043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:45.145535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:46.145699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 01/08/25 01:37:46.824
  E0108 01:37:47.147058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:37:47.351102 20 pod_client.go:173] Successfully updated pod "var-expansion-29c4b31d-8161-4ed0-bc53-41bf9573f72a"
  STEP: waiting for pod running @ 01/08/25 01:37:47.351
  E0108 01:37:48.147018      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:49.147171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/08/25 01:37:49.366
  I0108 01:37:49.366357 20 delete.go:62] Deleting pod "var-expansion-29c4b31d-8161-4ed0-bc53-41bf9573f72a" in namespace "var-expansion-5871"
  I0108 01:37:49.384215 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-29c4b31d-8161-4ed0-bc53-41bf9573f72a" to be fully deleted
  E0108 01:37:50.147987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:51.148129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:52.149122      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:53.149510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:54.149897      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:55.150442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:56.150601      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:57.150749      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:58.150930      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:37:59.151077      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:00.152162      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:01.152396      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:02.152569      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:03.152948      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:04.153562      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:05.153988      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:06.154103      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:07.154311      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:08.155023      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:09.155885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:10.156073      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:11.156171      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:12.156324      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:13.156524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:14.156663      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:15.156863      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:16.157967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:17.157696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:18.158428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:19.158543      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:20.158667      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:21.158847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:38:21.491372 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5871" for this suite. @ 01/08/25 01:38:21.497
• [154.755 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/08/25 01:38:21.51
  I0108 01:38:21.510970 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/08/25 01:38:21.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:38:21.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:38:21.566
  STEP: create the container to handle the HTTPGet hook request. @ 01/08/25 01:38:21.598
  E0108 01:38:22.159711      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:23.159907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/08/25 01:38:23.633
  E0108 01:38:24.163211      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:25.163811      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/08/25 01:38:25.667
  STEP: delete the pod with lifecycle hook @ 01/08/25 01:38:25.687
  E0108 01:38:26.164656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:27.165317      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:28.165381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:29.166461      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:38:29.736269 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-636" for this suite. @ 01/08/25 01:38:29.744
• [8.250 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/08/25 01:38:29.762
  I0108 01:38:29.762068 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:38:29.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:38:29.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:38:29.81
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:38:29.818
  E0108 01:38:30.166576      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:31.166720      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:32.167552      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:33.167591      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:38:33.869
  I0108 01:38:33.873410 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-a23c8ba7-3c61-4739-b96d-4830852a6d75 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:38:33.893
  I0108 01:38:33.927351 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5132" for this suite. @ 01/08/25 01:38:33.932
• [4.183 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/08/25 01:38:33.944
  I0108 01:38:33.944722 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:38:33.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:38:34.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:38:34.028
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:38:34.04
  E0108 01:38:34.168656      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:35.168953      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:36.169585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:37.170564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:38:38.085
  I0108 01:38:38.089723 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-2dac32c7-6058-451f-ae5e-c48fc9841d89 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:38:38.099
  I0108 01:38:38.135344 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9621" for this suite. @ 01/08/25 01:38:38.139
• [4.207 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/08/25 01:38:38.151
  I0108 01:38:38.151444 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubelet-test @ 01/08/25 01:38:38.152
  E0108 01:38:38.170805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:38:38.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:38:38.196
  E0108 01:38:39.177353      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:40.177492      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:41.178502      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:42.178783      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:38:42.238003 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4830" for this suite. @ 01/08/25 01:38:42.243
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/08/25 01:38:42.26
  I0108 01:38:42.260580 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 01:38:42.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:38:42.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:38:42.302
  E0108 01:38:43.179785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:44.182441      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:45.180162      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:46.180193      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:47.180700      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:48.181399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:49.182668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:50.183105      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:51.183421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:52.183741      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:53.184770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:54.185030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:55.185606      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:56.185735      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:57.185873      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:58.186074      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:38:59.186524      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:00.186677      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:01.186835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:02.186942      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:03.187453      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:04.191352      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:05.192308      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:06.192478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:07.192785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:08.193466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:09.193920      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:10.194519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:11.194671      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:12.194715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:13.195770      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:14.196006      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:15.196916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:16.197428      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:17.198659      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:18.199169      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:19.199480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:20.200331      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:21.200578      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:22.200742      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:23.202881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:24.203967      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:25.204121      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:26.204327      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:27.204489      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:28.205706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:29.205426      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:30.205792      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:31.206087      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:32.206176      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:33.206246      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:34.209564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:35.209979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:36.210537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:37.211473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:38.212339      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:39.213447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:40.214400      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:41.214504      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:42.215231      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:39:42.333700 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4875" for this suite. @ 01/08/25 01:39:42.341
• [60.096 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/08/25 01:39:42.356
  I0108 01:39:42.356880 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename configmap @ 01/08/25 01:39:42.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:42.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:42.401
  STEP: Creating configMap with name configmap-test-volume-419790dc-2139-4646-909f-c6cff365cd5a @ 01/08/25 01:39:42.403
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:39:42.413
  E0108 01:39:43.217059      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:44.217442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:45.217639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:46.218447      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:39:46.458
  I0108 01:39:46.462592 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-configmaps-abd5c0b3-3bc6-4305-97cc-c38082e57fd4 container agnhost-container: <nil>
  STEP: delete the pod @ 01/08/25 01:39:46.471
  I0108 01:39:46.510281 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4479" for this suite. @ 01/08/25 01:39:46.516
• [4.178 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 01/08/25 01:39:46.535
  I0108 01:39:46.535320 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename services @ 01/08/25 01:39:46.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:46.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:46.583
  STEP: creating a Service @ 01/08/25 01:39:46.594
  STEP: watching for the Service to be added @ 01/08/25 01:39:46.632
  I0108 01:39:46.634934 20 service.go:3425] Found Service test-service-8nkbv in namespace services-6825 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32258}]
  I0108 01:39:46.634984 20 service.go:3432] Service test-service-8nkbv created
  STEP: Getting /status @ 01/08/25 01:39:46.635
  I0108 01:39:46.642634 20 service.go:3443] Service test-service-8nkbv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/08/25 01:39:46.642
  STEP: watching for the Service to be patched @ 01/08/25 01:39:46.661
  I0108 01:39:46.665093 20 service.go:3466] observed Service test-service-8nkbv in namespace services-6825 with annotations: map[] & LoadBalancer: {[]}
  I0108 01:39:46.665144 20 service.go:3469] Found Service test-service-8nkbv in namespace services-6825 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003df7d90 []}]}
  I0108 01:39:46.665163 20 service.go:3476] Service test-service-8nkbv has service status patched
  STEP: updating the ServiceStatus @ 01/08/25 01:39:46.665
  I0108 01:39:46.706102 20 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/08/25 01:39:46.706
  I0108 01:39:46.709031 20 service.go:3507] Observed Service test-service-8nkbv in namespace services-6825 with annotations: map[] & Conditions: []
  I0108 01:39:46.709384 20 service.go:3518] Observed Service test-service-8nkbv in namespace services-6825 with annotations: map[patchedstatus:true] & Conditions: []
  I0108 01:39:46.709688 20 service.go:3514] Found Service test-service-8nkbv in namespace services-6825 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0108 01:39:46.710008 20 service.go:3525] Service test-service-8nkbv has service status updated
  STEP: patching the service @ 01/08/25 01:39:46.71
  STEP: watching for the Service to be patched @ 01/08/25 01:39:46.729
  I0108 01:39:46.732860 20 service.go:3548] observed Service test-service-8nkbv in namespace services-6825 with labels: map[test-service-static:true]
  I0108 01:39:46.732918 20 service.go:3548] observed Service test-service-8nkbv in namespace services-6825 with labels: map[test-service-static:true]
  I0108 01:39:46.732941 20 service.go:3548] observed Service test-service-8nkbv in namespace services-6825 with labels: map[test-service-static:true]
  I0108 01:39:46.733104 20 service.go:3551] Found Service test-service-8nkbv in namespace services-6825 with labels: map[test-service:patched test-service-static:true]
  I0108 01:39:46.733427 20 service.go:3558] Service test-service-8nkbv patched
  STEP: deleting the service @ 01/08/25 01:39:46.733
  STEP: watching for the Service to be deleted @ 01/08/25 01:39:46.791
  I0108 01:39:46.793958 20 service.go:3582] Observed event: ADDED
  I0108 01:39:46.794042 20 service.go:3582] Observed event: MODIFIED
  I0108 01:39:46.794064 20 service.go:3582] Observed event: MODIFIED
  I0108 01:39:46.794192 20 service.go:3582] Observed event: MODIFIED
  I0108 01:39:46.794433 20 service.go:3578] Found Service test-service-8nkbv in namespace services-6825 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0108 01:39:46.794582 20 service.go:3587] Service test-service-8nkbv deleted
  I0108 01:39:46.794944 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6825" for this suite. @ 01/08/25 01:39:46.8
• [0.277 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/08/25 01:39:46.814
  I0108 01:39:46.814313 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:39:46.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:46.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:46.862
  STEP: Setting up server cert @ 01/08/25 01:39:46.967
  E0108 01:39:47.218636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:39:47.932
  STEP: Deploying the webhook pod @ 01/08/25 01:39:47.953
  STEP: Wait for the deployment to be ready @ 01/08/25 01:39:47.986
  I0108 01:39:48.011498 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:39:48.219097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:49.219196      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:39:50.032
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:39:50.068
  E0108 01:39:50.220058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:39:51.068790 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0108 01:39:51.078866 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:39:51.220347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4398-crds.webhook.example.com via the AdmissionRegistration API @ 01/08/25 01:39:51.6
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/08/25 01:39:51.636
  E0108 01:39:52.220541      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:53.220827      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:54.220921      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:39:54.372104 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9804" for this suite. @ 01/08/25 01:39:54.382
  STEP: Destroying namespace "webhook-markers-782" for this suite. @ 01/08/25 01:39:54.402
• [7.614 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/08/25 01:39:54.428
  I0108 01:39:54.428727 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename kubectl @ 01/08/25 01:39:54.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:54.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:54.478
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/08/25 01:39:54.482
  I0108 01:39:54.482661 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-1452 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0108 01:39:54.604821 20 builder.go:146] stderr: ""
  I0108 01:39:54.604872 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/08/25 01:39:54.604
  I0108 01:39:54.604966 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-1452 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0108 01:39:54.766368 20 builder.go:146] stderr: ""
  I0108 01:39:54.766429 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/08/25 01:39:54.766
  I0108 01:39:54.771250 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=kubectl-1452 delete pods e2e-test-httpd-pod'
  E0108 01:39:55.225401      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:56.226440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:39:56.977106 20 builder.go:146] stderr: ""
  I0108 01:39:56.977160 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0108 01:39:56.977311 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1452" for this suite. @ 01/08/25 01:39:56.984
• [2.569 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/08/25 01:39:56.998
  I0108 01:39:56.998135 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename runtimeclass @ 01/08/25 01:39:56.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:57.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:57.039
  I0108 01:39:57.145385 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9478" for this suite. @ 01/08/25 01:39:57.15
• [0.168 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/08/25 01:39:57.166
  I0108 01:39:57.166204 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 01:39:57.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:39:57.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:39:57.211
  E0108 01:39:57.226648      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:39:57.253606 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 01:39:57.253
  E0108 01:39:58.226820      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:39:59.226977      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up "test-rs" replicaset @ 01/08/25 01:39:59.274
  I0108 01:39:59.289929 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/08/25 01:39:59.29
  I0108 01:39:59.328291 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9029 with ReadyReplicas 1, AvailableReplicas 1
  I0108 01:39:59.359593 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9029 with ReadyReplicas 1, AvailableReplicas 1
  I0108 01:39:59.417347 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9029 with ReadyReplicas 1, AvailableReplicas 1
  I0108 01:39:59.506668 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9029 with ReadyReplicas 1, AvailableReplicas 1
  E0108 01:40:00.227347      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:01.224289 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9029 with ReadyReplicas 2, AvailableReplicas 2
  E0108 01:40:01.227693      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:01.408927 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9029 with ReadyReplicas 3 found true
  I0108 01:40:01.409212 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9029" for this suite. @ 01/08/25 01:40:01.414
• [4.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/08/25 01:40:01.437
  I0108 01:40:01.437112 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename subpath @ 01/08/25 01:40:01.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:40:01.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:40:01.483
  STEP: Setting up data @ 01/08/25 01:40:01.489
  STEP: Creating pod pod-subpath-test-configmap-lfs5 @ 01/08/25 01:40:01.523
  STEP: Creating a pod to test atomic-volume-subpath @ 01/08/25 01:40:01.523
  E0108 01:40:02.227825      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:03.228222      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:04.228452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:05.228815      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:06.229134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:07.229559      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:08.230565      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:09.230777      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:10.230837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:11.231651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:12.232159      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:13.232459      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:14.232751      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:15.232925      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:16.233112      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:17.233411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:18.233662      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:19.234934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:20.236097      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:21.236404      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:22.237301      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:23.237436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:24.238435      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:25.238811      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:40:25.649
  I0108 01:40:25.653979 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-subpath-test-configmap-lfs5 container test-container-subpath-configmap-lfs5: <nil>
  STEP: delete the pod @ 01/08/25 01:40:25.668
  STEP: Deleting pod pod-subpath-test-configmap-lfs5 @ 01/08/25 01:40:25.719
  I0108 01:40:25.719850 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-lfs5" in namespace "subpath-37"
  I0108 01:40:25.723675 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-37" for this suite. @ 01/08/25 01:40:25.728
• [24.303 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 01/08/25 01:40:25.741
  I0108 01:40:25.741455 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename dns @ 01/08/25 01:40:25.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:40:25.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:40:25.779
  STEP: Creating a test headless service @ 01/08/25 01:40:25.782
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5539 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5539;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5539 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5539;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5539.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5539.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5539.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5539.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5539.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5539.svc;check="$$(dig +notcp +noall +answer +search 102.99.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.99.102_udp@PTR;check="$$(dig +tcp +noall +answer +search 102.99.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.99.102_tcp@PTR;sleep 1; done
   @ 01/08/25 01:40:25.832
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5539 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5539;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5539 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5539;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5539.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5539.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5539.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5539.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5539.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5539.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5539.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5539.svc;check="$$(dig +notcp +noall +answer +search 102.99.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.99.102_udp@PTR;check="$$(dig +tcp +noall +answer +search 102.99.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.99.102_tcp@PTR;sleep 1; done
   @ 01/08/25 01:40:25.832
  STEP: creating a pod to probe DNS @ 01/08/25 01:40:25.832
  STEP: submitting the pod to kubernetes @ 01/08/25 01:40:25.832
  E0108 01:40:26.239672      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:27.240503      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:28.240559      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:29.240714      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/08/25 01:40:29.883
  STEP: looking for the results for each expected name from probers @ 01/08/25 01:40:29.887
  I0108 01:40:29.898941 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.904933 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.910169 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.915046 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.920315 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.925660 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.930316 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.935224 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.961832 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.965826 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.969702 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.973821 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.978261 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.982826 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.986659 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:29.991048 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:30.008364 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:30.017466 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:30.025603 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:30.032560 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:30.240909      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:31.241095      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:32.241357      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:33.241666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:34.241809      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:34.896319 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.901118 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.906118 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.910361 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.915085 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.920465 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.926378 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.930907 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.955529 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.962843 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.969448 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.974982 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.982282 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.987485 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.992412 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:34.996948 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:35.015106 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:35.022207 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:35.028746 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:35.036115 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:35.243254      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:36.243913      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:37.244321      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:38.245051      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:39.246769      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:39.901464 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.907387 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.912896 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.919212 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.924259 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.928889 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.933559 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.938583 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.964221 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.969121 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.974187 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.979260 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.983863 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.989788 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.994654 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:39.999697 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:40.027156 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:40.035404 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:40.045931 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:40.053936 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:40.247449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:41.247621      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:42.249350      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:43.250793      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:44.251130      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:44.892914 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.900184 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.909451 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.920961 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.926489 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.934129 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.941424 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.949578 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.982375 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.988569 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:44.995495 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.009386 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.019797 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.024977 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.031726 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.037024 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:45.073607 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:45.083209 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:45.094817 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:45.106331 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:45.253381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:46.253433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:47.254484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:48.256236      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:49.257356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:49.898731 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.904432 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.909068 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.914713 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.919852 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.924331 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.929279 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.938609 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.968565 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.974754 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.980183 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.985440 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:49.998639 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:50.011693 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:50.016811 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:50.021415 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:50.044352 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:50.052945 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:50.064904 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:50.075838 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:50.258177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:51.258305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:52.258461      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:53.258744      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:54.258881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:40:54.893653 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.898727 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.903128 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.907674 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.912882 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.917900 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.922416 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.927100 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.947883 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.951818 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.956283 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.960095 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539 from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.963892 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.967687 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.972384 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.977388 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc from pod dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497: the server could not find the requested resource (get pods dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497)
  I0108 01:40:54.996485 20 dns_common.go:506] Lookups using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5539 agnhost_tcp@dns-test-service.dns-5539 agnhost_udp@dns-test-service.dns-5539.svc agnhost_tcp@dns-test-service.dns-5539.svc agnhost_udp@_http._tcp.dns-test-service.dns-5539.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5539.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5539 jessie_tcp@dns-test-service.dns-5539 jessie_udp@dns-test-service.dns-5539.svc jessie_tcp@dns-test-service.dns-5539.svc jessie_udp@_http._tcp.dns-test-service.dns-5539.svc jessie_tcp@_http._tcp.dns-test-service.dns-5539.svc]

  I0108 01:40:55.010143 20 dns_common.go:514] Pod client logs for webserver: 
  I0108 01:40:55.027863 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0108 01:40:55.035621 20 dns_common.go:514] Pod client logs for jessie-querier: 
  E0108 01:40:55.258992      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:56.259193      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:57.259586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:58.259601      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:40:59.259699      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:00.065799 20 dns_common.go:546] DNS probes using dns-5539/dns-test-0fc9c246-27ad-4883-a7ad-477027c2a497 succeeded

  STEP: deleting the pod @ 01/08/25 01:41:00.066
  STEP: deleting the test service @ 01/08/25 01:41:00.145
  STEP: deleting the test headless service @ 01/08/25 01:41:00.253
  E0108 01:41:00.262940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:00.289957 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5539" for this suite. @ 01/08/25 01:41:00.304
• [34.580 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/08/25 01:41:00.322
  I0108 01:41:00.322959 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename apf @ 01/08/25 01:41:00.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:00.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:00.369
  STEP: getting /apis @ 01/08/25 01:41:00.379
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/08/25 01:41:00.385
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/08/25 01:41:00.387
  STEP: creating @ 01/08/25 01:41:00.389
  STEP: getting @ 01/08/25 01:41:00.48
  STEP: listing @ 01/08/25 01:41:00.484
  STEP: watching @ 01/08/25 01:41:00.488
  I0108 01:41:00.488411 20 flowcontrol.go:620] starting watch
  STEP: patching @ 01/08/25 01:41:00.489
  STEP: updating @ 01/08/25 01:41:00.506
  I0108 01:41:00.525150 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/08/25 01:41:00.525
  STEP: patching /status @ 01/08/25 01:41:00.529
  STEP: updating /status @ 01/08/25 01:41:00.541
  STEP: deleting @ 01/08/25 01:41:00.562
  STEP: deleting a collection @ 01/08/25 01:41:00.588
  I0108 01:41:00.619828 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-122" for this suite. @ 01/08/25 01:41:00.625
• [0.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/08/25 01:41:00.643
  I0108 01:41:00.643093 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 01:41:00.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:00.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:00.695
  I0108 01:41:00.699817 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  W0108 01:41:00.700871      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0046065d0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0108 01:41:01.263370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:02.263484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0108 01:41:03.255240      20 warnings.go:70] unknown field "alpha"
  W0108 01:41:03.255399      20 warnings.go:70] unknown field "beta"
  W0108 01:41:03.255503      20 warnings.go:70] unknown field "delta"
  W0108 01:41:03.255600      20 warnings.go:70] unknown field "epsilon"
  W0108 01:41:03.255690      20 warnings.go:70] unknown field "gamma"
  E0108 01:41:03.263523      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:03.831757 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7141" for this suite. @ 01/08/25 01:41:03.837
• [3.212 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/08/25 01:41:03.855
  I0108 01:41:03.855125 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:41:03.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:03.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:03.897
  STEP: Creating configMap with name projected-configmap-test-volume-48df5672-43c6-419e-95d6-2c7a36d241a2 @ 01/08/25 01:41:03.9
  STEP: Creating a pod to test consume configMaps @ 01/08/25 01:41:03.92
  E0108 01:41:04.264486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:05.264916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:06.265962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:07.266160      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:41:07.976
  I0108 01:41:07.980876 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-projected-configmaps-e2fe2616-8f4e-41f7-a75f-05ed43f76b09 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/08/25 01:41:07.989
  I0108 01:41:08.047548 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2334" for this suite. @ 01/08/25 01:41:08.053
• [4.216 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/08/25 01:41:08.071
  I0108 01:41:08.071402 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename webhook @ 01/08/25 01:41:08.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:08.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:08.118
  STEP: Setting up server cert @ 01/08/25 01:41:08.217
  E0108 01:41:08.266847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/08/25 01:41:08.689
  STEP: Deploying the webhook pod @ 01/08/25 01:41:08.708
  STEP: Wait for the deployment to be ready @ 01/08/25 01:41:08.744
  I0108 01:41:08.771784 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0108 01:41:09.267110      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:10.267313      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/08/25 01:41:10.804
  STEP: Verifying the service has paired with the endpoint @ 01/08/25 01:41:10.835
  E0108 01:41:11.268359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:11.837289 20 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/08/25 01:41:11.845
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/08/25 01:41:11.847
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/08/25 01:41:11.847
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/08/25 01:41:11.847
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/08/25 01:41:11.848
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/08/25 01:41:11.848
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/08/25 01:41:11.849
  I0108 01:41:11.959533 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8383" for this suite. @ 01/08/25 01:41:11.999
  STEP: Destroying namespace "webhook-markers-605" for this suite. @ 01/08/25 01:41:12.037
• [3.989 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/08/25 01:41:12.063
  I0108 01:41:12.063057 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:41:12.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:12.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:12.109
  STEP: Creating the pod @ 01/08/25 01:41:12.121
  E0108 01:41:12.269081      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:13.269363      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:14.269818      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:15.270368      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:16.270579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:16.707587 20 pod_client.go:173] Successfully updated pod "labelsupdate4cf93121-82c1-4d00-b123-dca7cbe3e39f"
  E0108 01:41:17.271589      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:18.271846      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:18.728624 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4473" for this suite. @ 01/08/25 01:41:18.733
• [6.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 01/08/25 01:41:18.755
  I0108 01:41:18.755585 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 01:41:18.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:41:18.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:41:18.806
  STEP: Creating service test in namespace statefulset-9668 @ 01/08/25 01:41:18.809
  STEP: Creating a new StatefulSet @ 01/08/25 01:41:18.827
  I0108 01:41:18.863837 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E0108 01:41:19.273390      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:20.272862      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:21.273052      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:22.273361      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:23.273535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:24.273631      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:25.273779      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:26.274041      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:27.274283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:28.274485      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:28.864827 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:41:28.864912 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:41:28.864933 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/08/25 01:41:28.879
  I0108 01:41:28.903803 20 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/08/25 01:41:28.903
  E0108 01:41:29.275507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:30.275907      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:31.276069      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:32.276273      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:33.276646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:34.276916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:35.277344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:36.277574      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:37.277706      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:38.278063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/08/25 01:41:38.913
  STEP: Performing a canary update @ 01/08/25 01:41:38.914
  I0108 01:41:38.933400 20 statefulset.go:2510] Updating stateful set ss2
  I0108 01:41:38.973695 20 wait.go:74] Waiting for Pod statefulset-9668/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0108 01:41:39.278885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:40.279173      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:41.279314      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:42.279436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:43.279595      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:44.279865      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:45.280052      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:46.280571      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:47.280899      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:48.281232      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/08/25 01:41:48.949
  I0108 01:41:49.090554 20 wait.go:40] Found 2 stateful pods, waiting for 3
  E0108 01:41:49.281915      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:50.282020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:51.282159      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:52.282262      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:53.282356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:54.282570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:55.282798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:56.283055      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:57.283328      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:41:58.283718      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:41:59.067136 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:41:59.067217 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:41:59.067238 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/08/25 01:41:59.074
  I0108 01:41:59.097534 20 statefulset.go:2510] Updating stateful set ss2
  I0108 01:41:59.122517 20 wait.go:74] Waiting for Pod statefulset-9668/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0108 01:41:59.284713      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:00.284858      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:01.285490      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:02.286030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:03.285981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:04.286258      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:05.286386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:06.286780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:07.287432      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:08.287909      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:09.126077 20 statefulset.go:2510] Updating stateful set ss2
  I0108 01:42:09.151838 20 wait.go:56] Waiting for StatefulSet statefulset-9668/ss2 to complete update
  I0108 01:42:09.152475 20 wait.go:63] Waiting for Pod statefulset-9668/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0108 01:42:09.288537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:10.288868      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:11.289384      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:12.290466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:13.291179      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:14.291782      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:15.291881      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:16.292440      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:17.292937      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:18.293060      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:19.136054 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9668
  I0108 01:42:19.139992 20 rest.go:152] Scaling statefulset ss2 to 0
  E0108 01:42:19.294015      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:20.294170      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:21.295213      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:22.295550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:23.295729      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:24.296082      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:25.296258      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:26.296838      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:27.297345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:28.298071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:29.167705 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 01:42:29.173347 20 rest.go:90] Deleting statefulset ss2
  I0108 01:42:29.209503 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9668" for this suite. @ 01/08/25 01:42:29.227
• [70.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/08/25 01:42:29.253
  I0108 01:42:29.253770 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:42:29.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:42:29.296
  E0108 01:42:29.298805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:42:29.3
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:42:29.304
  E0108 01:42:30.299855      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:31.300134      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:32.301284      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:33.301371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:42:33.35
  I0108 01:42:33.363155 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-4f8b97a5-950b-4c06-8fdb-e9d948822937 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:42:33.378
  I0108 01:42:33.426727 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7486" for this suite. @ 01/08/25 01:42:33.431
• [4.200 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 01/08/25 01:42:33.454
  I0108 01:42:33.454249 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename statefulset @ 01/08/25 01:42:33.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:42:33.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:42:33.501
  STEP: Creating service test in namespace statefulset-8486 @ 01/08/25 01:42:33.506
  STEP: Creating stateful set ss in namespace statefulset-8486 @ 01/08/25 01:42:33.523
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8486 @ 01/08/25 01:42:33.556
  I0108 01:42:33.578716 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E0108 01:42:34.305366      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:35.305607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:36.305759      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:37.306506      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:38.306946      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:39.307557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:40.307837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:41.308085      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:42.308243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:43.308532      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:43.562842 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/08/25 01:42:43.562
  I0108 01:42:43.566851 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 01:42:43.772782 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 01:42:43.772842 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 01:42:43.772862 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 01:42:43.778838 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0108 01:42:44.309632      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:45.310837      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:46.311216      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:47.311463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:48.311471      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:49.311675      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:50.312045      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:51.312207      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:52.312463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:42:53.312518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:53.778007 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0108 01:42:53.778061 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0108 01:42:53.825956 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.99999946s
  E0108 01:42:54.313614      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:54.831261 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.976696155s
  E0108 01:42:55.314424      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:55.837398 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.970817384s
  E0108 01:42:56.314534      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:56.846293 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.964412368s
  E0108 01:42:57.314570      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:57.851901 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.95560786s
  E0108 01:42:58.314633      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:58.857150 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.950434295s
  E0108 01:42:59.315626      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:42:59.863474 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.943971699s
  E0108 01:43:00.315947      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:00.871791 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.938546321s
  E0108 01:43:01.316219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:01.880188 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.930813283s
  E0108 01:43:02.316378      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:02.886839 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 921.617531ms
  E0108 01:43:03.317418      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8486 @ 01/08/25 01:43:03.888
  I0108 01:43:03.899354 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 01:43:04.112230 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0108 01:43:04.112292 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 01:43:04.112313 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 01:43:04.112374 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0108 01:43:04.317996      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:04.351519 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0108 01:43:04.351582 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 01:43:04.351604 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 01:43:04.351867 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0108 01:43:04.620580 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0108 01:43:04.620646 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0108 01:43:04.620669 20 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0108 01:43:04.627008 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:43:04.627054 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0108 01:43:04.627072 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/08/25 01:43:04.627
  I0108 01:43:04.631190 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 01:43:04.863236 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 01:43:04.863309 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 01:43:04.863331 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 01:43:04.863554 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0108 01:43:05.130344 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 01:43:05.130408 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 01:43:05.130430 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 01:43:05.130493 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4137128125 --namespace=statefulset-8486 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0108 01:43:05.318497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:05.391706 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0108 01:43:05.391773 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0108 01:43:05.391795 20 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0108 01:43:05.391821 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0108 01:43:05.396086 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0108 01:43:06.319221      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:07.319520      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:08.320287      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:09.320489      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:10.320665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:11.320825      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:12.321302      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:13.321407      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:14.321618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:15.321754      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:15.412524 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0108 01:43:15.412597 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0108 01:43:15.412620 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0108 01:43:15.451208 20 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0108 01:43:15.460399 20 resource.go:175] ss-0  ip-172-31-16-191.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:33 +0000 UTC  }]
  I0108 01:43:15.460464 20 resource.go:175] ss-1  ip-172-31-25-234.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  }]
  I0108 01:43:15.460504 20 resource.go:175] ss-2  ip-172-31-20-249.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  }]
  I0108 01:43:15.460526 20 resource.go:178] 
  I0108 01:43:15.460759 20 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0108 01:43:16.322613      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:16.466793 20 resource.go:168] POD   NODE                                         PHASE      GRACE  CONDITIONS
  I0108 01:43:16.466893 20 resource.go:175] ss-0  ip-172-31-16-191.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:33 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:33 +0000 UTC  }]
  I0108 01:43:16.466934 20 resource.go:175] ss-1  ip-172-31-25-234.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  }]
  I0108 01:43:16.466971 20 resource.go:175] ss-2  ip-172-31-20-249.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:16 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:43:05 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-08 01:42:53 +0000 UTC  }]
  I0108 01:43:16.466992 20 resource.go:178] 
  I0108 01:43:16.467006 20 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0108 01:43:17.322550      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:17.477249 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.964421023s
  E0108 01:43:18.322847      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:18.488158 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.95407059s
  E0108 01:43:19.323071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:19.493741 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.94299207s
  E0108 01:43:20.323381      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:20.499036 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.937617589s
  E0108 01:43:21.324047      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:21.504905 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.932535074s
  E0108 01:43:22.324476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:22.509963 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.926508904s
  E0108 01:43:23.325361      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:23.514737 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.921591583s
  E0108 01:43:24.325459      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:24.519777 20 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 916.311947ms
  E0108 01:43:25.326512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8486 @ 01/08/25 01:43:25.52
  I0108 01:43:25.527189 20 rest.go:152] Scaling statefulset ss to 0
  I0108 01:43:25.536183 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 01:43:25.540970 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8486
  I0108 01:43:25.546809 20 rest.go:152] Scaling statefulset ss to 0
  I0108 01:43:25.555042 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0108 01:43:25.561715 20 rest.go:90] Deleting statefulset ss
  I0108 01:43:25.583702 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8486" for this suite. @ 01/08/25 01:43:25.589
• [52.152 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/08/25 01:43:25.605
  I0108 01:43:25.605929 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename apf @ 01/08/25 01:43:25.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:43:25.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:43:25.652
  STEP: getting /apis @ 01/08/25 01:43:25.655
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/08/25 01:43:25.662
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/08/25 01:43:25.664
  STEP: creating @ 01/08/25 01:43:25.665
  STEP: getting @ 01/08/25 01:43:25.728
  STEP: listing @ 01/08/25 01:43:25.75
  STEP: watching @ 01/08/25 01:43:25.764
  I0108 01:43:25.764201 20 flowcontrol.go:394] starting watch
  STEP: patching @ 01/08/25 01:43:25.765
  STEP: updating @ 01/08/25 01:43:25.777
  I0108 01:43:25.794660 20 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 01/08/25 01:43:25.794
  STEP: patching /status @ 01/08/25 01:43:25.799
  STEP: updating /status @ 01/08/25 01:43:25.816
  STEP: deleting @ 01/08/25 01:43:25.854
  STEP: deleting a collection @ 01/08/25 01:43:25.873
  I0108 01:43:25.907214 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1050" for this suite. @ 01/08/25 01:43:25.911
• [0.324 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/08/25 01:43:25.931
  I0108 01:43:25.931521 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 01:43:25.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:43:25.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:43:25.975
  STEP: create the deployment @ 01/08/25 01:43:25.98
  W0108 01:43:25.997746      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/08/25 01:43:25.998
  E0108 01:43:26.327256      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 01/08/25 01:43:26.503
  STEP: wait for all rs to be garbage collected @ 01/08/25 01:43:26.515
  STEP: expected 0 pods, got 2 pods @ 01/08/25 01:43:26.534
  STEP: Gathering metrics @ 01/08/25 01:43:27.03
  I0108 01:43:27.151161 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 01:43:27.152033 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2423" for this suite. @ 01/08/25 01:43:27.157
• [1.239 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/08/25 01:43:27.17
  I0108 01:43:27.170808 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/08/25 01:43:27.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:43:27.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:43:27.221
  STEP: mirroring a new custom Endpoint @ 01/08/25 01:43:27.264
  I0108 01:43:27.280373 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0108 01:43:27.328011      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:28.328218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 01/08/25 01:43:29.285
  STEP: mirroring deletion of a custom Endpoint @ 01/08/25 01:43:29.311
  E0108 01:43:29.328798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:43:29.348057 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1746" for this suite. @ 01/08/25 01:43:29.356
• [2.200 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/08/25 01:43:29.371
  I0108 01:43:29.371706 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:43:29.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:43:29.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:43:29.427
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-987d0970-1d1a-4081-8c4b-efca83435ede @ 01/08/25 01:43:29.455
  STEP: Creating the pod @ 01/08/25 01:43:29.465
  E0108 01:43:30.333805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:31.334795      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:32.334916      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:33.335160      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-987d0970-1d1a-4081-8c4b-efca83435ede @ 01/08/25 01:43:33.508
  STEP: waiting to observe update in volume @ 01/08/25 01:43:33.519
  E0108 01:43:34.335388      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:35.335544      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:36.336011      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:37.336990      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:38.337419      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:39.338449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:40.339488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:41.339661      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:42.339892      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:43.340316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:44.341260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:45.341434      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:46.342185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:47.343078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:48.344021      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:49.344168      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:50.344340      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:51.344715      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:52.345474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:53.345579      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:54.345724      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:55.345887      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:56.346646      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:57.347294      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:58.348398      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:43:59.348488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:00.348651      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:01.348835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:02.349586      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:03.349718      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:04.349902      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:05.350073      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:06.350478      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:07.351027      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:08.351185      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:09.351328      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:44:09.754003 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1792" for this suite. @ 01/08/25 01:44:09.76
• [40.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/08/25 01:44:09.778
  I0108 01:44:09.778685 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename replicaset @ 01/08/25 01:44:09.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:44:09.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:44:09.821
  STEP: Create a Replicaset @ 01/08/25 01:44:09.833
  STEP: Verify that the required pods have come up. @ 01/08/25 01:44:09.848
  I0108 01:44:09.853243 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0108 01:44:10.351934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:11.352115      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:12.352710      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:13.352842      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:14.353264      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:44:14.859747 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/08/25 01:44:14.859
  STEP: Getting /status @ 01/08/25 01:44:14.859
  I0108 01:44:14.891909 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/08/25 01:44:14.892
  I0108 01:44:14.933538 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/08/25 01:44:14.933
  I0108 01:44:14.936024 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0108 01:44:14.936240 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.936564 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.936786 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.936966 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1604 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0108 01:44:14.937138 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/08/25 01:44:14.937
  I0108 01:44:14.937949 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0108 01:44:14.958287 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/08/25 01:44:14.958
  I0108 01:44:14.961335 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0108 01:44:14.961704 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.961998 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.962302 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.962355 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1604 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0108 01:44:14.962632 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0108 01:44:14.962686 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1604 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0108 01:44:14.962753 20 replica_set.go:729] Replicaset test-rs has a patched status
  I0108 01:44:14.963116 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1604" for this suite. @ 01/08/25 01:44:14.968
• [5.205 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 01/08/25 01:44:14.985
  I0108 01:44:14.985641 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 01:44:14.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:44:15.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:44:15.049
  STEP: Creating a suspended job @ 01/08/25 01:44:15.058
  STEP: Patching the Job @ 01/08/25 01:44:15.083
  STEP: Watching for Job to be patched @ 01/08/25 01:44:15.132
  I0108 01:44:15.134886 20 job.go:1309] Event ADDED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-job-label:e2e-d5kg9] and annotations: map[]
  I0108 01:44:15.134949 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-job-label:e2e-d5kg9] and annotations: map[]
  I0108 01:44:15.135061 20 job.go:1312] Event MODIFIED found for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[]
  STEP: Updating the job @ 01/08/25 01:44:15.135
  STEP: Watching for Job to be updated @ 01/08/25 01:44:15.158
  I0108 01:44:15.160264 20 job.go:1312] Event MODIFIED found for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:15.160491 20 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/08/25 01:44:15.16
  I0108 01:44:15.166270 20 job.go:1187] Job: e2e-d5kg9 as labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9]
  STEP: Waiting for job to complete @ 01/08/25 01:44:15.166
  E0108 01:44:15.353900      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:16.359898      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:17.360738      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:18.360883      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:19.361450      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:20.362671      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:21.362637      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:22.363510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:23.364481      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:24.365370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:25.366399      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:26.366993      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 01/08/25 01:44:27.264
  STEP: Watching for Job to be deleted @ 01/08/25 01:44:27.281
  I0108 01:44:27.284487 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:27.284560 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:27.284795 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:27.285073 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:27.285277 20 job.go:1309] Event MODIFIED observed for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  I0108 01:44:27.285322 20 job.go:1312] Event DELETED found for Job e2e-d5kg9 in namespace job-9467 with labels: map[e2e-d5kg9:patched e2e-job-label:e2e-d5kg9] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/08/25 01:44:27.285
  I0108 01:44:27.291510 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9467" for this suite. @ 01/08/25 01:44:27.302
• [12.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/08/25 01:44:27.321
  I0108 01:44:27.321293 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename field-validation @ 01/08/25 01:44:27.322
  E0108 01:44:27.367925      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:44:27.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:44:27.437
  I0108 01:44:27.441109 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  E0108 01:44:28.368019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:29.368191      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0108 01:44:30.003500      20 warnings.go:70] unknown field "alpha"
  W0108 01:44:30.003539      20 warnings.go:70] unknown field "beta"
  W0108 01:44:30.003549      20 warnings.go:70] unknown field "delta"
  W0108 01:44:30.003563      20 warnings.go:70] unknown field "epsilon"
  W0108 01:44:30.003571      20 warnings.go:70] unknown field "gamma"
  E0108 01:44:30.369385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:44:30.587281 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-498" for this suite. @ 01/08/25 01:44:30.592
• [3.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/08/25 01:44:30.606
  I0108 01:44:30.606048 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename gc @ 01/08/25 01:44:30.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:44:30.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:44:30.663
  STEP: create the rc @ 01/08/25 01:44:30.693
  W0108 01:44:30.709839      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0108 01:44:31.369483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:32.370101      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:33.370889      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:34.370985      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/08/25 01:44:35.196
  E0108 01:44:35.371587      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 01/08/25 01:44:36.192
  E0108 01:44:36.372636      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:37.374253      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:38.375345      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:39.376164      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:40.378095      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/08/25 01:44:41.345
  E0108 01:44:41.382525      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:42.383445      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:43.383517      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:44.385415      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:45.433507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:46.433696      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:47.433862      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:48.433956      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:49.434177      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:50.434476      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:51.434599      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:52.435638      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:53.435924      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:54.436056      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:55.436214      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:56.436498      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:57.436873      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:58.437436      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:44:59.437401      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:00.438480      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:01.438805      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:02.439290      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:03.439118      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:04.439259      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:05.439743      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:06.439799      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:07.439972      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:08.441666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:09.441861      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:10.441955      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/08/25 01:45:11.357
  E0108 01:45:11.442033      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:11.473684 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0108 01:45:11.475455 20 delete.go:95] Deleting pod "simpletest.rc-26fjk" in namespace "gc-1029"
  I0108 01:45:11.537627 20 delete.go:95] Deleting pod "simpletest.rc-2nsz5" in namespace "gc-1029"
  I0108 01:45:11.592215 20 delete.go:95] Deleting pod "simpletest.rc-2v9qx" in namespace "gc-1029"
  I0108 01:45:11.635860 20 delete.go:95] Deleting pod "simpletest.rc-2z8x5" in namespace "gc-1029"
  I0108 01:45:11.689469 20 delete.go:95] Deleting pod "simpletest.rc-45mzb" in namespace "gc-1029"
  I0108 01:45:11.766798 20 delete.go:95] Deleting pod "simpletest.rc-4lhrw" in namespace "gc-1029"
  I0108 01:45:11.824796 20 delete.go:95] Deleting pod "simpletest.rc-4wqtj" in namespace "gc-1029"
  I0108 01:45:11.861590 20 delete.go:95] Deleting pod "simpletest.rc-4xpr9" in namespace "gc-1029"
  I0108 01:45:11.929637 20 delete.go:95] Deleting pod "simpletest.rc-5bctg" in namespace "gc-1029"
  I0108 01:45:11.972254 20 delete.go:95] Deleting pod "simpletest.rc-5fgcj" in namespace "gc-1029"
  I0108 01:45:12.033432 20 delete.go:95] Deleting pod "simpletest.rc-5jjpw" in namespace "gc-1029"
  I0108 01:45:12.115911 20 delete.go:95] Deleting pod "simpletest.rc-5lqfq" in namespace "gc-1029"
  I0108 01:45:12.164334 20 delete.go:95] Deleting pod "simpletest.rc-5nq4z" in namespace "gc-1029"
  I0108 01:45:12.225295 20 delete.go:95] Deleting pod "simpletest.rc-5xq6t" in namespace "gc-1029"
  I0108 01:45:12.285588 20 delete.go:95] Deleting pod "simpletest.rc-6ccr7" in namespace "gc-1029"
  I0108 01:45:12.327273 20 delete.go:95] Deleting pod "simpletest.rc-6ggp5" in namespace "gc-1029"
  I0108 01:45:12.401572 20 delete.go:95] Deleting pod "simpletest.rc-6hbh2" in namespace "gc-1029"
  E0108 01:45:12.443940      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:12.449246 20 delete.go:95] Deleting pod "simpletest.rc-799dj" in namespace "gc-1029"
  I0108 01:45:12.541456 20 delete.go:95] Deleting pod "simpletest.rc-7crr5" in namespace "gc-1029"
  I0108 01:45:12.585431 20 delete.go:95] Deleting pod "simpletest.rc-7dqvn" in namespace "gc-1029"
  I0108 01:45:12.637931 20 delete.go:95] Deleting pod "simpletest.rc-7dxs8" in namespace "gc-1029"
  I0108 01:45:12.709625 20 delete.go:95] Deleting pod "simpletest.rc-7hppp" in namespace "gc-1029"
  I0108 01:45:12.758835 20 delete.go:95] Deleting pod "simpletest.rc-7xnvt" in namespace "gc-1029"
  I0108 01:45:12.813481 20 delete.go:95] Deleting pod "simpletest.rc-86hth" in namespace "gc-1029"
  I0108 01:45:12.856068 20 delete.go:95] Deleting pod "simpletest.rc-8j9pq" in namespace "gc-1029"
  I0108 01:45:12.901031 20 delete.go:95] Deleting pod "simpletest.rc-98xcb" in namespace "gc-1029"
  I0108 01:45:12.954474 20 delete.go:95] Deleting pod "simpletest.rc-9f4rw" in namespace "gc-1029"
  I0108 01:45:13.019678 20 delete.go:95] Deleting pod "simpletest.rc-9vzfg" in namespace "gc-1029"
  I0108 01:45:13.066396 20 delete.go:95] Deleting pod "simpletest.rc-9w2hz" in namespace "gc-1029"
  I0108 01:45:13.140880 20 delete.go:95] Deleting pod "simpletest.rc-b8cqn" in namespace "gc-1029"
  I0108 01:45:13.195733 20 delete.go:95] Deleting pod "simpletest.rc-bbxmv" in namespace "gc-1029"
  I0108 01:45:13.245270 20 delete.go:95] Deleting pod "simpletest.rc-bnz5w" in namespace "gc-1029"
  I0108 01:45:13.289287 20 delete.go:95] Deleting pod "simpletest.rc-c5nfr" in namespace "gc-1029"
  I0108 01:45:13.323708 20 delete.go:95] Deleting pod "simpletest.rc-cbkhr" in namespace "gc-1029"
  I0108 01:45:13.410115 20 delete.go:95] Deleting pod "simpletest.rc-cgzwj" in namespace "gc-1029"
  E0108 01:45:13.444776      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:13.461838 20 delete.go:95] Deleting pod "simpletest.rc-crt8t" in namespace "gc-1029"
  I0108 01:45:13.508024 20 delete.go:95] Deleting pod "simpletest.rc-czfkr" in namespace "gc-1029"
  I0108 01:45:13.579045 20 delete.go:95] Deleting pod "simpletest.rc-d5tf7" in namespace "gc-1029"
  I0108 01:45:13.659607 20 delete.go:95] Deleting pod "simpletest.rc-dggkq" in namespace "gc-1029"
  I0108 01:45:13.731323 20 delete.go:95] Deleting pod "simpletest.rc-dx5mg" in namespace "gc-1029"
  I0108 01:45:13.811078 20 delete.go:95] Deleting pod "simpletest.rc-dxdww" in namespace "gc-1029"
  I0108 01:45:13.873787 20 delete.go:95] Deleting pod "simpletest.rc-f2bn5" in namespace "gc-1029"
  I0108 01:45:13.941468 20 delete.go:95] Deleting pod "simpletest.rc-fp4sg" in namespace "gc-1029"
  I0108 01:45:13.989412 20 delete.go:95] Deleting pod "simpletest.rc-g2pvj" in namespace "gc-1029"
  I0108 01:45:14.045321 20 delete.go:95] Deleting pod "simpletest.rc-g2rtp" in namespace "gc-1029"
  I0108 01:45:14.149397 20 delete.go:95] Deleting pod "simpletest.rc-g8xls" in namespace "gc-1029"
  I0108 01:45:14.181479 20 delete.go:95] Deleting pod "simpletest.rc-ghnhs" in namespace "gc-1029"
  I0108 01:45:14.233522 20 delete.go:95] Deleting pod "simpletest.rc-gm5ng" in namespace "gc-1029"
  I0108 01:45:14.301631 20 delete.go:95] Deleting pod "simpletest.rc-gr6rb" in namespace "gc-1029"
  I0108 01:45:14.363934 20 delete.go:95] Deleting pod "simpletest.rc-hthp2" in namespace "gc-1029"
  I0108 01:45:14.425729 20 delete.go:95] Deleting pod "simpletest.rc-hwlt6" in namespace "gc-1029"
  E0108 01:45:14.445635      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:14.483565 20 delete.go:95] Deleting pod "simpletest.rc-hx5bg" in namespace "gc-1029"
  I0108 01:45:14.540722 20 delete.go:95] Deleting pod "simpletest.rc-j8wr9" in namespace "gc-1029"
  I0108 01:45:14.594686 20 delete.go:95] Deleting pod "simpletest.rc-jhx29" in namespace "gc-1029"
  I0108 01:45:14.675504 20 delete.go:95] Deleting pod "simpletest.rc-jxvx5" in namespace "gc-1029"
  I0108 01:45:14.763030 20 delete.go:95] Deleting pod "simpletest.rc-kljwd" in namespace "gc-1029"
  I0108 01:45:14.831924 20 delete.go:95] Deleting pod "simpletest.rc-kmwxs" in namespace "gc-1029"
  I0108 01:45:14.881314 20 delete.go:95] Deleting pod "simpletest.rc-kz29l" in namespace "gc-1029"
  I0108 01:45:14.958605 20 delete.go:95] Deleting pod "simpletest.rc-l2f8b" in namespace "gc-1029"
  I0108 01:45:15.008010 20 delete.go:95] Deleting pod "simpletest.rc-l4phh" in namespace "gc-1029"
  I0108 01:45:15.075561 20 delete.go:95] Deleting pod "simpletest.rc-llkbx" in namespace "gc-1029"
  I0108 01:45:15.118598 20 delete.go:95] Deleting pod "simpletest.rc-m528d" in namespace "gc-1029"
  I0108 01:45:15.201340 20 delete.go:95] Deleting pod "simpletest.rc-m7s6l" in namespace "gc-1029"
  I0108 01:45:15.257593 20 delete.go:95] Deleting pod "simpletest.rc-mp59n" in namespace "gc-1029"
  I0108 01:45:15.297749 20 delete.go:95] Deleting pod "simpletest.rc-mspxw" in namespace "gc-1029"
  I0108 01:45:15.353477 20 delete.go:95] Deleting pod "simpletest.rc-mwblg" in namespace "gc-1029"
  I0108 01:45:15.389042 20 delete.go:95] Deleting pod "simpletest.rc-n458s" in namespace "gc-1029"
  I0108 01:45:15.455871 20 delete.go:95] Deleting pod "simpletest.rc-n4vs2" in namespace "gc-1029"
  E0108 01:45:15.460127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:15.489518 20 delete.go:95] Deleting pod "simpletest.rc-ntp7n" in namespace "gc-1029"
  I0108 01:45:15.529469 20 delete.go:95] Deleting pod "simpletest.rc-nvtxq" in namespace "gc-1029"
  I0108 01:45:15.596457 20 delete.go:95] Deleting pod "simpletest.rc-p5hw4" in namespace "gc-1029"
  I0108 01:45:15.641498 20 delete.go:95] Deleting pod "simpletest.rc-pckz2" in namespace "gc-1029"
  I0108 01:45:15.673526 20 delete.go:95] Deleting pod "simpletest.rc-q862x" in namespace "gc-1029"
  I0108 01:45:15.733543 20 delete.go:95] Deleting pod "simpletest.rc-q9hgx" in namespace "gc-1029"
  I0108 01:45:15.761452 20 delete.go:95] Deleting pod "simpletest.rc-qchrq" in namespace "gc-1029"
  I0108 01:45:15.803053 20 delete.go:95] Deleting pod "simpletest.rc-qd8n6" in namespace "gc-1029"
  I0108 01:45:15.852703 20 delete.go:95] Deleting pod "simpletest.rc-qfhjn" in namespace "gc-1029"
  I0108 01:45:15.894700 20 delete.go:95] Deleting pod "simpletest.rc-rckvn" in namespace "gc-1029"
  I0108 01:45:15.939925 20 delete.go:95] Deleting pod "simpletest.rc-rgbr4" in namespace "gc-1029"
  I0108 01:45:15.990482 20 delete.go:95] Deleting pod "simpletest.rc-s4js5" in namespace "gc-1029"
  I0108 01:45:16.055061 20 delete.go:95] Deleting pod "simpletest.rc-slv6n" in namespace "gc-1029"
  I0108 01:45:16.087846 20 delete.go:95] Deleting pod "simpletest.rc-ssjjr" in namespace "gc-1029"
  I0108 01:45:16.129383 20 delete.go:95] Deleting pod "simpletest.rc-sxt2d" in namespace "gc-1029"
  I0108 01:45:16.156395 20 delete.go:95] Deleting pod "simpletest.rc-t4kgg" in namespace "gc-1029"
  I0108 01:45:16.189479 20 delete.go:95] Deleting pod "simpletest.rc-tvvt8" in namespace "gc-1029"
  I0108 01:45:16.270447 20 delete.go:95] Deleting pod "simpletest.rc-tzg6s" in namespace "gc-1029"
  I0108 01:45:16.351598 20 delete.go:95] Deleting pod "simpletest.rc-v7txj" in namespace "gc-1029"
  I0108 01:45:16.403344 20 delete.go:95] Deleting pod "simpletest.rc-vxn6p" in namespace "gc-1029"
  I0108 01:45:16.452531 20 delete.go:95] Deleting pod "simpletest.rc-vzfjz" in namespace "gc-1029"
  E0108 01:45:16.461332      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:16.516616 20 delete.go:95] Deleting pod "simpletest.rc-w8q97" in namespace "gc-1029"
  I0108 01:45:16.588268 20 delete.go:95] Deleting pod "simpletest.rc-wn2dg" in namespace "gc-1029"
  I0108 01:45:16.633454 20 delete.go:95] Deleting pod "simpletest.rc-wnfj6" in namespace "gc-1029"
  I0108 01:45:16.697479 20 delete.go:95] Deleting pod "simpletest.rc-ww7kn" in namespace "gc-1029"
  I0108 01:45:16.771357 20 delete.go:95] Deleting pod "simpletest.rc-wwq4z" in namespace "gc-1029"
  I0108 01:45:16.814823 20 delete.go:95] Deleting pod "simpletest.rc-x749s" in namespace "gc-1029"
  I0108 01:45:16.853558 20 delete.go:95] Deleting pod "simpletest.rc-xhjnn" in namespace "gc-1029"
  I0108 01:45:16.957471 20 delete.go:95] Deleting pod "simpletest.rc-z4lsn" in namespace "gc-1029"
  I0108 01:45:17.011792 20 delete.go:95] Deleting pod "simpletest.rc-z6ls7" in namespace "gc-1029"
  I0108 01:45:17.061399 20 delete.go:95] Deleting pod "simpletest.rc-zkshn" in namespace "gc-1029"
  I0108 01:45:17.097406 20 delete.go:95] Deleting pod "simpletest.rc-zmpmx" in namespace "gc-1029"
  I0108 01:45:17.198443 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1029" for this suite. @ 01/08/25 01:45:17.212
• [46.629 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 01/08/25 01:45:17.235
  I0108 01:45:17.235662 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename job @ 01/08/25 01:45:17.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:17.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:17.316
  STEP: Creating a job @ 01/08/25 01:45:17.325
  STEP: Ensuring active pods == parallelism @ 01/08/25 01:45:17.348
  E0108 01:45:17.462557      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:18.463981      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:19.464059      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:20.464573      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:21.466486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:22.469372      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:23.469763      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:24.553088      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:25.553583      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:26.554309      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/08/25 01:45:27.534
  STEP: deleting Job.batch foo in namespace job-5936, will wait for the garbage collector to delete the pods @ 01/08/25 01:45:27.535
  E0108 01:45:27.554542      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:27.620529 20 resources.go:139] Deleting Job.batch foo took: 26.867841ms
  I0108 01:45:27.821328 20 resources.go:163] Terminating Job.batch foo pods took: 200.79805ms
  E0108 01:45:28.555876      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:29.556619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/08/25 01:45:29.622
  I0108 01:45:29.636237 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5936" for this suite. @ 01/08/25 01:45:29.65
• [12.435 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/08/25 01:45:29.671
  I0108 01:45:29.671429 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename controllerrevisions @ 01/08/25 01:45:29.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:29.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:29.721
  STEP: Creating DaemonSet "e2e-49dwk-daemon-set" @ 01/08/25 01:45:29.803
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 01:45:29.822
  I0108 01:45:29.893013 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 0
  I0108 01:45:29.893082 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:45:30.557077      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:30.846833 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 0
  I0108 01:45:30.846883 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:45:31.557227      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:31.835229 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 2
  I0108 01:45:31.835287 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:45:32.557370      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:32.846604 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 3
  I0108 01:45:32.846660 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:45:33.558449      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:33.834019 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 4
  I0108 01:45:33.834077 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-49dwk-daemon-set
  STEP: Confirm DaemonSet "e2e-49dwk-daemon-set" successfully created with "daemonset-name=e2e-49dwk-daemon-set" label @ 01/08/25 01:45:33.838
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-49dwk-daemon-set" @ 01/08/25 01:45:33.846
  I0108 01:45:33.852091 20 controller_revision.go:162] Located ControllerRevision: "e2e-49dwk-daemon-set-8478968b9c"
  STEP: Patching ControllerRevision "e2e-49dwk-daemon-set-8478968b9c" @ 01/08/25 01:45:33.855
  I0108 01:45:33.872286 20 controller_revision.go:173] e2e-49dwk-daemon-set-8478968b9c has been patched
  STEP: Create a new ControllerRevision @ 01/08/25 01:45:33.872
  I0108 01:45:33.883514 20 controller_revision.go:191] Created ControllerRevision: e2e-49dwk-daemon-set-67b8dcdbd5
  STEP: Confirm that there are two ControllerRevisions @ 01/08/25 01:45:33.883
  I0108 01:45:33.883711 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0108 01:45:33.897894 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-49dwk-daemon-set-8478968b9c" @ 01/08/25 01:45:33.897
  STEP: Confirm that there is only one ControllerRevision @ 01/08/25 01:45:33.914
  I0108 01:45:33.914881 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0108 01:45:33.918926 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-49dwk-daemon-set-67b8dcdbd5" @ 01/08/25 01:45:33.922
  I0108 01:45:33.940949 20 controller_revision.go:220] e2e-49dwk-daemon-set-67b8dcdbd5 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/08/25 01:45:33.941
  W0108 01:45:33.954347      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/08/25 01:45:33.954
  I0108 01:45:33.954759 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0108 01:45:34.561367      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:34.954947 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0108 01:45:34.972908 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-49dwk-daemon-set-67b8dcdbd5=updated" @ 01/08/25 01:45:34.972
  STEP: Confirm that there is only one ControllerRevision @ 01/08/25 01:45:35.095
  I0108 01:45:35.095306 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0108 01:45:35.170845 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0108 01:45:35.175556 20 controller_revision.go:246] ControllerRevision "e2e-49dwk-daemon-set-6cc579fb4" has revision 3
  STEP: Deleting DaemonSet "e2e-49dwk-daemon-set" @ 01/08/25 01:45:35.181
  STEP: deleting DaemonSet.extensions e2e-49dwk-daemon-set in namespace controllerrevisions-252, will wait for the garbage collector to delete the pods @ 01/08/25 01:45:35.181
  I0108 01:45:35.256053 20 resources.go:139] Deleting DaemonSet.extensions e2e-49dwk-daemon-set took: 18.150824ms
  I0108 01:45:35.358899 20 resources.go:163] Terminating DaemonSet.extensions e2e-49dwk-daemon-set pods took: 102.842519ms
  E0108 01:45:35.562332      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:36.562835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:37.563387      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:45:37.563392 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-49dwk-daemon-set: 0
  I0108 01:45:37.563583 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-49dwk-daemon-set
  I0108 01:45:37.567398 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"68835"},"items":null}

  I0108 01:45:37.571811 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"68835"},"items":null}

  I0108 01:45:37.593840 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-252" for this suite. @ 01/08/25 01:45:37.598
• [7.946 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/08/25 01:45:37.618
  I0108 01:45:37.618778 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:45:37.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:37.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:37.668
  STEP: Creating a pod to test downward api env vars @ 01/08/25 01:45:37.673
  E0108 01:45:38.563580      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:39.563844      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:40.564780      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:41.564944      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:45:41.713
  I0108 01:45:41.718428 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downward-api-247abd65-1edc-408d-abcb-44deda1c8836 container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 01:45:41.741
  I0108 01:45:41.788233 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8956" for this suite. @ 01/08/25 01:45:41.795
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/08/25 01:45:41.821
  I0108 01:45:41.823053 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename watch @ 01/08/25 01:45:41.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:41.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:41.863
  STEP: creating a new configmap @ 01/08/25 01:45:41.867
  STEP: modifying the configmap once @ 01/08/25 01:45:41.878
  STEP: modifying the configmap a second time @ 01/08/25 01:45:41.899
  STEP: deleting the configmap @ 01/08/25 01:45:41.933
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/08/25 01:45:41.946
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/08/25 01:45:41.948
  I0108 01:45:41.948342 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-844  5e7f6ed5-5fb7-45ad-9820-55ae51959fed 68873 0 2025-01-08 01:45:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-08 01:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 01:45:41.948527 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-844  5e7f6ed5-5fb7-45ad-9820-55ae51959fed 68874 0 2025-01-08 01:45:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-08 01:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0108 01:45:41.948669 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-844" for this suite. @ 01/08/25 01:45:41.958
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/08/25 01:45:41.98
  I0108 01:45:41.980285 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename namespaces @ 01/08/25 01:45:41.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:42.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:42.049
  STEP: Read namespace status @ 01/08/25 01:45:42.052
  I0108 01:45:42.056785 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/08/25 01:45:42.056
  I0108 01:45:42.070992 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/08/25 01:45:42.071
  I0108 01:45:42.088101 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0108 01:45:42.089089 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6902" for this suite. @ 01/08/25 01:45:42.095
• [0.133 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/08/25 01:45:42.114
  I0108 01:45:42.114838 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename pod-network-test @ 01/08/25 01:45:42.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:45:42.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:45:42.157
  STEP: Performing setup for networking test in namespace pod-network-test-1299 @ 01/08/25 01:45:42.161
  STEP: creating a selector @ 01/08/25 01:45:42.161
  STEP: Creating the service pods in kubernetes @ 01/08/25 01:45:42.161
  I0108 01:45:42.161568 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0108 01:45:42.565761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:43.566028      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:44.567016      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:45.567203      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:46.568082      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:47.568496      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:48.569670      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:49.569623      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:50.570242      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:51.570858      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:52.571610      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:53.572058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:54.572460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:55.572556      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/08/25 01:45:56.393
  E0108 01:45:56.573000      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:57.573564      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:58.574043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:45:59.574405      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:00.436573 20 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0108 01:46:00.436783 20 networking.go:42] Breadth first check of 10.42.4.174 on host 172.31.16.191...
  I0108 01:46:00.441660 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.175:9080/dial?request=hostname&protocol=http&host=10.42.4.174&port=8083&tries=1'] Namespace:pod-network-test-1299 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:46:00.441832 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:46:00.442044 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1299/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.175%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.4.174%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0108 01:46:00.578488      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:00.591596 20 utils.go:356] Waiting for responses: map[]
  I0108 01:46:00.591682 20 utils.go:360] reached 10.42.4.174 after 0/1 tries
  I0108 01:46:00.591703 20 networking.go:42] Breadth first check of 10.42.0.100 on host 172.31.20.100...
  I0108 01:46:00.600176 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.175:9080/dial?request=hostname&protocol=http&host=10.42.0.100&port=8083&tries=1'] Namespace:pod-network-test-1299 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:46:00.600406 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:46:00.600611 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1299/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.175%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.100%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:46:00.719797 20 utils.go:356] Waiting for responses: map[]
  I0108 01:46:00.720132 20 utils.go:360] reached 10.42.0.100 after 0/1 tries
  I0108 01:46:00.720310 20 networking.go:42] Breadth first check of 10.42.2.144 on host 172.31.20.249...
  I0108 01:46:00.725004 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.175:9080/dial?request=hostname&protocol=http&host=10.42.2.144&port=8083&tries=1'] Namespace:pod-network-test-1299 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:46:00.725039 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:46:00.725106 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1299/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.175%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.144%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:46:00.874343 20 utils.go:356] Waiting for responses: map[]
  I0108 01:46:00.874725 20 utils.go:360] reached 10.42.2.144 after 0/1 tries
  I0108 01:46:00.874862 20 networking.go:42] Breadth first check of 10.42.1.115 on host 172.31.25.234...
  I0108 01:46:00.885638 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.175:9080/dial?request=hostname&protocol=http&host=10.42.1.115&port=8083&tries=1'] Namespace:pod-network-test-1299 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0108 01:46:00.885680 20 exec_util.go:64] ExecWithOptions: Clientset creation
  I0108 01:46:00.885753 20 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1299/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.175%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.115%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0108 01:46:01.036582 20 utils.go:356] Waiting for responses: map[]
  I0108 01:46:01.037014 20 utils.go:360] reached 10.42.1.115 after 0/1 tries
  I0108 01:46:01.037213 20 networking.go:53] Going to retry 0 out of 4 pods....
  I0108 01:46:01.037521 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1299" for this suite. @ 01/08/25 01:46:01.051
• [18.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/08/25 01:46:01.081
  I0108 01:46:01.081493 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/08/25 01:46:01.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:01.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:01.14
  STEP: create the container to handle the HTTPGet hook request. @ 01/08/25 01:46:01.147
  E0108 01:46:01.578797      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:02.580672      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:03.581020      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:04.581117      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/08/25 01:46:05.197
  E0108 01:46:05.582304      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:06.584329      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:07.585287      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:08.585411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 01/08/25 01:46:09.247
  E0108 01:46:09.586406      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:10.586686      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 01/08/25 01:46:11.275
  I0108 01:46:11.294773 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9506" for this suite. @ 01/08/25 01:46:11.303
• [10.236 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/08/25 01:46:11.317
  I0108 01:46:11.317829 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename var-expansion @ 01/08/25 01:46:11.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:11.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:11.359
  STEP: Creating a pod to test substitution in container's command @ 01/08/25 01:46:11.363
  E0108 01:46:11.587519      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:12.587619      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:13.588423      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:14.589343      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:46:15.416
  I0108 01:46:15.419767 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod var-expansion-2f6440ab-061d-4e17-879d-eeabb7e0c54c container dapi-container: <nil>
  STEP: delete the pod @ 01/08/25 01:46:15.43
  E0108 01:46:15.589968      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:15.614139 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-380" for this suite. @ 01/08/25 01:46:15.619
• [4.315 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/08/25 01:46:15.633
  I0108 01:46:15.634039 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename daemonsets @ 01/08/25 01:46:15.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:15.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:15.68
  STEP: Creating simple DaemonSet "daemon-set" @ 01/08/25 01:46:15.746
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/08/25 01:46:15.767
  I0108 01:46:15.885633 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:46:15.885682 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:16.590819      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:16.790116 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:46:16.790182 20 fixtures.go:131] Node ip-172-31-16-191.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:17.591019      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:17.778655 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0108 01:46:17.778722 20 fixtures.go:131] Node ip-172-31-20-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:18.591411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:18.787278 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 01:46:18.787329 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/08/25 01:46:18.79
  I0108 01:46:18.880809 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:46:18.880896 20 fixtures.go:131] Node ip-172-31-25-234.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:19.591835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:19.828714 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:46:19.828847 20 fixtures.go:131] Node ip-172-31-25-234.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:20.591894      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:20.842869 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:46:20.843703 20 fixtures.go:131] Node ip-172-31-25-234.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:21.592917      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:21.827702 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0108 01:46:21.827758 20 fixtures.go:131] Node ip-172-31-25-234.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0108 01:46:22.593102      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:22.852104 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0108 01:46:22.852160 20 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/08/25 01:46:22.855
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-76, will wait for the garbage collector to delete the pods @ 01/08/25 01:46:22.855
  I0108 01:46:22.921766 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.534791ms
  I0108 01:46:23.022433 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.664823ms
  E0108 01:46:23.593467      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:24.594005      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:25.594460      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:25.927835 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0108 01:46:25.927887 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0108 01:46:25.933578 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"69377"},"items":null}

  I0108 01:46:25.938011 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"69377"},"items":null}

  I0108 01:46:25.972868 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-76" for this suite. @ 01/08/25 01:46:25.977
• [10.357 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/08/25 01:46:25.991
  I0108 01:46:25.991511 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-runtime @ 01/08/25 01:46:25.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:26.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:26.039
  STEP: create the container @ 01/08/25 01:46:26.044
  W0108 01:46:26.059734      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/08/25 01:46:26.06
  E0108 01:46:26.595639      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:27.595825      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:28.596532      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:29.597269      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/08/25 01:46:30.117
  STEP: the container should be terminated @ 01/08/25 01:46:30.121
  STEP: the termination message should be set @ 01/08/25 01:46:30.121
  I0108 01:46:30.121617 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/08/25 01:46:30.121
  I0108 01:46:30.161852 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2815" for this suite. @ 01/08/25 01:46:30.174
• [4.216 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/08/25 01:46:30.207
  I0108 01:46:30.208006 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename emptydir @ 01/08/25 01:46:30.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:30.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:30.263
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/08/25 01:46:30.267
  E0108 01:46:30.598344      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:31.599090      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:32.599894      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:33.600230      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:46:34.319
  I0108 01:46:34.327069 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod pod-0e55af37-51e9-4a04-b109-aac5cfc8ac35 container test-container: <nil>
  STEP: delete the pod @ 01/08/25 01:46:34.337
  I0108 01:46:34.386804 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7220" for this suite. @ 01/08/25 01:46:34.392
• [4.199 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/08/25 01:46:34.408
  I0108 01:46:34.408736 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/08/25 01:46:34.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:34.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:34.47
  STEP: fetching the /apis discovery document @ 01/08/25 01:46:34.475
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/08/25 01:46:34.476
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/08/25 01:46:34.476
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/08/25 01:46:34.476
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/08/25 01:46:34.477
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/08/25 01:46:34.477
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/08/25 01:46:34.478
  I0108 01:46:34.479054 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4932" for this suite. @ 01/08/25 01:46:34.493
• [0.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/08/25 01:46:34.514
  I0108 01:46:34.515026 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename projected @ 01/08/25 01:46:34.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:34.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:34.57
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:46:34.573
  E0108 01:46:34.600462      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:35.600595      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:36.600868      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:37.601682      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:38.602465      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:46:38.613
  I0108 01:46:38.617769 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-8c8a85e6-800d-4cf6-9546-1a5364e114d8 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:46:38.626
  I0108 01:46:38.667777 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4091" for this suite. @ 01/08/25 01:46:38.674
• [4.178 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/08/25 01:46:38.692
  I0108 01:46:38.693037 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename container-probe @ 01/08/25 01:46:38.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:46:38.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:46:38.762
  STEP: Creating pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622 @ 01/08/25 01:46:38.765
  E0108 01:46:39.602618      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:40.602919      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:41.603262      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:42.603442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/08/25 01:46:42.806
  I0108 01:46:42.811451 20 container_probe.go:1749] Initial restart count of pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 is 0
  I0108 01:46:42.816122 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:43.603891      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:44.609334      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:44.821168 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:45.605632      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:46.606365      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:46.826394 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:47.606518      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:48.606772      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:48.831929 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:49.607868      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:50.608022      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:50.836196 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:51.609063      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:52.609624      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:52.841051 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:53.609666      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:54.610509      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:54.845966 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:55.610736      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:56.610825      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:56.851257 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:57.614507      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:46:58.615304      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:46:58.857532 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:46:59.615368      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:00.618313      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:00.862645 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:01.616025      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:02.616201      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:02.867948 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:03.616798      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:04.617352      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:04.872796 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:05.617473      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:06.617660      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:06.878880 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:07.618558      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:08.618719      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:08.884109 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:09.619104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:10.619188      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:10.889050 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:11.619833      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:12.620785      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:12.894461 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:13.621129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:14.629442      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:14.900018 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:15.623874      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:16.623979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:16.906954 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:17.624222      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:18.625292      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:18.911513 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:19.625463      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:20.625512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:20.918296 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:21.626199      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:22.626703      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:22.923496 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:23.626878      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:24.627094      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:24.928405 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:25.628585      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:26.629158      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:26.934266 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:27.630090      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:28.630273      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:28.938897 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:29.630466      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:30.631025      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:30.946521 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:31.631337      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:32.631511      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:32.951131 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:33.632555      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:34.633421      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:34.956792 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:35.633521      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:36.633917      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:36.961912 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:37.641697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:38.641813      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:38.972172 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:39.644071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:40.643526      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:40.978051 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:41.644071      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:42.644191      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:42.984646 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:43.644272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:44.648142      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:44.989933 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:45.648870      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:46.648962      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:46.995692 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:47.649385      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:48.649719      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:49.003886 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:49.650537      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:50.650818      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:51.009430 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:51.651433      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:52.651733      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:53.015342 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:53.651905      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:54.653388      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:55.021327 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:55.653601      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:56.654484      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:57.026987 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:57.655486      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:47:58.655859      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:47:59.033101 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:47:59.656941      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:00.657116      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:01.039029 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:01.658127      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:02.659254      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:03.044888 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:03.659737      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:04.683272      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:05.049591 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:05.661510      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:06.661997      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:07.060523 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:07.662554      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:08.662977      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:09.067855 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:09.663452      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:10.663665      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:11.071851 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:11.663914      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:12.664089      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:13.078318 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:13.665697      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:14.666103      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:15.083616 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:15.666260      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:16.667315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:17.090756 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:17.667139      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:18.667411      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:19.097285 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:19.667607      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:20.667779      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:21.110065 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:21.668542      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:22.668880      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:23.115779 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:23.668975      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:24.669169      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:25.122452 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:25.670129      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:26.670747      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:27.128276 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:27.671304      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:28.670885      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:29.133522 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:29.671121      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:30.671296      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:31.138822 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:31.671794      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:32.672243      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:33.149880 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:33.672350      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:34.672631      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:35.155698 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:35.673262      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:36.673592      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:37.163366 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:37.673985      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:38.674150      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:39.167724 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:39.675279      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:40.675405      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:41.172649 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:41.676060      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:42.676458      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:43.177994 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:43.676541      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:44.676761      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:45.183867 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:45.677474      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:46.677678      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:47.188948 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:47.677782      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:48.678444      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:49.195176 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:49.678683      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:50.679514      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:51.201475 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:51.680158      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:52.680311      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:53.210466 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:53.681049      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:54.683342      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:55.216897 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:55.683471      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:56.683979      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:57.223397 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:57.686528      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:48:58.686663      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:48:59.229286 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:48:59.687766      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:00.687895      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:01.235506 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:01.688315      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:02.688497      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:03.239646 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:03.689386      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:04.693649      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:05.246954 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:05.694535      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:06.694783      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:07.253408 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:07.695526      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:08.695671      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:09.258415 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:09.695854      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:10.696208      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:11.262585 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:11.697267      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:12.697410      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:13.266819 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:13.698668      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:14.698739      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:15.272520 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:15.698941      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:16.699070      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:17.278077 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:17.699278      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:18.699659      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:19.283931 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:19.700566      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:20.700953      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:21.294771 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:21.701812      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:22.702018      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:23.300075 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:23.702538      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:24.702669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:25.306299 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:25.702734      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:26.702922      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:27.312801 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:27.703372      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:28.703527      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:29.318164 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:29.705927      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:30.705513      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:31.323391 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:31.705341      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:32.705456      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:33.328641 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:33.706104      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:34.706219      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:35.333776 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:35.707324      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:36.708178      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:37.339834 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:37.708250      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:38.708491      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:39.353275 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:39.709365      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:40.708919      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:41.359014 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:41.709023      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:42.709222      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:43.363682 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:43.710263      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:44.710904      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:45.369562 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:45.711015      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:46.712261      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:47.375341 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:47.712791      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:48.713078      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:49.382846 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:49.713283      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:50.713431      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:51.386824 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:51.713669      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:52.713802      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:53.391401 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:53.713947      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:54.714149      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:55.401294 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:55.714530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:56.715043      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:57.406832 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:57.716087      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:49:58.716305      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:49:59.417405 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:49:59.716796      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:00.716934      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:01.426618 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:01.717574      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:02.717859      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:03.431890 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:03.718530      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:04.725702      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:05.438536 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:05.725654      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:06.726001      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:07.443899 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:07.726245      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:08.726445      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:09.448975 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:09.726577      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:10.726987      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:11.454373 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:11.728146      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:12.728325      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:13.460026 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:13.728483      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:14.728596      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:15.464570 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:15.729058      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:16.730425      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:17.478463 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:17.730871      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:18.731038      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:19.483735 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:19.732356      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:20.732316      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:21.488237 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:21.733030      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:22.733319      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:23.492953 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:23.734376      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:24.734481      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:25.497965 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:25.735359      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:26.736204      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:27.508182 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:27.736341      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:28.736515      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:29.522808 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:29.737252      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:30.737413      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:31.529318 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:31.738512      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:32.738640      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:33.543289 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:33.739630      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:34.739835      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:35.548431 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:35.740760      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:36.741371      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:37.557554 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:37.741913      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:38.742052      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:39.571578 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:39.742977      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:40.743303      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0108 01:50:41.576640 20 container_probe.go:1759] Get pod liveness-8090e391-8692-4d53-983b-fd9dc2367129 in namespace container-probe-4622
  E0108 01:50:41.743933      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:42.744093      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/08/25 01:50:43.577
  I0108 01:50:43.632939 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4622" for this suite. @ 01/08/25 01:50:43.659
• [244.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/08/25 01:50:43.674
  I0108 01:50:43.674325 20 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4137128125
  STEP: Building a namespace api object, basename downward-api @ 01/08/25 01:50:43.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/08/25 01:50:43.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/08/25 01:50:43.725
  STEP: Creating a pod to test downward API volume plugin @ 01/08/25 01:50:43.729
  E0108 01:50:43.745099      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:44.745218      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:45.745380      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:46.745954      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0108 01:50:47.746091      20 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/08/25 01:50:47.776
  I0108 01:50:47.780554 20 output.go:207] Trying to get logs from node ip-172-31-16-191.us-east-2.compute.internal pod downwardapi-volume-58373d6a-5ef8-443d-9789-432b9a56e095 container client-container: <nil>
  STEP: delete the pod @ 01/08/25 01:50:47.806
  I0108 01:50:47.851635 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4648" for this suite. @ 01/08/25 01:50:47.857
• [4.200 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0108 01:50:47.875795 20 suites.go:34] Running AfterSuite actions on node 1
  I0108 01:50:47.875867 20 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.074 seconds]
------------------------------

Ran 411 of 6622 Specs in 6580.971 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h49m42.933637763s
Test Suite Passed
