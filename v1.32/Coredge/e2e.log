  I0923 07:17:50.952023      22 e2e.go:109] Starting e2e run "f2c6d4cd-284b-44f1-9209-509f3a9069ca" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1758611870 - will randomize all specs

Will run 411 of 6624 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0923 07:17:51.169536 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  I0923 07:17:51.170852 22 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0923 07:17:51.194368 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0923 07:17:51.196729 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0923 07:17:51.196777 22 e2e.go:245] e2e test version: v1.32.9
  I0923 07:17:51.197555 22 e2e.go:254] kube-apiserver version: v1.32.9-ckp
  I0923 07:17:51.197674 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  I0923 07:17:51.200333 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.031 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/23/25 07:17:51.392
  I0923 07:17:51.392805 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/23/25 07:17:51.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:17:51.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:17:51.416
  STEP: creating a target pod @ 09/23/25 07:17:51.423
  STEP: adding an ephemeral container @ 09/23/25 07:17:55.443
  STEP: checking pod container endpoints @ 09/23/25 07:17:59.467
  I0923 07:17:59.467914 22 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7168 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 07:17:59.467939 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 07:17:59.467996 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7168/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0923 07:17:59.518213 22 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/23/25 07:17:59.53
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/23/25 07:17:59.534
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/23/25 07:17:59.544
  I0923 07:17:59.550620 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7168" for this suite. @ 09/23/25 07:17:59.555
â€¢ [8.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/23/25 07:17:59.56
  I0923 07:17:59.561002 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 07:17:59.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:17:59.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:17:59.572
  STEP: Creating pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052 @ 09/23/25 07:17:59.575
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 07:18:05.597
  I0923 07:18:05.600206 22 container_probe.go:1749] Initial restart count of pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 is 0
  I0923 07:18:05.602168 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:07.604952 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:09.608758 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:11.612643 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:13.616210 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:15.619948 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:17.623614 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:19.626381 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:21.629714 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:23.632438 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:26.135131 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:28.139823 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:30.143465 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:32.147267 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:34.150179 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:36.152743 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:38.156362 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:40.159141 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:42.162166 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:44.166086 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:46.169103 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:48.172079 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:50.175241 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:52.178024 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:54.180941 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:56.183904 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:18:58.187024 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:00.190578 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:02.194246 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:04.196978 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:06.200324 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:08.203023 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:10.206018 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:12.209286 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:14.212328 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:16.215470 22 container_probe.go:1759] Get pod test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 in namespace container-probe-2052
  I0923 07:19:16.215507 22 container_probe.go:1763] Restart count of pod container-probe-2052/test-grpc-fe1f78c3-4899-43f9-be83-d503703aab50 is now 1 (1m10.615263657s elapsed)
  STEP: deleting the pod @ 09/23/25 07:19:16.215
  I0923 07:19:16.227510 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2052" for this suite. @ 09/23/25 07:19:16.23
â€¢ [76.674 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/23/25 07:19:16.235
  I0923 07:19:16.235169 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:19:16.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:19:16.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:19:16.247
  STEP: Creating the pod @ 09/23/25 07:19:16.249
  I0923 07:19:18.785635 22 pod_client.go:173] Successfully updated pod "annotationupdateace51fcb-221a-40e9-922d-7661bf2ed907"
  I0923 07:19:22.802499 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7444" for this suite. @ 09/23/25 07:19:22.805
â€¢ [6.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/23/25 07:19:22.811
  I0923 07:19:22.811350 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 07:19:22.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:19:22.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:19:22.828
  STEP: creating secret secrets-4137/secret-test-b197b67e-48bb-46c2-9f7e-11b9cbd07e4d @ 09/23/25 07:19:22.83
  STEP: Creating a pod to test consume secrets @ 09/23/25 07:19:22.835
  STEP: Saw pod success @ 09/23/25 07:19:26.849
  I0923 07:19:26.851458 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-324eabf8-98a6-4897-8d73-e881af088b65 container env-test: <nil>
  STEP: delete the pod @ 09/23/25 07:19:26.855
  I0923 07:19:26.867537 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4137" for this suite. @ 09/23/25 07:19:26.869
â€¢ [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/23/25 07:19:26.875
  I0923 07:19:26.875254 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename taint-single-pod @ 09/23/25 07:19:26.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:19:26.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:19:26.887
  I0923 07:19:26.889904 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0923 07:20:26.890205 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 07:20:26.893282 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/23/25 07:20:26.893
  I0923 07:20:27.102870 22 taints.go:294] Pod is running on ckp-cncf-w1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/23/25 07:20:27.102
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/25 07:20:27.114
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/23/25 07:20:27.116
  I0923 07:20:27.116916 22 taints.go:313] Pod wasn't evicted. Proceeding
  I0923 07:20:27.116940 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/25 07:20:27.127
  STEP: Waiting some time to make sure that toleration time passed. @ 09/23/25 07:20:27.129
  I0923 07:21:42.130333 22 taints.go:329] Pod wasn't evicted. Test successful
  I0923 07:21:42.130519 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2334" for this suite. @ 09/23/25 07:21:42.133
â€¢ [135.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 09/23/25 07:21:42.139
  I0923 07:21:42.139454 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:21:42.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:42.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:42.15
  STEP: create deployment with httpd image @ 09/23/25 07:21:42.152
  I0923 07:21:42.153042 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9880 create -f -'
  I0923 07:21:42.261243 22 builder.go:146] stderr: ""
  I0923 07:21:42.261285 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/23/25 07:21:42.261
  I0923 07:21:42.261380 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9880 diff -f -'
  I0923 07:21:42.388067 22 builder.go:135] rc: 1
  I0923 07:21:42.388236 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9880 delete -f -'
  I0923 07:21:42.452693 22 builder.go:146] stderr: ""
  I0923 07:21:42.452744 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0923 07:21:42.452867 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9880" for this suite. @ 09/23/25 07:21:42.456
â€¢ [0.325 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/23/25 07:21:42.465
  I0923 07:21:42.465135 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 07:21:42.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:42.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:42.478
  STEP: creating a Namespace @ 09/23/25 07:21:42.481
  STEP: patching the Namespace @ 09/23/25 07:21:42.49
  STEP: get the Namespace and ensuring it has the label @ 09/23/25 07:21:42.498
  I0923 07:21:42.499649 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2197" for this suite. @ 09/23/25 07:21:42.556
  STEP: Destroying namespace "nspatchtest-3b6f697a-c713-46e0-86e9-4f14bab68f1c-7263" for this suite. @ 09/23/25 07:21:42.561
â€¢ [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/23/25 07:21:42.566
  I0923 07:21:42.566629 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:21:42.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:42.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:42.581
  STEP: Creating configMap with name projected-configmap-test-volume-map-1e386c81-7fef-4c48-b0da-5188256e9e19 @ 09/23/25 07:21:42.583
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:21:42.586
  STEP: Saw pod success @ 09/23/25 07:21:46.6
  I0923 07:21:46.602736 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-projected-configmaps-96258964-1dea-402b-a5b9-b57f1613f5c1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:21:46.615
  I0923 07:21:46.633369 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1471" for this suite. @ 09/23/25 07:21:46.636
â€¢ [4.076 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/23/25 07:21:46.642
  I0923 07:21:46.642285 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename init-container @ 09/23/25 07:21:46.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:46.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:46.657
  STEP: creating the pod @ 09/23/25 07:21:46.659
  I0923 07:21:46.659522 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0923 07:21:52.793217 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9204" for this suite. @ 09/23/25 07:21:52.797
â€¢ [6.163 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/23/25 07:21:52.809
  I0923 07:21:52.809532 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:21:52.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:52.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:52.823
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:21:52.825
  STEP: Saw pod success @ 09/23/25 07:21:56.841
  I0923 07:21:56.843726 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-27ec101c-1edf-4cb4-904b-625862133a2c container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:21:56.854
  I0923 07:21:56.868531 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6289" for this suite. @ 09/23/25 07:21:56.87
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/23/25 07:21:56.879
  I0923 07:21:56.879971 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 07:21:56.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:21:56.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:21:56.896
  STEP: Creating a pod to test substitution in volume subpath @ 09/23/25 07:21:56.898
  STEP: Saw pod success @ 09/23/25 07:22:00.913
  I0923 07:22:00.914738 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod var-expansion-4dbf92fd-194c-4923-a5b3-f75479f96d8c container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:22:00.918
  I0923 07:22:00.929454 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4135" for this suite. @ 09/23/25 07:22:00.931
â€¢ [4.058 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/23/25 07:22:00.937
  I0923 07:22:00.937769 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 07:22:00.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:22:00.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:22:00.948
  STEP: set up a multi version CRD @ 09/23/25 07:22:00.95
  I0923 07:22:00.951374 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: rename a version @ 09/23/25 07:22:04.433
  STEP: check the new version name is served @ 09/23/25 07:22:04.447
  STEP: check the old version name is removed @ 09/23/25 07:22:05.195
  STEP: check the other version is not changed @ 09/23/25 07:22:05.869
  I0923 07:22:08.416203 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9276" for this suite. @ 09/23/25 07:22:08.423
â€¢ [7.491 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 09/23/25 07:22:08.429
  I0923 07:22:08.429276 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:22:08.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:22:08.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:22:08.443
  I0923 07:22:08.445981 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 create -f -'
  I0923 07:22:08.576275 22 builder.go:146] stderr: ""
  I0923 07:22:08.576320 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0923 07:22:08.576385 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 create -f -'
  I0923 07:22:08.712813 22 builder.go:146] stderr: ""
  I0923 07:22:08.712864 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/25 07:22:08.712
  I0923 07:22:09.716166 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 07:22:09.716207 22 framework.go:733] Found 1 / 1
  I0923 07:22:09.716226 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0923 07:22:09.718060 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 07:22:09.718095 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0923 07:22:09.718139 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 describe pod agnhost-primary-phcfq'
  I0923 07:22:09.791701 22 builder.go:146] stderr: ""
  I0923 07:22:09.792183 22 builder.go:147] stdout: "Name:             agnhost-primary-phcfq\nNamespace:        kubectl-9096\nPriority:         0\nService Account:  default\nNode:             ckp-cncf-w1/172.19.1.4\nStart Time:       Tue, 23 Sep 2025 07:22:08 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.9\nIPs:\n  IP:           10.244.1.9\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1186bc04206cabbd728b884a4bc98aa4eea26f956283a87267f57a4cdcab70bf\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 23 Sep 2025 07:22:09 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-n4kfj (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-n4kfj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9096/agnhost-primary-phcfq to ckp-cncf-w1\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0923 07:22:09.792296 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 describe rc agnhost-primary'
  I0923 07:22:09.875760 22 builder.go:146] stderr: ""
  I0923 07:22:09.875916 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9096\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-phcfq\n"
  I0923 07:22:09.876036 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 describe service agnhost-primary'
  I0923 07:22:09.948720 22 builder.go:146] stderr: ""
  I0923 07:22:09.948776 22 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9096\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.108.213.94\nIPs:                      10.108.213.94\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.9:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0923 07:22:09.951296 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 describe node ckp-cncf-m1'
  I0923 07:22:10.037038 22 builder.go:146] stderr: ""
  I0923 07:22:10.037221 22 builder.go:147] stdout: "Name:               ckp-cncf-m1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ckp-cncf-m1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"6a:ad:6e:63:e5:a5\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.19.0.4\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 23 Sep 2025 06:59:02 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ckp-cncf-m1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 23 Sep 2025 07:22:02 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 23 Sep 2025 06:59:23 +0000   Tue, 23 Sep 2025 06:59:23 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Tue, 23 Sep 2025 07:18:37 +0000   Tue, 23 Sep 2025 06:59:02 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 23 Sep 2025 07:18:37 +0000   Tue, 23 Sep 2025 06:59:02 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 23 Sep 2025 07:18:37 +0000   Tue, 23 Sep 2025 06:59:02 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 23 Sep 2025 07:18:37 +0000   Tue, 23 Sep 2025 06:59:20 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.19.0.4\n  Hostname:    ckp-cncf-m1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  30298176Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8083336Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  27922798956\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7980936Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 a8cad2df3e654004a2d4159833aaa03d\n  System UUID:                855f53e1-37a0-45ab-a13e-874e0c752103\n  Boot ID:                    1e449115-5e5c-4649-8d46-c5f468530e31\n  Kernel Version:             6.8.0-1031-azure\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.28\n  Kubelet Version:            v1.32.9-ckp\n  Kube-Proxy Version:         v1.32.9-ckp\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-kflds                                      100m (5%)     0 (0%)      50Mi (0%)        0 (0%)         23m\n  kube-system                 coredns-6885d79ddc-6v896                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     23m\n  kube-system                 coredns-6885d79ddc-9t9bv                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     23m\n  kube-system                 etcd-ckp-cncf-m1                                           100m (5%)     0 (0%)      100Mi (1%)       0 (0%)         23m\n  kube-system                 kube-apiserver-ckp-cncf-m1                                 250m (12%)    0 (0%)      0 (0%)           0 (0%)         23m\n  kube-system                 kube-controller-manager-ckp-cncf-m1                        200m (10%)    0 (0%)      0 (0%)           0 (0%)         23m\n  kube-system                 kube-proxy-jwkf6                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         23m\n  kube-system                 kube-scheduler-ckp-cncf-m1                                 100m (5%)     0 (0%)      0 (0%)           0 (0%)         23m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-wmgql    0 (0%)        0 (0%)      0 (0%)           0 (0%)         4m40s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                950m (47%)  0 (0%)\n  memory             290Mi (3%)  340Mi (4%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 23m                kube-proxy       \n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      23m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  23m (x8 over 23m)  kubelet          Node ckp-cncf-m1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    23m (x8 over 23m)  kubelet          Node ckp-cncf-m1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     23m (x7 over 23m)  kubelet          Node ckp-cncf-m1 status is now: NodeHasSufficientPID\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      23m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  23m                kubelet          Node ckp-cncf-m1 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    23m                kubelet          Node ckp-cncf-m1 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     23m                kubelet          Node ckp-cncf-m1 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           23m                node-controller  Node ckp-cncf-m1 event: Registered Node ckp-cncf-m1 in Controller\n  Normal   NodeReady                22m                kubelet          Node ckp-cncf-m1 status is now: NodeReady\n"
  I0923 07:22:10.037348 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-9096 describe namespace kubectl-9096'
  I0923 07:22:10.103837 22 builder.go:146] stderr: ""
  I0923 07:22:10.103898 22 builder.go:147] stdout: "Name:         kubectl-9096\nLabels:       e2e-framework=kubectl\n              e2e-run=f2c6d4cd-284b-44f1-9209-509f3a9069ca\n              kubernetes.io/metadata.name=kubectl-9096\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0923 07:22:10.104027 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9096" for this suite. @ 09/23/25 07:22:10.105
â€¢ [1.683 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/23/25 07:22:10.112
  I0923 07:22:10.112424 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:22:10.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:22:10.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:22:10.126
  STEP: Creating configMap with name cm-test-opt-del-c8b234ac-3d0c-4353-89bc-d1ff64bdffda @ 09/23/25 07:22:10.131
  STEP: Creating configMap with name cm-test-opt-upd-39197abe-917f-4a09-b7ee-d391345fb3b6 @ 09/23/25 07:22:10.137
  STEP: Creating the pod @ 09/23/25 07:22:10.14
  STEP: Deleting configmap cm-test-opt-del-c8b234ac-3d0c-4353-89bc-d1ff64bdffda @ 09/23/25 07:22:12.227
  STEP: Updating configmap cm-test-opt-upd-39197abe-917f-4a09-b7ee-d391345fb3b6 @ 09/23/25 07:22:12.232
  STEP: Creating configMap with name cm-test-opt-create-03123b18-e6f3-4429-8ff2-511d05607d90 @ 09/23/25 07:22:12.236
  STEP: waiting to observe update in volume @ 09/23/25 07:22:12.242
  I0923 07:23:28.481111 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-320" for this suite. @ 09/23/25 07:23:28.483
â€¢ [78.376 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/23/25 07:23:28.488
  I0923 07:23:28.488998 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:23:28.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:23:28.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:23:28.507
  STEP: Creating a ResourceQuota with terminating scope @ 09/23/25 07:23:28.509
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/25 07:23:28.513
  STEP: Creating a ResourceQuota with not terminating scope @ 09/23/25 07:23:30.516
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/25 07:23:30.522
  STEP: Creating a long running pod @ 09/23/25 07:23:32.526
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/23/25 07:23:32.539
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/23/25 07:23:34.541
  STEP: Deleting the pod @ 09/23/25 07:23:36.543
  STEP: Ensuring resource quota status released the pod usage @ 09/23/25 07:23:36.56
  STEP: Creating a terminating pod @ 09/23/25 07:23:38.564
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/23/25 07:23:38.574
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/23/25 07:23:40.578
  STEP: Deleting the pod @ 09/23/25 07:23:42.581
  STEP: Ensuring resource quota status released the pod usage @ 09/23/25 07:23:42.594
  I0923 07:23:44.597547 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8388" for this suite. @ 09/23/25 07:23:44.6
â€¢ [16.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/23/25 07:23:44.61
  I0923 07:23:44.610841 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 07:23:44.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:23:44.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:23:44.622
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/23/25 07:23:44.628
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/23/25 07:23:44.628
  STEP: creating a pod to probe DNS @ 09/23/25 07:23:44.628
  STEP: submitting the pod to kubernetes @ 09/23/25 07:23:44.628
  STEP: retrieving the pod @ 09/23/25 07:23:52.651
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:23:52.653
  I0923 07:23:52.663624 22 dns_common.go:546] DNS probes using dns-378/dns-test-bab4fc6a-cfa9-495c-bba1-2cee43d314a6 succeeded

  STEP: deleting the pod @ 09/23/25 07:23:52.663
  I0923 07:23:52.673719 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-378" for this suite. @ 09/23/25 07:23:52.675
â€¢ [8.071 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 09/23/25 07:23:52.682
  I0923 07:23:52.682061 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/25 07:23:52.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:23:52.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:23:52.693
  I0923 07:23:52.716445 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0923 07:24:52.721407 22 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/23/25 07:24:52.724
  I0923 07:24:52.724223 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/23/25 07:24:52.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:24:52.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:24:52.742
  STEP: Finding an available node @ 09/23/25 07:24:52.744
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/25 07:24:52.744
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/25 07:24:54.759
  I0923 07:24:54.794367 22 preemption.go:709] found a healthy node: ckp-cncf-w1
  STEP: Adding a custom resource @ 09/23/25 07:24:54.796
  I0923 07:25:00.847656 22 preemption.go:828] pods created so far: [1 1 1]
  I0923 07:25:00.847699 22 preemption.go:829] length of pods created so far: 3
  I0923 07:25:02.856443 22 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 09/23/25 07:25:09.86
  STEP: Removing a custom resource @ 09/23/25 07:25:09.898
  STEP: Removing a custom resource @ 09/23/25 07:25:09.903
  I0923 07:25:09.908197 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1038" for this suite. @ 09/23/25 07:25:09.91
  I0923 07:25:09.916799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1976" for this suite. @ 09/23/25 07:25:10.011
â€¢ [77.335 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/23/25 07:25:10.017
  I0923 07:25:10.017480 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename proxy @ 09/23/25 07:25:10.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:10.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:10.032
  I0923 07:25:10.034021 22 proxy.go:293] Creating pod...
  I0923 07:25:12.052146 22 proxy.go:317] Creating service...
  I0923 07:25:12.070206 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/DELETE
  I0923 07:25:12.078220 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0923 07:25:12.078272 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/GET
  I0923 07:25:12.080949 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0923 07:25:12.080991 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/HEAD
  I0923 07:25:12.087527 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0923 07:25:12.087578 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/OPTIONS
  I0923 07:25:12.090479 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0923 07:25:12.090529 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/PATCH
  I0923 07:25:12.092257 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0923 07:25:12.092298 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/POST
  I0923 07:25:12.094324 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0923 07:25:12.094363 22 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/pods/agnhost/proxy/some/path/with/PUT
  I0923 07:25:12.096077 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0923 07:25:12.096107 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/DELETE
  I0923 07:25:12.099552 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0923 07:25:12.099615 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/GET
  I0923 07:25:12.103361 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0923 07:25:12.103391 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/HEAD
  I0923 07:25:12.105539 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0923 07:25:12.105566 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/OPTIONS
  I0923 07:25:12.108151 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0923 07:25:12.108189 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/PATCH
  I0923 07:25:12.116264 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0923 07:25:12.116321 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/POST
  I0923 07:25:12.118704 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0923 07:25:12.118743 22 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4482/services/test-service/proxy/some/path/with/PUT
  I0923 07:25:12.121029 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0923 07:25:12.121177 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4482" for this suite. @ 09/23/25 07:25:12.123
â€¢ [2.115 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/23/25 07:25:12.132
  I0923 07:25:12.132618 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:25:12.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:12.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:12.154
  STEP: Saw pod success @ 09/23/25 07:25:16.205
  I0923 07:25:16.207098 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod client-envvars-ee22fb1d-09ee-4508-98e1-c3902503baf9 container env3cont: <nil>
  STEP: delete the pod @ 09/23/25 07:25:16.219
  I0923 07:25:16.237994 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9576" for this suite. @ 09/23/25 07:25:16.241
â€¢ [4.115 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/23/25 07:25:16.247
  I0923 07:25:16.247524 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:25:16.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:16.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:16.263
  STEP: Setting up server cert @ 09/23/25 07:25:16.279
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:25:17.055
  STEP: Deploying the webhook pod @ 09/23/25 07:25:17.06
  STEP: Wait for the deployment to be ready @ 09/23/25 07:25:17.072
  I0923 07:25:17.078936 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/23/25 07:25:19.086
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:25:19.106
  I0923 07:25:20.106288 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0923 07:25:20.111236 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/23/25 07:25:20.622
  STEP: Creating a custom resource that should be denied by the webhook @ 09/23/25 07:25:20.641
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/23/25 07:25:22.663
  STEP: Updating the custom resource with disallowed data should be denied @ 09/23/25 07:25:22.669
  STEP: Deleting the custom resource should be denied @ 09/23/25 07:25:22.674
  STEP: Remove the offending key and value from the custom resource data @ 09/23/25 07:25:22.683
  STEP: Deleting the updated custom resource should be successful @ 09/23/25 07:25:22.691
  I0923 07:25:23.278782 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2739" for this suite. @ 09/23/25 07:25:23.282
  STEP: Destroying namespace "webhook-markers-4487" for this suite. @ 09/23/25 07:25:23.288
â€¢ [7.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/23/25 07:25:23.294
  I0923 07:25:23.294736 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 07:25:23.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:23.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:23.312
  STEP: Read namespace status @ 09/23/25 07:25:23.314
  I0923 07:25:23.316223 22 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/23/25 07:25:23.316
  I0923 07:25:23.322046 22 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/23/25 07:25:23.322
  I0923 07:25:23.328467 22 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0923 07:25:23.328649 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8676" for this suite. @ 09/23/25 07:25:23.382
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/23/25 07:25:23.388
  I0923 07:25:23.388127 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename endpointslice @ 09/23/25 07:25:23.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:23.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:23.401
  STEP: referencing a single matching pod @ 09/23/25 07:25:27.477
  STEP: referencing matching pods with named port @ 09/23/25 07:25:27.48
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/23/25 07:25:27.483
  STEP: recreating EndpointSlices after they've been deleted @ 09/23/25 07:25:27.486
  I0923 07:25:27.503818 22 endpointslice.go:938] EndpointSlice for Service endpointslice-5680/example-named-port not found
  I0923 07:25:29.509243 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5680" for this suite. @ 09/23/25 07:25:29.512
â€¢ [6.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/23/25 07:25:29.518
  I0923 07:25:29.518923 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 07:25:29.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:29.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:29.532
  STEP: create the deployment @ 09/23/25 07:25:29.534
  W0923 07:25:29.538440      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/23/25 07:25:29.538
  STEP: delete the deployment @ 09/23/25 07:25:30.041
  STEP: wait for all rs to be garbage collected @ 09/23/25 07:25:30.047
  STEP: expected 0 pods, got 2 pods @ 09/23/25 07:25:30.064
  STEP: Gathering metrics @ 09/23/25 07:25:30.554
  I0923 07:25:30.627236 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 07:25:30.629409 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7872" for this suite. @ 09/23/25 07:25:30.636
â€¢ [1.124 seconds]
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/23/25 07:25:30.642
  I0923 07:25:30.643023 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:25:30.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:30.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:30.656
  STEP: Creating a pod to test downward api env vars @ 09/23/25 07:25:30.659
  STEP: Saw pod success @ 09/23/25 07:25:34.672
  I0923 07:25:34.674799 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-2b0ff409-b989-43c4-88e3-29da32b082ed container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:25:34.679
  I0923 07:25:34.695000 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7268" for this suite. @ 09/23/25 07:25:34.704
â€¢ [4.068 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/23/25 07:25:34.711
  I0923 07:25:34.711048 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:25:34.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:34.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:34.724
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:25:34.726
  STEP: Saw pod success @ 09/23/25 07:25:38.741
  I0923 07:25:38.743287 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-e331a330-517d-44c4-9da1-d35bbad6edbe container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:25:38.747
  I0923 07:25:38.757557 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5624" for this suite. @ 09/23/25 07:25:38.76
â€¢ [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/23/25 07:25:38.766
  I0923 07:25:38.766371 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:25:38.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:38.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:38.779
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/23/25 07:25:38.781
  STEP: Saw pod success @ 09/23/25 07:25:42.804
  I0923 07:25:42.805972 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-de3b709c-aafd-4760-8f2b-d5fe85028fbb container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:25:42.81
  I0923 07:25:42.819238 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7754" for this suite. @ 09/23/25 07:25:42.821
â€¢ [4.062 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/23/25 07:25:42.828
  I0923 07:25:42.828295 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 07:25:42.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:42.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:42.841
  I0923 07:25:42.843478 22 deployment.go:1196] Creating deployment "webserver-deployment"
  I0923 07:25:42.849608 22 deployment.go:1200] Waiting for observed generation 1
  I0923 07:25:44.854939 22 deployment.go:1205] Waiting for all required pods to come up
  I0923 07:25:44.857994 22 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/23/25 07:25:44.858
  I0923 07:25:52.881041 22 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0923 07:25:52.884625 22 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0923 07:25:52.892993 22 deployment.go:314] Updating deployment webserver-deployment
  I0923 07:25:52.893031 22 deployment.go:1224] Waiting for observed generation 2
  I0923 07:25:54.898299 22 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0923 07:25:54.900183 22 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0923 07:25:54.901856 22 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0923 07:25:54.911012 22 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0923 07:25:54.911054 22 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0923 07:25:54.912432 22 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0923 07:25:54.915653 22 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0923 07:25:54.915686 22 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0923 07:25:54.922417 22 deployment.go:314] Updating deployment webserver-deployment
  I0923 07:25:54.922457 22 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0923 07:25:54.925450 22 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0923 07:25:54.931920 22 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0923 07:25:56.946360 22 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09202e90-55b0-441f-97f7-8d9ef86b9713",
      ResourceVersion: (string) (len=4) "4208",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 07:25:56.981460 22 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
      ResourceVersion: (string) (len=4) "4199",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "09202e90-55b0-441f-97f7-8d9ef86b9713",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 32 30 32 65  39 30 2d 35 35 62 30 2d  |\"09202e90-55b0-|
              00000120  34 34 31 66 2d 39 37 66  37 2d 38 64 39 65 66 38  |441f-97f7-8d9ef8|
              00000130  36 62 39 37 31 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b9713\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:25:56.988280 22 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0923 07:25:56.989712 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
      ResourceVersion: (string) (len=4) "4203",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "09202e90-55b0-441f-97f7-8d9ef86b9713",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 32 30 32 65  39 30 2d 35 35 62 30 2d  |\"09202e90-55b0-|
              00000120  34 34 31 66 2d 39 37 66  37 2d 38 64 39 65 66 38  |441f-97f7-8d9ef8|
              00000130  36 62 39 37 31 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b9713\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:25:57.003510 22 deployment.go:68] Pod "webserver-deployment-685b768f58-25755" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-25755",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59ed3298-7984-49f4-8447-a5332144f3ba",
      ResourceVersion: (string) (len=4) "4163",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8v4zp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8v4zp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8v4zp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.015361 22 deployment.go:68] Pod "webserver-deployment-685b768f58-4rnst" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4rnst",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57892aec-5ad9-4908-80aa-1f04aae2aa36",
      ResourceVersion: (string) (len=4) "4207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nkst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nkst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8nkst",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.026476 22 deployment.go:68] Pod "webserver-deployment-685b768f58-5rsw8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5rsw8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a848db62-a80c-4020-9857-7e284ea8346d",
      ResourceVersion: (string) (len=4) "4020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  31 5c 22 7d 22 3a 7b 22  |.244.2.11\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mzr4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mzr4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=11) "10.244.2.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3b63a4abeaa90d3c98ef8e0edc1f160bd46c5201287bcfa396d7cae2e407074c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mzr4m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.061998 22 deployment.go:68] Pod "webserver-deployment-685b768f58-6dkcb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6dkcb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48db8aa6-a8e3-45aa-8208-332419ac1550",
      ResourceVersion: (string) (len=4) "4177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7h56g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7h56g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7h56g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.075086 22 deployment.go:68] Pod "webserver-deployment-685b768f58-9rtlm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9rtlm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c1b465a-2c16-431b-90fa-48aeda07ce35",
      ResourceVersion: (string) (len=4) "4201",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6fnwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6fnwc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6fnwc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.090166 22 deployment.go:68] Pod "webserver-deployment-685b768f58-bbwwt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bbwwt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b7bc526-1331-4704-8174-2154779b3c28",
      ResourceVersion: (string) (len=4) "4184",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bs9xq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bs9xq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bs9xq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.105401 22 deployment.go:68] Pod "webserver-deployment-685b768f58-d87mg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d87mg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82c1fad8-f793-4aa9-804d-b34f06bd1a30",
      ResourceVersion: (string) (len=4) "4068",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  33 5c 22 7d 22 3a 7b 22  |.244.2.13\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lbz5k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lbz5k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=11) "10.244.2.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2079932005256b1ad3a19735949e47f04c88d0c0bd6e7ba6f8ca4c452552a02",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lbz5k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.117084 22 deployment.go:68] Pod "webserver-deployment-685b768f58-fj68v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fj68v",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca66105a-a3df-4558-b2d1-b79025aba35e",
      ResourceVersion: (string) (len=4) "4193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xf8pm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xf8pm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xf8pm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.125206 22 deployment.go:68] Pod "webserver-deployment-685b768f58-fvj74" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fvj74",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "921888c6-4e09-4034-b86d-c3f1a3b373c5",
      ResourceVersion: (string) (len=4) "4029",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  34 5c 22 7d 22 3a 7b 22  |.244.1.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99xhv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99xhv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=11) "10.244.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209148,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d6b8474a285acb2c945c5ae9789d5708a79a75c8f8381bf04b586537e59e4226",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-99xhv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.136199 22 deployment.go:68] Pod "webserver-deployment-685b768f58-g275m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-g275m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "357cf663-385e-4a28-8fff-53a2644dd768",
      ResourceVersion: (string) (len=4) "4213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nqfbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nqfbq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nqfbq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.141944 22 deployment.go:68] Pod "webserver-deployment-685b768f58-kc2bh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kc2bh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb6f9c30-5d34-48db-b109-be74e06ce6b3",
      ResourceVersion: (string) (len=4) "4234",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvq45",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvq45",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rvq45",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.149866 22 deployment.go:68] Pod "webserver-deployment-685b768f58-mf5kb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mf5kb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7e047d6-ace2-41d0-8429-eb35a98dfd29",
      ResourceVersion: (string) (len=4) "4017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 5c 22 7d 22 3a 7b 22  |.244.1.23\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vghf9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vghf9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=11) "10.244.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54178ac43c66b5b0badcd4f6048240eeb123a3905489c6936a933e400d1c772e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vghf9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.173255 22 deployment.go:68] Pod "webserver-deployment-685b768f58-n769f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n769f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7f4968a-a069-404b-b364-bd7ec8e151b4",
      ResourceVersion: (string) (len=4) "4032",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  32 5c 22 7d 22 3a 7b 22  |.244.2.12\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rr48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rr48",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=11) "10.244.2.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209148,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b5a062c432c7b046b82f1032d3042d7e1b0011b85670f6c388932cf4300fb018",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9rr48",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.184431 22 deployment.go:68] Pod "webserver-deployment-685b768f58-pmfhp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pmfhp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5124f24-ced9-4e24-871c-4c3e937f2293",
      ResourceVersion: (string) (len=4) "4218",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z2qmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z2qmw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z2qmw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.189689 22 deployment.go:68] Pod "webserver-deployment-685b768f58-pptgf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pptgf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95f0ae2b-aed7-413f-a6c5-eb8c7b67d355",
      ResourceVersion: (string) (len=4) "4228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gntwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gntwt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gntwt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.200058 22 deployment.go:68] Pod "webserver-deployment-685b768f58-ptbvd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ptbvd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "677d005c-0c24-4f26-b70a-86e408f5224d",
      ResourceVersion: (string) (len=4) "4226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sfnl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sfnl2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sfnl2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.205109 22 deployment.go:68] Pod "webserver-deployment-685b768f58-q5rvx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q5rvx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef427a3d-62ab-44bd-8da9-ceb114ae59c6",
      ResourceVersion: (string) (len=4) "4043",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  35 5c 22 7d 22 3a 7b 22  |.244.1.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrvlr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrvlr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=11) "10.244.1.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209149,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://855b0652abc50c0b04bd3824f005741a0e563dee9d321817ecec7130c02bec62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jrvlr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.209255 22 deployment.go:68] Pod "webserver-deployment-685b768f58-sj56d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sj56d",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7275a93-c5b7-4f9a-b5b9-f02b053b1c7c",
      ResourceVersion: (string) (len=4) "4236",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnsjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnsjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vnsjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.214881 22 deployment.go:68] Pod "webserver-deployment-685b768f58-sstrn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sstrn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e9b97f0-bd87-496b-8c28-8d2a43137817",
      ResourceVersion: (string) (len=4) "4062",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  36 5c 22 7d 22 3a 7b 22  |.244.1.26\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8wxz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8wxz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=11) "10.244.1.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f767c8d87f30bdb40472ed17fe1cc5f85ad02ade0b158e3ee5050ddfe8380a46",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p8wxz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.222705 22 deployment.go:68] Pod "webserver-deployment-685b768f58-z4g7x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z4g7x",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a0199eb-e744-43fd-aa6c-00cfa6796d22",
      ResourceVersion: (string) (len=4) "4046",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "a9a6b72d-fd5d-401d-979d-e1a553ced355",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 36 62 37 32 64 2d 66  |d\":\"a9a6b72d-f|
              00000090  64 35 64 2d 34 30 31 64  2d 39 37 39 64 2d 65 31  |d5d-401d-979d-e1|
              000000a0  61 35 35 33 63 65 64 33  35 35 5c 22 7d 22 3a 7b  |a553ced355\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  35 5c 22 7d 22 3a 7b 22  |.244.2.15\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nnzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nnzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=11) "10.244.2.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209142,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209149,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5628558ac34f68f6fad071f31fa130d11219b3866973acf3aa83a10e7503b92e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2nnzp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.235317 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6wkjm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6wkjm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b53151b8-9591-4003-b493-a4785afad46c",
      ResourceVersion: (string) (len=4) "4123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66qsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66qsp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-66qsp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.242559 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-79kvz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-79kvz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f6d7068-248f-4f4f-9277-94a583581461",
      ResourceVersion: (string) (len=4) "4197",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bw4z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bw4z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8bw4z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.250094 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9fgvl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9fgvl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ae5abb4-dbe8-471b-97c3-6a8fc2c624cc",
      ResourceVersion: (string) (len=4) "4100",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6s2wp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6s2wp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6s2wp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.255386 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bbj9s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bbj9s",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4a53b49-73fb-4e23-b47e-e20b7f6e2aa2",
      ResourceVersion: (string) (len=4) "4214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vwdpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vwdpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vwdpq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.262227 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c2md9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c2md9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef3eaa9d-32de-445b-869d-26c00c57d161",
      ResourceVersion: (string) (len=4) "4120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwrgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwrgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zwrgd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.268555 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-djm98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-djm98",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba6626d9-7a51-44eb-ba64-d0423618c739",
      ResourceVersion: (string) (len=4) "4101",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5999",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5999",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x5999",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.277347 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-drvwx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-drvwx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e968249c-e025-46af-96d9-9862b3dae854",
      ResourceVersion: (string) (len=4) "4230",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l4p45",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l4p45",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l4p45",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.282227 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gvdqz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gvdqz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "202d7ff8-67f3-4659-8de3-ad7251c548bd",
      ResourceVersion: (string) (len=4) "4106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-884jq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-884jq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-884jq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.288939 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ktd24" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ktd24",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44cf479e-9857-4447-8809-873cd6524310",
      ResourceVersion: (string) (len=4) "4223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxs4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxs4d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cxs4d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.295300 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mwmgv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mwmgv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cef7375-b4b2-4340-8f82-e49458212db7",
      ResourceVersion: (string) (len=4) "4222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jlsgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jlsgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jlsgl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.302031 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pdzxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pdzxv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f144dac5-5804-454d-9eb1-13aa8a1c494a",
      ResourceVersion: (string) (len=4) "4210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-skbbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-skbbp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-skbbp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.306729 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pz9gq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pz9gq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55446e1c-5f87-4d09-b941-8794642eb2dd",
      ResourceVersion: (string) (len=4) "4232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whtw4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whtw4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-whtw4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.311095 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-w52n7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-w52n7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-143",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68287966-509d-4980-97c8-db8f10a7baf4",
      ResourceVersion: (string) (len=4) "4219",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4280b4aa-0889-4bb8-ad56-3f21f5775d62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 32  38 30 62 34 61 61 2d 30  |d\":\"4280b4aa-0|
              00000090  38 38 39 2d 34 62 62 38  2d 61 64 35 36 2d 33 66  |889-4bb8-ad56-3f|
              000000a0  32 31 66 35 37 37 35 64  36 32 5c 22 7d 22 3a 7b  |21f5775d62\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ktwzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ktwzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ktwzs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:25:57.314502 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-143" for this suite. @ 09/23/25 07:25:57.319
â€¢ [14.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/23/25 07:25:57.327
  I0923 07:25:57.327925 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:25:57.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:25:57.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:25:57.361
  STEP: Setting up server cert @ 09/23/25 07:25:57.425
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:25:57.714
  STEP: Deploying the webhook pod @ 09/23/25 07:25:57.72
  STEP: Wait for the deployment to be ready @ 09/23/25 07:25:57.733
  I0923 07:25:57.744348 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:25:59.754
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:25:59.766
  I0923 07:26:00.767185 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0923 07:26:00.771435 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7685-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/25 07:26:01.282
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/23/25 07:26:01.298
  I0923 07:26:03.937183 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6743" for this suite. @ 09/23/25 07:26:03.941
  STEP: Destroying namespace "webhook-markers-8878" for this suite. @ 09/23/25 07:26:03.947
â€¢ [6.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/23/25 07:26:03.953
  I0923 07:26:03.953321 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-pred @ 09/23/25 07:26:03.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:03.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:03.97
  I0923 07:26:03.972902 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0923 07:26:04.012260 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 07:26:04.014148 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w1 before test
  I0923 07:26:04.023404 22 predicates.go:957] kube-flannel-ds-kpfn9 from kube-flannel started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 07:26:04.023456 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 07:26:04.023470 22 predicates.go:957] kube-proxy-wz57v from kube-system started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 07:26:04.023479 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 07:26:04.023489 22 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-23 07:17:18 +0000 UTC (1 container statuses recorded)
  I0923 07:26:04.023498 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0923 07:26:04.023508 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-trbn9 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 07:26:04.023516 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 07:26:04.023528 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0923 07:26:04.023540 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w2 before test
  I0923 07:26:04.026512 22 predicates.go:957] kube-flannel-ds-tbgsc from kube-flannel started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 07:26:04.026556 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 07:26:04.026570 22 predicates.go:957] kube-proxy-27mjl from kube-system started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 07:26:04.027513 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 07:26:04.027542 22 predicates.go:957] sonobuoy-e2e-job-a377c665aee74d41 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 07:26:04.027553 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0923 07:26:04.027564 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 07:26:04.027594 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-grznp from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 07:26:04.027605 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 07:26:04.027614 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ckp-cncf-w1 @ 09/23/25 07:26:04.041
  STEP: verifying the node has the label node ckp-cncf-w2 @ 09/23/25 07:26:04.055
  I0923 07:26:04.124832 22 predicates.go:372] Pod kube-flannel-ds-kpfn9 requesting resource cpu=100m on Node ckp-cncf-w1
  I0923 07:26:04.126017 22 predicates.go:372] Pod kube-flannel-ds-tbgsc requesting resource cpu=100m on Node ckp-cncf-w2
  I0923 07:26:04.126044 22 predicates.go:372] Pod kube-proxy-27mjl requesting resource cpu=0m on Node ckp-cncf-w2
  I0923 07:26:04.126056 22 predicates.go:372] Pod kube-proxy-wz57v requesting resource cpu=0m on Node ckp-cncf-w1
  I0923 07:26:04.126067 22 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ckp-cncf-w1
  I0923 07:26:04.126079 22 predicates.go:372] Pod sonobuoy-e2e-job-a377c665aee74d41 requesting resource cpu=0m on Node ckp-cncf-w2
  I0923 07:26:04.126090 22 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-grznp requesting resource cpu=0m on Node ckp-cncf-w2
  I0923 07:26:04.126101 22 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-trbn9 requesting resource cpu=0m on Node ckp-cncf-w1
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/23/25 07:26:04.126
  I0923 07:26:04.126143 22 predicates.go:382] Creating a pod which consumes cpu=1330m on Node ckp-cncf-w1
  I0923 07:26:04.135870 22 predicates.go:382] Creating a pod which consumes cpu=1330m on Node ckp-cncf-w2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/23/25 07:26:10.163
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29.1867d8a0ae266702], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6665/filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29 to ckp-cncf-w1] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29.1867d8a0d1d24fb0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29.1867d8a0d55befe8], Reason = [Created], Message = [Created container: filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29.1867d8a0da23cc43], Reason = [Started], Message = [Started container filler-pod-17fc8f9e-d955-4ae4-a13c-1c8fd8af7b29] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c.1867d8a0aec3f549], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6665/filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c to ckp-cncf-w2] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c.1867d8a0d7707050], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c.1867d8a1b44d36ab], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 1.954s (3.705s including waiting). Image size: 320368 bytes.] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c.1867d8a1b720ff82], Reason = [Created], Message = [Created container: filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c.1867d8a1bc1da03f], Reason = [Started], Message = [Started container filler-pod-19956f49-68e6-4ccc-a762-d0dbc572499c] @ 09/23/25 07:26:10.166
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1867d8a215aa4c55], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.] @ 09/23/25 07:26:10.177
  STEP: removing the label node off the node ckp-cncf-w1 @ 09/23/25 07:26:11.176
  STEP: verifying the node doesn't have the label node @ 09/23/25 07:26:11.187
  STEP: removing the label node off the node ckp-cncf-w2 @ 09/23/25 07:26:11.191
  STEP: verifying the node doesn't have the label node @ 09/23/25 07:26:11.2
  I0923 07:26:11.204573 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6665" for this suite. @ 09/23/25 07:26:11.207
â€¢ [7.259 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/23/25 07:26:11.212
  I0923 07:26:11.212724 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:26:11.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:11.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:11.23
  STEP: Setting up server cert @ 09/23/25 07:26:11.246
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:26:11.536
  STEP: Deploying the webhook pod @ 09/23/25 07:26:11.542
  STEP: Wait for the deployment to be ready @ 09/23/25 07:26:11.553
  I0923 07:26:11.560226 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:26:13.567
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:26:13.578
  I0923 07:26:14.579796 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/23/25 07:26:14.584
  STEP: create the configmap with a random name @ 09/23/25 07:26:14.61
  STEP: verify the configmap is mutated @ 09/23/25 07:26:14.624
  STEP: create the configmap with 'skip-me' name @ 09/23/25 07:26:14.625
  I0923 07:26:14.669561 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7211" for this suite. @ 09/23/25 07:26:14.672
  STEP: Destroying namespace "webhook-markers-5386" for this suite. @ 09/23/25 07:26:14.681
â€¢ [3.475 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/23/25 07:26:14.687
  I0923 07:26:14.688000 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 07:26:14.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:14.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:14.704
  STEP: Updating Namespace "namespaces-2119" @ 09/23/25 07:26:14.706
  I0923 07:26:14.713867 22 namespace.go:390] Namespace "namespaces-2119" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"f2c6d4cd-284b-44f1-9209-509f3a9069ca", "kubernetes.io/metadata.name":"namespaces-2119", "namespaces-2119":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0923 07:26:14.714017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2119" for this suite. @ 09/23/25 07:26:14.773
â€¢ [0.092 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/23/25 07:26:14.78
  I0923 07:26:14.780512 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context @ 09/23/25 07:26:14.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:14.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:14.793
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/23/25 07:26:14.795
  STEP: Saw pod success @ 09/23/25 07:26:18.815
  I0923 07:26:18.817288 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod security-context-1ad3f088-2218-40ea-960c-6ce7bdd6fe24 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:26:18.821
  I0923 07:26:18.834440 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9695" for this suite. @ 09/23/25 07:26:18.836
â€¢ [4.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/23/25 07:26:18.843
  I0923 07:26:18.843193 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/23/25 07:26:18.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:18.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:18.855
  STEP: Creating two CSIDrivers @ 09/23/25 07:26:18.858
  STEP: Getting "inline-driver-fd04a2a3-be8b-4bed-a793-b88bc8bcb039" & "inline-driver-fae6735a-1b62-4b62-8b51-d8e90d3f9e9c" @ 09/23/25 07:26:18.871
  STEP: Patching the CSIDriver "inline-driver-fae6735a-1b62-4b62-8b51-d8e90d3f9e9c" @ 09/23/25 07:26:18.873
  STEP: Updating the CSIDriver "inline-driver-fae6735a-1b62-4b62-8b51-d8e90d3f9e9c" @ 09/23/25 07:26:18.879
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3258" @ 09/23/25 07:26:18.886
  STEP: Deleting CSIDriver "inline-driver-fd04a2a3-be8b-4bed-a793-b88bc8bcb039" @ 09/23/25 07:26:18.888
  STEP: Confirm deletion of CSIDriver "inline-driver-fd04a2a3-be8b-4bed-a793-b88bc8bcb039" @ 09/23/25 07:26:18.892
  STEP: Deleting CSIDriver "inline-driver-fae6735a-1b62-4b62-8b51-d8e90d3f9e9c" via DeleteCollection @ 09/23/25 07:26:18.893
  STEP: Confirm deletion of CSIDriver "inline-driver-fae6735a-1b62-4b62-8b51-d8e90d3f9e9c" @ 09/23/25 07:26:18.904
  I0923 07:26:18.905943 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3258" for this suite. @ 09/23/25 07:26:18.937
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/23/25 07:26:18.942
  I0923 07:26:18.942658 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:26:18.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:18.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:18.954
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:26:18.956
  STEP: Saw pod success @ 09/23/25 07:26:20.967
  I0923 07:26:20.968986 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-27c208db-ef27-4051-8c8c-1625257e6cb9 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:26:20.972
  I0923 07:26:20.983758 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5631" for this suite. @ 09/23/25 07:26:20.986
â€¢ [2.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 09/23/25 07:26:20.99
  I0923 07:26:20.990579 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 07:26:20.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:26:21.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:26:21.005
  STEP: Creating service test in namespace statefulset-3609 @ 09/23/25 07:26:21.01
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/23/25 07:26:21.014
  STEP: Creating stateful set ss in namespace statefulset-3609 @ 09/23/25 07:26:21.02
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3609 @ 09/23/25 07:26:21.026
  I0923 07:26:21.045457 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0923 07:26:31.029958 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/23/25 07:26:31.03
  I0923 07:26:31.032240 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:26:31.158825 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:26:31.158878 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:26:31.158895 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:26:31.161286 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0923 07:26:41.162123 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:26:41.162173 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0923 07:26:41.176933 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999692s
  I0923 07:26:42.180022 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.995933841s
  I0923 07:26:43.183437 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.992899942s
  I0923 07:26:44.186607 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.989456794s
  I0923 07:26:45.190289 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.986301104s
  I0923 07:26:46.194019 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.981833519s
  I0923 07:26:47.197433 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.978882805s
  I0923 07:26:48.200572 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.975405683s
  I0923 07:26:49.203343 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.972305641s
  I0923 07:26:50.206517 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 969.566826ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3609 @ 09/23/25 07:26:51.206
  I0923 07:26:51.209568 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:26:51.345112 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:26:51.345164 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:26:51.345179 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:26:51.347276 22 wait.go:40] Found 1 stateful pods, waiting for 3
  I0923 07:27:01.349460 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:27:01.349510 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:27:01.349520 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/23/25 07:27:01.349
  STEP: Scale down will halt with unhealthy stateful pod @ 09/23/25 07:27:01.349
  I0923 07:27:01.353230 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:27:01.459870 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:27:01.459921 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:27:01.459933 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:27:01.459986 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:27:01.589358 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:27:01.589410 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:27:01.589426 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:27:01.589484 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:27:01.714173 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:27:01.714226 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:27:01.714244 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:27:01.714280 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0923 07:27:01.716378 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0923 07:27:11.720300 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:27:11.720347 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:27:11.720362 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:27:11.820714 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999698s
  I0923 07:27:12.823375 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.906178487s
  I0923 07:27:13.826182 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.903550728s
  I0923 07:27:14.829616 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.90071989s
  I0923 07:27:15.833082 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.897292822s
  I0923 07:27:16.836445 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.893933187s
  I0923 07:27:17.839390 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.890446384s
  I0923 07:27:18.841958 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.887530448s
  I0923 07:27:19.845707 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.884974972s
  I0923 07:27:20.850627 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 880.401569ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3609 @ 09/23/25 07:27:21.851
  I0923 07:27:21.855544 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:27:21.964420 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:27:21.964468 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:27:21.964486 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:27:21.964566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:27:22.068776 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:27:22.068822 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:27:22.068838 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:27:22.068898 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-3609 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:27:22.175790 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:27:22.175834 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:27:22.175853 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:27:22.175865 22 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/23/25 07:27:32.181
  I0923 07:27:32.182031 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3609
  I0923 07:27:32.184716 22 rest.go:152] Scaling statefulset ss to 0
  I0923 07:27:32.188207 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 07:27:32.190033 22 rest.go:90] Deleting statefulset ss
  I0923 07:27:32.201565 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3609" for this suite. @ 09/23/25 07:27:32.205
â€¢ [71.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/23/25 07:27:32.211
  I0923 07:27:32.211125 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:27:32.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:32.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:32.228
  STEP: creating a ConfigMap @ 09/23/25 07:27:32.23
  STEP: fetching the ConfigMap @ 09/23/25 07:27:32.234
  STEP: patching the ConfigMap @ 09/23/25 07:27:32.235
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/23/25 07:27:32.239
  STEP: deleting the ConfigMap by collection with a label selector @ 09/23/25 07:27:32.241
  STEP: listing all ConfigMaps in test namespace @ 09/23/25 07:27:32.247
  I0923 07:27:32.248935 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-222" for this suite. @ 09/23/25 07:27:32.306
â€¢ [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/23/25 07:27:32.311
  I0923 07:27:32.311829 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:27:32.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:32.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:32.324
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:27:32.326
  STEP: Saw pod success @ 09/23/25 07:27:36.344
  I0923 07:27:36.346544 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-d2327ecd-4e9c-4361-a158-44e2c3115aeb container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:27:36.35
  I0923 07:27:36.363827 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2045" for this suite. @ 09/23/25 07:27:36.366
â€¢ [4.060 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/23/25 07:27:36.371
  I0923 07:27:36.371800 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 07:27:36.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:36.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:36.386
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/23/25 07:27:36.388
  I0923 07:27:36.395763 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0923 07:27:41.479180 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 07:27:41.479
  STEP: getting scale subresource @ 09/23/25 07:27:41.479
  STEP: updating a scale subresource @ 09/23/25 07:27:41.481
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/23/25 07:27:41.486
  STEP: Patch a scale subresource @ 09/23/25 07:27:41.488
  I0923 07:27:41.503955 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7405" for this suite. @ 09/23/25 07:27:41.519
â€¢ [5.158 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/23/25 07:27:41.529
  I0923 07:27:41.529417 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context-test @ 09/23/25 07:27:41.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:41.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:41.547
  I0923 07:27:45.571009 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1184" for this suite. @ 09/23/25 07:27:45.573
â€¢ [4.049 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/23/25 07:27:45.578
  I0923 07:27:45.578805 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 07:27:45.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:45.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:45.594
  STEP: Creating a test headless service @ 09/23/25 07:27:45.596
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3754 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3754;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3754 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3754;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3754.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3754.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3754.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3754.svc;check="$$(dig +notcp +noall +answer +search 85.220.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.220.85_udp@PTR;check="$$(dig +tcp +noall +answer +search 85.220.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.220.85_tcp@PTR;sleep 1; done
   @ 09/23/25 07:27:45.62
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3754 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3754;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3754 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3754;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3754.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3754.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3754.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3754.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3754.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3754.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3754.svc;check="$$(dig +notcp +noall +answer +search 85.220.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.220.85_udp@PTR;check="$$(dig +tcp +noall +answer +search 85.220.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.220.85_tcp@PTR;sleep 1; done
   @ 09/23/25 07:27:45.62
  STEP: creating a pod to probe DNS @ 09/23/25 07:27:45.62
  STEP: submitting the pod to kubernetes @ 09/23/25 07:27:45.62
  STEP: retrieving the pod @ 09/23/25 07:27:47.646
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:27:47.648
  I0923 07:27:47.653457 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.655710 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.657660 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3754 from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.659537 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3754 from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.661535 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.663444 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.665295 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.667028 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.676023 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.677963 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.679938 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3754 from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.681801 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3754 from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.683691 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.685610 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.687442 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.689413 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3754.svc from pod dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550: the server could not find the requested resource (get pods dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550)
  I0923 07:27:47.697018 22 dns_common.go:506] Lookups using dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3754 agnhost_tcp@dns-test-service.dns-3754 agnhost_udp@dns-test-service.dns-3754.svc agnhost_tcp@dns-test-service.dns-3754.svc agnhost_udp@_http._tcp.dns-test-service.dns-3754.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3754.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3754 jessie_tcp@dns-test-service.dns-3754 jessie_udp@dns-test-service.dns-3754.svc jessie_tcp@dns-test-service.dns-3754.svc jessie_udp@_http._tcp.dns-test-service.dns-3754.svc jessie_tcp@_http._tcp.dns-test-service.dns-3754.svc]

  I0923 07:27:47.700787 22 dns_common.go:514] Pod client logs for webserver: 
  I0923 07:27:47.704490 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0923 07:27:47.708140 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0923 07:27:52.696312 22 dns_common.go:546] DNS probes using dns-3754/dns-test-56c2e3cc-d109-4c64-b4ec-d1f2bd8a2550 succeeded

  STEP: deleting the pod @ 09/23/25 07:27:52.696
  STEP: deleting the test service @ 09/23/25 07:27:52.711
  STEP: deleting the test headless service @ 09/23/25 07:27:52.747
  I0923 07:27:52.758864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3754" for this suite. @ 09/23/25 07:27:52.764
â€¢ [7.192 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/23/25 07:27:52.77
  I0923 07:27:52.770747 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:27:52.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:27:52.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:27:52.789
  STEP: creating service in namespace services-3040 @ 09/23/25 07:27:52.791
  STEP: creating service affinity-nodeport-transition in namespace services-3040 @ 09/23/25 07:27:52.791
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3040 @ 09/23/25 07:27:52.806
  I0923 07:27:52.811292      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3040, replica count: 3
  I0923 07:27:55.862198      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 07:27:55.868689 22 resource.go:361] Creating new exec pod
  I0923 07:27:58.882852 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0923 07:27:58.991469 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.97.90.228) 80 port [tcp/http] succeeded!\n"
  I0923 07:27:58.991520 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:27:58.991701 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.90.228 80'
  I0923 07:27:59.101419 22 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.97.90.228 80\nConnection to 10.97.90.228 80 port [tcp/http] succeeded!\n"
  I0923 07:27:59.101473 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:27:59.101560 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.4 30659'
  I0923 07:27:59.208281 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.4 30659\nConnection to 172.19.1.4 30659 port [tcp/*] succeeded!\n"
  I0923 07:27:59.208332 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:27:59.208425 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 30659'
  I0923 07:27:59.328107 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 30659\nConnection to 172.19.1.5 30659 port [tcp/*] succeeded!\n"
  I0923 07:27:59.328168 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:27:59.335032 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.19.1.4:30659/ ; done'
  I0923 07:27:59.552777 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n"
  I0923 07:27:59.552840 22 builder.go:147] stdout: "\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-qhdzl\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-qhdzl\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-qhdzl\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-jsvvd\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p"
  I0923 07:27:59.552860 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.552874 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.552885 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.552895 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.552908 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.552920 22 service.go:242] Received response from host: affinity-nodeport-transition-qhdzl
  I0923 07:27:59.552937 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.552947 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.552961 22 service.go:242] Received response from host: affinity-nodeport-transition-qhdzl
  I0923 07:27:59.553094 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.553109 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.553120 22 service.go:242] Received response from host: affinity-nodeport-transition-qhdzl
  I0923 07:27:59.553162 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.553174 22 service.go:242] Received response from host: affinity-nodeport-transition-jsvvd
  I0923 07:27:59.553185 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.553197 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.560788 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3040 exec execpod-affinityrr97z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.19.1.4:30659/ ; done'
  I0923 07:27:59.808188 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:30659/\n"
  I0923 07:27:59.808245 22 builder.go:147] stdout: "\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p\naffinity-nodeport-transition-nns2p"
  I0923 07:27:59.808264 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808277 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808321 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808335 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808352 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808364 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808380 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808392 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808405 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808416 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808428 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808440 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808449 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808460 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808497 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808509 22 service.go:242] Received response from host: affinity-nodeport-transition-nns2p
  I0923 07:27:59.808695 22 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3040, will wait for the garbage collector to delete the pods @ 09/23/25 07:27:59.82
  I0923 07:27:59.882564 22 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.890833ms
  I0923 07:27:59.982932 22 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.38074ms
  I0923 07:28:03.221930 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3040" for this suite. @ 09/23/25 07:28:03.224
â€¢ [10.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/23/25 07:28:03.229
  I0923 07:28:03.229430 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/23/25 07:28:03.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:03.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:03.244
  I0923 07:28:03.246469 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  I0923 07:28:06.298977 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8950" for this suite. @ 09/23/25 07:28:06.301
â€¢ [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/23/25 07:28:06.313
  I0923 07:28:06.313745 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pv @ 09/23/25 07:28:06.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:06.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:06.327
  STEP: Creating initial PV and PVC @ 09/23/25 07:28:06.329
  I0923 07:28:06.329689 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2347" @ 09/23/25 07:28:06.343
  STEP: Listing PVCs in namespace "pv-2347" @ 09/23/25 07:28:06.346
  STEP: Patching the PV "pv-2347-4dbl4" @ 09/23/25 07:28:06.348
  STEP: Patching the PVC "pvc-pvqvf" @ 09/23/25 07:28:06.36
  STEP: Getting PV "pv-2347-4dbl4" @ 09/23/25 07:28:06.369
  STEP: Getting PVC "pvc-pvqvf" @ 09/23/25 07:28:06.374
  STEP: Deleting PVC "pvc-pvqvf" @ 09/23/25 07:28:06.378
  STEP: Confirm deletion of PVC "pvc-pvqvf" @ 09/23/25 07:28:06.386
  STEP: Deleting PV "pv-2347-4dbl4" @ 09/23/25 07:28:08.391
  STEP: Confirm deletion of PV "pv-2347-4dbl4" @ 09/23/25 07:28:08.408
  STEP: Recreating another PV & PVC @ 09/23/25 07:28:10.414
  I0923 07:28:10.414741 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2347-8x68q" @ 09/23/25 07:28:10.424
  STEP: Updating the PVC "pvc-7xz48" @ 09/23/25 07:28:10.45
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-7xz48=updated" @ 09/23/25 07:28:10.459
  STEP: Deleting PVC "pvc-7xz48" via DeleteCollection @ 09/23/25 07:28:10.461
  STEP: Confirm deletion of PVC "pvc-7xz48" @ 09/23/25 07:28:10.466
  STEP: Deleting PV "pv-2347-8x68q" via DeleteCollection @ 09/23/25 07:28:12.472
  STEP: Confirm deletion of PV "pv-2347-8x68q" @ 09/23/25 07:28:12.481
  I0923 07:28:12.484328 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0923 07:28:12.484600 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-7xz48"
  I0923 07:28:12.486442 22 pv.go:193] Deleting PersistentVolume "pv-2347-8x68q"
  I0923 07:28:12.489961 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2347" for this suite. @ 09/23/25 07:28:12.492
â€¢ [6.185 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/23/25 07:28:12.498
  I0923 07:28:12.498869 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:28:12.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:12.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:12.51
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/23/25 07:28:12.512
  STEP: Saw pod success @ 09/23/25 07:28:16.529
  I0923 07:28:16.531938 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-5b5a262d-471c-4e42-823c-500df94483ed container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:28:16.536
  I0923 07:28:16.549852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5878" for this suite. @ 09/23/25 07:28:16.552
â€¢ [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/23/25 07:28:16.556
  I0923 07:28:16.556695 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename prestop @ 09/23/25 07:28:16.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:16.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:16.567
  STEP: Creating server pod server in namespace prestop-177 @ 09/23/25 07:28:16.569
  STEP: Waiting for pods to come up. @ 09/23/25 07:28:16.575
  STEP: Creating tester pod tester in namespace prestop-177 @ 09/23/25 07:28:18.584
  STEP: Deleting pre-stop pod @ 09/23/25 07:28:20.594
  I0923 07:28:25.608347 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/23/25 07:28:25.608
  I0923 07:28:25.621931 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-177" for this suite. @ 09/23/25 07:28:25.624
â€¢ [9.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/23/25 07:28:25.63
  I0923 07:28:25.630185 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename volumeattachment @ 09/23/25 07:28:25.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:25.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:25.645
  STEP: Create VolumeAttachment "va-e2e-z98rg" on node "ckp-cncf-w2" @ 09/23/25 07:28:25.725
  STEP: Get VolumeAttachment "va-e2e-z98rg" on node "ckp-cncf-w2" @ 09/23/25 07:28:25.73
  STEP: Patch VolumeAttachment "va-e2e-z98rg" on node "ckp-cncf-w2" @ 09/23/25 07:28:25.731
  STEP: List VolumeAttachments with "va-e2e-z98rg=patched" label @ 09/23/25 07:28:25.737
  STEP: Delete VolumeAttachment "va-e2e-z98rg" on node "ckp-cncf-w2" @ 09/23/25 07:28:25.738
  STEP: Confirm deletion of VolumeAttachment "va-e2e-z98rg" on node "ckp-cncf-w2" @ 09/23/25 07:28:25.742
  STEP: Create VolumeAttachment "va-e2e-bgxlx" on node "ckp-cncf-m1" @ 09/23/25 07:28:25.826
  STEP: Update the VolumeAttachment "va-e2e-bgxlx" on node "ckp-cncf-m1" with label "va-e2e=updated" @ 09/23/25 07:28:25.831
  STEP: Create VolumeAttachment "va-e2e-hsd7r" on node "ckp-cncf-m1" @ 09/23/25 07:28:25.926
  STEP: Update the VolumeAttachment "va-e2e-hsd7r" on node "ckp-cncf-m1" with label "va-e2e=updated" @ 09/23/25 07:28:25.933
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/23/25 07:28:25.939
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/23/25 07:28:25.948
  I0923 07:28:25.950696 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3532" for this suite. @ 09/23/25 07:28:26.026
â€¢ [0.403 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/23/25 07:28:26.032
  I0923 07:28:26.032887 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-runtime @ 09/23/25 07:28:26.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:26.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:26.046
  STEP: create the container @ 09/23/25 07:28:26.049
  W0923 07:28:26.055488      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/23/25 07:28:26.055
  STEP: get the container status @ 09/23/25 07:28:29.066
  STEP: the container should be terminated @ 09/23/25 07:28:29.068
  STEP: the termination message should be set @ 09/23/25 07:28:29.068
  I0923 07:28:29.068733 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/23/25 07:28:29.068
  I0923 07:28:29.089858 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4471" for this suite. @ 09/23/25 07:28:29.092
â€¢ [3.064 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/23/25 07:28:29.096
  I0923 07:28:29.096957 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:28:29.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:29.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:29.124
  STEP: Creating projection with secret that has name projected-secret-test-map-0f90615d-f542-4c55-b803-914b85734fa4 @ 09/23/25 07:28:29.132
  STEP: Creating a pod to test consume secrets @ 09/23/25 07:28:29.137
  STEP: Saw pod success @ 09/23/25 07:28:33.169
  I0923 07:28:33.172205 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-46224a41-499d-4902-8333-a30a1bd3c43d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:28:33.176
  I0923 07:28:33.190655 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6515" for this suite. @ 09/23/25 07:28:33.193
â€¢ [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/23/25 07:28:33.199
  I0923 07:28:33.199351 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subpath @ 09/23/25 07:28:33.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:33.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:33.211
  STEP: Setting up data @ 09/23/25 07:28:33.213
  STEP: Creating pod pod-subpath-test-downwardapi-ffkl @ 09/23/25 07:28:33.222
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/25 07:28:33.222
  STEP: Saw pod success @ 09/23/25 07:28:57.268
  I0923 07:28:57.270960 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-subpath-test-downwardapi-ffkl container test-container-subpath-downwardapi-ffkl: <nil>
  STEP: delete the pod @ 09/23/25 07:28:57.275
  STEP: Deleting pod pod-subpath-test-downwardapi-ffkl @ 09/23/25 07:28:57.288
  I0923 07:28:57.288503 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-ffkl" in namespace "subpath-7458"
  I0923 07:28:57.290112 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7458" for this suite. @ 09/23/25 07:28:57.292
â€¢ [24.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/23/25 07:28:57.297
  I0923 07:28:57.297148 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:28:57.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:57.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:57.311
  STEP: Creating Pod @ 09/23/25 07:28:57.313
  STEP: Reading file content from the nginx-container @ 09/23/25 07:28:59.334
  I0923 07:28:59.334520 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3789 PodName:pod-sharedvolume-60a074ef-7441-4ea9-a811-e5457926c6eb ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 07:28:59.334542 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 07:28:59.334630 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-3789/pods/pod-sharedvolume-60a074ef-7441-4ea9-a811-e5457926c6eb/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0923 07:28:59.393645 22 exec_util.go:108] Exec stderr: ""
  I0923 07:28:59.393799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3789" for this suite. @ 09/23/25 07:28:59.396
â€¢ [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/23/25 07:28:59.404
  I0923 07:28:59.404443 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-runtime @ 09/23/25 07:28:59.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:28:59.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:28:59.438
  STEP: create the container @ 09/23/25 07:28:59.44
  W0923 07:28:59.446268      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/25 07:28:59.446
  STEP: get the container status @ 09/23/25 07:29:02.456
  STEP: the container should be terminated @ 09/23/25 07:29:02.459
  STEP: the termination message should be set @ 09/23/25 07:29:02.459
  I0923 07:29:02.459136 22 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/23/25 07:29:02.459
  I0923 07:29:02.474812 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3463" for this suite. @ 09/23/25 07:29:02.477
â€¢ [3.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/23/25 07:29:02.481
  I0923 07:29:02.481718 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:29:02.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:02.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:02.493
  STEP: creating service in namespace services-8814 @ 09/23/25 07:29:02.496
  STEP: creating service affinity-clusterip in namespace services-8814 @ 09/23/25 07:29:02.496
  STEP: creating replication controller affinity-clusterip in namespace services-8814 @ 09/23/25 07:29:02.506
  I0923 07:29:02.518661      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8814, replica count: 3
  I0923 07:29:05.569960      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 07:29:05.574309 22 resource.go:361] Creating new exec pod
  I0923 07:29:08.588245 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-8814 exec execpod-affinity284d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0923 07:29:08.714611 22 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.98.158.37) 80 port [tcp/http] succeeded!\n"
  I0923 07:29:08.714664 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:29:08.714753 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-8814 exec execpod-affinity284d7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.158.37 80'
  I0923 07:29:08.823697 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.158.37 80\nConnection to 10.98.158.37 80 port [tcp/http] succeeded!\n"
  I0923 07:29:08.823748 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:29:08.823833 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-8814 exec execpod-affinity284d7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.158.37:80/ ; done'
  I0923 07:29:09.017667 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.158.37:80/\n"
  I0923 07:29:09.017717 22 builder.go:147] stdout: "\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj\naffinity-clusterip-x96kj"
  I0923 07:29:09.017740 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017753 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017765 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017775 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017788 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017809 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017818 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017829 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017904 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.017919 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018037 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018050 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018064 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018086 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018098 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018115 22 service.go:242] Received response from host: affinity-clusterip-x96kj
  I0923 07:29:09.018199 22 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8814, will wait for the garbage collector to delete the pods @ 09/23/25 07:29:09.029
  I0923 07:29:09.094231 22 resources.go:139] Deleting ReplicationController affinity-clusterip took: 12.105093ms
  I0923 07:29:09.195199 22 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.965383ms
  I0923 07:29:12.312749 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8814" for this suite. @ 09/23/25 07:29:12.316
â€¢ [9.839 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/23/25 07:29:12.321
  I0923 07:29:12.321080 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:29:12.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:12.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:12.351
  STEP: Creating a pod to test downward api env vars @ 09/23/25 07:29:12.353
  STEP: Saw pod success @ 09/23/25 07:29:16.371
  I0923 07:29:16.373483 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-3cc1fd95-79fc-4535-aec1-5414e6cd6eee container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:29:16.378
  I0923 07:29:16.392741 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8831" for this suite. @ 09/23/25 07:29:16.395
â€¢ [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/23/25 07:29:16.4
  I0923 07:29:16.400070 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:29:16.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:16.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:16.415
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/23/25 07:29:16.417
  STEP: Saw pod success @ 09/23/25 07:29:18.431
  I0923 07:29:18.432837 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-7d9310f6-93c1-4ee2-b098-89fd88e1d675 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:29:18.436
  I0923 07:29:18.449114 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7963" for this suite. @ 09/23/25 07:29:18.451
â€¢ [2.056 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/23/25 07:29:18.455
  I0923 07:29:18.455669 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:29:18.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:18.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:18.469
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/23/25 07:29:18.471
  STEP: Saw pod success @ 09/23/25 07:29:20.486
  I0923 07:29:20.488155 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-c8e17f9f-d528-46b4-801f-3985afe7d53b container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:29:20.492
  I0923 07:29:20.504540 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4401" for this suite. @ 09/23/25 07:29:20.506
â€¢ [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/23/25 07:29:20.511
  I0923 07:29:20.511905 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:29:20.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:20.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:20.528
  STEP: creating a replication controller @ 09/23/25 07:29:20.529
  I0923 07:29:20.529985 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 create -f -'
  I0923 07:29:20.653006 22 builder.go:146] stderr: ""
  I0923 07:29:20.653130 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/25 07:29:20.653
  I0923 07:29:20.653244 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:29:20.723722 22 builder.go:146] stderr: ""
  I0923 07:29:20.723761 22 builder.go:147] stdout: "update-demo-nautilus-845wj update-demo-nautilus-ts2k2 "
  I0923 07:29:20.723819 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-845wj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:20.787420 22 builder.go:146] stderr: ""
  I0923 07:29:20.787471 22 builder.go:147] stdout: ""
  I0923 07:29:20.787486 22 kubectl.go:2509] update-demo-nautilus-845wj is created but not running
  I0923 07:29:25.791496 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:29:25.853947 22 builder.go:146] stderr: ""
  I0923 07:29:25.853985 22 builder.go:147] stdout: "update-demo-nautilus-845wj update-demo-nautilus-ts2k2 "
  I0923 07:29:25.854041 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-845wj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:25.913856 22 builder.go:146] stderr: ""
  I0923 07:29:25.913898 22 builder.go:147] stdout: "true"
  I0923 07:29:25.913964 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-845wj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:29:25.974226 22 builder.go:146] stderr: ""
  I0923 07:29:25.974361 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:29:25.974384 22 kubectl.go:2400] validating pod update-demo-nautilus-845wj
  I0923 07:29:25.979493 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:29:25.979571 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:29:25.979600 22 kubectl.go:2527] update-demo-nautilus-845wj is verified up and running
  I0923 07:29:25.979662 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:26.040062 22 builder.go:146] stderr: ""
  I0923 07:29:26.040123 22 builder.go:147] stdout: "true"
  I0923 07:29:26.040194 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:29:26.100345 22 builder.go:146] stderr: ""
  I0923 07:29:26.100391 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:29:26.100406 22 kubectl.go:2400] validating pod update-demo-nautilus-ts2k2
  I0923 07:29:26.104382 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:29:26.104460 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:29:26.104477 22 kubectl.go:2527] update-demo-nautilus-ts2k2 is verified up and running
  STEP: scaling down the replication controller @ 09/23/25 07:29:26.104
  I0923 07:29:26.105730 22 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0923 07:29:26.105792 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0923 07:29:27.185031 22 builder.go:146] stderr: ""
  I0923 07:29:27.185081 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/25 07:29:27.185
  I0923 07:29:27.185183 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:29:27.250070 22 builder.go:146] stderr: ""
  I0923 07:29:27.250121 22 builder.go:147] stdout: "update-demo-nautilus-845wj update-demo-nautilus-ts2k2 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/23/25 07:29:27.25
  I0923 07:29:32.251645 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:29:32.318938 22 builder.go:146] stderr: ""
  I0923 07:29:32.319129 22 builder.go:147] stdout: "update-demo-nautilus-ts2k2 "
  I0923 07:29:32.319270 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:32.382126 22 builder.go:146] stderr: ""
  I0923 07:29:32.382316 22 builder.go:147] stdout: "true"
  I0923 07:29:32.382484 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:29:32.443570 22 builder.go:146] stderr: ""
  I0923 07:29:32.443719 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:29:32.443745 22 kubectl.go:2400] validating pod update-demo-nautilus-ts2k2
  I0923 07:29:32.446119 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:29:32.446187 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:29:32.446203 22 kubectl.go:2527] update-demo-nautilus-ts2k2 is verified up and running
  STEP: scaling up the replication controller @ 09/23/25 07:29:32.446
  I0923 07:29:32.447353 22 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0923 07:29:32.447489 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0923 07:29:33.519896 22 builder.go:146] stderr: ""
  I0923 07:29:33.519941 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/25 07:29:33.519
  I0923 07:29:33.520045 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:29:33.584191 22 builder.go:146] stderr: ""
  I0923 07:29:33.584235 22 builder.go:147] stdout: "update-demo-nautilus-drn22 update-demo-nautilus-ts2k2 "
  I0923 07:29:33.584294 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-drn22 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:33.645484 22 builder.go:146] stderr: ""
  I0923 07:29:33.645528 22 builder.go:147] stdout: "true"
  I0923 07:29:33.645608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-drn22 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:29:33.705272 22 builder.go:146] stderr: ""
  I0923 07:29:33.705318 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:29:33.705334 22 kubectl.go:2400] validating pod update-demo-nautilus-drn22
  I0923 07:29:33.709412 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:29:33.709477 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:29:33.709492 22 kubectl.go:2527] update-demo-nautilus-drn22 is verified up and running
  I0923 07:29:33.709572 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:29:33.768743 22 builder.go:146] stderr: ""
  I0923 07:29:33.768805 22 builder.go:147] stdout: "true"
  I0923 07:29:33.768889 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods update-demo-nautilus-ts2k2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:29:33.829181 22 builder.go:146] stderr: ""
  I0923 07:29:33.829227 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:29:33.829375 22 kubectl.go:2400] validating pod update-demo-nautilus-ts2k2
  I0923 07:29:33.831709 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:29:33.831781 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:29:33.831797 22 kubectl.go:2527] update-demo-nautilus-ts2k2 is verified up and running
  STEP: using delete to clean up resources @ 09/23/25 07:29:33.831
  I0923 07:29:33.831931 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 delete --grace-period=0 --force -f -'
  I0923 07:29:33.902444 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 07:29:33.902503 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0923 07:29:33.902576 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get rc,svc -l name=update-demo --no-headers'
  I0923 07:29:34.016692 22 builder.go:146] stderr: "No resources found in kubectl-6211 namespace.\n"
  I0923 07:29:34.016745 22 builder.go:147] stdout: ""
  I0923 07:29:34.016819 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-6211 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0923 07:29:34.092082 22 builder.go:146] stderr: ""
  I0923 07:29:34.092147 22 builder.go:147] stdout: ""
  I0923 07:29:34.092309 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6211" for this suite. @ 09/23/25 07:29:34.095
â€¢ [13.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/23/25 07:29:34.1
  I0923 07:29:34.100834 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 07:29:34.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:29:34.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:29:34.117
  STEP: Creating pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228 @ 09/23/25 07:29:34.12
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 07:29:36.132
  I0923 07:29:36.134783 22 container_probe.go:1749] Initial restart count of pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e is 0
  I0923 07:29:36.136859 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:38.140512 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:40.143239 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:42.147167 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:44.150021 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:46.153626 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:48.157467 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:50.160350 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:52.163461 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:54.167343 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:56.170318 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:29:58.173760 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:00.177815 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:02.181857 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:04.185561 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:06.189042 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:08.192541 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:10.196802 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:12.200443 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:14.204436 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:16.207692 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:18.211244 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:20.214507 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:22.217462 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:24.220477 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:26.225018 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:28.227717 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:30.231568 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:32.235169 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:34.237985 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:36.241429 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:38.245121 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:40.248735 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:42.252867 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:44.256479 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:46.260406 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:48.264157 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:50.267971 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:52.271526 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:54.274278 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:56.277817 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:30:58.281526 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:00.283757 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:02.287614 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:04.291284 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:06.294166 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:08.297935 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:10.300981 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:12.304159 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:14.307751 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:16.311264 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:18.313739 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:20.317433 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:22.321975 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:24.324689 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:26.328317 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:28.332117 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:30.334970 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:32.338686 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:34.342343 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:36.345316 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:38.348097 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:40.352083 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:42.355431 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:44.358654 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:46.362207 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:48.364762 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:50.367560 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:52.371232 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:54.374086 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:56.376729 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:31:58.379300 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:00.382973 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:02.387697 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:04.390276 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:06.393050 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:08.395842 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:10.398197 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:12.402188 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:14.406486 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:16.409990 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:18.413200 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:20.415839 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:22.419199 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:24.422824 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:26.426148 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:28.429803 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:30.433492 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:32.437683 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:34.441099 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:36.443556 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:38.447328 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:40.450112 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:42.453037 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:44.456806 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:46.460361 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:48.464200 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:50.467213 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:52.470441 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:54.473306 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:56.476043 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:32:58.479651 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:00.483488 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:02.487458 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:04.490002 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:06.492890 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:08.496815 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:10.500699 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:12.504139 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:14.507775 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:16.511371 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:18.515349 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:20.518218 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:22.521317 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:24.524248 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:26.527472 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:28.530186 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:30.534001 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:32.537647 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  I0923 07:33:34.540554 22 container_probe.go:1759] Get pod test-webserver-5c84e95c-43ab-4e87-941c-00921291e45e in namespace container-probe-228
  STEP: deleting the pod @ 09/23/25 07:33:36.54
  I0923 07:33:36.552474 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-228" for this suite. @ 09/23/25 07:33:36.555
â€¢ [242.460 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/23/25 07:33:36.561
  I0923 07:33:36.561068 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:33:36.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:36.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:36.576
  STEP: creating a replication controller @ 09/23/25 07:33:36.578
  I0923 07:33:36.578289 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 create -f -'
  I0923 07:33:36.711675 22 builder.go:146] stderr: ""
  I0923 07:33:36.711720 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/25 07:33:36.711
  I0923 07:33:36.711844 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:33:36.781336 22 builder.go:146] stderr: ""
  I0923 07:33:36.781388 22 builder.go:147] stdout: "update-demo-nautilus-l4v5j update-demo-nautilus-vnn8q "
  I0923 07:33:36.781443 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods update-demo-nautilus-l4v5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:33:36.859309 22 builder.go:146] stderr: ""
  I0923 07:33:36.859352 22 builder.go:147] stdout: ""
  I0923 07:33:36.859367 22 kubectl.go:2509] update-demo-nautilus-l4v5j is created but not running
  I0923 07:33:41.860204 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0923 07:33:41.925517 22 builder.go:146] stderr: ""
  I0923 07:33:41.925569 22 builder.go:147] stdout: "update-demo-nautilus-l4v5j update-demo-nautilus-vnn8q "
  I0923 07:33:41.925654 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods update-demo-nautilus-l4v5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:33:41.987751 22 builder.go:146] stderr: ""
  I0923 07:33:41.987811 22 builder.go:147] stdout: "true"
  I0923 07:33:41.987877 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods update-demo-nautilus-l4v5j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:33:42.048708 22 builder.go:146] stderr: ""
  I0923 07:33:42.048751 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:33:42.048765 22 kubectl.go:2400] validating pod update-demo-nautilus-l4v5j
  I0923 07:33:42.052575 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:33:42.052665 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:33:42.052682 22 kubectl.go:2527] update-demo-nautilus-l4v5j is verified up and running
  I0923 07:33:42.052735 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods update-demo-nautilus-vnn8q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0923 07:33:42.114777 22 builder.go:146] stderr: ""
  I0923 07:33:42.114817 22 builder.go:147] stdout: "true"
  I0923 07:33:42.114870 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods update-demo-nautilus-vnn8q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0923 07:33:42.175011 22 builder.go:146] stderr: ""
  I0923 07:33:42.175057 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0923 07:33:42.175072 22 kubectl.go:2400] validating pod update-demo-nautilus-vnn8q
  I0923 07:33:42.180219 22 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0923 07:33:42.180281 22 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0923 07:33:42.180297 22 kubectl.go:2527] update-demo-nautilus-vnn8q is verified up and running
  STEP: using delete to clean up resources @ 09/23/25 07:33:42.18
  I0923 07:33:42.180398 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 delete --grace-period=0 --force -f -'
  I0923 07:33:42.243975 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 07:33:42.244022 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0923 07:33:42.244091 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get rc,svc -l name=update-demo --no-headers'
  I0923 07:33:42.344383 22 builder.go:146] stderr: "No resources found in kubectl-8366 namespace.\n"
  I0923 07:33:42.344651 22 builder.go:147] stdout: ""
  I0923 07:33:42.344738 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8366 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0923 07:33:42.438676 22 builder.go:146] stderr: ""
  I0923 07:33:42.438731 22 builder.go:147] stdout: ""
  I0923 07:33:42.438866 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8366" for this suite. @ 09/23/25 07:33:42.441
â€¢ [5.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/23/25 07:33:42.447
  I0923 07:33:42.447370 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 07:33:42.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:42.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:42.463
  STEP: apply creating a deployment @ 09/23/25 07:33:42.465
  I0923 07:33:42.475046 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3761" for this suite. @ 09/23/25 07:33:42.542
â€¢ [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/23/25 07:33:42.548
  I0923 07:33:42.548540 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 07:33:42.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:42.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:42.56
  STEP: Create a Replicaset @ 09/23/25 07:33:42.564
  STEP: Verify that the required pods have come up. @ 09/23/25 07:33:42.569
  I0923 07:33:42.571307 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0923 07:33:47.574653 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 07:33:47.574
  STEP: Getting /status @ 09/23/25 07:33:47.574
  I0923 07:33:47.577105 22 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/23/25 07:33:47.577
  I0923 07:33:47.583073 22 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/23/25 07:33:47.583
  I0923 07:33:47.584630 22 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0923 07:33:47.584755 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.584866 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.585260 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.585315 22 replica_set.go:682] Found replicaset test-rs in namespace replicaset-4026 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0923 07:33:47.585332 22 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/23/25 07:33:47.585
  I0923 07:33:47.585382 22 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0923 07:33:47.592298 22 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/23/25 07:33:47.592
  I0923 07:33:47.593805 22 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0923 07:33:47.593923 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.594032 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.594387 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.594423 22 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-4026 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 07:33:47.594532 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0923 07:33:47.594565 22 replica_set.go:718] Found replicaset test-rs in namespace replicaset-4026 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0923 07:33:47.594597 22 replica_set.go:729] Replicaset test-rs has a patched status
  I0923 07:33:47.594704 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4026" for this suite. @ 09/23/25 07:33:47.596
â€¢ [5.053 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/23/25 07:33:47.601
  I0923 07:33:47.601632 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename podtemplate @ 09/23/25 07:33:47.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:47.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:47.613
  STEP: Create a pod template @ 09/23/25 07:33:47.616
  STEP: Replace a pod template @ 09/23/25 07:33:47.621
  I0923 07:33:47.627329 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0923 07:33:47.627472 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9362" for this suite. @ 09/23/25 07:33:47.697
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/23/25 07:33:47.706
  I0923 07:33:47.706989 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:33:47.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:47.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:47.72
  STEP: Creating configMap with name configmap-test-volume-1ae2b171-3996-4985-8dc9-4d95ffa60c79 @ 09/23/25 07:33:47.723
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:33:47.731
  STEP: Saw pod success @ 09/23/25 07:33:51.768
  I0923 07:33:51.770352 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-d94574e1-c33e-4cf1-b4ac-ac0371a9a5c2 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:33:51.784
  I0923 07:33:51.797570 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5788" for this suite. @ 09/23/25 07:33:51.799
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/23/25 07:33:51.806
  I0923 07:33:51.806130 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename containers @ 09/23/25 07:33:51.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:51.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:51.821
  STEP: Creating a pod to test override command @ 09/23/25 07:33:51.823
  STEP: Saw pod success @ 09/23/25 07:33:55.839
  I0923 07:33:55.840882 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod client-containers-4d7d2240-92d3-4b8b-91a6-05845a5811b5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:33:55.844
  I0923 07:33:55.857641 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9025" for this suite. @ 09/23/25 07:33:55.86
â€¢ [4.061 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/23/25 07:33:55.867
  I0923 07:33:55.867449 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 07:33:55.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:55.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:55.878
  STEP: creating a Deployment @ 09/23/25 07:33:55.882
  STEP: waiting for Deployment to be created @ 09/23/25 07:33:55.887
  STEP: waiting for all Replicas to be Ready @ 09/23/25 07:33:55.889
  I0923 07:33:55.890184 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.890213 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.904195 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.904237 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.920480 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.920522 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.950649 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:55.950690 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0923 07:33:56.748344 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0923 07:33:56.748391 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0923 07:33:56.947136 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/23/25 07:33:56.947
  I0923 07:33:56.956425 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/23/25 07:33:56.956
  I0923 07:33:56.958096 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958130 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958152 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958163 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958175 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958188 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958300 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958320 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 0
  I0923 07:33:56.958331 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:56.958341 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:56.958353 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.958364 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.958438 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.958460 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.967070 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.967114 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.986285 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:56.986324 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:57.029093 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:57.029139 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:57.041919 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:57.041958 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:57.974707 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:57.974751 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:57.991934 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  STEP: listing Deployments @ 09/23/25 07:33:57.991
  I0923 07:33:57.993805 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/23/25 07:33:57.993
  I0923 07:33:58.006957 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/23/25 07:33:58.007
  I0923 07:33:58.015971 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.021071 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.043566 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.080910 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.096049 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.762068 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:58.994090 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:59.036964 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:59.052063 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0923 07:33:59.769712 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/23/25 07:33:59.834
  STEP: fetching the DeploymentStatus @ 09/23/25 07:33:59.842
  I0923 07:33:59.849565 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:59.849637 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:59.849652 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:59.850061 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:59.850112 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 1
  I0923 07:33:59.850126 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:59.850404 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 3
  I0923 07:33:59.850439 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:59.850452 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 2
  I0923 07:33:59.850575 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-3652 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/23/25 07:33:59.85
  I0923 07:33:59.858339 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.858413 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.858435 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.858865 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.858891 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.859040 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.859230 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.859249 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.859263 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.860004 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.860055 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.860074 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.860747 22 deployment.go:475] observed event type MODIFIED
  I0923 07:33:59.865870 22 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0923 07:33:59.873298 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3652" for this suite. @ 09/23/25 07:33:59.876
â€¢ [4.021 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/23/25 07:33:59.888
  I0923 07:33:59.888291 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/25 07:33:59.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:59.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:59.906
  STEP: getting /apis @ 09/23/25 07:33:59.909
  STEP: getting /apis/node.k8s.io @ 09/23/25 07:33:59.913
  STEP: getting /apis/node.k8s.io/v1 @ 09/23/25 07:33:59.914
  STEP: creating @ 09/23/25 07:33:59.915
  STEP: watching @ 09/23/25 07:33:59.926
  I0923 07:33:59.926917 22 runtimeclass.go:275] starting watch
  STEP: getting @ 09/23/25 07:33:59.933
  STEP: listing @ 09/23/25 07:33:59.935
  STEP: patching @ 09/23/25 07:33:59.936
  STEP: updating @ 09/23/25 07:33:59.941
  I0923 07:33:59.944744 22 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/23/25 07:33:59.945
  STEP: deleting a collection @ 09/23/25 07:33:59.953
  I0923 07:33:59.970507 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9178" for this suite. @ 09/23/25 07:33:59.977
â€¢ [0.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/23/25 07:33:59.983
  I0923 07:33:59.983500 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:33:59.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:33:59.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:33:59.999
  STEP: Creating a pod to test downward api env vars @ 09/23/25 07:34:00.001
  STEP: Saw pod success @ 09/23/25 07:34:04.022
  I0923 07:34:04.024826 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-8be3b03c-832b-47d8-81ac-8f6133b72f8a container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:34:04.029
  I0923 07:34:04.041145 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9288" for this suite. @ 09/23/25 07:34:04.043
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/23/25 07:34:04.063
  I0923 07:34:04.063820 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 07:34:04.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:04.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:04.078
  I0923 07:34:04.080683 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  W0923 07:34:04.081496      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0011b92c0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0923 07:34:06.614817      22 warnings.go:70] unknown field "alpha"
  W0923 07:34:06.614843      22 warnings.go:70] unknown field "beta"
  W0923 07:34:06.614850      22 warnings.go:70] unknown field "delta"
  W0923 07:34:06.614855      22 warnings.go:70] unknown field "epsilon"
  W0923 07:34:06.614861      22 warnings.go:70] unknown field "gamma"
  I0923 07:34:07.147017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4339" for this suite. @ 09/23/25 07:34:07.149
â€¢ [3.091 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/23/25 07:34:07.154
  I0923 07:34:07.154401 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 07:34:07.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:07.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:07.168
  I0923 07:34:07.179519 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0923 07:34:12.182916 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 07:34:12.182
  STEP: Scaling up "test-rs" replicaset @ 09/23/25 07:34:12.183
  I0923 07:34:12.192785 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/23/25 07:34:12.192
  I0923 07:34:12.204737 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-943 with ReadyReplicas 1, AvailableReplicas 1
  I0923 07:34:12.215689 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-943 with ReadyReplicas 1, AvailableReplicas 1
  I0923 07:34:12.239894 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-943 with ReadyReplicas 1, AvailableReplicas 1
  I0923 07:34:12.245494 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-943 with ReadyReplicas 1, AvailableReplicas 1
  I0923 07:34:12.999022 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-943 with ReadyReplicas 2, AvailableReplicas 2
  I0923 07:34:13.788831 22 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-943 with ReadyReplicas 3 found true
  I0923 07:34:13.789024 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-943" for this suite. @ 09/23/25 07:34:13.791
â€¢ [6.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/23/25 07:34:13.797
  I0923 07:34:13.797621 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context-test @ 09/23/25 07:34:13.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:13.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:13.808
  I0923 07:34:17.827733 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-944" for this suite. @ 09/23/25 07:34:17.83
â€¢ [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/23/25 07:34:17.838
  I0923 07:34:17.838365 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename discovery @ 09/23/25 07:34:17.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:17.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:17.852
  STEP: Setting up server cert @ 09/23/25 07:34:17.855
  STEP: Requesting APIResourceList from "/api/v1" @ 09/23/25 07:34:18.234
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/23/25 07:34:18.236
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/23/25 07:34:18.237
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/23/25 07:34:18.238
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/23/25 07:34:18.239
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/23/25 07:34:18.239
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/23/25 07:34:18.24
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/23/25 07:34:18.241
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/23/25 07:34:18.242
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/23/25 07:34:18.242
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/23/25 07:34:18.243
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/23/25 07:34:18.244
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/23/25 07:34:18.245
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/23/25 07:34:18.246
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/23/25 07:34:18.246
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/23/25 07:34:18.247
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/23/25 07:34:18.248
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/23/25 07:34:18.249
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/23/25 07:34:18.249
  I0923 07:34:18.250645 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9859" for this suite. @ 09/23/25 07:34:18.253
â€¢ [0.421 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/23/25 07:34:18.259
  I0923 07:34:18.259503 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/25 07:34:18.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:18.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:18.272
  I0923 07:34:20.304939 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1982" for this suite. @ 09/23/25 07:34:20.307
â€¢ [2.054 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/23/25 07:34:20.313
  I0923 07:34:20.314067 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/25 07:34:20.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:20.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:20.325
  STEP: fetching the /apis discovery document @ 09/23/25 07:34:20.327
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/23/25 07:34:20.328
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/23/25 07:34:20.328
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/23/25 07:34:20.328
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/23/25 07:34:20.328
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/23/25 07:34:20.329
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/23/25 07:34:20.329
  I0923 07:34:20.329950 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7266" for this suite. @ 09/23/25 07:34:20.408
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/23/25 07:34:20.42
  I0923 07:34:20.420346 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 07:34:20.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:34:20.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:34:20.483
  STEP: Looking for a node to schedule job pods @ 09/23/25 07:34:20.485
  STEP: Creating a job @ 09/23/25 07:34:20.508
  STEP: Waiting for all the pods to be ready @ 09/23/25 07:34:20.515
  STEP: Fetch all running pods @ 09/23/25 07:34:24.523
  STEP: Evict all the Pods @ 09/23/25 07:34:24.525
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-zbzds/job-2125 @ 09/23/25 07:34:24.525
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-fpqn7/job-2125 @ 09/23/25 07:34:24.525
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-9ddq9/job-2125 @ 09/23/25 07:34:24.525
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-fpqn7/job-2125 to be deleted @ 09/23/25 07:34:24.549
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-9ddq9/job-2125 to be deleted @ 09/23/25 07:34:24.551
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-zbzds/job-2125 to be deleted @ 09/23/25 07:34:24.643
  STEP: Ensuring job reaches completions @ 09/23/25 07:34:28.651
  I0923 07:35:10.717509 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2125" for this suite. @ 09/23/25 07:35:10.72
â€¢ [50.306 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/23/25 07:35:10.726
  I0923 07:35:10.726655 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:35:10.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:10.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:10.738
  STEP: Setting up server cert @ 09/23/25 07:35:10.76
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:35:11.474
  STEP: Deploying the webhook pod @ 09/23/25 07:35:11.482
  STEP: Wait for the deployment to be ready @ 09/23/25 07:35:11.494
  I0923 07:35:11.502739 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:35:13.509
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:35:13.519
  I0923 07:35:14.519258 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/23/25 07:35:14.525
  I0923 07:35:14.568468 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3412" for this suite. @ 09/23/25 07:35:14.57
  STEP: Destroying namespace "webhook-markers-6126" for this suite. @ 09/23/25 07:35:14.582
â€¢ [3.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/23/25 07:35:14.588
  I0923 07:35:14.588133 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename watch @ 09/23/25 07:35:14.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:14.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:14.612
  STEP: creating a watch on configmaps with label A @ 09/23/25 07:35:14.614
  STEP: creating a watch on configmaps with label B @ 09/23/25 07:35:14.616
  STEP: creating a watch on configmaps with label A or B @ 09/23/25 07:35:14.617
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/23/25 07:35:14.618
  I0923 07:35:14.623270 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7457 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:14.623427 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7457 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/23/25 07:35:14.623
  I0923 07:35:14.629784 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7458 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:14.629915 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7458 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/23/25 07:35:14.629
  I0923 07:35:14.634871 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7459 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:14.635002 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7459 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/23/25 07:35:14.635
  I0923 07:35:14.639779 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7460 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:14.639886 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6479  4becf44c-0f5a-4a2f-8d5a-da1114309801 7460 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/23/25 07:35:14.639
  I0923 07:35:14.644039 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6479  c591fb29-a2a6-4fbd-b3ab-6a7fde09ab25 7461 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:14.644181 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6479  c591fb29-a2a6-4fbd-b3ab-6a7fde09ab25 7461 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/23/25 07:35:24.647
  I0923 07:35:24.653189 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6479  c591fb29-a2a6-4fbd-b3ab-6a7fde09ab25 7540 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:24.653258 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6479  c591fb29-a2a6-4fbd-b3ab-6a7fde09ab25 7540 0 2025-09-23 07:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-23 07:35:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 07:35:34.656493 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6479" for this suite. @ 09/23/25 07:35:34.66
â€¢ [20.077 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/23/25 07:35:34.665
  I0923 07:35:34.665532 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-webhook @ 09/23/25 07:35:34.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:34.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:34.679
  STEP: Setting up server cert @ 09/23/25 07:35:34.681
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/23/25 07:35:35.348
  STEP: Deploying the custom resource conversion webhook pod @ 09/23/25 07:35:35.358
  STEP: Wait for the deployment to be ready @ 09/23/25 07:35:35.374
  I0923 07:35:35.381957 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:35:37.389
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:35:37.407
  I0923 07:35:38.407243 22 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0923 07:35:38.412350 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Creating a v1 custom resource @ 09/23/25 07:35:40.967
  STEP: Create a v2 custom resource @ 09/23/25 07:35:40.983
  STEP: List CRs in v1 @ 09/23/25 07:35:41.015
  STEP: List CRs in v2 @ 09/23/25 07:35:41.017
  I0923 07:35:41.588080 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6114" for this suite. @ 09/23/25 07:35:41.597
â€¢ [6.942 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/23/25 07:35:41.607
  I0923 07:35:41.607622 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename events @ 09/23/25 07:35:41.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:41.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:41.619
  STEP: Create set of events @ 09/23/25 07:35:41.621
  I0923 07:35:41.625978 22 core_events.go:198] created test-event-1
  I0923 07:35:41.629784 22 core_events.go:198] created test-event-2
  I0923 07:35:41.633865 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/23/25 07:35:41.633
  STEP: delete collection of events @ 09/23/25 07:35:41.635
  I0923 07:35:41.635639 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/23/25 07:35:41.647
  I0923 07:35:41.647321 22 core_events.go:230] requesting list of events to confirm quantity
  I0923 07:35:41.648989 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3067" for this suite. @ 09/23/25 07:35:41.696
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/23/25 07:35:41.7
  I0923 07:35:41.700992 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 07:35:41.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:41.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:41.734
  I0923 07:35:41.736763 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0923 07:35:41.753785 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 07:35:41.753
  I0923 07:35:43.760559 22 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0923 07:35:43.769572 22 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0923 07:35:43.778743 22 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0923 07:35:45.783271 22 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0923 07:35:45.784766 22 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0923 07:35:45.789715 22 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7563",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1799d78b-9196-4f4c-bd2f-530dba0a14a5",
      ResourceVersion: (string) (len=4) "7688",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 07:35:45.793135 22 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7563",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0f3bc45-3516-470f-9d73-1ad75e21b6b6",
      ResourceVersion: (string) (len=4) "7678",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1799d78b-9196-4f4c-bd2f-530dba0a14a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 37 39 39 64 37  38 62 2d 39 31 39 36 2d  |\"1799d78b-9196-|
              00000120  34 66 34 63 2d 62 64 32  66 2d 35 33 30 64 62 61  |4f4c-bd2f-530dba|
              00000130  30 61 31 34 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a14a5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:35:45.794480 22 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0923 07:35:45.794940 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7563",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4471adaa-cbdd-4e0b-a22c-a2220c304ea6",
      ResourceVersion: (string) (len=4) "7687",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1799d78b-9196-4f4c-bd2f-530dba0a14a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 37 39 39 64 37 38  |"uid\":\"1799d78|
              000000b0  62 2d 39 31 39 36 2d 34  66 34 63 2d 62 64 32 66  |b-9196-4f4c-bd2f|
              000000c0  2d 35 33 30 64 62 61 30  61 31 34 61 35 5c 22 7d  |-530dba0a14a5\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:35:45.798459 22 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-fmwsh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-fmwsh",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-7563",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "120855f2-fdf6-469a-bb1e-d2f19559c276",
      ResourceVersion: (string) (len=4) "7676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "f0f3bc45-3516-470f-9d73-1ad75e21b6b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 30  66 33 62 63 34 35 2d 33  |d\":\"f0f3bc45-3|
              00000090  35 31 36 2d 34 37 30 66  2d 39 64 37 33 2d 31 61  |516-470f-9d73-1a|
              000000a0  64 37 35 65 32 31 62 36  62 36 5c 22 7d 22 3a 7b  |d75e21b6b6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 35  30 5c 22 7d 22 3a 7b 22  |.244.2.50\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltlxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltlxj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894209743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=11) "10.244.2.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894209743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894209744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d40c3e616ad5e92cdebbf603315e079f8e36f765200a50753585ca5c6019d706",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltlxj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:35:45.800691 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7563" for this suite. @ 09/23/25 07:35:45.802
â€¢ [4.109 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/23/25 07:35:45.809
  I0923 07:35:45.809745 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:35:45.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:45.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:45.826
  STEP: Creating the pod @ 09/23/25 07:35:45.828
  I0923 07:35:48.369641 22 pod_client.go:173] Successfully updated pod "labelsupdatedd21ed6a-4e59-4ac0-9f91-4c4e22b36594"
  I0923 07:35:50.378914 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-959" for this suite. @ 09/23/25 07:35:50.381
â€¢ [4.576 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/23/25 07:35:50.386
  I0923 07:35:50.386411 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 07:35:50.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:50.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:50.398
  STEP: Creating secret with name secret-test-map-f8013503-80b4-4f1f-8fbb-78186698f048 @ 09/23/25 07:35:50.4
  STEP: Creating a pod to test consume secrets @ 09/23/25 07:35:50.405
  STEP: Saw pod success @ 09/23/25 07:35:52.424
  I0923 07:35:52.426605 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-secrets-7cfb1cf6-a95e-42f4-8b55-429b0519170a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:35:52.431
  I0923 07:35:52.443409 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5617" for this suite. @ 09/23/25 07:35:52.446
â€¢ [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/23/25 07:35:52.45
  I0923 07:35:52.450530 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:35:52.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:52.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:52.461
  STEP: Creating a ResourceQuota @ 09/23/25 07:35:52.464
  STEP: Getting a ResourceQuota @ 09/23/25 07:35:52.467
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/23/25 07:35:52.473
  STEP: Patching the ResourceQuota @ 09/23/25 07:35:52.475
  STEP: Deleting a Collection of ResourceQuotas @ 09/23/25 07:35:52.481
  STEP: Verifying the deleted ResourceQuota @ 09/23/25 07:35:52.502
  I0923 07:35:52.504335 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2104" for this suite. @ 09/23/25 07:35:52.546
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/23/25 07:35:52.552
  I0923 07:35:52.552405 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subpath @ 09/23/25 07:35:52.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:35:52.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:35:52.567
  STEP: Setting up data @ 09/23/25 07:35:52.569
  STEP: Creating pod pod-subpath-test-configmap-64vt @ 09/23/25 07:35:52.58
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/25 07:35:52.58
  STEP: Saw pod success @ 09/23/25 07:36:16.632
  I0923 07:36:16.635047 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-subpath-test-configmap-64vt container test-container-subpath-configmap-64vt: <nil>
  STEP: delete the pod @ 09/23/25 07:36:16.639
  STEP: Deleting pod pod-subpath-test-configmap-64vt @ 09/23/25 07:36:16.653
  I0923 07:36:16.653400 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-64vt" in namespace "subpath-6502"
  I0923 07:36:16.655109 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6502" for this suite. @ 09/23/25 07:36:16.661
â€¢ [24.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/23/25 07:36:16.666
  I0923 07:36:16.666342 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:36:16.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:36:16.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:36:16.677
  STEP: creating the pod @ 09/23/25 07:36:16.681
  STEP: submitting the pod to kubernetes @ 09/23/25 07:36:16.681
  W0923 07:36:16.691105      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/23/25 07:36:18.701
  STEP: updating the pod @ 09/23/25 07:36:18.705
  I0923 07:36:19.216423 22 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-998bffa2-cd86-4eda-9625-4f0cb61ef228"
  I0923 07:36:23.223330 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3916" for this suite. @ 09/23/25 07:36:23.226
â€¢ [6.565 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/23/25 07:36:23.231
  I0923 07:36:23.231060 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:36:23.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:36:23.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:36:23.242
  STEP: Counting existing ResourceQuota @ 09/23/25 07:36:23.244
  STEP: Creating a ResourceQuota @ 09/23/25 07:36:28.248
  STEP: Ensuring resource quota status is calculated @ 09/23/25 07:36:28.256
  STEP: Creating a ReplicaSet @ 09/23/25 07:36:30.26
  STEP: Ensuring resource quota status captures replicaset creation @ 09/23/25 07:36:30.283
  STEP: Deleting a ReplicaSet @ 09/23/25 07:36:32.286
  STEP: Ensuring resource quota status released usage @ 09/23/25 07:36:32.291
  I0923 07:36:34.294685 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1523" for this suite. @ 09/23/25 07:36:34.297
â€¢ [11.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/23/25 07:36:34.303
  I0923 07:36:34.303564 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:36:34.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:36:34.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:36:34.318
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/23/25 07:36:34.319
  STEP: Saw pod success @ 09/23/25 07:36:38.336
  I0923 07:36:38.338812 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-176f5895-8878-4075-974f-61655ee74fe6 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:36:38.342
  I0923 07:36:38.354234 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7054" for this suite. @ 09/23/25 07:36:38.356
â€¢ [4.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/23/25 07:36:38.362
  I0923 07:36:38.362501 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 07:36:38.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:36:38.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:36:38.374
  STEP: creating the pod with failed condition @ 09/23/25 07:36:38.376
  STEP: updating the pod @ 09/23/25 07:38:38.386
  I0923 07:38:38.898229 22 pod_client.go:173] Successfully updated pod "var-expansion-aa83f0d6-403b-4ad3-bd5b-30d2633cdf48"
  STEP: waiting for pod running @ 09/23/25 07:38:38.898
  STEP: deleting the pod gracefully @ 09/23/25 07:38:40.902
  I0923 07:38:40.902890 22 delete.go:62] Deleting pod "var-expansion-aa83f0d6-403b-4ad3-bd5b-30d2633cdf48" in namespace "var-expansion-3508"
  I0923 07:38:40.909840 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-aa83f0d6-403b-4ad3-bd5b-30d2633cdf48" to be fully deleted
  I0923 07:39:12.968992 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3508" for this suite. @ 09/23/25 07:39:12.971
â€¢ [154.614 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/23/25 07:39:12.977
  I0923 07:39:12.977051 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:39:12.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:39:12.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:39:12.989
  STEP: creating service endpoint-test2 in namespace services-9108 @ 09/23/25 07:39:12.992
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9108 to expose endpoints map[] @ 09/23/25 07:39:13.002
  I0923 07:39:13.006704 22 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0923 07:39:14.011660 22 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9108 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9108 @ 09/23/25 07:39:14.011
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9108 to expose endpoints map[pod1:[80]] @ 09/23/25 07:39:16.025
  I0923 07:39:16.031492 22 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9108 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/23/25 07:39:16.031
  I0923 07:39:16.031559 22 resource.go:361] Creating new exec pod
  I0923 07:39:19.043349 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0923 07:39:19.160313 22 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.96.36.181) 80 port [tcp/http] succeeded!\n"
  I0923 07:39:19.160363 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:39:19.160454 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.36.181 80'
  I0923 07:39:19.269315 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.36.181 80\nConnection to 10.96.36.181 80 port [tcp/http] succeeded!\n"
  I0923 07:39:19.269362 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9108 @ 09/23/25 07:39:19.269
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9108 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/23/25 07:39:21.282
  I0923 07:39:21.293458 22 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9108 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/23/25 07:39:21.293
  I0923 07:39:22.293807 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0923 07:39:22.401246 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.96.36.181) 80 port [tcp/http] succeeded!\n"
  I0923 07:39:22.401301 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:39:22.401397 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.36.181 80'
  I0923 07:39:22.509169 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.36.181 80\nConnection to 10.96.36.181 80 port [tcp/http] succeeded!\n"
  I0923 07:39:22.509223 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9108 @ 09/23/25 07:39:22.509
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9108 to expose endpoints map[pod2:[80]] @ 09/23/25 07:39:22.535
  I0923 07:39:22.545611 22 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9108 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/23/25 07:39:22.545
  I0923 07:39:23.546053 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0923 07:39:23.665217 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.96.36.181) 80 port [tcp/http] succeeded!\n"
  I0923 07:39:23.665273 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:39:23.665370 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-9108 exec execpodn49tl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.36.181 80'
  I0923 07:39:23.771652 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.96.36.181 80\n+ echo hostName\nConnection to 10.96.36.181 80 port [tcp/http] succeeded!\n"
  I0923 07:39:23.771701 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9108 @ 09/23/25 07:39:23.771
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9108 to expose endpoints map[] @ 09/23/25 07:39:23.782
  I0923 07:39:23.798337 22 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9108 exposes endpoints map[]
  I0923 07:39:23.823349 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9108" for this suite. @ 09/23/25 07:39:23.828
â€¢ [10.859 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/23/25 07:39:23.836
  I0923 07:39:23.836371 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:39:23.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:39:23.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:39:23.848
  STEP: Creating configMap with name configmap-test-volume-map-2df20cac-cc65-4c70-8165-0ff1e0b9065a @ 09/23/25 07:39:23.85
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:39:23.855
  STEP: Saw pod success @ 09/23/25 07:39:25.866
  I0923 07:39:25.867872 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-d1c9247c-fcf0-4f7e-a94b-0ade995d10c7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:39:25.879
  I0923 07:39:25.892629 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7834" for this suite. @ 09/23/25 07:39:25.895
â€¢ [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/23/25 07:39:25.9
  I0923 07:39:25.900082 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename endpointslice @ 09/23/25 07:39:25.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:39:25.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:39:25.929
  STEP: getting /apis @ 09/23/25 07:39:25.931
  STEP: getting /apis/discovery.k8s.io @ 09/23/25 07:39:25.934
  STEP: getting /apis/discovery.k8s.iov1 @ 09/23/25 07:39:25.935
  STEP: creating @ 09/23/25 07:39:25.935
  STEP: getting @ 09/23/25 07:39:25.947
  STEP: listing @ 09/23/25 07:39:25.948
  STEP: watching @ 09/23/25 07:39:25.95
  I0923 07:39:25.950800 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/23/25 07:39:25.951
  STEP: cluster-wide watching @ 09/23/25 07:39:25.955
  I0923 07:39:25.955958 22 endpointslice.go:459] starting watch
  STEP: patching @ 09/23/25 07:39:25.956
  STEP: updating @ 09/23/25 07:39:25.962
  I0923 07:39:25.967885 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0923 07:39:25.968214 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/23/25 07:39:25.968
  STEP: deleting a collection @ 09/23/25 07:39:25.975
  I0923 07:39:25.985797 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2527" for this suite. @ 09/23/25 07:39:25.996
â€¢ [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/23/25 07:39:26.001
  I0923 07:39:26.001189 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename aggregator @ 09/23/25 07:39:26.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:39:26.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:39:26.017
  I0923 07:39:26.019035 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Registering the sample API server. @ 09/23/25 07:39:26.019
  I0923 07:39:26.548492 22 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0923 07:39:26.578377 22 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0923 07:39:28.615014 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:30.617935 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:32.618244 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:34.617886 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:36.618830 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:38.617920 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:40.618312 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:42.619249 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:44.617650 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:46.618639 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:48.619058 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:50.617765 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0923 07:39:52.732640 22 aggregator.go:755] Waited 110.069796ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/23/25 07:39:52.767
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/23/25 07:39:52.769
  STEP: List APIServices @ 09/23/25 07:39:52.783
  I0923 07:39:52.788328 22 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/23/25 07:39:52.788
  I0923 07:39:52.800657 22 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/23/25 07:39:52.8
  I0923 07:39:52.813307 22 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 52, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/23/25 07:39:52.813
  I0923 07:39:52.815945 22 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-23 07:39:52 +0000 UTC Passed all checks passed}
  I0923 07:39:52.815987 22 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 07:39:52.816003 22 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/23/25 07:39:52.816
  I0923 07:39:52.826968 22 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1729340074" @ 09/23/25 07:39:52.827
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/23/25 07:39:52.837
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/23/25 07:39:52.846
  STEP: Patch APIService Status @ 09/23/25 07:39:52.847
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/23/25 07:39:52.854
  I0923 07:39:52.857197 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-23 07:39:52 +0000 UTC Passed all checks passed}
  I0923 07:39:52.857242 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 07:39:52.857265 22 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0923 07:39:52.857283 22 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/23/25 07:39:52.857
  STEP: Confirm that the generated APIService has been deleted @ 09/23/25 07:39:52.862
  I0923 07:39:52.862378 22 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0923 07:39:52.863916 22 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0923 07:39:52.863953 22 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0923 07:39:52.979570 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7731" for this suite. @ 09/23/25 07:39:52.988
â€¢ [26.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/23/25 07:39:52.999
  I0923 07:39:52.999763 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/23/25 07:39:53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:39:53.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:39:53.019
  STEP: Setting up server cert @ 09/23/25 07:39:53.022
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/23/25 07:39:53.418
  STEP: Deploying the custom resource conversion webhook pod @ 09/23/25 07:39:53.424
  STEP: Wait for the deployment to be ready @ 09/23/25 07:39:53.434
  I0923 07:39:53.442908 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0923 07:39:55.449542 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 7, 39, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 7, 39, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/23/25 07:39:57.452
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:39:57.474
  I0923 07:39:58.474579 22 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/23/25 07:39:58.479
  I0923 07:39:58.479203 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Creating a custom resource conversion webhook @ 09/23/25 07:39:58.99
  STEP: Watching with field selectors @ 09/23/25 07:40:01.037
  STEP: Registering informers with field selectors @ 09/23/25 07:40:01.042
  STEP: Creating custom resources @ 09/23/25 07:40:01.042
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/23/25 07:40:01.071
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/23/25 07:40:01.073
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/23/25 07:40:01.075
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/23/25 07:40:01.076
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/23/25 07:40:01.078
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/23/25 07:40:01.083
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/23/25 07:40:01.083
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/23/25 07:40:01.083
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/23/25 07:40:01.083
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/23/25 07:40:01.084
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/23/25 07:40:01.092
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/23/25 07:40:01.102
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/23/25 07:40:01.104
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/23/25 07:40:01.106
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/23/25 07:40:01.111
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/23/25 07:40:01.111
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/23/25 07:40:01.111
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/23/25 07:40:01.111
  I0923 07:40:01.690628 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-8100" for this suite. @ 09/23/25 07:40:01.697
â€¢ [8.711 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/23/25 07:40:01.711
  I0923 07:40:01.711208 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename events @ 09/23/25 07:40:01.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:01.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:01.735
  STEP: creating a test event @ 09/23/25 07:40:01.737
  STEP: listing events in all namespaces @ 09/23/25 07:40:01.746
  STEP: listing events in test namespace @ 09/23/25 07:40:01.75
  STEP: listing events with field selection filtering on source @ 09/23/25 07:40:01.752
  STEP: listing events with field selection filtering on reportingController @ 09/23/25 07:40:01.753
  STEP: getting the test event @ 09/23/25 07:40:01.755
  STEP: patching the test event @ 09/23/25 07:40:01.756
  STEP: getting the test event @ 09/23/25 07:40:01.764
  STEP: updating the test event @ 09/23/25 07:40:01.766
  STEP: getting the test event @ 09/23/25 07:40:01.773
  STEP: deleting the test event @ 09/23/25 07:40:01.775
  STEP: listing events in all namespaces @ 09/23/25 07:40:01.781
  STEP: listing events in test namespace @ 09/23/25 07:40:01.788
  I0923 07:40:01.789830 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6641" for this suite. @ 09/23/25 07:40:01.796
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/23/25 07:40:01.802
  I0923 07:40:01.802396 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:40:01.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:01.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:01.818
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/23/25 07:40:01.82
  STEP: Saw pod success @ 09/23/25 07:40:05.835
  I0923 07:40:05.837785 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-204dc883-50a7-4037-b0e2-a188932e367c container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:40:05.841
  I0923 07:40:05.853936 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2052" for this suite. @ 09/23/25 07:40:05.862
â€¢ [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/23/25 07:40:05.866
  I0923 07:40:05.866518 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context-test @ 09/23/25 07:40:05.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:05.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:05.878
  I0923 07:40:09.902480 22 security_context.go:538] Got logs for pod "busybox-privileged-false-ba7ffab3-3bcc-49c9-a147-d2cca3775595": "ip: RTNETLINK answers: Operation not permitted\n"
  I0923 07:40:09.902628 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9716" for this suite. @ 09/23/25 07:40:09.904
â€¢ [4.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/23/25 07:40:09.911
  I0923 07:40:09.911328 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:40:09.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:09.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:09.94
  STEP: Setting up server cert @ 09/23/25 07:40:09.956
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:40:10.215
  STEP: Deploying the webhook pod @ 09/23/25 07:40:10.221
  STEP: Wait for the deployment to be ready @ 09/23/25 07:40:10.233
  I0923 07:40:10.248735 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:40:12.258
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:40:12.271
  I0923 07:40:13.271477 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/23/25 07:40:13.276
  I0923 07:40:13.341331 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2498" for this suite. @ 09/23/25 07:40:13.346
  STEP: Destroying namespace "webhook-markers-6669" for this suite. @ 09/23/25 07:40:13.353
â€¢ [3.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/23/25 07:40:13.361
  I0923 07:40:13.361600 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/23/25 07:40:13.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:13.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:13.375
  STEP: Cleaning up the secret @ 09/23/25 07:40:15.4
  STEP: Cleaning up the configmap @ 09/23/25 07:40:15.405
  STEP: Cleaning up the pod @ 09/23/25 07:40:15.411
  I0923 07:40:15.421037 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9000" for this suite. @ 09/23/25 07:40:15.423
â€¢ [2.067 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 09/23/25 07:40:15.428
  I0923 07:40:15.428898 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 07:40:15.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:15.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:15.445
  I0923 07:40:15.448696 22 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-4427"
  I0923 07:40:15.453654 22 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-4427"
  STEP: waiting for a new root ca configmap created @ 09/23/25 07:40:15.954
  I0923 07:40:15.956821 22 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-4427"
  I0923 07:40:15.961441 22 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-4427"
  STEP: waiting for the root ca configmap reconciled @ 09/23/25 07:40:16.462
  I0923 07:40:16.464958 22 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-4427"
  I0923 07:40:16.465156 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4427" for this suite. @ 09/23/25 07:40:16.467
â€¢ [1.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 09/23/25 07:40:16.476
  I0923 07:40:16.476202 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:40:16.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:16.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:16.502
  STEP: creating a collection of services @ 09/23/25 07:40:16.505
  I0923 07:40:16.505233 22 service.go:3635] Creating e2e-svc-a-5h54s
  I0923 07:40:16.515748 22 service.go:3635] Creating e2e-svc-b-gw46k
  I0923 07:40:16.529072 22 service.go:3635] Creating e2e-svc-c-mg25z
  STEP: deleting service collection @ 09/23/25 07:40:16.542
  I0923 07:40:16.570913 22 service.go:3670] Collection of services has been deleted
  I0923 07:40:16.571058 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2717" for this suite. @ 09/23/25 07:40:16.573
â€¢ [0.103 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/23/25 07:40:16.579
  I0923 07:40:16.579611 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/25 07:40:16.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:16.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:16.589
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/25 07:40:16.673
  STEP: create the pod with lifecycle hook @ 09/23/25 07:40:18.691
  STEP: check poststart hook @ 09/23/25 07:40:20.707
  STEP: delete the pod with lifecycle hook @ 09/23/25 07:40:20.719
  I0923 07:40:22.733412 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2417" for this suite. @ 09/23/25 07:40:22.736
â€¢ [6.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/23/25 07:40:22.741
  I0923 07:40:22.741425 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename cronjob @ 09/23/25 07:40:22.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:40:22.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:40:22.752
  STEP: Creating a ForbidConcurrent cronjob @ 09/23/25 07:40:22.754
  STEP: Ensuring a job is scheduled @ 09/23/25 07:40:22.759
  STEP: Ensuring exactly one is scheduled @ 09/23/25 07:41:00.762
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/23/25 07:41:00.763
  STEP: Ensuring no more jobs are scheduled @ 09/23/25 07:41:00.769
  STEP: Removing cronjob @ 09/23/25 07:41:00.772
  I0923 07:41:00.778694 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-981" for this suite. @ 09/23/25 07:41:00.781
â€¢ [38.047 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/23/25 07:41:00.788
  I0923 07:41:00.788571 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 07:41:00.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:00.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:00.809
  STEP: Creating a pod to test env composition @ 09/23/25 07:41:00.811
  STEP: Saw pod success @ 09/23/25 07:41:04.826
  I0923 07:41:04.828908 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod var-expansion-0b58ca08-1027-4c6e-9038-f1b3657a6b47 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:41:04.837
  I0923 07:41:04.853128 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7557" for this suite. @ 09/23/25 07:41:04.858
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/23/25 07:41:04.87
  I0923 07:41:04.870110 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 07:41:04.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:04.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:04.884
  I0923 07:41:04.886466 22 replica_set.go:191] Creating ReplicaSet my-hostname-basic-db70179f-2cff-4307-adea-b8922cc1b3cc
  I0923 07:41:04.894713 22 resource.go:87] Pod name my-hostname-basic-db70179f-2cff-4307-adea-b8922cc1b3cc: Found 0 pods out of 1
  I0923 07:41:09.901778 22 resource.go:87] Pod name my-hostname-basic-db70179f-2cff-4307-adea-b8922cc1b3cc: Found 1 pods out of 1
  I0923 07:41:09.901823 22 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-db70179f-2cff-4307-adea-b8922cc1b3cc" is running
  I0923 07:41:09.905106 22 replica_set.go:220] Pod "my-hostname-basic-db70179f-2cff-4307-adea-b8922cc1b3cc-2kbqm" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:41:05 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:41:04 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:41:05 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:41:05 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:41:04 +0000 UTC Reason: Message:}])
  I0923 07:41:09.905153 22 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/23/25 07:41:09.905
  I0923 07:41:10.017131 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4726" for this suite. @ 09/23/25 07:41:10.02
â€¢ [5.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/23/25 07:41:10.027
  I0923 07:41:10.027493 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sysctl @ 09/23/25 07:41:10.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:10.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:10.037
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/23/25 07:41:10.041
  STEP: Watching for error events or started pod @ 09/23/25 07:41:10.047
  STEP: Waiting for pod completion @ 09/23/25 07:41:12.05
  STEP: Checking that the pod succeeded @ 09/23/25 07:41:12.054
  STEP: Getting logs from the pod @ 09/23/25 07:41:12.054
  STEP: Checking that the sysctl is actually updated @ 09/23/25 07:41:12.057
  I0923 07:41:12.058130 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4702" for this suite. @ 09/23/25 07:41:12.06
â€¢ [2.039 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/23/25 07:41:12.066
  I0923 07:41:12.066262 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:41:12.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:12.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:12.087
  STEP: creating service nodeport-test with type=NodePort in namespace services-3037 @ 09/23/25 07:41:12.089
  STEP: creating replication controller nodeport-test in namespace services-3037 @ 09/23/25 07:41:12.104
  I0923 07:41:12.111133      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3037, replica count: 2
  I0923 07:41:15.162781      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 07:41:15.162826 22 resource.go:361] Creating new exec pod
  I0923 07:41:18.178828 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3037 exec execpodr68mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0923 07:41:18.298007 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.110.71.252) 80 port [tcp/http] succeeded!\n"
  I0923 07:41:18.298058 22 builder.go:147] stdout: "nodeport-test-zn25f"
  I0923 07:41:18.298162 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3037 exec execpodr68mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.71.252 80'
  I0923 07:41:18.402284 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.71.252 80\nConnection to 10.110.71.252 80 port [tcp/http] succeeded!\n"
  I0923 07:41:18.402343 22 builder.go:147] stdout: "nodeport-test-jppwk"
  I0923 07:41:18.402438 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3037 exec execpodr68mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.4 31446'
  I0923 07:41:18.519263 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.4 31446\nConnection to 172.19.1.4 31446 port [tcp/*] succeeded!\n"
  I0923 07:41:18.519312 22 builder.go:147] stdout: "nodeport-test-zn25f"
  I0923 07:41:18.519408 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3037 exec execpodr68mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 31446'
  I0923 07:41:18.642466 22 builder.go:146] stderr: "+ nc -v -t -w 2 172.19.1.5 31446\n+ echo hostName\nConnection to 172.19.1.5 31446 port [tcp/*] succeeded!\n"
  I0923 07:41:18.642514 22 builder.go:147] stdout: "nodeport-test-zn25f"
  I0923 07:41:18.642694 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3037" for this suite. @ 09/23/25 07:41:18.645
â€¢ [6.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/23/25 07:41:18.651
  I0923 07:41:18.652020 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 07:41:18.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:18.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:18.664
  STEP: create the rc @ 09/23/25 07:41:18.746
  W0923 07:41:18.751517      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/23/25 07:41:24.757
  STEP: wait for the rc to be deleted @ 09/23/25 07:41:24.762
  I0923 07:41:25.812769 22 garbage_collector.go:670] 80 pods remaining
  I0923 07:41:25.812822 22 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0923 07:41:25.813136 22 garbage_collector.go:678] 
  I0923 07:41:26.808258 22 garbage_collector.go:670] 70 pods remaining
  I0923 07:41:26.808327 22 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0923 07:41:26.808339 22 garbage_collector.go:678] 
  I0923 07:41:27.819264 22 garbage_collector.go:670] 60 pods remaining
  I0923 07:41:27.821570 22 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0923 07:41:27.822017 22 garbage_collector.go:678] 
  I0923 07:41:28.797063 22 garbage_collector.go:670] 40 pods remaining
  I0923 07:41:28.797921 22 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0923 07:41:28.798146 22 garbage_collector.go:678] 
  I0923 07:41:29.777796 22 garbage_collector.go:670] 31 pods remaining
  I0923 07:41:29.778702 22 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0923 07:41:29.778728 22 garbage_collector.go:678] 
  I0923 07:41:30.799306 22 garbage_collector.go:670] 20 pods remaining
  I0923 07:41:30.799362 22 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0923 07:41:30.799382 22 garbage_collector.go:678] 
  STEP: Gathering metrics @ 09/23/25 07:41:31.77
  I0923 07:41:32.044379 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 07:41:32.045162 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2605" for this suite. @ 09/23/25 07:41:32.049
â€¢ [13.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/23/25 07:41:32.059
  I0923 07:41:32.059894 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/23/25 07:41:32.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:32.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:32.093
  STEP: Creating 50 configmaps @ 09/23/25 07:41:32.097
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/25 07:41:32.371
  I0923 07:41:32.445395 22 resource.go:87] Pod name wrapped-volume-race-c8a8a31c-4602-411c-8861-e3ada24da6ec: Found 3 pods out of 5
  I0923 07:41:37.450390 22 resource.go:87] Pod name wrapped-volume-race-c8a8a31c-4602-411c-8861-e3ada24da6ec: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/25 07:41:37.45
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/25 07:41:41.477
  I0923 07:41:41.490746 22 resource.go:87] Pod name wrapped-volume-race-f0ec1f2e-8dea-486f-8cdc-93533f9e9c23: Found 0 pods out of 5
  I0923 07:41:46.496457 22 resource.go:87] Pod name wrapped-volume-race-f0ec1f2e-8dea-486f-8cdc-93533f9e9c23: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/25 07:41:46.496
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/25 07:41:46.51
  I0923 07:41:46.530115 22 resource.go:87] Pod name wrapped-volume-race-5d48df27-d6d9-428f-ba0e-85c6a107fbca: Found 1 pods out of 5
  I0923 07:41:51.535205 22 resource.go:87] Pod name wrapped-volume-race-5d48df27-d6d9-428f-ba0e-85c6a107fbca: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/25 07:41:51.535
  STEP: deleting ReplicationController wrapped-volume-race-5d48df27-d6d9-428f-ba0e-85c6a107fbca in namespace emptydir-wrapper-1371, will wait for the garbage collector to delete the pods @ 09/23/25 07:41:51.545
  I0923 07:41:51.603649 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-5d48df27-d6d9-428f-ba0e-85c6a107fbca took: 5.748602ms
  I0923 07:41:51.704185 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-5d48df27-d6d9-428f-ba0e-85c6a107fbca pods took: 100.519311ms
  STEP: deleting ReplicationController wrapped-volume-race-f0ec1f2e-8dea-486f-8cdc-93533f9e9c23 in namespace emptydir-wrapper-1371, will wait for the garbage collector to delete the pods @ 09/23/25 07:41:53.604
  I0923 07:41:53.665500 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-f0ec1f2e-8dea-486f-8cdc-93533f9e9c23 took: 7.551444ms
  I0923 07:41:53.766576 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-f0ec1f2e-8dea-486f-8cdc-93533f9e9c23 pods took: 101.071327ms
  STEP: deleting ReplicationController wrapped-volume-race-c8a8a31c-4602-411c-8861-e3ada24da6ec in namespace emptydir-wrapper-1371, will wait for the garbage collector to delete the pods @ 09/23/25 07:41:54.767
  I0923 07:41:54.829100 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-c8a8a31c-4602-411c-8861-e3ada24da6ec took: 6.571812ms
  I0923 07:41:54.930021 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-c8a8a31c-4602-411c-8861-e3ada24da6ec pods took: 100.917507ms
  STEP: Cleaning up the configMaps @ 09/23/25 07:41:56.631
  I0923 07:41:56.889800 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1371" for this suite. @ 09/23/25 07:41:56.892
â€¢ [24.843 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/23/25 07:41:56.903
  I0923 07:41:56.903186 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/23/25 07:41:56.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:56.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:56.919
  STEP: creating a policy with variables @ 09/23/25 07:41:56.935
  STEP: waiting until the marker is denied @ 09/23/25 07:41:56.989
  STEP: testing a replicated Deployment to be allowed @ 09/23/25 07:41:57.994
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/23/25 07:41:58.01
  I0923 07:41:58.070845 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5265" for this suite. @ 09/23/25 07:41:58.093
â€¢ [1.207 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/23/25 07:41:58.11
  I0923 07:41:58.110717 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:41:58.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:41:58.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:41:58.126
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/23/25 07:41:58.128
  STEP: Saw pod success @ 09/23/25 07:42:02.143
  I0923 07:42:02.145830 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-8b66b5dc-2222-4ce4-871f-702e549724be container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:42:02.15
  I0923 07:42:02.173645 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4009" for this suite. @ 09/23/25 07:42:02.177
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/23/25 07:42:02.186
  I0923 07:42:02.186661 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename limitrange @ 09/23/25 07:42:02.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:02.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:02.208
  STEP: Creating a LimitRange @ 09/23/25 07:42:02.21
  STEP: Setting up watch @ 09/23/25 07:42:02.21
  STEP: Submitting a LimitRange @ 09/23/25 07:42:02.313
  STEP: Verifying LimitRange creation was observed @ 09/23/25 07:42:02.319
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/23/25 07:42:02.319
  I0923 07:42:02.321884 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0923 07:42:02.321934 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/23/25 07:42:02.321
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/23/25 07:42:02.329
  I0923 07:42:02.337628 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0923 07:42:02.337678 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/23/25 07:42:02.337
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/23/25 07:42:02.347
  I0923 07:42:02.350963 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0923 07:42:02.351012 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/23/25 07:42:02.351
  STEP: Failing to create a Pod with more than max resources @ 09/23/25 07:42:02.353
  STEP: Updating a LimitRange @ 09/23/25 07:42:02.355
  STEP: Verifying LimitRange updating is effective @ 09/23/25 07:42:02.361
  STEP: Creating a Pod with less than former min resources @ 09/23/25 07:42:04.364
  STEP: Failing to create a Pod with more than max resources @ 09/23/25 07:42:04.37
  STEP: Deleting a LimitRange @ 09/23/25 07:42:04.373
  STEP: Verifying the LimitRange was deleted @ 09/23/25 07:42:04.382
  I0923 07:42:09.386795 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/23/25 07:42:09.386
  I0923 07:42:09.393550 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2552" for this suite. @ 09/23/25 07:42:09.396
â€¢ [7.222 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/23/25 07:42:09.408
  I0923 07:42:09.408905 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 07:42:09.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:09.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:09.427
  I0923 07:42:09.430469 22 deployment.go:1645] Creating simple deployment test-new-deployment
  I0923 07:42:09.441776 22 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/23/25 07:42:11.452
  STEP: updating a scale subresource @ 09/23/25 07:42:11.454
  STEP: verifying the deployment Spec.Replicas was modified @ 09/23/25 07:42:11.461
  STEP: Patch a scale subresource @ 09/23/25 07:42:11.464
  I0923 07:42:11.496248 22 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02fe92d9-fc1a-4a2d-8b30-976c458d56cc",
      ResourceVersion: (string) (len=5) "11474",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 07:42:11.565366 22 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19d947a5-346e-42da-803c-3b89f86d47c5",
      ResourceVersion: (string) (len=5) "11491",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "02fe92d9-fc1a-4a2d-8b30-976c458d56cc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 32 66 65 39 32  64 39 2d 66 63 31 61 2d  |\"02fe92d9-fc1a-|
              00000120  34 61 32 64 2d 38 62 33  30 2d 39 37 36 63 34 35  |4a2d-8b30-976c45|
              00000130  38 64 35 36 63 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8d56cc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:42:11.621203 22 deployment.go:68] Pod "test-new-deployment-685b768f58-fqm4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-fqm4z",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09ad3216-7ea9-463a-ae10-f6fb8b71484e",
      ResourceVersion: (string) (len=5) "11490",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "19d947a5-346e-42da-803c-3b89f86d47c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  64 39 34 37 61 35 2d 33  |d\":\"19d947a5-3|
              00000090  34 36 65 2d 34 32 64 61  2d 38 30 33 63 2d 33 62  |46e-42da-803c-3b|
              000000a0  38 39 66 38 36 64 34 37  63 35 5c 22 7d 22 3a 7b  |89f86d47c5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnl98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnl98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:42:11.623190 22 deployment.go:68] Pod "test-new-deployment-685b768f58-ftnsx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-ftnsx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2933beff-d2ac-480e-9bc8-4486721064eb",
      ResourceVersion: (string) (len=5) "11466",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "19d947a5-346e-42da-803c-3b89f86d47c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  64 39 34 37 61 35 2d 33  |d\":\"19d947a5-3|
              00000090  34 36 65 2d 34 32 64 61  2d 38 30 33 63 2d 33 62  |46e-42da-803c-3b|
              000000a0  38 39 66 38 36 64 34 37  63 35 5c 22 7d 22 3a 7b  |89f86d47c5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  36 31 5c 22 7d 22 3a 7b  |.244.1.161\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdljl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdljl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=12) "10.244.1.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894210130,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a01561ae72dfb2f2d9cb09f9df10e0e8122f399f1a65250f1c0db0157eabc962",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vdljl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:42:11.625982 22 deployment.go:68] Pod "test-new-deployment-685b768f58-wqhqx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-wqhqx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8dfc7b3e-57b6-4cee-8562-5907b2c91bb3",
      ResourceVersion: (string) (len=5) "11482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "19d947a5-346e-42da-803c-3b89f86d47c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  64 39 34 37 61 35 2d 33  |d\":\"19d947a5-3|
              00000090  34 36 65 2d 34 32 64 61  2d 38 30 33 63 2d 33 62  |46e-42da-803c-3b|
              000000a0  38 39 66 38 36 64 34 37  63 35 5c 22 7d 22 3a 7b  |89f86d47c5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ms54",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ms54",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2ms54",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:42:11.629178 22 deployment.go:68] Pod "test-new-deployment-685b768f58-zpw52" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-zpw52",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa356379-e5f5-472d-b9d0-c320950c7960",
      ResourceVersion: (string) (len=5) "11495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "19d947a5-346e-42da-803c-3b89f86d47c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 39  64 39 34 37 61 35 2d 33  |d\":\"19d947a5-3|
              00000090  34 36 65 2d 34 32 64 61  2d 38 30 33 63 2d 33 62  |46e-42da-803c-3b|
              000000a0  38 39 66 38 36 64 34 37  63 35 5c 22 7d 22 3a 7b  |89f86d47c5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4rkh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4rkh7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4rkh7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:42:11.635999 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7599" for this suite. @ 09/23/25 07:42:11.661
â€¢ [2.257 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/23/25 07:42:11.666
  I0923 07:42:11.666716 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-runtime @ 09/23/25 07:42:11.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:11.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:11.679
  STEP: create the container @ 09/23/25 07:42:11.681
  W0923 07:42:11.687879      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/25 07:42:11.688
  STEP: get the container status @ 09/23/25 07:42:14.699
  STEP: the container should be terminated @ 09/23/25 07:42:14.701
  STEP: the termination message should be set @ 09/23/25 07:42:14.701
  I0923 07:42:14.701274 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/23/25 07:42:14.701
  I0923 07:42:14.715204 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4852" for this suite. @ 09/23/25 07:42:14.717
â€¢ [3.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/23/25 07:42:14.723
  I0923 07:42:14.723954 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:42:14.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:14.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:14.735
  STEP: Creating projection with secret that has name projected-secret-test-1fbc1c1b-ec1e-4970-92b0-fec14ad3ae31 @ 09/23/25 07:42:14.737
  STEP: Creating a pod to test consume secrets @ 09/23/25 07:42:14.742
  STEP: Saw pod success @ 09/23/25 07:42:18.765
  I0923 07:42:18.767394 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-8595fbe6-90ce-4d38-aad3-4ecc9fda3b54 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:42:18.771
  I0923 07:42:18.785443 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8754" for this suite. @ 09/23/25 07:42:18.787
â€¢ [4.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/23/25 07:42:18.794
  I0923 07:42:18.794478 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 07:42:18.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:18.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:18.856
  STEP: Creating a pod to test substitution in container's command @ 09/23/25 07:42:18.858
  STEP: Saw pod success @ 09/23/25 07:42:20.873
  I0923 07:42:20.874830 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod var-expansion-f854cf2e-3c81-4f71-924d-f3909af6ff7e container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:42:20.878
  I0923 07:42:20.890370 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-733" for this suite. @ 09/23/25 07:42:20.892
â€¢ [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/23/25 07:42:20.898
  I0923 07:42:20.898360 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 07:42:20.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:20.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:20.935
  STEP: create the rc1 @ 09/23/25 07:42:20.993
  STEP: create the rc2 @ 09/23/25 07:42:20.998
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/23/25 07:42:27.006
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/23/25 07:42:27.51
  STEP: wait for the rc to be deleted @ 09/23/25 07:42:27.515
  I0923 07:42:32.542852 22 garbage_collector.go:762] 70 pods remaining
  I0923 07:42:32.542923 22 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0923 07:42:32.542935 22 garbage_collector.go:770] 
  STEP: Gathering metrics @ 09/23/25 07:42:37.524
  I0923 07:42:37.609983 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 07:42:37.610104 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28xtz" in namespace "gc-5186"
  I0923 07:42:37.627206 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2c74z" in namespace "gc-5186"
  I0923 07:42:37.637650 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2cmp2" in namespace "gc-5186"
  I0923 07:42:37.654444 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jqsm" in namespace "gc-5186"
  I0923 07:42:37.664932 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4fl57" in namespace "gc-5186"
  I0923 07:42:37.676571 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mxl7" in namespace "gc-5186"
  I0923 07:42:37.709904 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zpvm" in namespace "gc-5186"
  I0923 07:42:37.722417 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pprc" in namespace "gc-5186"
  I0923 07:42:37.741059 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6t45c" in namespace "gc-5186"
  I0923 07:42:37.758404 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xrbb" in namespace "gc-5186"
  I0923 07:42:37.771170 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-768h5" in namespace "gc-5186"
  I0923 07:42:37.788187 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7d8qg" in namespace "gc-5186"
  I0923 07:42:37.802263 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qnxt" in namespace "gc-5186"
  I0923 07:42:37.817643 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vcw7" in namespace "gc-5186"
  I0923 07:42:37.839731 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86phg" in namespace "gc-5186"
  I0923 07:42:37.849080 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87696" in namespace "gc-5186"
  I0923 07:42:37.860536 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89r6x" in namespace "gc-5186"
  I0923 07:42:37.873482 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8c7rj" in namespace "gc-5186"
  I0923 07:42:37.883971 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8zgvd" in namespace "gc-5186"
  I0923 07:42:37.894971 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9464x" in namespace "gc-5186"
  I0923 07:42:37.909301 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dv89" in namespace "gc-5186"
  I0923 07:42:37.922084 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfk95" in namespace "gc-5186"
  I0923 07:42:37.933247 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgh9s" in namespace "gc-5186"
  I0923 07:42:37.972127 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2965" in namespace "gc-5186"
  I0923 07:42:37.981883 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c7dbp" in namespace "gc-5186"
  I0923 07:42:37.992906 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9cm4" in namespace "gc-5186"
  I0923 07:42:38.004919 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdc5j" in namespace "gc-5186"
  I0923 07:42:38.018754 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clrzt" in namespace "gc-5186"
  I0923 07:42:38.031425 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clwp9" in namespace "gc-5186"
  I0923 07:42:38.043087 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqml2" in namespace "gc-5186"
  I0923 07:42:38.078900 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cz5cq" in namespace "gc-5186"
  I0923 07:42:38.091860 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4jd8" in namespace "gc-5186"
  I0923 07:42:38.104335 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfskq" in namespace "gc-5186"
  I0923 07:42:38.115512 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djm79" in namespace "gc-5186"
  I0923 07:42:38.129674 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djmlc" in namespace "gc-5186"
  I0923 07:42:38.142836 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dknt8" in namespace "gc-5186"
  I0923 07:42:38.157336 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqt5p" in namespace "gc-5186"
  I0923 07:42:38.194778 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvsls" in namespace "gc-5186"
  I0923 07:42:38.205958 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwkzx" in namespace "gc-5186"
  I0923 07:42:38.217228 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f78n7" in namespace "gc-5186"
  I0923 07:42:38.226899 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7b7q" in namespace "gc-5186"
  I0923 07:42:38.238392 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f9bhd" in namespace "gc-5186"
  I0923 07:42:38.248495 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnfmj" in namespace "gc-5186"
  I0923 07:42:38.263329 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpxr6" in namespace "gc-5186"
  I0923 07:42:38.279354 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8chd" in namespace "gc-5186"
  I0923 07:42:38.290866 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggm2h" in namespace "gc-5186"
  I0923 07:42:38.306389 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gtbfl" in namespace "gc-5186"
  I0923 07:42:38.327820 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hfkkd" in namespace "gc-5186"
  I0923 07:42:38.339924 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hl4st" in namespace "gc-5186"
  I0923 07:42:38.353494 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmfwj" in namespace "gc-5186"
  I0923 07:42:38.368270 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5186" for this suite. @ 09/23/25 07:42:38.372
â€¢ [17.479 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/23/25 07:42:38.379
  I0923 07:42:38.379181 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 07:42:38.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:38.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:38.397
  I0923 07:42:38.400936 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/25 07:42:39.945
  I0923 07:42:39.945666 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 create -f -'
  I0923 07:42:40.152690 22 builder.go:146] stderr: ""
  I0923 07:42:40.152740 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8170-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0923 07:42:40.152899 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 delete e2e-test-crd-publish-openapi-8170-crds test-cr'
  I0923 07:42:40.323835 22 builder.go:146] stderr: ""
  I0923 07:42:40.324016 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8170-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0923 07:42:40.324109 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 apply -f -'
  I0923 07:42:40.518853 22 builder.go:146] stderr: ""
  I0923 07:42:40.519099 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8170-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0923 07:42:40.519490 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-2086 --namespace=crd-publish-openapi-2086 delete e2e-test-crd-publish-openapi-8170-crds test-cr'
  I0923 07:42:40.667802 22 builder.go:146] stderr: ""
  I0923 07:42:40.667865 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8170-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/23/25 07:42:40.667
  I0923 07:42:40.667951 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-2086 explain e2e-test-crd-publish-openapi-8170-crds'
  I0923 07:42:40.836842 22 builder.go:146] stderr: ""
  I0923 07:42:40.836953 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8170-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0923 07:42:42.103925 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2086" for this suite. @ 09/23/25 07:42:42.112
â€¢ [3.739 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/23/25 07:42:42.12
  I0923 07:42:42.120381 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 07:42:42.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:42.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:42.135
  STEP: Creating a test externalName service @ 09/23/25 07:42:42.14
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:42.146
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:42.146
  STEP: creating a pod to probe DNS @ 09/23/25 07:42:42.146
  STEP: submitting the pod to kubernetes @ 09/23/25 07:42:42.146
  STEP: retrieving the pod @ 09/23/25 07:42:44.164
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:42:44.168
  I0923 07:42:44.174840 22 dns_common.go:571] DNS probes using dns-test-67c97dd5-9e17-49f1-ba77-00b4089eb35c succeeded

  STEP: changing the externalName to bar.example.com @ 09/23/25 07:42:44.174
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:44.181
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:44.181
  STEP: creating a second pod to probe DNS @ 09/23/25 07:42:44.181
  STEP: submitting the pod to kubernetes @ 09/23/25 07:42:44.181
  STEP: retrieving the pod @ 09/23/25 07:42:54.206
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:42:54.207
  I0923 07:42:54.213823 22 dns_common.go:571] DNS probes using dns-test-9e63e0e6-de1f-46f3-becf-ac434065ef0c succeeded

  STEP: changing the service to type=ClusterIP @ 09/23/25 07:42:54.213
  W0923 07:42:54.228037      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:54.229
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2600.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2600.svc.cluster.local; sleep 1; done
   @ 09/23/25 07:42:54.229
  STEP: creating a third pod to probe DNS @ 09/23/25 07:42:54.229
  STEP: submitting the pod to kubernetes @ 09/23/25 07:42:54.231
  STEP: retrieving the pod @ 09/23/25 07:42:56.25
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:42:56.252
  I0923 07:42:56.259608 22 dns_common.go:571] DNS probes using dns-test-2f78fbe5-de59-442c-a768-efca089440ac succeeded

  STEP: deleting the pod @ 09/23/25 07:42:56.259
  STEP: deleting the pod @ 09/23/25 07:42:56.279
  STEP: deleting the pod @ 09/23/25 07:42:56.307
  STEP: deleting the test externalName service @ 09/23/25 07:42:56.324
  I0923 07:42:56.342412 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2600" for this suite. @ 09/23/25 07:42:56.345
â€¢ [14.232 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/23/25 07:42:56.353
  I0923 07:42:56.353168 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:42:56.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:42:56.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:42:56.366
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:42:56.369
  STEP: Saw pod success @ 09/23/25 07:43:00.383
  I0923 07:43:00.385442 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-f1c62425-ebd0-4022-a3fc-636dc1c1da5e container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:43:00.39
  I0923 07:43:00.402426 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5316" for this suite. @ 09/23/25 07:43:00.405
â€¢ [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/23/25 07:43:00.41
  I0923 07:43:00.410258 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 07:43:00.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:43:00.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:43:00.422
  STEP: Creating service test in namespace statefulset-8206 @ 09/23/25 07:43:00.424
  STEP: Creating a new StatefulSet @ 09/23/25 07:43:00.428
  I0923 07:43:00.441170 22 wait.go:40] Found 0 stateful pods, waiting for 3
  I0923 07:43:10.441497 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:43:10.441543 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:43:10.441557 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:43:10.447552 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-8206 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:43:10.572716 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:43:10.572768 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:43:10.572782 22 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/23/25 07:43:20.578
  I0923 07:43:20.586791 22 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/23/25 07:43:20.586
  STEP: Updating Pods in reverse ordinal order @ 09/23/25 07:43:30.592
  I0923 07:43:30.594050 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-8206 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:43:30.704753 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:43:30.704802 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:43:30.704816 22 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 09/23/25 07:43:50.713
  I0923 07:43:50.713310 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-8206 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:43:50.850321 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:43:50.850362 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:43:50.850377 22 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:44:00.867287 22 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/23/25 07:44:10.876
  I0923 07:44:10.879307 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-8206 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:44:10.984354 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:44:10.984400 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:44:10.984418 22 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:44:20.996768 22 statefulset.go:138] Deleting all statefulset in ns statefulset-8206
  I0923 07:44:20.998881 22 rest.go:152] Scaling statefulset ss2 to 0
  I0923 07:44:31.013614 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 07:44:31.015312 22 rest.go:90] Deleting statefulset ss2
  I0923 07:44:31.024403 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8206" for this suite. @ 09/23/25 07:44:31.027
â€¢ [90.625 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/23/25 07:44:31.034
  I0923 07:44:31.034808 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:44:31.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:31.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:31.05
  I0923 07:44:31.052852 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: creating the pod @ 09/23/25 07:44:31.053
  STEP: submitting the pod to kubernetes @ 09/23/25 07:44:31.053
  I0923 07:44:33.082921 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3915" for this suite. @ 09/23/25 07:44:33.084
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/23/25 07:44:33.09
  I0923 07:44:33.090622 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:44:33.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:33.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:33.104
  STEP: Setting up server cert @ 09/23/25 07:44:33.121
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:44:33.311
  STEP: Deploying the webhook pod @ 09/23/25 07:44:33.316
  STEP: Wait for the deployment to be ready @ 09/23/25 07:44:33.331
  I0923 07:44:33.340307 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/25 07:44:35.347
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:44:35.36
  I0923 07:44:36.360633 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/23/25 07:44:36.366
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/23/25 07:44:36.382
  I0923 07:44:36.382219 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  I0923 07:44:36.442181 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8939" for this suite. @ 09/23/25 07:44:36.447
  STEP: Destroying namespace "webhook-markers-280" for this suite. @ 09/23/25 07:44:36.451
â€¢ [3.370 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/23/25 07:44:36.461
  I0923 07:44:36.461237 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 07:44:36.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:36.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:36.476
  STEP: creating a ReplicationController @ 09/23/25 07:44:36.48
  STEP: waiting for RC to be added @ 09/23/25 07:44:36.484
  STEP: waiting for available Replicas @ 09/23/25 07:44:36.485
  STEP: patching ReplicationController @ 09/23/25 07:44:37.309
  STEP: waiting for RC to be modified @ 09/23/25 07:44:37.317
  STEP: patching ReplicationController status @ 09/23/25 07:44:37.317
  STEP: waiting for RC to be modified @ 09/23/25 07:44:37.322
  STEP: waiting for available Replicas @ 09/23/25 07:44:37.323
  STEP: fetching ReplicationController status @ 09/23/25 07:44:37.327
  STEP: patching ReplicationController scale @ 09/23/25 07:44:37.329
  STEP: waiting for RC to be modified @ 09/23/25 07:44:37.333
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/23/25 07:44:37.334
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/23/25 07:44:38.537
  STEP: updating ReplicationController status @ 09/23/25 07:44:38.539
  STEP: waiting for RC to be modified @ 09/23/25 07:44:38.547
  STEP: listing all ReplicationControllers @ 09/23/25 07:44:38.547
  STEP: checking that ReplicationController has expected values @ 09/23/25 07:44:38.55
  STEP: deleting ReplicationControllers by collection @ 09/23/25 07:44:38.55
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/23/25 07:44:38.556
  I0923 07:44:38.602398 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0923 07:44:38.602562      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8545" for this suite. @ 09/23/25 07:44:38.604
â€¢ [2.149 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/23/25 07:44:38.611
  I0923 07:44:38.611597 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:44:38.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:38.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:38.628
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 07:44:38.63
  E0923 07:44:39.602788      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:40.602926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:41.604017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:42.604465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:44:42.646
  I0923 07:44:42.648992 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-7ea4738c-833a-4b50-9d9e-92e39cba273f container client-container: <nil>
  STEP: delete the pod @ 09/23/25 07:44:42.653
  I0923 07:44:42.669396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7563" for this suite. @ 09/23/25 07:44:42.672
â€¢ [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/23/25 07:44:42.677
  I0923 07:44:42.677022 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 07:44:42.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:42.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:42.692
  STEP: Creating a test headless service @ 09/23/25 07:44:42.694
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-2254.svc.cluster.local;sleep 1; done
   @ 09/23/25 07:44:42.698
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2254.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2254.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2254.svc.cluster.local;sleep 1; done
   @ 09/23/25 07:44:42.698
  STEP: creating a pod to probe DNS @ 09/23/25 07:44:42.698
  STEP: submitting the pod to kubernetes @ 09/23/25 07:44:42.698
  E0923 07:44:43.604317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:44.604762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/23/25 07:44:44.717
  STEP: looking for the results for each expected name from probers @ 09/23/25 07:44:44.719
  I0923 07:44:44.734309 22 dns_common.go:546] DNS probes using dns-2254/dns-test-4635cdf6-39d1-4ab5-bb31-a2e8b667f775 succeeded

  STEP: deleting the pod @ 09/23/25 07:44:44.734
  STEP: deleting the test headless service @ 09/23/25 07:44:44.754
  I0923 07:44:44.767750 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2254" for this suite. @ 09/23/25 07:44:44.772
â€¢ [2.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/23/25 07:44:44.781
  I0923 07:44:44.781496 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:44:44.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:44.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:44.795
  STEP: Creating configMap with name projected-configmap-test-volume-af203268-e6c8-4dd8-a997-8d65b021a24b @ 09/23/25 07:44:44.797
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:44:44.801
  E0923 07:44:45.605877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:46.607039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:47.606974      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:48.607089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:44:48.816
  I0923 07:44:48.817886 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-b8cb561f-cb6d-43f7-9e70-e66f28f20cca container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:44:48.821
  I0923 07:44:48.839265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2611" for this suite. @ 09/23/25 07:44:48.841
â€¢ [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/23/25 07:44:48.848
  I0923 07:44:48.848488 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename endpointslice @ 09/23/25 07:44:48.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:48.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:48.866
  E0923 07:44:49.607840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:50.608013      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:44:50.924858 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9237" for this suite. @ 09/23/25 07:44:50.927
â€¢ [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/23/25 07:44:50.933
  I0923 07:44:50.933863 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subjectreview @ 09/23/25 07:44:50.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:50.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:50.997
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1485" @ 09/23/25 07:44:50.999
  I0923 07:44:51.004761 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1485:e2e"
  I0923 07:44:51.004806 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1485"}
  I0923 07:44:51.004816 22 subjectreviews.go:71] saUID: "f2264cb3-6a88-4f9c-a8cc-7345b853dac6"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1485:e2e" @ 09/23/25 07:44:51.004
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1485:e2e" @ 09/23/25 07:44:51.005
  I0923 07:44:51.006973 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1485:e2e" api 'list' configmaps in "subjectreview-1485" namespace @ 09/23/25 07:44:51.007
  I0923 07:44:51.008061 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1485:e2e" @ 09/23/25 07:44:51.008
  I0923 07:44:51.009620 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0923 07:44:51.009651 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0923 07:44:51.009871 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1485" for this suite. @ 09/23/25 07:44:51.028
â€¢ [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/23/25 07:44:51.034
  I0923 07:44:51.034081 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 07:44:51.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:51.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:51.051
  STEP: Creating configMap with name projected-configmap-test-volume-555efa6b-d238-40a5-bd95-7c5e8323d12c @ 09/23/25 07:44:51.053
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:44:51.058
  E0923 07:44:51.608256      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:52.608388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:53.608517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:54.608675      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:44:55.082
  I0923 07:44:55.083865 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-08ab9bd1-bfab-40b9-8ae2-b893c68bbc8b container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:44:55.087
  I0923 07:44:55.103943 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6234" for this suite. @ 09/23/25 07:44:55.106
â€¢ [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/23/25 07:44:55.115
  I0923 07:44:55.115393 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/23/25 07:44:55.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:55.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:55.127
  STEP: mirroring a new custom Endpoint @ 09/23/25 07:44:55.14
  I0923 07:44:55.150344 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0923 07:44:55.608978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:56.609194      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/23/25 07:44:57.153
  STEP: mirroring deletion of a custom Endpoint @ 09/23/25 07:44:57.164
  I0923 07:44:57.178668 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8375" for this suite. @ 09/23/25 07:44:57.182
â€¢ [2.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/23/25 07:44:57.192
  I0923 07:44:57.192869 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 07:44:57.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:44:57.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:44:57.223
  I0923 07:44:57.233242 22 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0923 07:44:57.609932      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:58.610206      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:44:59.610474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:00.610634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:01.610840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:02.298119 22 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 07:45:02.298
  I0923 07:45:02.298208 22 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/23/25 07:45:02.307
  E0923 07:45:02.611902      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:03.612024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:04.323571 22 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5b66732-cc70-4847-8501-dca224ce29dd",
      ResourceVersion: (string) (len=5) "14669",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 07:45:04.329282 22 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10bc1146-d65c-45bc-b415-81fcb62cdbad",
      ResourceVersion: (string) (len=5) "14659",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f5b66732-cc70-4847-8501-dca224ce29dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 62 36 36 37  33 32 2d 63 63 37 30 2d  |\"f5b66732-cc70-|
              00000120  34 38 34 37 2d 38 35 30  31 2d 64 63 61 32 32 34  |4847-8501-dca224|
              00000130  63 65 32 39 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ce29dd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 07:45:04.332955 22 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-7cpq8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-7cpq8",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-1476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce38819a-c418-4822-a663-f2e037403595",
      ResourceVersion: (string) (len=5) "14658",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "10bc1146-d65c-45bc-b415-81fcb62cdbad",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  62 63 31 31 34 36 2d 64  |d\":\"10bc1146-d|
              00000090  36 35 63 2d 34 35 62 63  2d 62 34 31 35 2d 38 31  |65c-45bc-b415-81|
              000000a0  66 63 62 36 32 63 64 62  61 64 5c 22 7d 22 3a 7b  |fcb62cdbad\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  36 38 5c 22 7d 22 3a 7b  |.244.2.168\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49br7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49br7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894210302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=12) "10.244.2.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894210302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894210302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://24cc53b8660612e9dcc23fa300b3eb0aa03fb2a41a02255b988299ef7d140772",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-49br7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 07:45:04.336389 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1476" for this suite. @ 09/23/25 07:45:04.338
â€¢ [7.151 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 09/23/25 07:45:04.344
  I0923 07:45:04.344217 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 07:45:04.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:04.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:04.359
  STEP: Creating a job @ 09/23/25 07:45:04.361
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/23/25 07:45:04.366
  E0923 07:45:04.612624      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:05.612897      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/23/25 07:45:06.378
  STEP: updating /status @ 09/23/25 07:45:06.387
  STEP: get /status @ 09/23/25 07:45:06.393
  I0923 07:45:06.395218 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5484" for this suite. @ 09/23/25 07:45:06.397
â€¢ [2.059 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/23/25 07:45:06.403
  I0923 07:45:06.403486 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename discovery @ 09/23/25 07:45:06.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:06.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:06.417
  STEP: Setting up server cert @ 09/23/25 07:45:06.42
  E0923 07:45:06.613713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:07.163669 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0923 07:45:07.164579 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0923 07:45:07.164637 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0923 07:45:07.164648 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0923 07:45:07.164658 22 discovery.go:139] Checking APIGroup: apps
  I0923 07:45:07.165418 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0923 07:45:07.165444 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0923 07:45:07.165455 22 discovery.go:154] apps/v1 matches apps/v1
  I0923 07:45:07.165465 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0923 07:45:07.166286 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0923 07:45:07.166312 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0923 07:45:07.166322 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0923 07:45:07.166332 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0923 07:45:07.166993 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0923 07:45:07.167018 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0923 07:45:07.167028 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0923 07:45:07.167039 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0923 07:45:07.167737 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0923 07:45:07.167761 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0923 07:45:07.167772 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0923 07:45:07.167782 22 discovery.go:139] Checking APIGroup: autoscaling
  I0923 07:45:07.168475 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0923 07:45:07.168500 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0923 07:45:07.168514 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0923 07:45:07.168524 22 discovery.go:139] Checking APIGroup: batch
  I0923 07:45:07.169237 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0923 07:45:07.169262 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0923 07:45:07.169272 22 discovery.go:154] batch/v1 matches batch/v1
  I0923 07:45:07.169283 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0923 07:45:07.169971 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0923 07:45:07.169995 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0923 07:45:07.170006 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0923 07:45:07.170016 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0923 07:45:07.170698 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0923 07:45:07.170720 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0923 07:45:07.170730 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0923 07:45:07.170743 22 discovery.go:139] Checking APIGroup: policy
  I0923 07:45:07.171432 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0923 07:45:07.171459 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0923 07:45:07.171470 22 discovery.go:154] policy/v1 matches policy/v1
  I0923 07:45:07.171480 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0923 07:45:07.172115 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0923 07:45:07.172143 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0923 07:45:07.172155 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0923 07:45:07.172165 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0923 07:45:07.172814 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0923 07:45:07.172837 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0923 07:45:07.172847 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0923 07:45:07.172858 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0923 07:45:07.173530 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0923 07:45:07.173557 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0923 07:45:07.173568 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0923 07:45:07.173578 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0923 07:45:07.174245 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0923 07:45:07.174268 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0923 07:45:07.174278 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0923 07:45:07.174292 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0923 07:45:07.174937 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0923 07:45:07.174971 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0923 07:45:07.174978 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0923 07:45:07.174985 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0923 07:45:07.175523 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0923 07:45:07.175545 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0923 07:45:07.175555 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0923 07:45:07.175565 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0923 07:45:07.176296 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0923 07:45:07.176330 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0923 07:45:07.176337 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0923 07:45:07.176343 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0923 07:45:07.176924 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0923 07:45:07.176948 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0923 07:45:07.176958 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0923 07:45:07.176968 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0923 07:45:07.177595 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0923 07:45:07.177618 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0923 07:45:07.177629 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0923 07:45:07.177767 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1892" for this suite. @ 09/23/25 07:45:07.18
â€¢ [0.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/23/25 07:45:07.186
  I0923 07:45:07.186327 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 07:45:07.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:07.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:07.197
  STEP: Create a ReplicaSet @ 09/23/25 07:45:07.199
  STEP: Verify that the required pods have come up @ 09/23/25 07:45:07.204
  I0923 07:45:07.208157 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0923 07:45:07.617998      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:08.617918      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:09.618676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:10.618782      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:11.619846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:12.212008 22 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/23/25 07:45:12.212
  I0923 07:45:12.213706 22 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/23/25 07:45:12.213
  STEP: DeleteCollection of the ReplicaSets @ 09/23/25 07:45:12.216
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/23/25 07:45:12.223
  I0923 07:45:12.227169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-181" for this suite. @ 09/23/25 07:45:12.234
â€¢ [5.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/23/25 07:45:12.249
  I0923 07:45:12.249768 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:45:12.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:12.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:12.27
  STEP: Creating configMap with name configmap-test-upd-541b643b-110e-4caf-94b2-af3d9b17834b @ 09/23/25 07:45:12.335
  STEP: Creating the pod @ 09/23/25 07:45:12.341
  E0923 07:45:12.620032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:13.620258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/23/25 07:45:14.36
  STEP: Waiting for pod with binary data @ 09/23/25 07:45:14.365
  I0923 07:45:14.369135 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-383" for this suite. @ 09/23/25 07:45:14.371
â€¢ [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/23/25 07:45:14.377
  I0923 07:45:14.377561 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 07:45:14.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:14.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:14.406
  I0923 07:45:14.409534 22 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0923 07:45:14.620986      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/23/25 07:45:15.418
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/23/25 07:45:15.422
  E0923 07:45:15.621954      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/23/25 07:45:16.427
  I0923 07:45:16.441636 22 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/23/25 07:45:16.441
  E0923 07:45:16.622855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:17.445494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3994" for this suite. @ 09/23/25 07:45:17.447
â€¢ [3.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/23/25 07:45:17.453
  I0923 07:45:17.453198 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:45:17.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:17.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:17.466
  STEP: Creating configMap with name configmap-test-volume-map-44ab604c-82b7-4d03-9f7e-1735b4c16e64 @ 09/23/25 07:45:17.468
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:45:17.472
  E0923 07:45:17.623287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:18.623563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:19.624330      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:20.624483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:45:21.487
  I0923 07:45:21.489952 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-configmaps-63b456db-49db-4fbc-abc3-c7112fad8a52 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:45:21.501
  I0923 07:45:21.515674 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-62" for this suite. @ 09/23/25 07:45:21.518
â€¢ [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 09/23/25 07:45:21.522
  I0923 07:45:21.522724 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:45:21.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:21.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:21.535
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/25 07:45:21.537
  I0923 07:45:21.537881 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5402 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0923 07:45:21.625414      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:21.632860 22 builder.go:146] stderr: ""
  I0923 07:45:21.632905 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/23/25 07:45:21.632
  I0923 07:45:21.638423 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5402 delete pods e2e-test-httpd-pod'
  E0923 07:45:22.625733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:23.500910 22 builder.go:146] stderr: ""
  I0923 07:45:23.500959 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0923 07:45:23.501083 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5402" for this suite. @ 09/23/25 07:45:23.503
â€¢ [1.987 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/23/25 07:45:23.509
  I0923 07:45:23.509923 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 07:45:23.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:23.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:23.522
  STEP: Setting up server cert @ 09/23/25 07:45:23.538
  E0923 07:45:23.625955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 07:45:23.908
  STEP: Deploying the webhook pod @ 09/23/25 07:45:23.913
  STEP: Wait for the deployment to be ready @ 09/23/25 07:45:23.926
  I0923 07:45:23.938826 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 07:45:24.626220      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:25.626454      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 07:45:25.947
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:45:25.959
  E0923 07:45:26.627340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:26.959752 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/23/25 07:45:26.964
  STEP: create a pod that should be updated by the webhook @ 09/23/25 07:45:26.978
  I0923 07:45:27.067006 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3023" for this suite. @ 09/23/25 07:45:27.07
  STEP: Destroying namespace "webhook-markers-9283" for this suite. @ 09/23/25 07:45:27.08
â€¢ [3.575 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/23/25 07:45:27.084
  I0923 07:45:27.084942 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 07:45:27.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:27.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:27.099
  STEP: Creating the pod @ 09/23/25 07:45:27.101
  E0923 07:45:27.628251      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:28.628320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:29.629363      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:29.630727 22 pod_client.go:173] Successfully updated pod "labelsupdatec25c4258-8c2c-47a8-94e1-1f4917a22986"
  E0923 07:45:30.629543      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:31.629778      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:32.629947      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:33.630098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:33.644644 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5997" for this suite. @ 09/23/25 07:45:33.647
â€¢ [6.568 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/23/25 07:45:33.653
  I0923 07:45:33.653347 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:45:33.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:33.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:33.665
  STEP: creating the pod @ 09/23/25 07:45:33.669
  STEP: submitting the pod to kubernetes @ 09/23/25 07:45:33.669
  STEP: verifying QOS class is set on the pod @ 09/23/25 07:45:33.675
  I0923 07:45:33.677727 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6350" for this suite. @ 09/23/25 07:45:33.747
â€¢ [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/23/25 07:45:33.753
  I0923 07:45:33.753902 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename controllerrevisions @ 09/23/25 07:45:33.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:33.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:33.771
  STEP: Creating DaemonSet "e2e-7c6mc-daemon-set" @ 09/23/25 07:45:33.852
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 07:45:33.857
  I0923 07:45:33.949432 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:45:33.951848 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-7c6mc-daemon-set: 0
  I0923 07:45:33.951888 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:45:34.630235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:34.861532 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:45:34.863851 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-7c6mc-daemon-set: 2
  I0923 07:45:34.863888 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-7c6mc-daemon-set
  STEP: Confirm DaemonSet "e2e-7c6mc-daemon-set" successfully created with "daemonset-name=e2e-7c6mc-daemon-set" label @ 09/23/25 07:45:34.865
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7c6mc-daemon-set" @ 09/23/25 07:45:34.869
  I0923 07:45:34.871108 22 controller_revision.go:162] Located ControllerRevision: "e2e-7c6mc-daemon-set-5744d99d9b"
  STEP: Patching ControllerRevision "e2e-7c6mc-daemon-set-5744d99d9b" @ 09/23/25 07:45:34.872
  I0923 07:45:34.879716 22 controller_revision.go:173] e2e-7c6mc-daemon-set-5744d99d9b has been patched
  STEP: Create a new ControllerRevision @ 09/23/25 07:45:34.879
  I0923 07:45:34.884573 22 controller_revision.go:191] Created ControllerRevision: e2e-7c6mc-daemon-set-77cf58f794
  STEP: Confirm that there are two ControllerRevisions @ 09/23/25 07:45:34.884
  I0923 07:45:34.884671 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0923 07:45:34.886511 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7c6mc-daemon-set-5744d99d9b" @ 09/23/25 07:45:34.886
  STEP: Confirm that there is only one ControllerRevision @ 09/23/25 07:45:34.89
  I0923 07:45:34.890905 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0923 07:45:34.892500 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7c6mc-daemon-set-77cf58f794" @ 09/23/25 07:45:34.893
  I0923 07:45:34.901316 22 controller_revision.go:220] e2e-7c6mc-daemon-set-77cf58f794 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/23/25 07:45:34.901
  W0923 07:45:34.909405      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/23/25 07:45:34.909
  I0923 07:45:34.909573 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0923 07:45:34.933412 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7c6mc-daemon-set-77cf58f794=updated" @ 09/23/25 07:45:34.933
  STEP: Confirm that there is only one ControllerRevision @ 09/23/25 07:45:34.946
  I0923 07:45:34.946072 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0923 07:45:34.971677 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0923 07:45:34.973531 22 controller_revision.go:246] ControllerRevision "e2e-7c6mc-daemon-set-7dbbf5bdc5" has revision 3
  STEP: Deleting DaemonSet "e2e-7c6mc-daemon-set" @ 09/23/25 07:45:34.975
  STEP: deleting DaemonSet.extensions e2e-7c6mc-daemon-set in namespace controllerrevisions-4674, will wait for the garbage collector to delete the pods @ 09/23/25 07:45:34.975
  I0923 07:45:35.032112 22 resources.go:139] Deleting DaemonSet.extensions e2e-7c6mc-daemon-set took: 5.11132ms
  I0923 07:45:35.132822 22 resources.go:163] Terminating DaemonSet.extensions e2e-7c6mc-daemon-set pods took: 100.706675ms
  E0923 07:45:35.631246      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:36.632167      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:36.735909 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-7c6mc-daemon-set: 0
  I0923 07:45:36.735952 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7c6mc-daemon-set
  I0923 07:45:36.738119 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15158"},"items":null}

  I0923 07:45:36.739570 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15158"},"items":null}

  I0923 07:45:36.744921 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4674" for this suite. @ 09/23/25 07:45:36.746
â€¢ [2.998 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/23/25 07:45:36.752
  I0923 07:45:36.752076 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 07:45:36.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:36.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:36.762
  I0923 07:45:36.848190 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0923 07:45:36.852944 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0923 07:45:36.943646 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:45:36.945442 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:45:36.945481 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:45:37.632278      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:37.856677 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:45:37.858988 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:45:37.859027 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0923 07:45:37.859046 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0923 07:45:37.865639 22 daemon_set.go:102] Updating DaemonSet daemon-set
  E0923 07:45:38.632439      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:38.886710 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0923 07:45:38.894130 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0923 07:45:38.894182 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0923 07:45:38.987265 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0923 07:45:39.632849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:39.900775 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0923 07:45:40.632994      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:40.898207 22 daemon_set.go:1198] Pod daemon-set-2rwxs is not available
  I0923 07:45:40.901059 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 07:45:40.905
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6888, will wait for the garbage collector to delete the pods @ 09/23/25 07:45:40.905
  I0923 07:45:40.964752 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.230765ms
  I0923 07:45:41.065542 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.787681ms
  E0923 07:45:41.633286      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:42.633623      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:42.668367 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:45:42.668412 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 07:45:42.670955 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15279"},"items":null}

  I0923 07:45:42.673340 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15279"},"items":null}

  I0923 07:45:42.684510 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6888" for this suite. @ 09/23/25 07:45:42.686
â€¢ [5.940 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 09/23/25 07:45:42.692
  I0923 07:45:42.692361 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:45:42.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:42.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:42.706
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/25 07:45:42.708
  I0923 07:45:42.708843 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-1061 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0923 07:45:42.801725 22 builder.go:146] stderr: ""
  I0923 07:45:42.801775 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/23/25 07:45:42.801
  I0923 07:45:42.801974 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-1061 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0923 07:45:42.867838 22 builder.go:146] stderr: ""
  I0923 07:45:42.867882 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/25 07:45:42.867
  I0923 07:45:42.869898 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-1061 delete pods e2e-test-httpd-pod'
  E0923 07:45:43.633735      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:44.589039 22 builder.go:146] stderr: ""
  I0923 07:45:44.589089 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0923 07:45:44.589226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1061" for this suite. @ 09/23/25 07:45:44.591
â€¢ [1.905 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/23/25 07:45:44.597
  I0923 07:45:44.597073 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:45:44.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:44.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:44.626
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/23/25 07:45:44.629
  E0923 07:45:44.634178      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:45.634328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:46.634721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:47.634879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:48.635018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:45:48.649
  I0923 07:45:48.651809 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-3968d253-59e0-4744-baa5-7e9bcb6412bc container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:45:48.658
  I0923 07:45:48.673371 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7817" for this suite. @ 09/23/25 07:45:48.675
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/23/25 07:45:48.681
  I0923 07:45:48.681348 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 07:45:48.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:45:48.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:45:48.698
  STEP: Creating pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502 @ 09/23/25 07:45:48.7
  E0923 07:45:49.635149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:50.635345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 07:45:50.718
  I0923 07:45:50.720536 22 container_probe.go:1749] Initial restart count of pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is 0
  I0923 07:45:50.722196 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:45:51.635458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:52.635622      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:52.725248 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:45:53.636223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:54.636524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:54.730296 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:45:55.637196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:56.637460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:56.733448 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:45:57.637544      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:45:58.637818      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:45:58.738478 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:45:59.638463      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:00.638759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:00.741287 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:01.638910      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:02.639048      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:02.744832 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:03.639971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:04.640227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:04.748377 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:05.640433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:06.640627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:06.751552 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:07.641465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:08.641730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:08.754656 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:09.642667      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:10.642790      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:10.757502 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  I0923 07:46:10.757549 22 container_probe.go:1763] Restart count of pod container-probe-4502/liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is now 1 (20.036973293s elapsed)
  E0923 07:46:11.643722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:12.643836      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:12.760719 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:13.644128      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:14.644368      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:14.764615 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:15.644557      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:16.644826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:16.768079 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:17.644954      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:18.645210      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:18.771259 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:19.646139      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:20.646395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:20.773987 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:21.647044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:22.647154      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:22.778259 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:23.648287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:24.648534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:24.780861 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:25.648708      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:26.648941      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:26.783391 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:27.649330      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:28.649607      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:28.785988 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:29.649730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:30.649980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:30.788119 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  I0923 07:46:30.788165 22 container_probe.go:1763] Restart count of pod container-probe-4502/liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is now 2 (40.067588387s elapsed)
  E0923 07:46:31.650176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:32.650423      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:32.790997 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:33.650985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:34.651280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:34.793822 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:35.651419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:36.651509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:36.797241 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:37.651683      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:38.651927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:38.800578 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:39.652044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:40.652169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:40.803754 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:41.652430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:42.652563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:42.807140 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:43.652758      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:44.652896      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:44.810418 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:45.653361      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:46.653618      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:46.813379 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:47.654319      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:48.654459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:48.815846 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:49.654731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:50.654961      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:50.818534 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  I0923 07:46:50.818577 22 container_probe.go:1763] Restart count of pod container-probe-4502/liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is now 3 (1m0.098000529s elapsed)
  E0923 07:46:51.655615      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:52.655746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:52.821194 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:53.656076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:54.656213      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:54.824190 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:55.657050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:56.657195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:56.827155 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:57.658022      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:46:58.658152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:46:58.829767 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:46:59.658651      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:00.658788      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:00.832634 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:01.659738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:02.659990      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:02.835666 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:03.660538      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:04.660712      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:04.838423 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:05.660863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:06.661024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:06.841721 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:07.661166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:08.661373      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:08.845139 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:09.661526      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:10.661680      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:10.848528 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  I0923 07:47:10.848570 22 container_probe.go:1763] Restart count of pod container-probe-4502/liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is now 4 (1m20.127994228s elapsed)
  E0923 07:47:11.662733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:12.662999      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:12.852336 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:13.663134      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:14.663353      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:14.855202 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:15.664332      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:16.664577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:16.858648 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:17.665637      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:18.665754      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:18.863234 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:19.666023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:20.666261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:20.866118 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:21.666410      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:22.666670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:22.869439 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:23.666791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:24.667268      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:24.872937 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:25.667464      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:26.667634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:26.876495 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:27.667764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:28.668029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:28.879867 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:29.668181      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:30.668391      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:30.883568 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:31.668569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:32.668803      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:32.886796 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:33.669684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:34.669923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:34.889407 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:35.670201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:36.670367      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:36.892290 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:37.670532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:38.670813      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:38.895968 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:39.671934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:40.672099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:40.898732 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:41.673130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:42.673338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:42.903007 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:43.673766      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:44.674018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:44.905770 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:45.674527      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:46.674722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:46.908841 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:47.674741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:48.674972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:48.911638 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:49.675159      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:50.675409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:50.915321 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:51.675614      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:52.675827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:52.918911 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:53.676860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:54.677074      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:54.921713 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:55.677421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:56.677728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:56.924666 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:57.677847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:47:58.678063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:47:58.932500 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:47:59.678275      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:00.678503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:00.935239 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:01.679234      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:02.679478      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:02.938421 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:03.680389      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:04.680668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:04.941475 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:05.680793      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:06.680968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:06.945175 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:07.681981      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:08.682181      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:08.951313 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:09.683048      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:10.683267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:10.954091 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:11.683825      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:12.684029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:12.957177 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:13.685063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:14.685207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:14.960223 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:15.686103      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:16.686241      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:16.964541 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:17.686303      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:18.686517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:18.968051 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:19.686835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:20.687072      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:20.972324 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  E0923 07:48:21.687144      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:22.688256      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:22.974937 22 container_probe.go:1759] Get pod liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d in namespace container-probe-4502
  I0923 07:48:22.974986 22 container_probe.go:1763] Restart count of pod container-probe-4502/liveness-af027f5f-36ed-4d0a-a190-ca825ac5a43d is now 5 (2m32.2544075s elapsed)
  STEP: deleting the pod @ 09/23/25 07:48:22.975
  I0923 07:48:22.989328 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4502" for this suite. @ 09/23/25 07:48:22.991
â€¢ [154.315 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/23/25 07:48:22.996
  I0923 07:48:22.996368 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 07:48:22.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:48:23.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:48:23.022
  STEP: Creating projection with secret that has name secret-emptykey-test-765671d1-df76-47ad-bd1d-a336ff7a296a @ 09/23/25 07:48:23.025
  I0923 07:48:23.026556 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2930" for this suite. @ 09/23/25 07:48:23.092
â€¢ [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 09/23/25 07:48:23.098
  I0923 07:48:23.098061 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 07:48:23.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:48:23.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:48:23.113
  STEP: creating service multiprotocol-test in namespace services-6064 @ 09/23/25 07:48:23.115
  STEP: creating pod pod1 in namespace services-6064 @ 09/23/25 07:48:23.13
  STEP: Creating pod pod1 in namespace services-6064 @ 09/23/25 07:48:23.13
  E0923 07:48:23.688417      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:24.688647      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6064 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/23/25 07:48:25.158
  I0923 07:48:25.164576 22 service.go:4553] successfully validated that service multiprotocol-test in namespace services-6064 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/23/25 07:48:25.164
  I0923 07:48:25.164671 22 resource.go:361] Creating new exec pod
  E0923 07:48:25.689516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:26.689706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:27.176046 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80'
  I0923 07:48:27.291401 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.88.180 80\nConnection to 10.106.88.180 80 port [tcp/http] succeeded!\n"
  I0923 07:48:27.291454 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:48:27.291539 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.106.88.180 80'
  E0923 07:48:27.690708      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:28.690996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:29.403290 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.106.88.180 80\n"
  I0923 07:48:29.403343 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/23/25 07:48:29.403
  I0923 07:48:29.417118 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80'
  I0923 07:48:29.532197 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.106.88.180 80\necho hostName\nConnection to 10.106.88.180 80 port [tcp/http] succeeded!\n"
  I0923 07:48:29.532262 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 07:48:29.532374 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.106.88.180 80'
  E0923 07:48:29.691452      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:30.691747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:31.649678 22 builder.go:146] stderr: "+ + nc -v -u -wecho hostName\n 2 10.106.88.180 80\n"
  I0923 07:48:31.649731 22 builder.go:147] stdout: ""
  I0923 07:48:31.649997 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.106.88.180 80'
  E0923 07:48:31.692742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:32.692914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:33.693160      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:33.754009 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.106.88.180 80\n"
  I0923 07:48:33.754069 22 builder.go:147] stdout: ""
  I0923 07:48:33.754149 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.106.88.180 80'
  E0923 07:48:34.693364      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:35.693521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:35.876041 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.106.88.180 80\n"
  I0923 07:48:35.876112 22 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/23/25 07:48:35.876
  I0923 07:48:35.883151 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.106.88.180 80'
  E0923 07:48:36.693951      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:37.694065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:38.008344 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.106.88.180 80\n"
  I0923 07:48:38.008390 22 builder.go:147] stdout: "pod1"
  I0923 07:48:38.008489 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80'
  E0923 07:48:38.694230      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:39.694419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:40.117830 22 builder.go:135] rc: 1
  I0923 07:48:40.117914 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80:
  Command stdout:

  stderr:
  + + ncecho -v hostName -t
   -w 2 10.106.88.180 80
  nc: connect to 10.106.88.180 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 07:48:40.118012 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80'
  E0923 07:48:40.695183      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:41.695340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:42.226754 22 builder.go:135] rc: 1
  I0923 07:48:42.226822 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.106.88.180 80
  + echo hostName
  nc: connect to 10.106.88.180 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 07:48:42.226920 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80'
  E0923 07:48:42.696267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:43.696515      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:48:44.358006 22 builder.go:135] rc: 1
  I0923 07:48:44.358133 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6064 exec execpodj4s5g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.88.180 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.106.88.180 80
  nc: connect to 10.106.88.180 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 07:48:44.358491 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6064" for this suite. @ 09/23/25 07:48:44.361
â€¢ [21.270 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/23/25 07:48:44.367
  I0923 07:48:44.367945 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:48:44.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:48:44.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:48:44.382
  STEP: Creating configMap with name cm-test-opt-del-16ebe904-5cdc-473a-9431-715f9c58c495 @ 09/23/25 07:48:44.462
  STEP: Creating configMap with name cm-test-opt-upd-85ce3e38-8442-4a04-b8e8-d60fb0b822f7 @ 09/23/25 07:48:44.468
  STEP: Creating the pod @ 09/23/25 07:48:44.472
  E0923 07:48:44.696887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:45.697135      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-16ebe904-5cdc-473a-9431-715f9c58c495 @ 09/23/25 07:48:46.507
  STEP: Updating configmap cm-test-opt-upd-85ce3e38-8442-4a04-b8e8-d60fb0b822f7 @ 09/23/25 07:48:46.511
  STEP: Creating configMap with name cm-test-opt-create-b3bebf90-5334-4e41-b5fb-0818da9e0b5d @ 09/23/25 07:48:46.516
  STEP: waiting to observe update in volume @ 09/23/25 07:48:46.52
  E0923 07:48:46.697547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:47.697827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:48.698733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:49.698794      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:50.699291      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:51.699605      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:52.700628      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:53.700860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:54.701659      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:55.701758      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:56.702313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:57.702526      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:58.702673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:48:59.702937      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:00.703061      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:01.703232      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:02.703755      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:03.703874      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:04.704215      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:05.704304      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:06.704442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:07.704521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:08.704722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:09.704856      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:10.705899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:11.706052      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:12.706341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:13.706491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:14.706853      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:15.707098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:16.707899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:17.708150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:18.708831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:19.709018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:20.709436      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:21.709693      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:22.710414      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:23.710649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:24.711034      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:25.711320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:26.711617      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:27.711849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:28.712858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:29.713022      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:30.713390      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:31.713551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:32.714394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:33.714567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:34.715286      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:35.715404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:36.716128      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:37.716257      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:38.717155      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:39.717364      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:40.717904      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:41.718118      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:42.718821      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:43.718972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:44.719353      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:45.719579      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:46.720491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:47.720711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:48.721111      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:49.721259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:50.721474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:51.721753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:52.722731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:53.723629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:54.723848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:55.724078      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:56.724150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:57.724338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:58.724529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:49:59.724724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:00.724985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:00.757864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8611" for this suite. @ 09/23/25 07:50:00.76
â€¢ [76.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/23/25 07:50:00.768
  I0923 07:50:00.768375 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename csi-storageclass @ 09/23/25 07:50:00.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:00.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:00.8
  STEP: Creating a StorageClass @ 09/23/25 07:50:00.802
  STEP: Get StorageClass "e2e-zptc9" @ 09/23/25 07:50:00.807
  STEP: Patching the StorageClass "e2e-zptc9" @ 09/23/25 07:50:00.808
  STEP: Delete StorageClass "e2e-zptc9" @ 09/23/25 07:50:00.815
  STEP: Confirm deletion of StorageClass "e2e-zptc9" @ 09/23/25 07:50:00.819
  STEP: Create a replacement StorageClass @ 09/23/25 07:50:00.821
  STEP: Updating StorageClass "e2e-v2-f9bvt" @ 09/23/25 07:50:00.825
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-f9bvt=updated" @ 09/23/25 07:50:00.832
  STEP: Deleting StorageClass "e2e-v2-f9bvt" via DeleteCollection @ 09/23/25 07:50:00.834
  STEP: Confirm deletion of StorageClass "e2e-v2-f9bvt" @ 09/23/25 07:50:00.841
  I0923 07:50:00.843229 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-475" for this suite. @ 09/23/25 07:50:00.861
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/23/25 07:50:00.868
  I0923 07:50:00.868125 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:50:00.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:00.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:00.879
  STEP: creating pod @ 09/23/25 07:50:00.881
  E0923 07:50:01.726017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:02.726314      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:02.897936 22 pods.go:83] Pod pod-hostip-8a936c96-0388-424b-8d44-cb18a9f9f1f0 has hostIP: 172.19.1.5
  I0923 07:50:02.898081 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2012" for this suite. @ 09/23/25 07:50:02.9
â€¢ [2.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/23/25 07:50:02.907
  I0923 07:50:02.907718 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename containers @ 09/23/25 07:50:02.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:02.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:02.92
  E0923 07:50:03.727369      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:04.727742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:04.946425 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9314" for this suite. @ 09/23/25 07:50:04.949
â€¢ [2.046 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/23/25 07:50:04.953
  I0923 07:50:04.953959 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 07:50:04.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:04.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:04.964
  STEP: Creating a pod to test substitution in container's args @ 09/23/25 07:50:04.967
  E0923 07:50:05.727877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:06.728062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:07.728207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:08.728339      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:50:08.982
  I0923 07:50:08.984133 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod var-expansion-6b609e98-99b9-4159-96d9-ae5cd7fbff87 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 07:50:08.988
  I0923 07:50:08.999110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2961" for this suite. @ 09/23/25 07:50:09.001
â€¢ [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/23/25 07:50:09.007
  I0923 07:50:09.007956 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 07:50:09.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:09.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:09.019
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/23/25 07:50:09.105
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 07:50:09.11
  I0923 07:50:09.122623 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:09.125713 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:50:09.125753 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:50:09.729018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:10.114964 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:10.117733 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:50:10.117770 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:50:10.729325      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:11.127990 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:11.130409 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:50:11.130444 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/23/25 07:50:11.132
  I0923 07:50:11.233923 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:11.236002 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 07:50:11.236040 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:50:11.729506      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:12.146526 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:12.148510 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 07:50:12.148545 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:50:12.730261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:13.147050 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:50:13.149142 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:50:13.149176 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/23/25 07:50:13.149
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 07:50:13.241
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2336, will wait for the garbage collector to delete the pods @ 09/23/25 07:50:13.241
  I0923 07:50:13.299847 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.765512ms
  I0923 07:50:13.400364 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.513628ms
  E0923 07:50:13.731271      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:14.302578 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:50:14.302645 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 07:50:14.304761 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16067"},"items":null}

  I0923 07:50:14.306329 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16067"},"items":null}

  I0923 07:50:14.311375 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2336" for this suite. @ 09/23/25 07:50:14.313
â€¢ [5.310 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/23/25 07:50:14.317
  I0923 07:50:14.317668 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 07:50:14.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:14.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:14.334
  STEP: Creating configMap with name configmap-test-volume-ef4fbaa0-f506-4259-9626-2d1a4695587d @ 09/23/25 07:50:14.336
  STEP: Creating a pod to test consume configMaps @ 09/23/25 07:50:14.34
  E0923 07:50:14.731447      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:15.731575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:50:16.353
  I0923 07:50:16.355494 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-ca48e885-3288-486e-b15f-84d1d32e1011 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:50:16.359
  I0923 07:50:16.372576 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8391" for this suite. @ 09/23/25 07:50:16.374
â€¢ [2.062 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/23/25 07:50:16.379
  I0923 07:50:16.379818 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 07:50:16.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:16.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:16.394
  STEP: Creating a test namespace @ 09/23/25 07:50:16.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:16.405
  STEP: Creating a service in the namespace @ 09/23/25 07:50:16.407
  STEP: Deleting the namespace @ 09/23/25 07:50:16.417
  STEP: Waiting for the namespace to be removed. @ 09/23/25 07:50:16.423
  E0923 07:50:16.731750      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:17.732688      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:18.732810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:19.733550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:20.734080      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:21.734656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/23/25 07:50:22.426
  STEP: Verifying there is no service in the namespace @ 09/23/25 07:50:22.437
  I0923 07:50:22.439170 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-945" for this suite. @ 09/23/25 07:50:22.441
  STEP: Destroying namespace "nsdeletetest-9958" for this suite. @ 09/23/25 07:50:22.449
  I0923 07:50:22.450746 22 framework.go:370] Namespace nsdeletetest-9958 was already deleted
  STEP: Destroying namespace "nsdeletetest-4544" for this suite. @ 09/23/25 07:50:22.45
â€¢ [6.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 09/23/25 07:50:22.455
  I0923 07:50:22.455921 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:50:22.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:22.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:22.472
  STEP: Starting the proxy @ 09/23/25 07:50:22.474
  I0923 07:50:22.474772 22 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-7581 proxy --unix-socket=/tmp/kubectl-proxy-unix152322960/test'
  STEP: retrieving proxy /api/ output @ 09/23/25 07:50:22.536
  I0923 07:50:22.537120 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7581" for this suite. @ 09/23/25 07:50:22.542
â€¢ [0.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/23/25 07:50:22.548
  I0923 07:50:22.548107 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-webhook @ 09/23/25 07:50:22.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:22.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:22.56
  STEP: Setting up server cert @ 09/23/25 07:50:22.562
  E0923 07:50:22.734832      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/23/25 07:50:22.915
  STEP: Deploying the custom resource conversion webhook pod @ 09/23/25 07:50:22.92
  STEP: Wait for the deployment to be ready @ 09/23/25 07:50:22.931
  I0923 07:50:22.937031 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0923 07:50:23.734963      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:24.735209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 07:50:24.946
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 07:50:24.957
  E0923 07:50:25.735942      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:25.958255 22 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0923 07:50:25.962624 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 07:50:26.736091      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:27.736245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/23/25 07:50:28.514
  STEP: v2 custom resource should be converted @ 09/23/25 07:50:28.538
  E0923 07:50:28.736260      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:29.102491 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-185" for this suite. @ 09/23/25 07:50:29.105
â€¢ [6.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/23/25 07:50:29.113
  I0923 07:50:29.113674 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 07:50:29.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:29.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:29.145
  STEP: Creating replication controller my-hostname-basic-fffa5845-6cb4-4dc5-9859-bb4441c16c20 @ 09/23/25 07:50:29.147
  I0923 07:50:29.157024 22 resource.go:87] Pod name my-hostname-basic-fffa5845-6cb4-4dc5-9859-bb4441c16c20: Found 0 pods out of 1
  E0923 07:50:29.736389      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:30.736541      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:31.736740      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:32.736924      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:33.737056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:50:34.161612 22 resource.go:87] Pod name my-hostname-basic-fffa5845-6cb4-4dc5-9859-bb4441c16c20: Found 1 pods out of 1
  I0923 07:50:34.161653 22 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-fffa5845-6cb4-4dc5-9859-bb4441c16c20" are running
  I0923 07:50:34.163484 22 rc.go:523] Pod "my-hostname-basic-fffa5845-6cb4-4dc5-9859-bb4441c16c20-v8qn9" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:50:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:50:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:50:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:50:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-23 07:50:29 +0000 UTC Reason: Message:}])
  I0923 07:50:34.163520 22 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/23/25 07:50:34.163
  I0923 07:50:34.171467 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1715" for this suite. @ 09/23/25 07:50:34.174
â€¢ [5.072 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/23/25 07:50:34.185
  I0923 07:50:34.185628 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subpath @ 09/23/25 07:50:34.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:34.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:34.197
  STEP: Setting up data @ 09/23/25 07:50:34.199
  STEP: Creating pod pod-subpath-test-projected-7ptt @ 09/23/25 07:50:34.208
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/25 07:50:34.208
  E0923 07:50:34.737962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:35.738234      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:36.739169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:37.739426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:38.740499      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:39.740662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:40.740816      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:41.741061      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:42.741277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:43.741419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:44.742439      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:45.742556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:46.742704      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:47.742964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:48.743126      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:49.743265      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:50.743964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:51.744139      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:52.744281      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:53.744458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:54.744723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:55.744990      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:56.745620      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:57.745766      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:50:58.3
  I0923 07:50:58.302749 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-subpath-test-projected-7ptt container test-container-subpath-projected-7ptt: <nil>
  STEP: delete the pod @ 09/23/25 07:50:58.307
  STEP: Deleting pod pod-subpath-test-projected-7ptt @ 09/23/25 07:50:58.322
  I0923 07:50:58.322724 22 delete.go:62] Deleting pod "pod-subpath-test-projected-7ptt" in namespace "subpath-5736"
  I0923 07:50:58.324333 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5736" for this suite. @ 09/23/25 07:50:58.326
â€¢ [24.145 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/23/25 07:50:58.33
  I0923 07:50:58.331022 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/25 07:50:58.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:50:58.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:50:58.344
  I0923 07:50:58.346990 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 07:50:58.746664      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:50:59.747379      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:00.748217      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:01.748819      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:02.749317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:03.750384      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:51:04.552509 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6435" for this suite. @ 09/23/25 07:51:04.555
â€¢ [6.231 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/23/25 07:51:04.562
  I0923 07:51:04.562415 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename containers @ 09/23/25 07:51:04.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:51:04.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:51:04.575
  STEP: Creating a pod to test override all @ 09/23/25 07:51:04.577
  E0923 07:51:04.750835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:05.750964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:51:06.592
  I0923 07:51:06.594406 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod client-containers-62987f77-176a-4e2c-ab15-cc08b697f0e4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 07:51:06.598
  I0923 07:51:06.609800 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5042" for this suite. @ 09/23/25 07:51:06.612
â€¢ [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/23/25 07:51:06.617
  I0923 07:51:06.617423 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:51:06.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:51:06.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:51:06.629
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/23/25 07:51:06.631
  E0923 07:51:06.751305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:07.751547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:08.752011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:09.752207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:51:10.645
  I0923 07:51:10.647710 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-1fc67258-a02a-402e-a94a-096915bc0d90 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:51:10.651
  I0923 07:51:10.662826 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8690" for this suite. @ 09/23/25 07:51:10.665
â€¢ [4.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/23/25 07:51:10.669
  I0923 07:51:10.669648 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/23/25 07:51:10.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:51:10.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:51:10.682
  I0923 07:51:10.684392 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0923 07:51:10.752722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:11.752981      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:12.753680      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:13.753927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:14.754659      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:15.754968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:16.755026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:17.755115      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:18.755420      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:19.755533      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:20.756108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:21.756239      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:22.756911      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:23.757026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:24.757320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:25.757530      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:26.757829      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:27.758047      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:28.758957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:29.759513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:30.760029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:31.760195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:32.760431      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:33.760568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:34.761296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:35.761445      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:36.762471      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:37.762715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:38.763383      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:39.763640      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:40.763929      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:41.764098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:42.765214      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:43.765457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:44.765644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:45.765761      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:46.766342      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:47.766557      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:48.767225      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:49.767382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:50.767820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:51.768038      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:52.768409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:53.768687      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:54.769151      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:55.769293      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:56.770002      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:57.770153      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:58.770191      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:51:59.771194      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:00.771470      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:01.771619      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:02.772302      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:03.772404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:04.773390      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:05.773616      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:06.773874      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:07.773988      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:08.774374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:09.774624      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:10.684663 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 07:52:10.687690 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/23/25 07:52:10.687
  E0923 07:52:10.775087      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:10.902153 22 taints.go:463] Pod1 is running on ckp-cncf-w1. Tainting Node
  E0923 07:52:11.775180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:12.775396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:13.117969 22 taints.go:471] Pod2 is running on ckp-cncf-w1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/23/25 07:52:13.118
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/25 07:52:13.127
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/23/25 07:52:13.13
  E0923 07:52:13.775652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:14.775764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:15.775887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:16.776080      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:17.776259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:18.500681 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0923 07:52:18.777067      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:19.777338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:20.777467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:21.777800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:22.777953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:23.778233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:24.778383      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:25.778508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:26.778741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:27.778849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:28.779070      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:29.779339      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:30.779569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:31.779745      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:32.779972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:33.780236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:34.781312      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:35.781446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:36.781701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:37.781914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:38.543743 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/25 07:52:38.557
  I0923 07:52:38.560132 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7662" for this suite. @ 09/23/25 07:52:38.562
â€¢ [87.898 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/23/25 07:52:38.567
  I0923 07:52:38.567698 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 07:52:38.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:52:38.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:52:38.581
  I0923 07:52:38.593489 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 07:52:38.6
  I0923 07:52:38.691944 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:52:38.693903 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:52:38.693941 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:52:38.782122      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:39.604639 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:52:39.607182 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:52:39.607216 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/23/25 07:52:39.614
  STEP: Check that daemon pods images are updated. @ 09/23/25 07:52:39.705
  I0923 07:52:39.708181 22 daemon_set.go:1193] Wrong image for pod: daemon-set-dh676. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0923 07:52:39.710099 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0923 07:52:39.783176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:40.709075 22 daemon_set.go:1193] Wrong image for pod: daemon-set-dh676. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0923 07:52:40.711657 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0923 07:52:40.783684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:41.712486 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0923 07:52:41.783882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:42.712281 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/23/25 07:52:42.712
  I0923 07:52:42.714716 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:52:42.716841 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:52:42.716877 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 07:52:42.726
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7796, will wait for the garbage collector to delete the pods @ 09/23/25 07:52:42.726
  I0923 07:52:42.783678 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.781605ms
  E0923 07:52:42.784687      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:42.884092 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.409929ms
  E0923 07:52:43.785097      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:44.586818 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:52:44.586862 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 07:52:44.588900 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16733"},"items":null}

  I0923 07:52:44.590401 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16733"},"items":null}

  I0923 07:52:44.595930 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7796" for this suite. @ 09/23/25 07:52:44.597
â€¢ [6.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/23/25 07:52:44.603
  I0923 07:52:44.603153 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 07:52:44.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:52:44.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:52:44.618
  I0923 07:52:44.620411 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 07:52:44.785261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:45.786165      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/25 07:52:45.918
  I0923 07:52:45.918628 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-9414 --namespace=crd-publish-openapi-9414 create -f -'
  E0923 07:52:46.787175      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:47.787510      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:48.008039 22 builder.go:146] stderr: ""
  I0923 07:52:48.008089 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7078-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0923 07:52:48.008157 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-9414 --namespace=crd-publish-openapi-9414 delete e2e-test-crd-publish-openapi-7078-crds test-cr'
  I0923 07:52:48.074121 22 builder.go:146] stderr: ""
  I0923 07:52:48.074172 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7078-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0923 07:52:48.074230 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-9414 --namespace=crd-publish-openapi-9414 apply -f -'
  I0923 07:52:48.147975 22 builder.go:146] stderr: ""
  I0923 07:52:48.148022 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7078-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0923 07:52:48.148184 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-9414 --namespace=crd-publish-openapi-9414 delete e2e-test-crd-publish-openapi-7078-crds test-cr'
  I0923 07:52:48.217355 22 builder.go:146] stderr: ""
  I0923 07:52:48.217401 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7078-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/23/25 07:52:48.217
  I0923 07:52:48.217494 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-9414 explain e2e-test-crd-publish-openapi-7078-crds'
  I0923 07:52:48.278189 22 builder.go:146] stderr: ""
  I0923 07:52:48.278251 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7078-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0923 07:52:48.787669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:49.501182 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9414" for this suite. @ 09/23/25 07:52:49.509
â€¢ [4.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/23/25 07:52:49.518
  I0923 07:52:49.518484 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/25 07:52:49.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:52:49.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:52:49.534
  E0923 07:52:49.787908      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:50.788092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:52:51.565761 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7360" for this suite. @ 09/23/25 07:52:51.568
â€¢ [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/23/25 07:52:51.575
  I0923 07:52:51.575125 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:52:51.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:52:51.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:52:51.586
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/23/25 07:52:51.588
  E0923 07:52:51.788483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:52.788701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:53.789185      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:54.789297      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:52:55.604
  I0923 07:52:55.606799 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-d949d356-424f-4239-bd49-0eb327bd5de8 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:52:55.611
  I0923 07:52:55.624021 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3202" for this suite. @ 09/23/25 07:52:55.626
â€¢ [4.056 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 09/23/25 07:52:55.63
  I0923 07:52:55.630960 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 07:52:55.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:52:55.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:52:55.646
  STEP: Creating service test in namespace statefulset-2425 @ 09/23/25 07:52:55.648
  STEP: Creating stateful set ss in namespace statefulset-2425 @ 09/23/25 07:52:55.652
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2425 @ 09/23/25 07:52:55.661
  I0923 07:52:55.666221 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0923 07:52:55.789543      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:56.789794      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:57.790056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:58.790218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:52:59.790446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:00.790650      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:01.790907      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:02.791086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:03.791209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:04.791382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:05.664246 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/23/25 07:53:05.664
  I0923 07:53:05.666135 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0923 07:53:05.791396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:05.800435 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:53:05.800573 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:53:05.800615 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:53:05.802795 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0923 07:53:06.792062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:07.792321      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:08.792569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:09.792752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:10.793045      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:11.793297      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:12.793382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:13.793509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:14.793663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:15.793936      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:15.803559 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:53:15.803630 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0923 07:53:15.820249 22 resource.go:168] POD   NODE         PHASE    GRACE  CONDITIONS
  I0923 07:53:15.820323 22 resource.go:175] ss-0  ckp-cncf-w2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC  }]
  I0923 07:53:15.820337 22 resource.go:175] ss-1               Pending         []
  I0923 07:53:15.820346 22 resource.go:178] 
  I0923 07:53:15.820355 22 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  E0923 07:53:16.794110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:16.825062 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.993257679s
  E0923 07:53:17.794366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:17.829099 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.989106431s
  E0923 07:53:18.794757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:18.833390 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.984509993s
  E0923 07:53:19.795741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:19.836942 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.9806479s
  E0923 07:53:20.795913      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:20.840841 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.976536352s
  E0923 07:53:21.796053      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:21.844615 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.973402943s
  E0923 07:53:22.796500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:22.848575 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.968922297s
  E0923 07:53:23.796676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:23.852284 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.964814482s
  E0923 07:53:24.796842      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:24.856083 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 961.595458ms
  E0923 07:53:25.796923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2425 @ 09/23/25 07:53:25.857
  I0923 07:53:25.860538 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:53:25.977148 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0923 07:53:25.977201 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:53:25.977216 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:53:25.977277 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:53:26.088925 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0923 07:53:26.088977 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:53:26.088991 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:53:26.089050 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0923 07:53:26.206687 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0923 07:53:26.206736 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0923 07:53:26.206751 22 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0923 07:53:26.209094 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0923 07:53:26.797746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:27.797996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:28.798274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:29.798535      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:30.798801      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:31.799051      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:32.799311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:33.799468      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:34.799736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:35.799952      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:36.211017 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:53:36.211068 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0923 07:53:36.211085 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/23/25 07:53:36.211
  I0923 07:53:36.213480 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:53:36.327085 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:53:36.327137 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:53:36.327152 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:53:36.327215 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:53:36.446221 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:53:36.446269 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:53:36.446283 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:53:36.446346 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=statefulset-2425 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0923 07:53:36.565974 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0923 07:53:36.566016 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0923 07:53:36.566031 22 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0923 07:53:36.566045 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0923 07:53:36.570007 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0923 07:53:36.800379      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:37.800545      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:38.800699      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:39.800977      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:40.801270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:41.801498      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:42.801765      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:43.802035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:44.802197      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:45.803034      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:46.571680 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:53:46.571725 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:53:46.571739 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0923 07:53:46.580555 22 resource.go:168] POD   NODE         PHASE    GRACE  CONDITIONS
  I0923 07:53:46.580646 22 resource.go:175] ss-0  ckp-cncf-w2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC  }]
  I0923 07:53:46.580682 22 resource.go:175] ss-1  ckp-cncf-w1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  }]
  I0923 07:53:46.580719 22 resource.go:175] ss-2  ckp-cncf-w1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  }]
  I0923 07:53:46.580728 22 resource.go:178] 
  I0923 07:53:46.580739 22 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0923 07:53:46.803845      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:47.585263 22 resource.go:168] POD   NODE         PHASE      GRACE  CONDITIONS
  I0923 07:53:47.585339 22 resource.go:175] ss-0  ckp-cncf-w2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:52:55 +0000 UTC  }]
  I0923 07:53:47.585373 22 resource.go:175] ss-1  ckp-cncf-w1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  }]
  I0923 07:53:47.585402 22 resource.go:175] ss-2  ckp-cncf-w1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:36 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:53:15 +0000 UTC  }]
  I0923 07:53:47.585412 22 resource.go:178] 
  I0923 07:53:47.585423 22 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0923 07:53:47.804551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:48.589347 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.991856705s
  E0923 07:53:48.804720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:49.597091 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.988620674s
  E0923 07:53:49.805524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:50.599577 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.98084868s
  E0923 07:53:50.805996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:51.603089 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.978260986s
  E0923 07:53:51.806539      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:52.606070 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.974829437s
  E0923 07:53:52.807436      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:53.609575 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.971894399s
  E0923 07:53:53.807993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:54.612215 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.968326515s
  E0923 07:53:54.808623      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:55.620840 22 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 965.720781ms
  E0923 07:53:55.809324      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2425 @ 09/23/25 07:53:56.621
  I0923 07:53:56.624120 22 rest.go:152] Scaling statefulset ss to 0
  I0923 07:53:56.627524 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 07:53:56.629143 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2425
  I0923 07:53:56.630646 22 rest.go:152] Scaling statefulset ss to 0
  I0923 07:53:56.633441 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 07:53:56.634975 22 rest.go:90] Deleting statefulset ss
  I0923 07:53:56.645978 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2425" for this suite. @ 09/23/25 07:53:56.648
â€¢ [61.023 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/23/25 07:53:56.653
  I0923 07:53:56.653876 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename server-version @ 09/23/25 07:53:56.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:53:56.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:53:56.667
  STEP: Request ServerVersion @ 09/23/25 07:53:56.669
  STEP: Confirm major version @ 09/23/25 07:53:56.67
  I0923 07:53:56.670495 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/23/25 07:53:56.67
  I0923 07:53:56.670534 22 server_version.go:58] cleanMinorVersion: 32
  I0923 07:53:56.670560 22 server_version.go:62] Minor version: 32
  I0923 07:53:56.670675 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3395" for this suite. @ 09/23/25 07:53:56.749
â€¢ [0.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/23/25 07:53:56.755
  I0923 07:53:56.755703 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 07:53:56.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:53:56.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:53:56.766
  I0923 07:53:56.769336 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 07:53:56.810059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:53:57.811188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/23/25 07:53:58.08
  I0923 07:53:58.080791 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 create -f -'
  I0923 07:53:58.166919 22 builder.go:146] stderr: ""
  I0923 07:53:58.166966 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7395-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0923 07:53:58.167028 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 delete e2e-test-crd-publish-openapi-7395-crds test-foo'
  I0923 07:53:58.234306 22 builder.go:146] stderr: ""
  I0923 07:53:58.234359 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7395-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0923 07:53:58.234437 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 apply -f -'
  I0923 07:53:58.307714 22 builder.go:146] stderr: ""
  I0923 07:53:58.307765 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7395-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0923 07:53:58.307830 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 delete e2e-test-crd-publish-openapi-7395-crds test-foo'
  I0923 07:53:58.372815 22 builder.go:146] stderr: ""
  I0923 07:53:58.372860 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7395-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/23/25 07:53:58.372
  I0923 07:53:58.372963 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 create -f -'
  I0923 07:53:58.436273 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/23/25 07:53:58.436
  I0923 07:53:58.436418 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 create -f -'
  I0923 07:53:58.502906 22 builder.go:135] rc: 1
  I0923 07:53:58.503012 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 apply -f -'
  I0923 07:53:58.569893 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/23/25 07:53:58.569
  I0923 07:53:58.570036 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 create -f -'
  I0923 07:53:58.634273 22 builder.go:135] rc: 1
  I0923 07:53:58.634363 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 --namespace=crd-publish-openapi-4580 apply -f -'
  I0923 07:53:58.702053 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/23/25 07:53:58.702
  I0923 07:53:58.702282 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 explain e2e-test-crd-publish-openapi-7395-crds'
  I0923 07:53:58.766021 22 builder.go:146] stderr: ""
  I0923 07:53:58.766079 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7395-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/23/25 07:53:58.766
  I0923 07:53:58.766451 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 explain e2e-test-crd-publish-openapi-7395-crds.metadata'
  E0923 07:53:58.811871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:53:58.837120 22 builder.go:146] stderr: ""
  I0923 07:53:58.837320 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7395-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0923 07:53:58.837640 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 explain e2e-test-crd-publish-openapi-7395-crds.spec'
  I0923 07:53:58.903412 22 builder.go:146] stderr: ""
  I0923 07:53:58.903456 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7395-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0923 07:53:58.903579 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 explain e2e-test-crd-publish-openapi-7395-crds.spec.bars'
  I0923 07:53:58.965357 22 builder.go:146] stderr: ""
  I0923 07:53:58.965413 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7395-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/23/25 07:53:58.965
  I0923 07:53:58.965784 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4580 explain e2e-test-crd-publish-openapi-7395-crds.spec.bars2'
  I0923 07:53:59.042366 22 builder.go:135] rc: 1
  E0923 07:53:59.812104      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:54:00.282205 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4580" for this suite. @ 09/23/25 07:54:00.288
â€¢ [3.540 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 09/23/25 07:54:00.295
  I0923 07:54:00.295675 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 07:54:00.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:54:00.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:54:00.308
  STEP: starting the proxy server @ 09/23/25 07:54:00.31
  I0923 07:54:00.310946 22 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8569 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/23/25 07:54:00.356
  I0923 07:54:00.364609 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0923 07:54:00.366085 22 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:35601

  I0923 07:54:00.366100 22 kubectl.go:2236] kubectl proxy stderr: W0923 07:54:00.355868     614 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-8569" for this suite. @ 09/23/25 07:54:00.392
â€¢ [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/23/25 07:54:00.399
  I0923 07:54:00.399897 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 07:54:00.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:54:00.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:54:00.41
  E0923 07:54:00.812273      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:01.813001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:02.813253      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:03.813886      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:04.814839      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:05.815912      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:06.816748      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:07.817661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:08.818380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:09.819064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:10.819861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:11.820518      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:12.821252      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:13.821847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:14.822419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:15.823000      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:16.823662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:17.824478      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:18.825039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:19.825823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:20.826669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:21.827491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:22.827677      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:23.828410      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:24.829429      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:25.830032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:26.830142      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:27.830186      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:28.830240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:29.830928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:30.832008      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:31.832425      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:32.833187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:33.833560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:34.834179      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:35.834732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:36.835421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:37.836245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:38.836871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:39.837729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:40.838068      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:41.838809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:42.839749      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:43.840536      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:44.841350      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:45.841757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:46.842641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:47.843491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:48.844317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:49.844995      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:50.845853      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:51.846675      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:52.847246      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:53.848077      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:54.848722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:55.849401      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:56.850112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:57.851097      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:58.851870      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:54:59.852507      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:55:00.422319 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3068" for this suite. @ 09/23/25 07:55:00.425
â€¢ [60.031 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 09/23/25 07:55:00.43
  I0923 07:55:00.430792 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/25 07:55:00.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:55:00.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:55:00.444
  I0923 07:55:00.476688 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0923 07:55:00.853365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:01.853553      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:02.854292      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:03.854418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:04.854521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:05.854672      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:06.855383      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:07.855466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:08.856423      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:09.856752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:10.857184      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:11.857428      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:12.857786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:13.857915      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:14.858096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:15.858280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:16.858499      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:17.858625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:18.859214      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:19.859443      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:20.860128      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:21.860392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:22.861148      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:23.861303      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:24.861728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:25.861823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:26.861918      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:27.862037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:28.862096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:29.862330      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:30.863282      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:31.863693      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:32.864345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:33.864579      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:34.864733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:35.864936      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:36.865796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:37.865996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:38.866710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:39.866945      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:40.867127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:41.867358      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:42.867805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:43.868028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:44.869028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:45.869250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:46.869888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:47.870044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:48.870865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:49.871072      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:50.872129      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:51.872357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:52.872860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:53.872791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:54.873613      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:55.873883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:56.874896      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:57.875150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:58.875226      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:55:59.875610      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:56:00.480292 22 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/23/25 07:56:00.482
  STEP: Adding a custom resource @ 09/23/25 07:56:00.482
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/23/25 07:56:00.493
  I0923 07:56:00.504272 22 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/23/25 07:56:00.504
  E0923 07:56:00.876407      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:01.876679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/23/25 07:56:02.514
  I0923 07:56:02.519863 22 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/23/25 07:56:02.519
  E0923 07:56:02.877360      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:03.877493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/23/25 07:56:04.526
  I0923 07:56:04.529787 22 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0923 07:56:04.878055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:56:05.044796 22 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/23/25 07:56:05.061
  STEP: Removing a custom resource @ 09/23/25 07:56:05.072
  I0923 07:56:05.079230 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1489" for this suite. @ 09/23/25 07:56:05.081
â€¢ [64.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/23/25 07:56:05.087
  I0923 07:56:05.087218 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 07:56:05.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:56:05.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:56:05.11
  STEP: Creating secret with name secret-test-4cbf9709-4462-427d-96f0-3b4cc3cb66c5 @ 09/23/25 07:56:05.127
  STEP: Creating a pod to test consume secrets @ 09/23/25 07:56:05.131
  E0923 07:56:05.878998      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:06.879331      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:56:07.151
  I0923 07:56:07.152906 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-secrets-edd8cfdd-21cd-40d2-ba6f-75f714392e78 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 07:56:07.165
  I0923 07:56:07.176958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3585" for this suite. @ 09/23/25 07:56:07.179
  STEP: Destroying namespace "secret-namespace-5375" for this suite. @ 09/23/25 07:56:07.187
â€¢ [2.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/23/25 07:56:07.192
  I0923 07:56:07.192984 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 07:56:07.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:56:07.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:56:07.208
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/23/25 07:56:07.21
  E0923 07:56:07.879293      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:08.879418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:09.879856      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:10.879930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 07:56:11.225
  I0923 07:56:11.227846 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-6be7e2a3-f4d7-475d-8ab1-61d5bb43c2ef container test-container: <nil>
  STEP: delete the pod @ 09/23/25 07:56:11.231
  I0923 07:56:11.244638 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7449" for this suite. @ 09/23/25 07:56:11.246
â€¢ [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 09/23/25 07:56:11.253
  I0923 07:56:11.253128 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/25 07:56:11.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:56:11.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:56:11.266
  I0923 07:56:11.286349 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0923 07:56:11.880127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:12.880298      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:13.880550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:14.880522      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:15.881353      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:16.881648      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:17.881852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:18.882075      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:19.882289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:20.882526      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:21.883372      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:22.883560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:23.884351      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:24.884512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:25.884698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:26.884844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:27.885240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:28.885480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:29.885656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:30.885868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:31.885972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:32.886188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:33.886449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:34.886705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:35.887711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:36.887987      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:37.888968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:38.889207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:39.889810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:40.890032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:41.890204      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:42.890508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:43.891505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:44.891694      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:45.891724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:46.891872      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:47.892864      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:48.893088      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:49.893284      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:50.893622      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:51.894421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:52.894616      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:53.895567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:54.895731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:55.895873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:56.895984      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:57.896149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:58.896437      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:56:59.897089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:00.897343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:01.898219      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:02.898446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:03.898546      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:04.898800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:05.899752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:06.899868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:07.900747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:08.900972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:09.901089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:10.901316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:11.289528 22 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/23/25 07:57:11.291
  I0923 07:57:11.291376 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/23/25 07:57:11.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:11.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:11.304
  I0923 07:57:11.320339 22 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0923 07:57:11.322225 22 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/23/25 07:57:11.36
  STEP: Removing a custom resource @ 09/23/25 07:57:11.371
  I0923 07:57:11.377566 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1060" for this suite. @ 09/23/25 07:57:11.39
  I0923 07:57:11.395310 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8443" for this suite. @ 09/23/25 07:57:11.49
â€¢ [60.243 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/23/25 07:57:11.496
  I0923 07:57:11.496163 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:57:11.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:11.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:11.514
  STEP: Creating a ResourceQuota with best effort scope @ 09/23/25 07:57:11.516
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/25 07:57:11.52
  E0923 07:57:11.901694      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:12.901967      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/23/25 07:57:13.523
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/25 07:57:13.528
  E0923 07:57:13.902656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:14.902790      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/23/25 07:57:15.53
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/23/25 07:57:15.541
  E0923 07:57:15.903845      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:16.904075      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/23/25 07:57:17.544
  E0923 07:57:17.904243      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:18.904384      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/25 07:57:19.547
  STEP: Ensuring resource quota status released the pod usage @ 09/23/25 07:57:19.562
  E0923 07:57:19.904565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:20.904787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/23/25 07:57:21.564
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/23/25 07:57:21.582
  E0923 07:57:21.905804      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:22.906057      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/23/25 07:57:23.585
  E0923 07:57:23.907108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:24.907307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/25 07:57:25.588
  STEP: Ensuring resource quota status released the pod usage @ 09/23/25 07:57:25.605
  E0923 07:57:25.908061      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:26.908195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:27.608193 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7583" for this suite. @ 09/23/25 07:57:27.61
â€¢ [16.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/23/25 07:57:27.621
  I0923 07:57:27.621466 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/25 07:57:27.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:27.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:27.636
  STEP: Performing setup for networking test in namespace pod-network-test-688 @ 09/23/25 07:57:27.638
  STEP: creating a selector @ 09/23/25 07:57:27.638
  STEP: Creating the service pods in kubernetes @ 09/23/25 07:57:27.638
  I0923 07:57:27.638165 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0923 07:57:27.908609      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:28.908877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:29.909285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:30.909427      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:31.910193      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:32.910333      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:33.911169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:34.911315      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:35.911978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:36.912236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:37.912985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:38.913233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:39.914147      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:40.914267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/23/25 07:57:41.765
  E0923 07:57:41.915088      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:42.915340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:43.780640 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0923 07:57:43.780675 22 networking.go:42] Breadth first check of 10.244.1.13 on host 172.19.1.4...
  I0923 07:57:43.782275 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.14:9080/dial?request=hostname&protocol=udp&host=10.244.1.13&port=8081&tries=1'] Namespace:pod-network-test-688 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 07:57:43.782310 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 07:57:43.782370 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-688/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.13%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0923 07:57:43.832860 22 utils.go:356] Waiting for responses: map[]
  I0923 07:57:43.832913 22 utils.go:360] reached 10.244.1.13 after 0/1 tries
  I0923 07:57:43.832937 22 networking.go:42] Breadth first check of 10.244.2.184 on host 172.19.1.5...
  I0923 07:57:43.835142 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.14:9080/dial?request=hostname&protocol=udp&host=10.244.2.184&port=8081&tries=1'] Namespace:pod-network-test-688 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 07:57:43.835183 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 07:57:43.835246 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-688/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.184%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0923 07:57:43.885742 22 utils.go:356] Waiting for responses: map[]
  I0923 07:57:43.885797 22 utils.go:360] reached 10.244.2.184 after 0/1 tries
  I0923 07:57:43.885813 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0923 07:57:43.885949 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-688" for this suite. @ 09/23/25 07:57:43.888
â€¢ [16.272 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/23/25 07:57:43.893
  I0923 07:57:43.893733 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:57:43.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:43.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:43.908
  STEP: creating the pod @ 09/23/25 07:57:43.91
  STEP: setting up watch @ 09/23/25 07:57:43.91
  E0923 07:57:43.915839      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 09/23/25 07:57:44.013
  STEP: verifying the pod is in kubernetes @ 09/23/25 07:57:44.021
  STEP: verifying pod creation was observed @ 09/23/25 07:57:44.023
  E0923 07:57:44.916226      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:45.916394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/23/25 07:57:46.032
  STEP: verifying pod deletion was observed @ 09/23/25 07:57:46.041
  E0923 07:57:46.916649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:47.118930 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7592" for this suite. @ 09/23/25 07:57:47.121
â€¢ [3.233 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/23/25 07:57:47.126
  I0923 07:57:47.126976 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/23/25 07:57:47.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:47.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:47.143
  STEP: getting /apis @ 09/23/25 07:57:47.145
  STEP: getting /apis/storage.k8s.io @ 09/23/25 07:57:47.148
  STEP: getting /apis/storage.k8s.io/v1 @ 09/23/25 07:57:47.149
  STEP: creating @ 09/23/25 07:57:47.149
  STEP: watching @ 09/23/25 07:57:47.163
  I0923 07:57:47.163854 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/23/25 07:57:47.17
  STEP: listing in namespace @ 09/23/25 07:57:47.171
  STEP: listing across namespaces @ 09/23/25 07:57:47.173
  STEP: patching @ 09/23/25 07:57:47.174
  STEP: updating @ 09/23/25 07:57:47.179
  I0923 07:57:47.182871 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0923 07:57:47.182968 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/23/25 07:57:47.183
  STEP: deleting a collection @ 09/23/25 07:57:47.19
  I0923 07:57:47.201088 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2383" for this suite. @ 09/23/25 07:57:47.222
â€¢ [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/23/25 07:57:47.229
  I0923 07:57:47.229888 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 07:57:47.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:47.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:47.241
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/25 07:57:47.329
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 07:57:47.333
  I0923 07:57:47.423538 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:57:47.425525 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:57:47.425562 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:57:47.916820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:48.336332 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:57:48.338526 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 07:57:48.338562 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 07:57:48.917102      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:49.336323 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 07:57:49.338222 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 07:57:49.338257 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/23/25 07:57:49.339
  I0923 07:57:49.341975 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/23/25 07:57:49.342
  I0923 07:57:49.368881 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/23/25 07:57:49.368
  I0923 07:57:49.370632 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0923 07:57:49.370945 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.371188 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.371329 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.371409 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1335 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0923 07:57:49.371437 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/23/25 07:57:49.371
  STEP: watching for the daemon set status to be patched @ 09/23/25 07:57:49.378
  I0923 07:57:49.380348 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0923 07:57:49.380505 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.380641 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.380747 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.380974 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1335 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0923 07:57:49.381245 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0923 07:57:49.381282 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1335 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0923 07:57:49.381306 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 07:57:49.386
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1335, will wait for the garbage collector to delete the pods @ 09/23/25 07:57:49.386
  I0923 07:57:49.443946 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.147814ms
  I0923 07:57:49.544764 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.806248ms
  E0923 07:57:49.918094      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:50.918928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:51.247513 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 07:57:51.247554 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 07:57:51.249534 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17859"},"items":null}

  I0923 07:57:51.251223 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17859"},"items":null}

  I0923 07:57:51.256523 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1335" for this suite. @ 09/23/25 07:57:51.258
â€¢ [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/23/25 07:57:51.264
  I0923 07:57:51.264731 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 07:57:51.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:51.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:51.276
  STEP: creating a Pod with a static label @ 09/23/25 07:57:51.282
  STEP: watching for Pod to be ready @ 09/23/25 07:57:51.299
  I0923 07:57:51.300686 22 pods.go:945] observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0923 07:57:51.303850 22 pods.go:945] observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  }]
  I0923 07:57:51.313988 22 pods.go:945] observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  }]
  E0923 07:57:51.919751      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:52.239304 22 pods.go:948] Found Pod pod-test in namespace pods-7221 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:52 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:52 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-23 07:57:51 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/23/25 07:57:52.244
  STEP: getting the Pod and ensuring that it's patched @ 09/23/25 07:57:52.253
  STEP: replacing the Pod's status Ready condition to False @ 09/23/25 07:57:52.255
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/23/25 07:57:52.264
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/23/25 07:57:52.264
  STEP: watching for the Pod to be deleted @ 09/23/25 07:57:52.27
  I0923 07:57:52.271173 22 pods.go:1058] observed event type MODIFIED
  E0923 07:57:52.919870      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:53.920000      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:54.245700 22 pods.go:1058] observed event type MODIFIED
  I0923 07:57:54.346125 22 pods.go:1058] observed event type MODIFIED
  E0923 07:57:54.920977      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:57:55.253828 22 pods.go:1058] observed event type MODIFIED
  I0923 07:57:55.258569 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7221" for this suite. @ 09/23/25 07:57:55.261
â€¢ [4.002 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/23/25 07:57:55.266
  I0923 07:57:55.266549 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:57:55.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:57:55.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:57:55.277
  STEP: Counting existing ResourceQuota @ 09/23/25 07:57:55.28
  E0923 07:57:55.921416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:56.922462      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:57.923338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:58.924341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:57:59.924524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 07:58:00.283
  STEP: Ensuring resource quota status is calculated @ 09/23/25 07:58:00.288
  E0923 07:58:00.924657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:01.924833      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/23/25 07:58:02.291
  STEP: Ensuring resource quota status captures replication controller creation @ 09/23/25 07:58:02.303
  E0923 07:58:02.925185      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:03.925276      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/23/25 07:58:04.306
  STEP: Ensuring resource quota status released usage @ 09/23/25 07:58:04.311
  E0923 07:58:04.925417      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:05.925552      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:58:06.314791 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6650" for this suite. @ 09/23/25 07:58:06.317
â€¢ [11.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/23/25 07:58:06.322
  I0923 07:58:06.322751 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 07:58:06.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:58:06.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:58:06.336
  E0923 07:58:06.925761      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:07.925887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/23/25 07:58:08.367
  I0923 07:58:08.367867 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5856 pod-service-account-1c632131-9ea3-46a9-9420-4071c931a629 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/23/25 07:58:08.487
  I0923 07:58:08.487244 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5856 pod-service-account-1c632131-9ea3-46a9-9420-4071c931a629 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/23/25 07:58:08.593
  I0923 07:58:08.593158 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5856 pod-service-account-1c632131-9ea3-46a9-9420-4071c931a629 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0923 07:58:08.709081 22 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-5856"
  I0923 07:58:08.710905 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5856" for this suite. @ 09/23/25 07:58:08.713
â€¢ [2.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/23/25 07:58:08.719
  I0923 07:58:08.719639 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 07:58:08.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:58:08.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:58:08.731
  E0923 07:58:08.926067      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:09.926951      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:10.926964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:11.927926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:12.928928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:13.929355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:14.929830      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:15.930213      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:16.931280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:17.931960      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:18.932664      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:19.932772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:20.933396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:21.934238      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:22.935106      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:23.935528      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:24.936197      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/23/25 07:58:25.736
  E0923 07:58:25.936346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:26.936505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:27.937105      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:28.937944      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:29.938079      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 07:58:30.739
  STEP: Ensuring resource quota status is calculated @ 09/23/25 07:58:30.745
  E0923 07:58:30.938167      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:31.938505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/23/25 07:58:32.748
  STEP: Ensuring resource quota status captures configMap creation @ 09/23/25 07:58:32.758
  E0923 07:58:32.939299      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:33.939418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/23/25 07:58:34.761
  STEP: Ensuring resource quota status released usage @ 09/23/25 07:58:34.765
  E0923 07:58:34.940423      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:35.940542      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 07:58:36.769690 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-360" for this suite. @ 09/23/25 07:58:36.775
â€¢ [28.061 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/23/25 07:58:36.78
  I0923 07:58:36.780889 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename cronjob @ 09/23/25 07:58:36.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 07:58:36.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 07:58:36.793
  STEP: Creating a ReplaceConcurrent cronjob @ 09/23/25 07:58:36.795
  STEP: Ensuring a job is scheduled @ 09/23/25 07:58:36.8
  E0923 07:58:36.941449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:37.941571      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:38.941756      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:39.941976      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:40.942353      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:41.942622      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:42.943012      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:43.943263      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:44.943862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:45.944064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:46.944936      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:47.945182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:48.945662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:49.945938      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:50.946321      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:51.946487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:52.947042      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:53.947196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:54.947430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:55.947696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:56.948108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:57.948242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:58.948738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:58:59.948927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/23/25 07:59:00.802
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/23/25 07:59:00.804
  STEP: Ensuring the job is replaced with a new one @ 09/23/25 07:59:00.806
  E0923 07:59:00.949702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:01.949830      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:02.950399      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:03.950831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:04.951492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:05.951764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:06.952506      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:07.952768      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:08.953497      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:09.953743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:10.954418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:11.954661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:12.955320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:13.955494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:14.956221      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:15.956511      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:16.957266      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:17.957425      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:18.957906      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:19.958084      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:20.958532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:21.958764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:22.958938      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:23.959147      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:24.959302      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:25.959410      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:26.960142      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:27.960300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:28.960365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:29.960668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:30.961433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:31.961657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:32.962254      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:33.962373      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:34.962701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:35.963464      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:36.964148      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:37.964374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:38.965030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:39.965290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:40.965386      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:41.965538      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:42.965983      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:43.966233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:44.966394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:45.966772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:46.967569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:47.967846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:48.968574      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:49.968852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:50.969868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:51.970112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:52.970237      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:53.970372      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:54.970892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:55.971572      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:56.971806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:57.971991      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:58.972074      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 07:59:59.972270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/23/25 08:00:00.809
  I0923 08:00:00.815809 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7294" for this suite. @ 09/23/25 08:00:00.818
â€¢ [84.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/23/25 08:00:00.826
  I0923 08:00:00.826474 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename endpointslice @ 09/23/25 08:00:00.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:00.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:00.841
  I0923 08:00:00.848427 22 endpointslice.go:1045] Endpoints addresses: [172.19.0.4] , ports: [6443]
  I0923 08:00:00.848468 22 endpointslice.go:1075] EndpointSlices addresses: [172.19.0.4] , ports: [6443]
  I0923 08:00:00.848627 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3656" for this suite. @ 09/23/25 08:00:00.919
â€¢ [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 09/23/25 08:00:00.924
  I0923 08:00:00.924785 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 08:00:00.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:00.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:00.941
  STEP: Creating service test in namespace statefulset-2314 @ 09/23/25 08:00:00.943
  STEP: Creating statefulset ss in namespace statefulset-2314 @ 09/23/25 08:00:00.951
  I0923 08:00:00.961744 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0923 08:00:00.972970      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:01.973108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:02.973338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:03.973573      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:04.973863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:05.974500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:06.974704      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:07.974948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:08.975217      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:09.975465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:00:10.962197 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/23/25 08:00:10.969
  E0923 08:00:10.975796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/23/25 08:00:10.98
  I0923 08:00:10.983829 22 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/23/25 08:00:10.983
  I0923 08:00:10.990249 22 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/23/25 08:00:10.99
  I0923 08:00:10.991772 22 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0923 08:00:10.991816 22 statefulset.go:1114] Found Statefulset ss in namespace statefulset-2314 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 08:00:10.991832 22 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/23/25 08:00:10.991
  I0923 08:00:10.991870 22 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0923 08:00:10.999275 22 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/23/25 08:00:10.999
  I0923 08:00:11.000712 22 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0923 08:00:11.000793 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2314
  I0923 08:00:11.004761 22 rest.go:152] Scaling statefulset ss to 0
  E0923 08:00:11.976005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:12.976127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:13.976317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:14.976531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:15.976837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:16.976913      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:17.977099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:18.977208      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:19.977355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:20.977605      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:00:21.016283 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 08:00:21.017960 22 rest.go:90] Deleting statefulset ss
  I0923 08:00:21.030335 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2314" for this suite. @ 09/23/25 08:00:21.033
â€¢ [20.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/23/25 08:00:21.038
  I0923 08:00:21.038947 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:00:21.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:21.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:21.054
  STEP: Creating a pod to test downward api env vars @ 09/23/25 08:00:21.056
  E0923 08:00:21.977850      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:22.977993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:23.978240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:24.978364      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:00:25.07
  I0923 08:00:25.072205 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-f5f8c89f-d67a-453a-8398-1e4c12deb886 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 08:00:25.085
  I0923 08:00:25.098343 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7281" for this suite. @ 09/23/25 08:00:25.1
â€¢ [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/23/25 08:00:25.106
  I0923 08:00:25.106149 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename watch @ 09/23/25 08:00:25.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:25.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:25.12
  STEP: creating a new configmap @ 09/23/25 08:00:25.122
  STEP: modifying the configmap once @ 09/23/25 08:00:25.127
  STEP: modifying the configmap a second time @ 09/23/25 08:00:25.132
  STEP: deleting the configmap @ 09/23/25 08:00:25.137
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/23/25 08:00:25.141
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/23/25 08:00:25.142
  I0923 08:00:25.142614 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7372  cda676a0-8224-4302-b2c4-7a11483196e5 18347 0 2025-09-23 08:00:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-23 08:00:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:00:25.142887 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7372  cda676a0-8224-4302-b2c4-7a11483196e5 18348 0 2025-09-23 08:00:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-23 08:00:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:00:25.143090 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7372" for this suite. @ 09/23/25 08:00:25.201
â€¢ [0.103 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/23/25 08:00:25.209
  I0923 08:00:25.209282 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 08:00:25.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:25.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:25.23
  STEP: create the deployment @ 09/23/25 08:00:25.232
  W0923 08:00:25.238043      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/23/25 08:00:25.238
  STEP: delete the deployment @ 09/23/25 08:00:25.742
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/23/25 08:00:25.749
  E0923 08:00:25.979363      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/23/25 08:00:26.259
  I0923 08:00:26.351348 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 08:00:26.351616 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4203" for this suite. @ 09/23/25 08:00:26.354
â€¢ [1.153 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 09/23/25 08:00:26.362
  I0923 08:00:26.362227 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:00:26.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:26.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:26.373
  STEP: creating a Service @ 09/23/25 08:00:26.377
  STEP: watching for the Service to be added @ 09/23/25 08:00:26.39
  I0923 08:00:26.391689 22 service.go:3425] Found Service test-service-6qtxj in namespace services-1250 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31983}]
  I0923 08:00:26.391733 22 service.go:3432] Service test-service-6qtxj created
  STEP: Getting /status @ 09/23/25 08:00:26.391
  I0923 08:00:26.397325 22 service.go:3443] Service test-service-6qtxj has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/23/25 08:00:26.397
  STEP: watching for the Service to be patched @ 09/23/25 08:00:26.411
  I0923 08:00:26.413338 22 service.go:3466] observed Service test-service-6qtxj in namespace services-1250 with annotations: map[] & LoadBalancer: {[]}
  I0923 08:00:26.413381 22 service.go:3469] Found Service test-service-6qtxj in namespace services-1250 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000f906c0 []}]}
  I0923 08:00:26.413396 22 service.go:3476] Service test-service-6qtxj has service status patched
  STEP: updating the ServiceStatus @ 09/23/25 08:00:26.413
  I0923 08:00:26.430244 22 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/23/25 08:00:26.43
  I0923 08:00:26.431781 22 service.go:3507] Observed Service test-service-6qtxj in namespace services-1250 with annotations: map[] & Conditions: []
  I0923 08:00:26.431834 22 service.go:3518] Observed Service test-service-6qtxj in namespace services-1250 with annotations: map[patchedstatus:true] & Conditions: []
  I0923 08:00:26.431890 22 service.go:3514] Found Service test-service-6qtxj in namespace services-1250 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0923 08:00:26.431904 22 service.go:3525] Service test-service-6qtxj has service status updated
  STEP: patching the service @ 09/23/25 08:00:26.431
  STEP: watching for the Service to be patched @ 09/23/25 08:00:26.448
  I0923 08:00:26.450056 22 service.go:3548] observed Service test-service-6qtxj in namespace services-1250 with labels: map[test-service-static:true]
  I0923 08:00:26.450111 22 service.go:3548] observed Service test-service-6qtxj in namespace services-1250 with labels: map[test-service-static:true]
  I0923 08:00:26.450129 22 service.go:3548] observed Service test-service-6qtxj in namespace services-1250 with labels: map[test-service-static:true]
  I0923 08:00:26.450176 22 service.go:3551] Found Service test-service-6qtxj in namespace services-1250 with labels: map[test-service:patched test-service-static:true]
  I0923 08:00:26.450199 22 service.go:3558] Service test-service-6qtxj patched
  STEP: deleting the service @ 09/23/25 08:00:26.45
  STEP: watching for the Service to be deleted @ 09/23/25 08:00:26.464
  I0923 08:00:26.466120 22 service.go:3582] Observed event: ADDED
  I0923 08:00:26.466199 22 service.go:3582] Observed event: MODIFIED
  I0923 08:00:26.466216 22 service.go:3582] Observed event: MODIFIED
  I0923 08:00:26.466299 22 service.go:3582] Observed event: MODIFIED
  I0923 08:00:26.466404 22 service.go:3578] Found Service test-service-6qtxj in namespace services-1250 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0923 08:00:26.466424 22 service.go:3587] Service test-service-6qtxj deleted
  I0923 08:00:26.466523 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1250" for this suite. @ 09/23/25 08:00:26.468
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/23/25 08:00:26.477
  I0923 08:00:26.477676 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replicaset @ 09/23/25 08:00:26.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:26.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:26.508
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/23/25 08:00:26.51
  E0923 08:00:26.979467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:27.979762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/23/25 08:00:28.531
  STEP: Then the orphan pod is adopted @ 09/23/25 08:00:28.535
  E0923 08:00:28.979899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/23/25 08:00:29.54
  I0923 08:00:29.543329 22 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/23/25 08:00:29.553
  E0923 08:00:29.980812      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:00:30.557635 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9185" for this suite. @ 09/23/25 08:00:30.56
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/23/25 08:00:30.565
  I0923 08:00:30.565083 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename csinodes @ 09/23/25 08:00:30.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:30.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:30.579
  STEP: Creating initial csiNode "e2e-csinode-wgzcg" @ 09/23/25 08:00:30.581
  STEP: Getting initial csiNode "e2e-csinode-wgzcg" @ 09/23/25 08:00:30.586
  STEP: Patching initial csiNode: "e2e-csinode-wgzcg" @ 09/23/25 08:00:30.587
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-wgzcg=patched" @ 09/23/25 08:00:30.593
  STEP: Delete initial csiNode: "e2e-csinode-wgzcg" @ 09/23/25 08:00:30.596
  STEP: Confirm deletion of csiNode "e2e-csinode-wgzcg" @ 09/23/25 08:00:30.606
  STEP: Creating replacement csiNode "e2e-csinode-k8zxw" @ 09/23/25 08:00:30.608
  STEP: Getting replacement csiNode "e2e-csinode-k8zxw" @ 09/23/25 08:00:30.612
  STEP: Updating replacement csiNode "e2e-csinode-k8zxw" @ 09/23/25 08:00:30.614
  STEP: DeleteCollection of CSINodes with "e2e-csinode-k8zxw=updated" label @ 09/23/25 08:00:30.618
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-k8zxw=updated" @ 09/23/25 08:00:30.625
  I0923 08:00:30.627297 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-858" for this suite. @ 09/23/25 08:00:30.661
â€¢ [0.103 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 09/23/25 08:00:30.668
  I0923 08:00:30.668297 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:00:30.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:30.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:30.679
  STEP: fetching services @ 09/23/25 08:00:30.681
  I0923 08:00:30.683736 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8674" for this suite. @ 09/23/25 08:00:30.761
â€¢ [0.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/23/25 08:00:30.767
  I0923 08:00:30.767069 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:00:30.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:30.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:30.779
  STEP: Creating secret with name secret-test-1ef89252-3951-4346-a93b-5af95b13759a @ 09/23/25 08:00:30.783
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:00:30.787
  E0923 08:00:30.981726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:31.981869      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:00:32.801
  I0923 08:00:32.803299 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-secrets-fd93aa6a-3f59-4a6b-9414-4c524bdac42d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:00:32.807
  I0923 08:00:32.820555 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6970" for this suite. @ 09/23/25 08:00:32.823
â€¢ [2.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/23/25 08:00:32.827
  I0923 08:00:32.827889 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/23/25 08:00:32.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:32.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:32.842
  STEP: creating the policy @ 09/23/25 08:00:32.849
  STEP: waiting until the marker is denied @ 09/23/25 08:00:32.861
  E0923 08:00:32.982261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/23/25 08:00:33.666
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/23/25 08:00:33.682
  I0923 08:00:33.740848 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7980" for this suite. @ 09/23/25 08:00:33.746
â€¢ [0.928 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/23/25 08:00:33.756
  I0923 08:00:33.756282 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename chunking @ 09/23/25 08:00:33.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:00:33.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:00:33.769
  STEP: creating a large number of resources @ 09/23/25 08:00:33.771
  E0923 08:00:33.983367      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:34.984177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:35.984510      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:36.985028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:37.985889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:38.986340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:39.986741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:40.987756      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:41.988046      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:42.988455      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:43.989279      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:44.989696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:45.990720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:46.991707      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:47.992532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:48.993178      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:49.993550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:50.994134      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/23/25 08:00:51.463
  I0923 08:00:51.511553 22 chunking.go:163] Retrieved 40/40 results with rv 19198 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/23/25 08:00:51.511
  E0923 08:00:51.994828      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:52.994994      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:53.995135      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:54.995297      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:55.995668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:56.995759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:57.995951      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:58.996076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:00:59.996222      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:00.996469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:01.996553      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:02.996698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:03.996830      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:04.997023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:05.997530      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:06.997631      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:07.997863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:08.998114      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:09.998338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:10.998577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:01:11.515832 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:01:11.999127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:12.999354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:13.999571      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:14.999810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:15.999857      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:17.000916      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:18.001306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:19.001464      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:20.001699      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:21.002730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:22.003808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:23.003982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:24.004191      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:25.004416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:26.004494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:27.004624      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:28.004820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:29.005058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:30.005280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:31.005382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:01:31.515207 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:01:32.005516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:33.005697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:34.005742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:35.005985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:36.006518      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:37.006566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:38.006695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:39.006926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:40.006892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:41.007212      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:42.007327      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:43.007486      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:44.007603      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:45.007789      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:46.007982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:47.009080      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:48.009190      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:49.009392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:50.009534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:51.009763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:01:51.516338 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:01:52.010736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:53.010948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:54.011161      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:55.011411      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:56.011672      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:57.011743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:58.011860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:01:59.011985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:00.012182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:01.012444      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:02.012753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:03.013064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:04.013305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:05.013459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:06.013721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:07.013967      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:08.014200      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:09.014460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:10.014729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:11.015786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:02:11.515127 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:02:12.016521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:13.016714      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:14.016933      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:15.017141      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:16.017414      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:17.017669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:18.017885      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:19.018133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:20.018375      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:21.018477      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:22.018742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:23.018969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:24.019263      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:25.019509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:26.020534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:27.020733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:28.020976      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:29.021204      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:30.021421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:31.021539      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:02:31.536655 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:02:32.021886      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:33.021972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:34.022159      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:35.022380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:36.022423      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:37.022471      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:38.022675      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:39.022791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:40.022975      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:41.023103      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:42.023377      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:43.023650      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:44.023771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:45.023943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:46.024168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:47.024398      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:48.024569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:49.024870      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:50.025116      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:51.025407      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:02:51.515056 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:02:52.025522      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:53.025766      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:54.025997      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:55.026213      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:56.026458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:57.026698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:58.026848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:02:59.027066      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:00.027276      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:01.027481      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:02.027722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:03.027924      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:04.028183      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:05.028678      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:06.028984      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:07.029125      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:08.029317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:09.029567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:10.029805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:11.030500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:03:11.515272 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:03:12.030646      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:13.030901      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:14.031136      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:15.031446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:16.032461      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:17.032702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:18.032915      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:19.033134      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:20.033336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:21.033462      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:22.034442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:23.034714      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:24.034948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:25.035180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:26.035578      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:27.035827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:28.036063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:29.036294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:30.036522      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:31.037528      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:03:31.515548 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:03:32.037762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:33.037814      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:34.038031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:35.038257      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:36.038471      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:37.038690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:38.038929      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:39.039224      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:40.039438      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:41.040566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:42.040792      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:43.041007      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:44.041238      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:45.041457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:46.041614      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:47.041840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:48.042061      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:49.042271      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:50.042480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:51.042652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:03:51.515256 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:03:52.043548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:53.043727      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:54.043944      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:55.044169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:56.044652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:57.044909      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:58.045150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:03:59.045355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:00.045572      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:01.046508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:02.046661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:03.046899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:04.047123      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:05.047354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:06.047487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:07.047732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:08.047943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:09.048169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:10.048392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:11.048473      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:04:11.515393 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:04:12.048680      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:13.048921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:14.049143      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:15.049350      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:16.049646      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:17.049884      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:18.050125      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:19.050367      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:20.051761      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:21.052563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:22.052914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:23.053162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:24.053422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:25.053692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:26.054556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:27.054867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:28.054979      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:29.055245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:30.055442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:31.055635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:04:31.515885 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:04:32.055880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:33.056146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:34.056393      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:35.056631      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:36.057525      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:37.057723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:38.057988      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:39.058067      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:40.058192      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:41.058476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:42.058633      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:43.058770      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:44.058919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:45.059800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:46.060660      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:47.060776      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:48.060991      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:49.061201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:50.061406      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:51.061507      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:04:51.514791 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:04:52.062036      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:53.062281      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:54.062503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:55.062754      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:56.063555      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:57.063684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:58.063895      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:04:59.064132      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:00.064348      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:01.064484      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:02.064668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:03.064787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:04.065010      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:05.065446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:06.065534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:07.065777      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:08.065980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:09.066198      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:10.066407      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:11.066495      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:05:11.515745 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:05:12.067011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:13.067218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:14.067443      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:15.067684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:16.068567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:17.068889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:18.069104      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:19.069321      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:20.069532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:21.069609      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:22.069737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:23.069944      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:24.070152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:25.070369      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:26.070504      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:27.070713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:28.070938      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:29.071145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:30.071355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:31.071493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:05:31.515503 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:05:32.071719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:33.071934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:34.072169      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:35.072392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:36.072634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:37.072756      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:38.072892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:39.073110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:40.073331      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:41.073487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:42.073720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:43.073954      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:44.074166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:45.074385      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:46.074494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:47.074775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:48.075009      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:49.075258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:50.075508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:51.075637      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:05:51.515861 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:05:52.076156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:53.076403      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:54.076656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:55.076861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:56.077544      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:57.077784      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:58.077997      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:05:59.078824      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:00.079060      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:01.079575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:02.079732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:03.079957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:04.080182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:05.080389      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:06.080491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:07.080713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:08.080943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:09.081187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:10.081411      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:11.081492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:06:11.515664 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:06:12.081889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:13.082112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:14.082318      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:15.082529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:16.083677      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:17.083911      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:18.084133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:19.084392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:20.084663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:21.085616      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:22.085833      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:23.086092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:24.086300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:25.086516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:26.087564      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:27.087893      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:28.088098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:29.088323      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:30.088565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:31.089556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:06:31.515845 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:06:32.090323      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:33.090523      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:34.090766      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:35.090923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:36.091639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:37.091841      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:38.092044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:39.092156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:40.092290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:41.092656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:42.092719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:43.092934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:44.093859      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:45.093962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:46.094507      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:47.094706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:48.094925      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:49.095106      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:50.095352      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:51.095483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:06:51.515619 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:06:52.095937      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:53.096079      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:54.096308      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:55.096566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:56.097714      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:57.097975      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:58.098224      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:06:59.098445      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:00.098701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:01.099623      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:02.099942      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:03.100150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:04.100456      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:05.100935      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:06.101625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:07.101703      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:08.102005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:09.102227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:10.102442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:11.102557      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:07:11.515506 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:07:12.102691      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:13.102906      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:14.103113      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:15.103337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:16.103511      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:17.103730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:18.103927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:19.104196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:20.104427      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:21.104567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:22.104732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:23.104944      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:24.105147      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:25.105364      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:26.105529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:27.105779      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:28.106006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:29.106239      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:30.106457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:31.106611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:07:31.515576 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:07:32.106718      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:33.106945      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:34.107194      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:35.107413      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:36.107518      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:37.107716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:38.107865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:39.108087      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:40.108291      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:41.108492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:42.108742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:43.108961      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:44.109175      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:45.109488      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:46.109610      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:47.109845      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:48.110068      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:49.110298      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:50.110512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:51.110570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:07:51.515623 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:07:52.110919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:53.111174      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:54.111424      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:55.111710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:56.112613      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:57.112818      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:58.113044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:07:59.113258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:00.113482      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:01.113641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:02.113804      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:03.114020      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:04.114226      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:05.114457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:06.114521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:07.114768      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:08.115001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:09.115255      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:10.115473      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:11.115641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:08:11.515544 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:08:12.115908      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:13.116117      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:14.116326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:15.116550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:16.117568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:17.117805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:18.118038      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:19.118191      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:20.118627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:21.119611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:22.119828      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:23.120037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:24.120277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:25.120695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:26.121617      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:27.121823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:28.122031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:29.122233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:30.122463      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:31.122562      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:08:31.516010 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:08:32.123392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:33.123562      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:34.123810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:35.124024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:36.124635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:37.124847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:38.125094      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:39.125320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:40.125548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:41.125674      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:42.125904      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:43.126146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:44.126371      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:45.126630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:46.127621      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:47.127944      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:48.128151      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:49.128365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:50.128575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:51.128685      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:08:51.515154 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxOTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0923 08:08:52.129620      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:53.129826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:54.130038      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:55.130264      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:56.130523      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:57.130774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:58.131001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:08:59.131210      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:00.131444      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:01.131615      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:02.131846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:03.132059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:04.132274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:05.132765      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:06.132661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:07.132896      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:08.133138      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:09.133381      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:10.133649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:11.134641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:11.514301 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0923 08:09:11.514339 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/23/25 08:09:11.514
  STEP: retrieving all remaining pages @ 09/23/25 08:09:11.517
  I0923 08:09:11.519685 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0923 08:09:11.522231 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0923 08:09:11.524680 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0923 08:09:11.527178 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0923 08:09:11.529727 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0923 08:09:11.532205 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0923 08:09:11.534449 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk5NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0923 08:09:11.536921 22 chunking.go:221] Retrieved 40/40 results with rv 19947 and continue 
  I0923 08:09:11.537148 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5635" for this suite. @ 09/23/25 08:09:11.539
â€¢ [517.788 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/23/25 08:09:11.544
  I0923 08:09:11.544688 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 08:09:11.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:11.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:11.556
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/23/25 08:09:11.558
  I0923 08:09:11.559116 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:09:12.135650      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:13.135980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:14.136899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:15.136931      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:16.137848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/23/25 08:09:16.762
  I0923 08:09:16.762619 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:09:17.137987      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:18.064746 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:09:18.138148      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:19.139035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:20.140145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:21.140689      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:22.141259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:23.141854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:23.147887 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7555" for this suite. @ 09/23/25 08:09:23.154
â€¢ [11.616 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/23/25 08:09:23.161
  I0923 08:09:23.161195 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename podtemplate @ 09/23/25 08:09:23.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:23.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:23.175
  STEP: Create set of pod templates @ 09/23/25 08:09:23.177
  I0923 08:09:23.181509 22 podtemplates.go:143] created test-podtemplate-1
  I0923 08:09:23.187149 22 podtemplates.go:143] created test-podtemplate-2
  I0923 08:09:23.190777 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/23/25 08:09:23.19
  STEP: delete collection of pod templates @ 09/23/25 08:09:23.192
  I0923 08:09:23.192637 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/23/25 08:09:23.202
  I0923 08:09:23.202904 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0923 08:09:23.204613 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9502" for this suite. @ 09/23/25 08:09:23.255
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/23/25 08:09:23.26
  I0923 08:09:23.260614 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:09:23.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:23.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:23.274
  STEP: Counting existing ResourceQuota @ 09/23/25 08:09:23.276
  E0923 08:09:24.142738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:25.143767      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:26.144772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:27.145510      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:28.145699      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 08:09:28.333
  STEP: Ensuring resource quota status is calculated @ 09/23/25 08:09:28.338
  E0923 08:09:29.145844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:30.146100      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/23/25 08:09:30.341
  STEP: Creating a NodePort Service @ 09/23/25 08:09:30.358
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/23/25 08:09:30.384
  STEP: Ensuring resource quota status captures service creation @ 09/23/25 08:09:30.411
  E0923 08:09:31.146754      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:32.147011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/23/25 08:09:32.414
  STEP: Ensuring resource quota status released usage @ 09/23/25 08:09:32.466
  E0923 08:09:33.147452      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:34.147727      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:34.469491 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3078" for this suite. @ 09/23/25 08:09:34.471
â€¢ [11.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 09/23/25 08:09:34.476
  I0923 08:09:34.476976 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:09:34.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:34.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:34.49
  STEP: Creating ServiceAccount "e2e-sa-fkbng"  @ 09/23/25 08:09:34.493
  I0923 08:09:34.497552 22 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-fkbng"  @ 09/23/25 08:09:34.497
  I0923 08:09:34.503376 22 service_accounts.go:868] AutomountServiceAccountToken: true
  I0923 08:09:34.503521 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9208" for this suite. @ 09/23/25 08:09:34.573
â€¢ [0.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/23/25 08:09:34.58
  I0923 08:09:34.580985 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/23/25 08:09:34.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:34.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:34.592
  STEP: Setting up the test @ 09/23/25 08:09:34.594
  STEP: Creating hostNetwork=false pod @ 09/23/25 08:09:34.594
  E0923 08:09:35.147866      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:36.148031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/23/25 08:09:36.609
  E0923 08:09:37.148132      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:38.148296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/23/25 08:09:38.621
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/23/25 08:09:38.621
  I0923 08:09:38.621676 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.621692 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.621741 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0923 08:09:38.665498 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.665561 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.665576 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.665670 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0923 08:09:38.708902 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.708965 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.708982 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.709047 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0923 08:09:38.749736 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.749824 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.749842 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.749914 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0923 08:09:38.791205 22 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/23/25 08:09:38.791
  I0923 08:09:38.791323 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.791337 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.791466 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0923 08:09:38.850134 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.850199 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.850213 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.850277 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0923 08:09:38.893484 22 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/23/25 08:09:38.893
  I0923 08:09:38.893610 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.893625 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.893693 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0923 08:09:38.937947 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.938003 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.938017 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.938422 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0923 08:09:38.979064 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:38.979139 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:38.979155 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:38.979223 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0923 08:09:39.025926 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:39.026015 22 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1327 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:09:39.026139 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:09:39.026218 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1327/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0923 08:09:39.066214 22 exec_util.go:108] Exec stderr: ""
  I0923 08:09:39.066372 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1327" for this suite. @ 09/23/25 08:09:39.069
â€¢ [4.493 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/23/25 08:09:39.074
  I0923 08:09:39.074199 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:09:39.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:39.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:39.091
  STEP: Creating a pod to test downward api env vars @ 09/23/25 08:09:39.093
  E0923 08:09:39.148383      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:40.148513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:41.149367      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:42.149460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:09:43.107
  I0923 08:09:43.109543 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-20595a06-0640-4220-8c10-3b5b30a2e748 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 08:09:43.124
  I0923 08:09:43.136385 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7080" for this suite. @ 09/23/25 08:09:43.138
â€¢ [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/23/25 08:09:43.143
  I0923 08:09:43.143098 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 08:09:43.144
  E0923 08:09:43.149968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:43.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:43.155
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/25 08:09:43.243
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 08:09:43.248
  I0923 08:09:43.339905 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:09:43.342116 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:09:43.342154 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:09:44.150647      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:44.259012 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:09:44.266805 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:09:44.267106 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:09:45.151034      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:45.252236 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:09:45.254427 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 08:09:45.254464 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/23/25 08:09:45.256
  STEP: DeleteCollection of the DaemonSets @ 09/23/25 08:09:45.258
  STEP: Verify that ReplicaSets have been deleted @ 09/23/25 08:09:45.263
  I0923 08:09:45.270546 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20593"},"items":null}

  I0923 08:09:45.280394 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20595"},"items":[{"metadata":{"name":"daemon-set-8l828","generateName":"daemon-set-","namespace":"daemonsets-102","uid":"fa20e1cb-403b-4e45-a3cd-23802cd7f91d","resourceVersion":"20595","creationTimestamp":"2025-09-23T08:09:43Z","deletionTimestamp":"2025-09-23T08:10:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c9f88448-f082-45b4-b570-7e5f4279ddba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-23T08:09:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c9f88448-f082-45b4-b570-7e5f4279ddba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-23T08:09:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.26\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vlkbs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vlkbs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ckp-cncf-w1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ckp-cncf-w1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:43Z"}],"hostIP":"172.19.1.4","hostIPs":[{"ip":"172.19.1.4"}],"podIP":"10.244.1.26","podIPs":[{"ip":"10.244.1.26"}],"startTime":"2025-09-23T08:09:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-23T08:09:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4ff40c2743e94e412c90b1d0f4fd75ccc3a2b431ddfbe6d428dba723ec4f0815","started":true,"volumeMounts":[{"name":"kube-api-access-vlkbs","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9mk4r","generateName":"daemon-set-","namespace":"daemonsets-102","uid":"3340d4de-f433-4b9c-8fc0-cc748406224e","resourceVersion":"20583","creationTimestamp":"2025-09-23T08:09:43Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c9f88448-f082-45b4-b570-7e5f4279ddba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-23T08:09:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c9f88448-f082-45b4-b570-7e5f4279ddba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-23T08:09:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.190\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mcl2z","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mcl2z","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ckp-cncf-w2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ckp-cncf-w2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-23T08:09:43Z"}],"hostIP":"172.19.1.5","hostIPs":[{"ip":"172.19.1.5"}],"podIP":"10.244.2.190","podIPs":[{"ip":"10.244.2.190"}],"startTime":"2025-09-23T08:09:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-23T08:09:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://406cff3d2cc02e23a02e255d1a19cd8081b4136a9ff63937a191ee4177695c2e","started":true,"volumeMounts":[{"name":"kube-api-access-mcl2z","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0923 08:09:45.357840 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-102" for this suite. @ 09/23/25 08:09:45.36
â€¢ [2.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/23/25 08:09:45.365
  I0923 08:09:45.365180 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context-test @ 09/23/25 08:09:45.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:45.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:45.378
  E0923 08:09:46.151689      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:47.152669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:48.152782      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:49.153004      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:50.153110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:51.153901      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:09:51.405174 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9751" for this suite. @ 09/23/25 08:09:51.407
â€¢ [6.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/23/25 08:09:51.413
  I0923 08:09:51.413152 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename cronjob @ 09/23/25 08:09:51.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:09:51.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:09:51.424
  STEP: Creating a cronjob @ 09/23/25 08:09:51.433
  STEP: Ensuring more than one job is running at a time @ 09/23/25 08:09:51.441
  E0923 08:09:52.154168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:53.155037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:54.155207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:55.155428      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:56.156267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:57.156508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:58.156934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:09:59.157170      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:00.157556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:01.158665      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:02.158788      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:03.159032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:04.159199      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:05.159433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:06.160264      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:07.160365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:08.160635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:09.160864      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:10.161023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:11.161731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:12.161883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:13.162098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:14.162854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:15.163098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:16.163671      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:17.163909      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:18.164670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:19.164918      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:20.165128      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:21.165287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:22.165459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:23.165733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:24.165970      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:25.166211      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:26.166639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:27.166862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:28.167805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:29.168055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:30.168213      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:31.168352      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:32.168805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:33.169007      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:34.170054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:35.170270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:36.170726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:37.170951      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:38.171928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:39.172086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:40.172310      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:41.172502      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:42.172866      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:43.173074      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:44.173799      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:45.174029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:46.174690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:47.175567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:48.175775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:49.175986      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:50.177039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:51.177249      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:52.177725      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:53.177979      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:54.178094      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:55.178317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:56.178544      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:57.178785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:58.179133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:10:59.179376      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:00.179531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:01.179693      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/23/25 08:11:01.444
  STEP: Removing cronjob @ 09/23/25 08:11:01.446
  I0923 08:11:01.452247 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5825" for this suite. @ 09/23/25 08:11:01.455
â€¢ [70.052 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/23/25 08:11:01.465
  I0923 08:11:01.465250 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 08:11:01.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:01.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:01.489
  I0923 08:11:01.492622 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: creating the pod @ 09/23/25 08:11:01.493
  STEP: submitting the pod to kubernetes @ 09/23/25 08:11:01.493
  E0923 08:11:02.179849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:03.179971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:03.576730 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6291" for this suite. @ 09/23/25 08:11:03.579
â€¢ [2.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/23/25 08:11:03.584
  I0923 08:11:03.584526 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 08:11:03.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:03.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:03.596
  STEP: Creating a test headless service @ 09/23/25 08:11:03.598
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-415.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-415.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.235.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.235.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.235.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.235.223_tcp@PTR;sleep 1; done
   @ 09/23/25 08:11:03.622
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-415.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-415.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-415.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-415.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-415.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.235.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.235.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.235.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.235.223_tcp@PTR;sleep 1; done
   @ 09/23/25 08:11:03.623
  STEP: creating a pod to probe DNS @ 09/23/25 08:11:03.623
  STEP: submitting the pod to kubernetes @ 09/23/25 08:11:03.623
  E0923 08:11:04.180162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:05.180416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/23/25 08:11:05.649
  STEP: looking for the results for each expected name from probers @ 09/23/25 08:11:05.651
  I0923 08:11:05.657567 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-415.svc.cluster.local from pod dns-415/dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0: the server could not find the requested resource (get pods dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0)
  I0923 08:11:05.660734 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-415.svc.cluster.local from pod dns-415/dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0: the server could not find the requested resource (get pods dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0)
  I0923 08:11:05.662818 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-415.svc.cluster.local from pod dns-415/dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0: the server could not find the requested resource (get pods dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0)
  I0923 08:11:05.684645 22 dns_common.go:506] Lookups using dns-415/dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0 failed for: [agnhost_tcp@dns-test-service.dns-415.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-415.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-415.svc.cluster.local]

  I0923 08:11:05.688480 22 dns_common.go:514] Pod client logs for webserver: 
  I0923 08:11:05.691918 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0923 08:11:05.694994 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0923 08:11:06.180681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:07.180955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:08.181206      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:09.181428      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:10.181569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:10.684224 22 dns_common.go:546] DNS probes using dns-415/dns-test-834cac7a-457d-4ae5-8fae-1f87f008d0c0 succeeded

  STEP: deleting the pod @ 09/23/25 08:11:10.684
  STEP: deleting the test service @ 09/23/25 08:11:10.698
  STEP: deleting the test headless service @ 09/23/25 08:11:10.736
  I0923 08:11:10.744740 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-415" for this suite. @ 09/23/25 08:11:10.747
â€¢ [7.171 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 09/23/25 08:11:10.756
  I0923 08:11:10.756261 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:11:10.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:10.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:10.771
  STEP: creating Agnhost RC @ 09/23/25 08:11:10.773
  I0923 08:11:10.773510 22 kubectl.go:1544] namespace kubectl-7999
  I0923 08:11:10.773617 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-7999 create -f -'
  I0923 08:11:10.902709 22 builder.go:146] stderr: ""
  I0923 08:11:10.902753 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/25 08:11:10.902
  E0923 08:11:11.182451      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:11.905259 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 08:11:11.905303 22 framework.go:733] Found 1 / 1
  I0923 08:11:11.905323 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0923 08:11:11.907090 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 08:11:11.907121 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0923 08:11:11.907134 22 kubectl.go:1551] wait on agnhost-primary startup in kubectl-7999 
  I0923 08:11:11.907192 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-7999 logs agnhost-primary-2gvlq agnhost-primary'
  I0923 08:11:11.979070 22 builder.go:146] stderr: ""
  I0923 08:11:11.979118 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/23/25 08:11:11.979
  I0923 08:11:11.979363 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-7999 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0923 08:11:12.055711 22 builder.go:146] stderr: ""
  I0923 08:11:12.055757 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I0923 08:11:12.060474 22 utils.go:1203] Service rm2 in namespace kubectl-7999 found.
  E0923 08:11:12.182846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:13.183013      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/23/25 08:11:14.065
  I0923 08:11:14.065299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-7999 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0923 08:11:14.139259 22 builder.go:146] stderr: ""
  I0923 08:11:14.139336 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I0923 08:11:14.143523 22 utils.go:1203] Service rm3 in namespace kubectl-7999 found.
  E0923 08:11:14.183892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:15.183971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:16.148112 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7999" for this suite. @ 09/23/25 08:11:16.15
â€¢ [5.399 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/23/25 08:11:16.155
  I0923 08:11:16.155277 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:11:16.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:16.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:16.171
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2519 @ 09/23/25 08:11:16.173
  STEP: changing the ExternalName service to type=ClusterIP @ 09/23/25 08:11:16.177
  E0923 08:11:16.184807      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating replication controller externalname-service in namespace services-2519 @ 09/23/25 08:11:16.195
  I0923 08:11:16.201629      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2519, replica count: 2
  E0923 08:11:17.185923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:18.186044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:19.186164      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:19.253346      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:11:19.253408 22 resource.go:361] Creating new exec pod
  E0923 08:11:20.186820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:21.186981      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:22.187117      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:22.268309 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-2519 exec execpodm6cch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:11:22.380190 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.107.144.197) 80 port [tcp/http] succeeded!\n"
  I0923 08:11:22.380241 22 builder.go:147] stdout: "externalname-service-hd2gs"
  I0923 08:11:22.380361 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-2519 exec execpodm6cch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.144.197 80'
  I0923 08:11:22.489738 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.144.197 80\nConnection to 10.107.144.197 80 port [tcp/http] succeeded!\n"
  I0923 08:11:22.489783 22 builder.go:147] stdout: "externalname-service-6kjjv"
  I0923 08:11:22.489969 22 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0923 08:11:22.513958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2519" for this suite. @ 09/23/25 08:11:22.516
â€¢ [6.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/23/25 08:11:22.521
  I0923 08:11:22.521394 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:11:22.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:22.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:22.535
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:11:22.537
  E0923 08:11:23.187710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:24.188402      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:25.188424      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:26.188637      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:11:26.552
  I0923 08:11:26.554205 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod downwardapi-volume-a8b91d65-2871-4852-b361-6175809d41c9 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:11:26.558
  I0923 08:11:26.571080 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9994" for this suite. @ 09/23/25 08:11:26.573
â€¢ [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/23/25 08:11:26.592
  I0923 08:11:26.592129 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 08:11:26.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:26.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:26.604
  I0923 08:11:26.616659 22 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0923 08:11:27.189419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:28.189705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:29.189834      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:30.189967      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:31.190224      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:31.622710 22 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/25 08:11:31.622
  I0923 08:11:31.622796 22 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0923 08:11:32.190331      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:33.190538      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:33.632008 22 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0923 08:11:33.638749 22 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0923 08:11:34.191755      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:35.191928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:35.645018 22 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0923 08:11:35.648968 22 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0923 08:11:35.652167 22 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0923 08:11:35.660425 22 deployment.go:314] Updating deployment test-rollover-deployment
  I0923 08:11:35.660482 22 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0923 08:11:36.192696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:37.192959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:37.665105 22 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0923 08:11:37.668926 22 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0923 08:11:37.671784 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0923 08:11:37.671846 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:11:38.193112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:39.193320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:39.677794 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0923 08:11:39.677874 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:11:40.194254      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:41.195290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:41.677864 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0923 08:11:41.677940 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:11:42.196363      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:43.196641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:43.680606 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0923 08:11:43.680674 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:11:44.196765      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:45.196956      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:45.677159 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0923 08:11:45.677230 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 11, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 11, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:11:46.197728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:47.197993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:47.677129 22 deployment.go:95] 
  I0923 08:11:47.677179 22 deployment.go:974] Ensure that both old replica sets have no replicas
  I0923 08:11:47.682782 22 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2170130f-6a0e-45bd-8ba3-5478ea0dfa74",
      ResourceVersion: (string) (len=5) "21214",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211893,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 08:11:47.688777 22 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2263a441-8a40-41de-830e-483e66184f5e",
      ResourceVersion: (string) (len=5) "21204",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2170130f-6a0e-45bd-8ba3-5478ea0dfa74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 37 30 31 33  30 66 2d 36 61 30 65 2d  |\"2170130f-6a0e-|
              00000120  34 35 62 64 2d 38 62 61  33 2d 35 34 37 38 65 61  |45bd-8ba3-5478ea|
              00000130  30 64 66 61 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0dfa74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:11:47.691777 22 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0923 08:11:47.692156 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d333494-7920-4c06-94c9-10a55dc48c89",
      ResourceVersion: (string) (len=5) "21213",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211886,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2170130f-6a0e-45bd-8ba3-5478ea0dfa74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 31 37 30 31 33 30 66  2d 36 61 30 65 2d 34 35  |2170130f-6a0e-45|
              000000c0  62 64 2d 38 62 61 33 2d  35 34 37 38 65 61 30 64  |bd-8ba3-5478ea0d|
              000000d0  66 61 37 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |fa74\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:11:47.697172 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b51effef-a01e-4ddc-9505-f986107dbce1",
      ResourceVersion: (string) (len=5) "21167",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211893,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2170130f-6a0e-45bd-8ba3-5478ea0dfa74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 37 30 31 33  30 66 2d 36 61 30 65 2d  |\"2170130f-6a0e-|
              00000120  34 35 62 64 2d 38 62 61  33 2d 35 34 37 38 65 61  |45bd-8ba3-5478ea|
              00000130  30 64 66 61 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0dfa74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:11:47.705801 22 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-74w9s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-74w9s",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4245",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8486fe05-086e-46e9-b074-e8027463d83e",
      ResourceVersion: (string) (len=5) "21179",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "2263a441-8a40-41de-830e-483e66184f5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 32  36 33 61 34 34 31 2d 38  |d\":\"2263a441-8|
              00000090  61 34 30 2d 34 31 64 65  2d 38 33 30 65 2d 34 38  |a40-41de-830e-48|
              000000a0  33 65 36 36 31 38 34 66  35 65 5c 22 7d 22 3a 7b  |3e66184f5e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  34 5c 22 7d 22 3a 7b 22  |.244.1.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jzr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jzr4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894211895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) (len=11) "10.244.1.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894211895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894211896,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://4d22b817eaccc014d53e5e0a4cf40087c315d833ac84eeb5238fdc371e49e215",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5jzr4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 08:11:47.707938 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4245" for this suite. @ 09/23/25 08:11:47.711
â€¢ [21.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 09/23/25 08:11:47.716
  I0923 08:11:47.716813 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:11:47.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:47.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:47.732
  STEP: Creating a suspended job @ 09/23/25 08:11:47.736
  STEP: Patching the Job @ 09/23/25 08:11:47.74
  STEP: Watching for Job to be patched @ 09/23/25 08:11:47.76
  I0923 08:11:47.762075 22 job.go:1309] Event ADDED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-job-label:e2e-2f5xm] and annotations: map[]
  I0923 08:11:47.762130 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-job-label:e2e-2f5xm] and annotations: map[]
  I0923 08:11:47.762153 22 job.go:1312] Event MODIFIED found for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[]
  STEP: Updating the job @ 09/23/25 08:11:47.762
  STEP: Watching for Job to be updated @ 09/23/25 08:11:47.776
  I0923 08:11:47.777569 22 job.go:1312] Event MODIFIED found for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:47.777648 22 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/23/25 08:11:47.777
  I0923 08:11:47.780294 22 job.go:1187] Job: e2e-2f5xm as labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm]
  STEP: Waiting for job to complete @ 09/23/25 08:11:47.78
  E0923 08:11:48.198100      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:49.198405      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:50.198484      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:51.198693      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:52.198841      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:53.199057      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:54.199312      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:55.199448      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/23/25 08:11:55.801
  STEP: Watching for Job to be deleted @ 09/23/25 08:11:55.817
  I0923 08:11:55.819235 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819335 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819375 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819495 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819616 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819701 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819813 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.819833 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.820063 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.820109 22 job.go:1309] Event MODIFIED observed for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  I0923 08:11:55.820131 22 job.go:1312] Event DELETED found for Job e2e-2f5xm in namespace job-3817 with labels: map[e2e-2f5xm:patched e2e-job-label:e2e-2f5xm] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/23/25 08:11:55.82
  I0923 08:11:55.904908 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3817" for this suite. @ 09/23/25 08:11:55.907
â€¢ [8.196 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/23/25 08:11:55.912
  I0923 08:11:55.912653 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/23/25 08:11:55.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:55.928
  STEP: getting /apis @ 09/23/25 08:11:55.935
  STEP: getting /apis/admissionregistration.k8s.io @ 09/23/25 08:11:55.938
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/23/25 08:11:55.938
  STEP: creating @ 09/23/25 08:11:55.939
  STEP: getting @ 09/23/25 08:11:55.958
  STEP: listing @ 09/23/25 08:11:55.959
  STEP: watching @ 09/23/25 08:11:55.961
  I0923 08:11:55.961485 22 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/23/25 08:11:55.962
  STEP: updating @ 09/23/25 08:11:55.966
  I0923 08:11:55.971520 22 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/23/25 08:11:55.971
  STEP: deleting a collection @ 09/23/25 08:11:55.978
  I0923 08:11:55.993246 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5491" for this suite. @ 09/23/25 08:11:56.008
â€¢ [0.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/23/25 08:11:56.015
  I0923 08:11:56.015346 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/23/25 08:11:56.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:56.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:56.03
  STEP: getting /apis @ 09/23/25 08:11:56.038
  STEP: getting /apis/admissionregistration.k8s.io @ 09/23/25 08:11:56.041
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/23/25 08:11:56.042
  STEP: creating @ 09/23/25 08:11:56.042
  STEP: getting @ 09/23/25 08:11:56.068
  STEP: listing @ 09/23/25 08:11:56.073
  STEP: watching @ 09/23/25 08:11:56.075
  I0923 08:11:56.075320 22 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/23/25 08:11:56.076
  STEP: updating @ 09/23/25 08:11:56.092
  I0923 08:11:56.103839 22 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0923 08:11:56.103896 22 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/23/25 08:11:56.104
  STEP: patching /status @ 09/23/25 08:11:56.106
  STEP: updating /status @ 09/23/25 08:11:56.113
  STEP: deleting @ 09/23/25 08:11:56.123
  STEP: deleting a collection @ 09/23/25 08:11:56.134
  I0923 08:11:56.146241 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4877" for this suite. @ 09/23/25 08:11:56.148
â€¢ [0.139 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/23/25 08:11:56.154
  I0923 08:11:56.154361 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:11:56.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:11:56.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:11:56.165
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3337 @ 09/23/25 08:11:56.167
  STEP: changing the ExternalName service to type=NodePort @ 09/23/25 08:11:56.172
  STEP: creating replication controller externalname-service in namespace services-3337 @ 09/23/25 08:11:56.189
  E0923 08:11:56.200116      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:56.202744      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3337, replica count: 2
  E0923 08:11:57.201212      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:58.201380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:11:59.201553      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:11:59.253781      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:11:59.253827 22 resource.go:361] Creating new exec pod
  E0923 08:12:00.201847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:01.202668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:02.202794      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:02.270013 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:12:02.382523 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.57.102) 80 port [tcp/http] succeeded!\n"
  I0923 08:12:02.382604 22 builder.go:147] stdout: ""
  E0923 08:12:03.203612      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:03.270811 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:12:03.388949 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.57.102) 80 port [tcp/http] succeeded!\n"
  I0923 08:12:03.388998 22 builder.go:147] stdout: ""
  E0923 08:12:04.203765      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:04.270894 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:12:04.419542 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.57.102) 80 port [tcp/http] succeeded!\n"
  I0923 08:12:04.420902 22 builder.go:147] stdout: ""
  E0923 08:12:05.204289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:05.270469 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:12:05.377717 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.57.102) 80 port [tcp/http] succeeded!\n"
  I0923 08:12:05.377766 22 builder.go:147] stdout: ""
  E0923 08:12:06.204713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:06.270875 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0923 08:12:06.376578 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.102.57.102) 80 port [tcp/http] succeeded!\n"
  I0923 08:12:06.376645 22 builder.go:147] stdout: "externalname-service-ghxqq"
  I0923 08:12:06.376733 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.57.102 80'
  I0923 08:12:06.481708 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.57.102 80\nConnection to 10.102.57.102 80 port [tcp/http] succeeded!\n"
  I0923 08:12:06.481763 22 builder.go:147] stdout: "externalname-service-b2t77"
  I0923 08:12:06.481881 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.4 32369'
  I0923 08:12:06.589271 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.4 32369\nConnection to 172.19.1.4 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:06.589324 22 builder.go:147] stdout: "externalname-service-ghxqq"
  I0923 08:12:06.589420 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32369'
  I0923 08:12:06.697178 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32369\nConnection to 172.19.1.5 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:06.697306 22 builder.go:147] stdout: ""
  E0923 08:12:07.204899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:07.590386 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32369'
  I0923 08:12:07.705287 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32369\nConnection to 172.19.1.5 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:07.705344 22 builder.go:147] stdout: ""
  E0923 08:12:08.205056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:08.589483 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32369'
  I0923 08:12:08.698446 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32369\nConnection to 172.19.1.5 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:08.698496 22 builder.go:147] stdout: ""
  E0923 08:12:09.205191      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:09.589694 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32369'
  I0923 08:12:09.698481 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32369\nConnection to 172.19.1.5 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:09.698533 22 builder.go:147] stdout: ""
  E0923 08:12:10.205253      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:10.589721 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-3337 exec execpod66p4w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32369'
  I0923 08:12:10.702309 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32369\nConnection to 172.19.1.5 32369 port [tcp/*] succeeded!\n"
  I0923 08:12:10.702358 22 builder.go:147] stdout: "externalname-service-ghxqq"
  I0923 08:12:10.702452 22 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0923 08:12:10.730309 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3337" for this suite. @ 09/23/25 08:12:10.733
â€¢ [14.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/23/25 08:12:10.742
  I0923 08:12:10.742514 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/25 08:12:10.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:10.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:10.754
  STEP: Performing setup for networking test in namespace pod-network-test-6144 @ 09/23/25 08:12:10.757
  STEP: creating a selector @ 09/23/25 08:12:10.757
  STEP: Creating the service pods in kubernetes @ 09/23/25 08:12:10.757
  I0923 08:12:10.757239 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0923 08:12:11.205710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:12.205872      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:13.206028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:14.206166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:15.206903      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:16.207044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:17.207867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:18.207825      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:19.207943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:20.208059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:21.208883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:22.209149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:23.210035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:24.210155      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/23/25 08:12:24.888
  E0923 08:12:25.210340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:26.210642      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:26.917308 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0923 08:12:26.917353 22 utils.go:496] Going to poll 10.244.1.39 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0923 08:12:26.918786 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.39:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6144 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:12:26.918816 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:12:26.918865 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6144/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.39%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0923 08:12:26.970830 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0923 08:12:26.970878 22 utils.go:496] Going to poll 10.244.2.199 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0923 08:12:26.972913 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.199:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6144 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:12:26.972951 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:12:26.973007 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6144/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.199%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0923 08:12:27.040231 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0923 08:12:27.040387 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6144" for this suite. @ 09/23/25 08:12:27.043
â€¢ [16.307 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/23/25 08:12:27.049
  I0923 08:12:27.049984 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:12:27.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:27.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:27.064
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:12:27.066
  E0923 08:12:27.211432      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:28.212421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:12:29.081
  I0923 08:12:29.083718 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod downwardapi-volume-663b59bf-adfd-45da-b722-1e419daa8b81 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:12:29.087
  I0923 08:12:29.107470 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-443" for this suite. @ 09/23/25 08:12:29.11
â€¢ [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 09/23/25 08:12:29.118
  I0923 08:12:29.118150 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:12:29.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:29.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:29.13
  STEP: Creating a job @ 09/23/25 08:12:29.132
  STEP: Ensuring active pods == parallelism @ 09/23/25 08:12:29.137
  E0923 08:12:29.212653      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:30.212733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/23/25 08:12:31.142
  E0923 08:12:31.213768      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:31.657051 22 pod_client.go:173] Successfully updated pod "adopt-release-hcbk5"
  STEP: Checking that the Job readopts the Pod @ 09/23/25 08:12:31.657
  E0923 08:12:32.213941      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:33.214150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/23/25 08:12:33.663
  I0923 08:12:34.173780 22 pod_client.go:173] Successfully updated pod "adopt-release-hcbk5"
  STEP: Checking that the Job releases the Pod @ 09/23/25 08:12:34.173
  E0923 08:12:34.214840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:35.214975      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:12:36.178712 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3215" for this suite. @ 09/23/25 08:12:36.181
â€¢ [7.070 seconds]
------------------------------
SS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/23/25 08:12:36.187
  I0923 08:12:36.187949 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename fake-node @ 09/23/25 08:12:36.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:36.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:36.204
  STEP: Create "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.206
  STEP: Getting "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.21
  STEP: Patching "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.213
  E0923 08:12:36.214982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Listing nodes with LabelSelector "e2e-fake-node-8xkjl=patched" @ 09/23/25 08:12:36.242
  STEP: Updating "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.245
  STEP: Delete "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.251
  STEP: Confirm deletion of "e2e-fake-node-8xkjl" @ 09/23/25 08:12:36.256
  I0923 08:12:36.259003 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-7898" for this suite. @ 09/23/25 08:12:36.282
â€¢ [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/23/25 08:12:36.29
  I0923 08:12:36.290667 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 08:12:36.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:36.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:36.308
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/23/25 08:12:36.312
  E0923 08:12:37.215201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:38.215293      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:12:38.342
  I0923 08:12:38.344061 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-0d5dae7a-fc0d-46c6-95ea-99ea254118f9 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 08:12:38.355
  I0923 08:12:38.367626 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4663" for this suite. @ 09/23/25 08:12:38.37
â€¢ [2.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/23/25 08:12:38.375
  I0923 08:12:38.375518 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename cronjob @ 09/23/25 08:12:38.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:12:38.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:12:38.389
  STEP: Creating a suspended cronjob @ 09/23/25 08:12:38.391
  STEP: Ensuring no jobs are scheduled @ 09/23/25 08:12:38.395
  E0923 08:12:39.215459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:40.215624      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:41.215647      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:42.215782      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:43.215935      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:44.216060      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:45.217075      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:46.217324      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:47.217472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:48.217621      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:49.217771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:50.217992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:51.218662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:52.218814      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:53.219316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:54.219461      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:55.219742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:56.219828      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:57.219990      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:58.220116      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:12:59.220310      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:00.220513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:01.221649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:02.221787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:03.221982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:04.222194      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:05.222294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:06.222551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:07.222800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:08.223012      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:09.223123      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:10.223354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:11.224452      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:12.224717      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:13.224861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:14.225016      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:15.225162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:16.225483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:17.225655      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:18.225761      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:19.225931      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:20.226211      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:21.226328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:22.226453      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:23.227041      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:24.227299      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:25.227345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:26.227540      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:27.228089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:28.228327      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:29.228450      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:30.228708      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:31.229657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:32.229862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:33.230009      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:34.230243      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:35.230892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:36.231706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:37.231874      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:38.232105      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:39.232770      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:40.233026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:41.233747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:42.233969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:43.234308      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:44.234511      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:45.235270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:46.236218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:47.236654      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:48.236876      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:49.237247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:50.237483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:51.238413      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:52.238563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:53.238726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:54.238889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:55.239897      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:56.240071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:57.240227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:58.240411      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:13:59.241361      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:00.241517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:01.242182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:02.242403      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:03.243031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:04.243273      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:05.244307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:06.244483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:07.245065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:08.245285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:09.245871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:10.246106      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:11.246707      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:12.246880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:13.247062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:14.247290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:15.248396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:16.248554      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:17.248720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:18.248926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:19.249658      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:20.249868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:21.250421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:22.250570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:23.250726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:24.250939      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:25.251114      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:26.251272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:27.251468      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:28.251697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:29.251855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:30.252082      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:31.252849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:32.253066      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:33.253221      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:34.253434      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:35.254486      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:36.254570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:37.254724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:38.255032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:39.255658      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:40.255734      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:41.256651      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:42.256854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:43.256981      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:44.257136      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:45.258108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:46.258269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:47.259286      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:48.259479      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:49.260012      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:50.260246      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:51.260739      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:52.260887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:53.261162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:54.261426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:55.261974      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:56.262716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:57.262993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:58.263240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:14:59.263799      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:00.264029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:01.264663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:02.264894      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:03.265466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:04.265611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:05.265696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:06.266743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:07.267635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:08.267967      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:09.268104      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:10.268311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:11.269143      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:12.269391      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:13.270366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:14.270494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:15.270670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:16.271507      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:17.271632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:18.271842      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:19.272249      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:20.272681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:21.272734      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:22.272914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:23.273337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:24.273671      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:25.273681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:26.274730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:27.275343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:28.275732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:29.275845      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:30.276074      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:31.276172      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:32.276396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:33.276680      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:34.276925      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:35.277037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:36.277878      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:37.278092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:38.278320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:39.279217      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:40.279306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:41.279926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:42.280162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:43.281127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:44.281247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:45.281374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:46.281525      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:47.281666      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:48.281903      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:49.282131      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:50.282384      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:51.282531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:52.282717      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:53.282803      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:54.283019      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:55.283240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:56.283404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:57.283498      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:58.283717      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:15:59.283863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:00.284096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:01.284923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:02.285159      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:03.286146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:04.286303      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:05.286422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:06.286615      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:07.287261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:08.287503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:09.287683      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:10.287972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:11.288639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:12.288841      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:13.289695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:14.289946      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:15.290461      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:16.290690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:17.290729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:18.290948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:19.291469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:20.291697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:21.291978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:22.292229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:23.292406      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:24.292639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:25.292837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:26.293735      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:27.293888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:28.294151      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:29.294881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:30.295120      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:31.295946      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:32.296174      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:33.296417      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:34.296659      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:35.297681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:36.297799      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:37.298016      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:38.298275      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:39.298645      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:40.299166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:41.299307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:42.299565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:43.299786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:44.300030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:45.300554      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:46.300741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:47.301156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:48.301388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:49.302091      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:50.302314      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:51.302381      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:52.302639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:53.303149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:54.303360      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:55.303493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:56.303700      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:57.304716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:58.304871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:16:59.305028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:00.305275      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:01.305393      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:02.305548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:03.305800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:04.306033      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:05.306143      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:06.306396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:07.307465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:08.307645      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:09.307771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:10.307932      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:11.308289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:12.308460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:13.309544      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:14.309724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:15.310042      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:16.310846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:17.311304      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:18.311519      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:19.312545      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:20.312728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:21.313300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:22.313526      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:23.313956      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:24.313909      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:25.314113      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:26.314289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:27.314968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:28.315218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:29.315719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:30.316024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:31.316826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:32.317064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:33.317891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:34.318105      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:35.318980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:36.319855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:37.319992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:38.320218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/23/25 08:17:38.396
  STEP: Removing cronjob @ 09/23/25 08:17:38.398
  I0923 08:17:38.404239 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1308" for this suite. @ 09/23/25 08:17:38.406
â€¢ [300.041 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/23/25 08:17:38.416
  I0923 08:17:38.416284 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:17:38.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:17:38.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:17:38.434
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:17:38.436
  E0923 08:17:39.320516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:40.321198      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:41.321855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:42.322133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:17:42.455
  I0923 08:17:42.457781 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-acd9112d-f971-424c-8fae-ac36c50d0f53 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:17:42.47
  I0923 08:17:42.483775 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5387" for this suite. @ 09/23/25 08:17:42.486
â€¢ [4.074 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/23/25 08:17:42.49
  I0923 08:17:42.490351 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:17:42.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:17:42.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:17:42.503
  STEP: Creating configMap with name projected-configmap-test-volume-map-b34654e2-61a4-4a44-a82d-55ad70b60ae7 @ 09/23/25 08:17:42.505
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:17:42.508
  E0923 08:17:43.322294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:44.322515      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:45.322727      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:46.322852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:17:46.545
  I0923 08:17:46.547528 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-ca33366a-9130-41d3-ba4b-77b51878d1d4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:17:46.551
  I0923 08:17:46.567142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2496" for this suite. @ 09/23/25 08:17:46.569
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/23/25 08:17:46.574
  I0923 08:17:46.574570 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 08:17:46.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:17:46.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:17:46.586
  I0923 08:17:46.588517 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:17:47.323076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:48.323188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0923 08:17:49.125768      22 warnings.go:70] unknown field "alpha"
  W0923 08:17:49.125796      22 warnings.go:70] unknown field "beta"
  W0923 08:17:49.125804      22 warnings.go:70] unknown field "delta"
  W0923 08:17:49.125811      22 warnings.go:70] unknown field "epsilon"
  W0923 08:17:49.125817      22 warnings.go:70] unknown field "gamma"
  E0923 08:17:49.323232      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:17:49.655920 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8914" for this suite. @ 09/23/25 08:17:49.658
â€¢ [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/23/25 08:17:49.664
  I0923 08:17:49.664462 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 08:17:49.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:17:49.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:17:49.68
  I0923 08:17:49.682205 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:17:50.323357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:51.323657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:52.324529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:17:52.745745 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5246" for this suite. @ 09/23/25 08:17:52.748
â€¢ [3.088 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/23/25 08:17:52.752
  I0923 08:17:52.752993 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:17:52.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:17:52.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:17:52.767
  STEP: creating service multi-endpoint-test in namespace services-6974 @ 09/23/25 08:17:52.769
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6974 to expose endpoints map[] @ 09/23/25 08:17:52.786
  I0923 08:17:52.789452 22 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0923 08:17:53.324669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:17:53.795128 22 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-6974 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6974 @ 09/23/25 08:17:53.795
  E0923 08:17:54.325662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:55.325823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6974 to expose endpoints map[pod1:[100]] @ 09/23/25 08:17:55.808
  I0923 08:17:55.814129 22 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-6974 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6974 @ 09/23/25 08:17:55.814
  E0923 08:17:56.326301      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:57.326560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6974 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/23/25 08:17:57.826
  I0923 08:17:57.836426 22 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-6974 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/23/25 08:17:57.836
  I0923 08:17:57.836502 22 resource.go:361] Creating new exec pod
  E0923 08:17:58.326890      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:17:59.327146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:00.327277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:00.849834 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0923 08:18:01.328120      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:02.328295      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:02.982888 22 builder.go:135] rc: 1
  I0923 08:18:02.982973 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test (10.101.5.186) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:18:02.983109 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0923 08:18:03.328742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:04.329018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:05.096743 22 builder.go:135] rc: 1
  I0923 08:18:05.096819 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + + ncecho hostName
   -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test (10.101.5.186) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:18:05.096899 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0923 08:18:05.329435      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:06.329722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:07.210544 22 builder.go:135] rc: 1
  I0923 08:18:07.210625 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test (10.101.5.186) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:18:07.210717 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0923 08:18:07.330469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:08.330649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:09.324950 22 builder.go:135] rc: 1
  I0923 08:18:09.325010 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test (10.101.5.186) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:18:09.325103 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0923 08:18:09.331684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:09.438308 22 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.101.5.186) 80 port [tcp/http] succeeded!\n"
  I0923 08:18:09.438363 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:18:09.438451 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.5.186 80'
  I0923 08:18:09.547096 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.5.186 80\nConnection to 10.101.5.186 80 port [tcp/http] succeeded!\n"
  I0923 08:18:09.547156 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:18:09.547239 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0923 08:18:09.668340 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.101.5.186) 81 port [tcp/*] succeeded!\n"
  I0923 08:18:09.668389 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:18:09.668479 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-6974 exec execpodk8ncf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.5.186 81'
  I0923 08:18:09.779534 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.101.5.186 81\necho hostName\nConnection to 10.101.5.186 81 port [tcp/*] succeeded!\n"
  I0923 08:18:09.779603 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6974 @ 09/23/25 08:18:09.779
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6974 to expose endpoints map[pod2:[101]] @ 09/23/25 08:18:09.799
  I0923 08:18:09.810262 22 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-6974 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6974 @ 09/23/25 08:18:09.81
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6974 to expose endpoints map[] @ 09/23/25 08:18:09.83
  I0923 08:18:09.836413 22 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-6974 exposes endpoints map[]
  I0923 08:18:09.856217 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6974" for this suite. @ 09/23/25 08:18:09.868
â€¢ [17.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/23/25 08:18:09.873
  I0923 08:18:09.873245 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:18:09.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:09.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:09.89
  STEP: Creating secret with name secret-test-map-57daa495-28d8-497c-95a9-cf54950d464f @ 09/23/25 08:18:09.893
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:18:09.911
  E0923 08:18:10.331864      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:11.332024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:12.332726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:13.332884      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:18:13.927
  I0923 08:18:13.929440 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-secrets-7603c162-6b31-45c2-bf40-524637308b40 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:18:13.94
  I0923 08:18:13.956196 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2066" for this suite. @ 09/23/25 08:18:13.958
â€¢ [4.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/23/25 08:18:13.964
  I0923 08:18:13.964450 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:18:13.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:13.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:13.976
  STEP: Setting up server cert @ 09/23/25 08:18:14.017
  E0923 08:18:14.333030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:18:14.6
  STEP: Deploying the webhook pod @ 09/23/25 08:18:14.604
  STEP: Wait for the deployment to be ready @ 09/23/25 08:18:14.621
  I0923 08:18:14.637331 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:18:15.333117      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:16.333982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:18:16.644
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:18:16.655
  E0923 08:18:17.334086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:17.656460 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0923 08:18:17.661109 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7104-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/25 08:18:18.172
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/23/25 08:18:18.187
  E0923 08:18:18.334784      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:19.335067      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:20.335993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:20.798755 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2076" for this suite. @ 09/23/25 08:18:20.801
  STEP: Destroying namespace "webhook-markers-3000" for this suite. @ 09/23/25 08:18:20.808
â€¢ [6.869 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/23/25 08:18:20.834
  I0923 08:18:20.834150 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:18:20.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:20.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:20.845
  STEP: Creating configMap with name projected-configmap-test-volume-2b7f69b7-5d41-42cd-b6bb-c191df144426 @ 09/23/25 08:18:20.847
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:18:20.851
  E0923 08:18:21.336032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:22.336140      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:23.337020      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:24.337200      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:18:24.865
  I0923 08:18:24.867905 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-ec8ab056-bc1c-40fa-91a4-b42f0d6a62c0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:18:24.88
  I0923 08:18:24.898983 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-208" for this suite. @ 09/23/25 08:18:24.901
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/23/25 08:18:24.914
  I0923 08:18:24.914306 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption @ 09/23/25 08:18:24.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:24.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:24.934
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:18:24.944
  E0923 08:18:25.338179      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:26.338405      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/23/25 08:18:26.98
  I0923 08:18:26.987064 22 disruption.go:691] running pods: 0 < 3
  E0923 08:18:27.338773      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:28.339084      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:28.983888 22 disruption.go:691] running pods: 1 < 3
  E0923 08:18:29.339207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:30.339426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:30.985814 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6667" for this suite. @ 09/23/25 08:18:30.988
â€¢ [6.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/23/25 08:18:30.993
  I0923 08:18:30.993066 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:18:30.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:31.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:31.012
  STEP: Counting existing ResourceQuota @ 09/23/25 08:18:31.014
  E0923 08:18:31.340291      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:32.341156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:33.341301      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:34.341458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:35.342262      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 08:18:36.018
  STEP: Ensuring resource quota status is calculated @ 09/23/25 08:18:36.034
  E0923 08:18:36.342837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:37.342996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/23/25 08:18:38.038
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/23/25 08:18:38.052
  E0923 08:18:38.343806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:39.344017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/23/25 08:18:40.055
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/23/25 08:18:40.057
  STEP: Ensuring a pod cannot update its resource requirements @ 09/23/25 08:18:40.059
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/23/25 08:18:40.062
  E0923 08:18:40.344381      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:41.344639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/25 08:18:42.065
  STEP: Ensuring resource quota status released the pod usage @ 09/23/25 08:18:42.076
  E0923 08:18:42.344888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:43.345160      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:18:44.079365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6219" for this suite. @ 09/23/25 08:18:44.082
â€¢ [13.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/23/25 08:18:44.088
  I0923 08:18:44.088786 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-watch @ 09/23/25 08:18:44.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:18:44.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:18:44.108
  I0923 08:18:44.110803 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:18:44.345866      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:45.346627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:46.346755      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/23/25 08:18:46.646
  I0923 08:18:46.651079 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:46Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:18:46Z]] name:name1 resourceVersion:22710 uid:f3756915-ca06-4145-9eac-07adbcd3cd2c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:18:47.346881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:48.347056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:49.347378      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:50.347632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:51.347786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:52.347990      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:53.348272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:54.348360      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:55.348551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:56.348880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/23/25 08:18:56.652
  I0923 08:18:56.657618 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:18:56Z]] name:name2 resourceVersion:22732 uid:83798261-03c3-48b4-bfe1-447db47655d4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:18:57.349377      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:58.349670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:18:59.349827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:00.350095      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:01.350246      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:02.350484      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:03.350759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:04.351042      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:05.351277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:06.351486      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/23/25 08:19:06.657
  I0923 08:19:06.665339 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:19:06Z]] name:name1 resourceVersion:22749 uid:f3756915-ca06-4145-9eac-07adbcd3cd2c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:19:07.351711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:08.351757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:09.351844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:10.352035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:11.352197      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:12.352322      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:13.352652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:14.352766      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:15.352960      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:16.353103      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/23/25 08:19:16.665
  I0923 08:19:16.689384 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:19:16Z]] name:name2 resourceVersion:22765 uid:83798261-03c3-48b4-bfe1-447db47655d4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:19:17.353258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:18.353429      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:19.353563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:20.353751      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:21.353890      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:22.353969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:23.354498      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:24.354383      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:25.354718      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:26.354876      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/23/25 08:19:26.69
  I0923 08:19:26.697159 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:19:06Z]] name:name1 resourceVersion:22781 uid:f3756915-ca06-4145-9eac-07adbcd3cd2c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:19:27.354872      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:28.355125      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:29.355283      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:30.355508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:31.355743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:32.355913      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:33.356822      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:34.357028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:35.357244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:36.357404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/23/25 08:19:36.697
  I0923 08:19:36.704173 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-23T08:18:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-23T08:19:16Z]] name:name2 resourceVersion:22797 uid:83798261-03c3-48b4-bfe1-447db47655d4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0923 08:19:37.357569      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:38.357821      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:39.358036      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:40.358250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:41.358422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:42.358716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:43.358973      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:44.359189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:45.359431      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:46.359617      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:19:47.218150 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9547" for this suite. @ 09/23/25 08:19:47.221
â€¢ [63.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 09/23/25 08:19:47.225
  I0923 08:19:47.225894 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:19:47.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:19:47.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:19:47.241
  I0923 08:19:47.243946 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-8960 version'
  I0923 08:19:47.297489 22 builder.go:146] stderr: ""
  I0923 08:19:47.297536 22 builder.go:147] stdout: "Client Version: v1.32.9\nKustomize Version: v5.5.0\nServer Version: v1.32.9-ckp\n"
  I0923 08:19:47.297831 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8960" for this suite. @ 09/23/25 08:19:47.322
â€¢ [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/23/25 08:19:47.327
  I0923 08:19:47.327373 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename watch @ 09/23/25 08:19:47.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:19:47.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:19:47.341
  STEP: creating a watch on configmaps with a certain label @ 09/23/25 08:19:47.343
  STEP: creating a new configmap @ 09/23/25 08:19:47.345
  STEP: modifying the configmap once @ 09/23/25 08:19:47.349
  STEP: changing the label value of the configmap @ 09/23/25 08:19:47.354
  E0923 08:19:47.359859      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Expecting to observe a delete notification for the watched object @ 09/23/25 08:19:47.36
  I0923 08:19:47.360520 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22828 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:19:47.360814 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22829 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:19:47.360963 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22830 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/23/25 08:19:47.361
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/23/25 08:19:47.367
  E0923 08:19:48.360778      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:49.360937      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:50.361032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:51.361241      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:52.361362      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:53.361547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:54.361652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:55.361948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:56.362090      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:57.362231      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/23/25 08:19:57.368
  STEP: modifying the configmap a third time @ 09/23/25 08:19:57.375
  STEP: deleting the configmap @ 09/23/25 08:19:57.383
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/23/25 08:19:57.387
  I0923 08:19:57.387327 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22856 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:19:57.387528 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22857 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:19:57.387748 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5860  9260fa8c-6e86-4f58-b773-a45a499310e3 22858 0 2025-09-23 08:19:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-23 08:19:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:19:57.387857 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5860" for this suite. @ 09/23/25 08:19:57.39
â€¢ [10.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/23/25 08:19:57.394
  I0923 08:19:57.394760 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:19:57.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:19:57.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:19:57.409
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1450 @ 09/23/25 08:19:57.411
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/23/25 08:19:57.422
  STEP: creating service externalsvc in namespace services-1450 @ 09/23/25 08:19:57.422
  STEP: creating replication controller externalsvc in namespace services-1450 @ 09/23/25 08:19:57.44
  I0923 08:19:57.450372      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1450, replica count: 2
  E0923 08:19:58.362388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:19:59.362482      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:00.362706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:00.500812      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/23/25 08:20:00.504
  I0923 08:20:00.519610 22 resource.go:361] Creating new exec pod
  E0923 08:20:01.362787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:02.362971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:02.537221 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-1450 exec execpodfkfkm -- /bin/sh -x -c nslookup clusterip-service.services-1450.svc.cluster.local'
  I0923 08:20:02.701821 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-1450.svc.cluster.local\n"
  I0923 08:20:02.701870 22 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-1450.svc.cluster.local\tcanonical name = externalsvc.services-1450.svc.cluster.local.\nName:\texternalsvc.services-1450.svc.cluster.local\nAddress: 10.100.94.53\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1450, will wait for the garbage collector to delete the pods @ 09/23/25 08:20:02.702
  I0923 08:20:02.766332 22 resources.go:139] Deleting ReplicationController externalsvc took: 11.405788ms
  I0923 08:20:02.867083 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.747292ms
  E0923 08:20:03.363688      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:04.363734      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:05.364642      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:05.788871 22 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0923 08:20:05.802265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1450" for this suite. @ 09/23/25 08:20:05.805
â€¢ [8.415 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/23/25 08:20:05.81
  I0923 08:20:05.810471 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 08:20:05.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:20:05.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:20:05.824
  I0923 08:20:05.921230 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/23/25 08:20:05.928
  I0923 08:20:05.930526 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:05.930563 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/23/25 08:20:05.93
  I0923 08:20:06.030829 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:06.030877 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:20:06.365363      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:07.019688 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:07.019726 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:20:07.366130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:08.020412 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 08:20:08.020455 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/23/25 08:20:08.022
  I0923 08:20:08.038326 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 08:20:08.038360 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0923 08:20:08.366786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:09.034964 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:09.035009 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/23/25 08:20:09.035
  I0923 08:20:09.052662 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:09.052704 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:20:09.366947      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:10.045242 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:10.045283 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:20:10.367663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:11.045372 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 08:20:11.045412 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 08:20:11.049
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-381, will wait for the garbage collector to delete the pods @ 09/23/25 08:20:11.049
  I0923 08:20:11.106767 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.121722ms
  I0923 08:20:11.207159 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.38986ms
  E0923 08:20:11.367775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:20:12.209575 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:20:12.209635 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 08:20:12.211838 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23029"},"items":null}

  I0923 08:20:12.213672 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23029"},"items":null}

  I0923 08:20:12.229685 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-381" for this suite. @ 09/23/25 08:20:12.231
â€¢ [6.426 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/23/25 08:20:12.236
  I0923 08:20:12.236443 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:20:12.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:20:12.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:20:12.249
  STEP: Creating configMap with name configmap-test-upd-040f9f16-49ff-4657-807e-8ec01b3cfeb1 @ 09/23/25 08:20:12.316
  STEP: Creating the pod @ 09/23/25 08:20:12.32
  E0923 08:20:12.368054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:13.368180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-040f9f16-49ff-4657-807e-8ec01b3cfeb1 @ 09/23/25 08:20:14.346
  STEP: waiting to observe update in volume @ 09/23/25 08:20:14.352
  E0923 08:20:14.368779      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:15.368932      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:16.369811      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:17.369993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:18.370877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:19.371110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:20.371611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:21.371772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:22.371942      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:23.372136      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:24.372236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:25.372422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:26.372702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:27.372834      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:28.372974      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:29.373160      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:30.373299      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:31.373687      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:32.373906      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:33.374038      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:34.374168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:35.374315      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:36.374565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:37.374736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:38.374843      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:39.375003      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:40.375233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:41.375570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:42.375746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:43.375938      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:44.376072      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:45.376266      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:46.376560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:47.376689      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:48.376950      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:49.377133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:50.377245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:51.378039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:52.378313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:53.378465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:54.378691      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:55.378822      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:56.378969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:57.379026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:58.379164      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:20:59.380119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:00.380290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:01.381326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:02.381474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:03.382095      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:04.382365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:05.382635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:06.382877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:07.383043      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:08.383264      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:09.383467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:10.383603      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:11.384542      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:12.384781      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:13.385026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:14.385341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:15.386340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:16.386499      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:17.386656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:18.386764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:19.386959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:20.387089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:21.388076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:22.388249      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:23.388706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:24.388857      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:25.388899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:26.389861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:27.389984      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:28.390209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:29.390644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:30.390881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:31.391439      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:32.391705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:33.391753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:34.392005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:34.593517 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5563" for this suite. @ 09/23/25 08:21:34.596
â€¢ [82.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/23/25 08:21:34.601
  I0923 08:21:34.601998 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename daemonsets @ 09/23/25 08:21:34.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:34.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:34.613
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/25 08:21:34.7
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/25 08:21:34.705
  I0923 08:21:34.797213 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:34.799022 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:21:34.799062 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:21:35.392256      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:35.708345 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:35.710887 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:21:35.710932 22 fixtures.go:131] Node ckp-cncf-w1 is running 0 daemon pod, expected 1
  E0923 08:21:36.392871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:36.709053 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:36.711000 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 08:21:36.711040 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/23/25 08:21:36.712
  I0923 08:21:36.809348 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:36.811955 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 08:21:36.811987 22 fixtures.go:131] Node ckp-cncf-w2 is running 0 daemon pod, expected 1
  E0923 08:21:37.393492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:37.724814 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:37.729333 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0923 08:21:37.729387 22 fixtures.go:131] Node ckp-cncf-w2 is running 0 daemon pod, expected 1
  E0923 08:21:38.394373      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:38.724030 22 fixtures.go:90] DaemonSet pods can't tolerate node ckp-cncf-m1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0923 08:21:38.725960 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0923 08:21:38.725999 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/25 08:21:38.728
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5418, will wait for the garbage collector to delete the pods @ 09/23/25 08:21:38.728
  I0923 08:21:38.785326 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.233725ms
  I0923 08:21:38.886232 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.903387ms
  E0923 08:21:39.394474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:39.988578 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0923 08:21:39.988630 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0923 08:21:39.990964 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23260"},"items":null}

  I0923 08:21:39.992447 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23260"},"items":null}

  I0923 08:21:39.998110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5418" for this suite. @ 09/23/25 08:21:40
â€¢ [5.404 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/23/25 08:21:40.006
  I0923 08:21:40.006382 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 08:21:40.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:40.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:40.021
  E0923 08:21:40.394616      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:41.394842      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:42.039179 22 delete.go:62] Deleting pod "var-expansion-b0825599-41f9-48c3-95b7-3cfa7fe1cef5" in namespace "var-expansion-5425"
  I0923 08:21:42.045930 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-b0825599-41f9-48c3-95b7-3cfa7fe1cef5" to be fully deleted
  E0923 08:21:42.395415      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:43.395697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:44.050303 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5425" for this suite. @ 09/23/25 08:21:44.052
â€¢ [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/23/25 08:21:44.058
  I0923 08:21:44.058192 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename podtemplate @ 09/23/25 08:21:44.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:44.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:44.072
  I0923 08:21:44.095199 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1767" for this suite. @ 09/23/25 08:21:44.153
â€¢ [0.101 seconds]
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/23/25 08:21:44.159
  I0923 08:21:44.159534 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:21:44.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:44.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:44.225
  STEP: Creating secret with name secret-test-01ce6cd6-6e2c-4f75-a613-255645b80538 @ 09/23/25 08:21:44.227
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:21:44.231
  E0923 08:21:44.396050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:45.396194      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:46.397152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:47.397330      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:21:48.255
  I0923 08:21:48.257628 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-secrets-713d1238-7e33-4993-9997-b7ad97885952 container secret-env-test: <nil>
  STEP: delete the pod @ 09/23/25 08:21:48.262
  I0923 08:21:48.272536 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6533" for this suite. @ 09/23/25 08:21:48.274
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/23/25 08:21:48.28
  I0923 08:21:48.280785 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 08:21:48.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:48.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:48.296
  STEP: creating the pod @ 09/23/25 08:21:48.298
  STEP: submitting the pod to kubernetes @ 09/23/25 08:21:48.298
  E0923 08:21:48.397472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:49.397723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/23/25 08:21:50.311
  STEP: updating the pod @ 09/23/25 08:21:50.313
  E0923 08:21:50.397807      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:21:50.824438 22 pod_client.go:173] Successfully updated pod "pod-update-2f518a10-bd39-4d48-bf70-2e07c7949265"
  STEP: verifying the updated pod is in kubernetes @ 09/23/25 08:21:50.826
  I0923 08:21:50.828617 22 pods.go:391] Pod update OK
  I0923 08:21:50.828784 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9133" for this suite. @ 09/23/25 08:21:50.831
â€¢ [2.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/23/25 08:21:50.839
  I0923 08:21:50.839188 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/23/25 08:21:50.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:50.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:50.85
  STEP: creating a target pod @ 09/23/25 08:21:50.852
  E0923 08:21:51.398876      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:52.399008      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/23/25 08:21:52.867
  E0923 08:21:53.399166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:54.399294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/23/25 08:21:54.881
  I0923 08:21:54.881313 22 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8738 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:21:54.881332 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:21:54.881386 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-8738/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0923 08:21:54.937000 22 exec_util.go:108] Exec stderr: ""
  I0923 08:21:54.951220 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8738" for this suite. @ 09/23/25 08:21:54.953
â€¢ [4.120 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/23/25 08:21:54.959
  I0923 08:21:54.959184 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 08:21:54.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:21:54.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:21:54.969
  STEP: Creating service test in namespace statefulset-8922 @ 09/23/25 08:21:54.972
  STEP: Creating a new StatefulSet @ 09/23/25 08:21:54.975
  I0923 08:21:54.985317 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E0923 08:21:55.399992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:56.400251      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:57.400497      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:58.400760      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:21:59.401000      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:00.401146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:01.401325      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:02.401461      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:03.401732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:04.402005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:22:04.984273 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:22:04.984313 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:22:04.984325 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/23/25 08:22:04.989
  I0923 08:22:05.008975 22 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/23/25 08:22:05.009
  E0923 08:22:05.402103      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:06.402219      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:07.402354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:08.402472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:09.402630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:10.402773      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:11.403849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:12.404114      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:13.404235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:14.404415      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/23/25 08:22:15.014
  STEP: Performing a canary update @ 09/23/25 08:22:15.014
  I0923 08:22:15.027888 22 statefulset.go:2510] Updating stateful set ss2
  I0923 08:22:15.032224 22 wait.go:74] Waiting for Pod statefulset-8922/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0923 08:22:15.404673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:16.404870      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:17.405112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:18.405412      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:19.405663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:20.405901      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:21.406040      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:22.406267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:23.406378      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:24.406505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/23/25 08:22:25.033
  I0923 08:22:25.078889 22 wait.go:40] Found 2 stateful pods, waiting for 3
  E0923 08:22:25.407404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:26.407692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:27.407914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:28.408151      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:29.408251      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:30.408441      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:31.408610      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:32.408853      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:33.409077      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:34.409287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:22:35.075283 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:22:35.075331 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:22:35.075347 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/23/25 08:22:35.078
  I0923 08:22:35.085189 22 statefulset.go:2510] Updating stateful set ss2
  I0923 08:22:35.093109 22 wait.go:74] Waiting for Pod statefulset-8922/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0923 08:22:35.409511      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:36.409777      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:37.409916      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:38.410044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:39.410311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:40.410550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:41.410743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:42.410902      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:43.411014      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:44.411193      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:22:45.099570 22 statefulset.go:2510] Updating stateful set ss2
  I0923 08:22:45.106676 22 wait.go:56] Waiting for StatefulSet statefulset-8922/ss2 to complete update
  I0923 08:22:45.106730 22 wait.go:63] Waiting for Pod statefulset-8922/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0923 08:22:45.412044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:46.412190      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:47.412326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:48.412509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:49.412663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:50.412950      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:51.413930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:52.414164      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:53.414473      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:54.414698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:22:55.104142 22 wait.go:56] Waiting for StatefulSet statefulset-8922/ss2 to complete update
  E0923 08:22:55.415494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:56.415782      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:57.415916      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:58.416090      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:22:59.416203      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:00.416385      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:01.417343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:02.417568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:03.417737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:04.417963      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:23:05.105221 22 statefulset.go:138] Deleting all statefulset in ns statefulset-8922
  I0923 08:23:05.107117 22 rest.go:152] Scaling statefulset ss2 to 0
  E0923 08:23:05.418557      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:06.419573      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:07.419759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:08.419882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:09.420081      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:10.420296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:11.420511      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:12.420685      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:13.420912      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:14.421152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:23:15.117789 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 08:23:15.119793 22 rest.go:90] Deleting statefulset ss2
  I0923 08:23:15.130689 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8922" for this suite. @ 09/23/25 08:23:15.134
â€¢ [80.181 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/23/25 08:23:15.14
  I0923 08:23:15.140385 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:23:15.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:23:15.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:23:15.151
  STEP: Creating secret with name s-test-opt-del-37e70878-e728-4d6b-ace1-7714c74fbf09 @ 09/23/25 08:23:15.234
  STEP: Creating secret with name s-test-opt-upd-14e70f30-b2ca-4cb2-b186-c9d0777209f4 @ 09/23/25 08:23:15.239
  STEP: Creating the pod @ 09/23/25 08:23:15.243
  E0923 08:23:15.421858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:16.422042      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-37e70878-e728-4d6b-ace1-7714c74fbf09 @ 09/23/25 08:23:17.272
  STEP: Updating secret s-test-opt-upd-14e70f30-b2ca-4cb2-b186-c9d0777209f4 @ 09/23/25 08:23:17.277
  STEP: Creating secret with name s-test-opt-create-641a317d-b9b5-4ec3-be9d-1d42b4c44164 @ 09/23/25 08:23:17.283
  STEP: waiting to observe update in volume @ 09/23/25 08:23:17.286
  E0923 08:23:17.422671      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:18.423490      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:19.423659      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:20.423739      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:21.424844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:22.425124      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:23.425527      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:24.425457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:25.426409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:26.426713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:27.427089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:28.427218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:29.428205      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:30.428349      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:31.428489      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:32.428773      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:33.428826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:34.429046      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:35.429192      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:36.429446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:37.429989      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:38.430149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:39.430285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:40.430500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:41.431093      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:42.431341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:43.432342      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:44.432491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:45.433016      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:46.433172      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:47.433551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:48.433724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:49.434694      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:50.434809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:51.435360      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:52.435483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:53.436281      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:54.436430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:55.436962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:56.437992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:57.438316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:58.438572      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:23:59.439409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:00.439556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:01.439692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:02.439901      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:03.440022      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:04.440237      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:05.440710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:06.440861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:07.441338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:08.441482      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:09.442522      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:10.442748      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:11.443013      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:12.443249      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:13.443916      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:14.444571      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:15.444802      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:16.445869      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:17.446026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:18.446306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:19.446439      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:20.446513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:21.446758      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:22.446933      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:23.447058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:24.447242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:25.447451      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:26.448610      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:27.448741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:28.448914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:29.448985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:24:29.512741 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7848" for this suite. @ 09/23/25 08:24:29.515
â€¢ [74.380 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 09/23/25 08:24:29.52
  I0923 08:24:29.520330 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/25 08:24:29.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:24:29.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:24:29.535
  I0923 08:24:29.548054 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0923 08:24:30.449069      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:31.449966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:32.450660      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:33.450922      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:34.451208      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:35.451322      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:36.451657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:37.451966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:38.452143      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:39.452464      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:40.452688      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:41.452835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:42.453000      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:43.453130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:44.453332      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:45.453435      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:46.453712      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:47.453939      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:48.454109      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:49.454343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:50.454531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:51.454775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:52.454914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:53.455057      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:54.455248      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:55.455357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:56.455798      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:57.456059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:58.456210      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:24:59.456342      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:00.456549      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:01.456785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:02.457521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:03.457676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:04.457761      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:05.457851      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:06.458882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:07.459140      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:08.459288      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:09.459422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:10.459628      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:11.459796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:12.459877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:13.460098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:14.460277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:15.460406      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:16.461503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:17.461677      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:18.461824      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:19.462031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:20.462759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:21.462940      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:22.463083      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:23.463465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:24.463400      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:25.463656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:26.463939      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:27.464162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:28.464300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:29.464767      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:29.551865 22 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/23/25 08:25:29.554
  STEP: Adding a custom resource @ 09/23/25 08:25:29.554
  I0923 08:25:29.571013 22 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0923 08:25:29.579352 22 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/23/25 08:25:29.579
  I0923 08:25:29.602785 22 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0923 08:25:29.610802 22 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/23/25 08:25:29.61
  E0923 08:25:30.465037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:31.465170      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/23/25 08:25:31.624
  E0923 08:25:32.465303      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:33.465442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:34.465685      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:35.465810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/23/25 08:25:35.679
  STEP: Removing a custom resource @ 09/23/25 08:25:35.691
  I0923 08:25:35.701118 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7303" for this suite. @ 09/23/25 08:25:35.704
â€¢ [66.190 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/23/25 08:25:35.709
  I0923 08:25:35.709962 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename init-container @ 09/23/25 08:25:35.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:35.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:35.729
  STEP: creating the pod @ 09/23/25 08:25:35.73
  I0923 08:25:35.730983 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0923 08:25:36.466236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:37.466366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:38.467420      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:38.833990 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4387" for this suite. @ 09/23/25 08:25:38.836
â€¢ [3.131 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/23/25 08:25:38.841
  I0923 08:25:38.841464 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename events @ 09/23/25 08:25:38.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:38.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:38.857
  STEP: creating a test event @ 09/23/25 08:25:38.859
  STEP: listing all events in all namespaces @ 09/23/25 08:25:38.863
  STEP: patching the test event @ 09/23/25 08:25:38.865
  STEP: fetching the test event @ 09/23/25 08:25:38.869
  STEP: updating the test event @ 09/23/25 08:25:38.871
  STEP: getting the test event @ 09/23/25 08:25:38.876
  STEP: deleting the test event @ 09/23/25 08:25:38.878
  STEP: listing all events in all namespaces @ 09/23/25 08:25:38.882
  I0923 08:25:38.885150 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5153" for this suite. @ 09/23/25 08:25:38.938
â€¢ [0.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/23/25 08:25:38.954
  I0923 08:25:38.954179 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:25:38.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:38.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:38.965
  STEP: Creating secret with name s-test-opt-del-dbbadc49-b0eb-40f0-aa51-93ece4e7f4a9 @ 09/23/25 08:25:39.039
  STEP: Creating secret with name s-test-opt-upd-9ed42452-0e80-4d33-b3c0-7a7ef2e33284 @ 09/23/25 08:25:39.044
  STEP: Creating the pod @ 09/23/25 08:25:39.049
  E0923 08:25:39.468427      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:40.468609      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-dbbadc49-b0eb-40f0-aa51-93ece4e7f4a9 @ 09/23/25 08:25:41.079
  STEP: Updating secret s-test-opt-upd-9ed42452-0e80-4d33-b3c0-7a7ef2e33284 @ 09/23/25 08:25:41.084
  STEP: Creating secret with name s-test-opt-create-c42802a4-acdd-490f-ba1d-0835f7205fa9 @ 09/23/25 08:25:41.09
  STEP: waiting to observe update in volume @ 09/23/25 08:25:41.097
  E0923 08:25:41.469341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:42.469540      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:43.469862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:44.470098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:45.122634 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6597" for this suite. @ 09/23/25 08:25:45.125
â€¢ [6.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/23/25 08:25:45.13
  I0923 08:25:45.130325 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:25:45.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:45.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:45.143
  STEP: Looking for a node to schedule job pod @ 09/23/25 08:25:45.145
  STEP: Creating a job @ 09/23/25 08:25:45.226
  STEP: Ensuring job fails @ 09/23/25 08:25:45.235
  E0923 08:25:45.470575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:46.471469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:47.471930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:48.472104      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:49.246400 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8090" for this suite. @ 09/23/25 08:25:49.248
â€¢ [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/23/25 08:25:49.253
  I0923 08:25:49.253976 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename watch @ 09/23/25 08:25:49.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:49.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:49.265
  STEP: creating a watch on configmaps @ 09/23/25 08:25:49.267
  STEP: creating a new configmap @ 09/23/25 08:25:49.269
  STEP: modifying the configmap once @ 09/23/25 08:25:49.272
  STEP: closing the watch once it receives two notifications @ 09/23/25 08:25:49.277
  I0923 08:25:49.278035 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9274  513ed27e-cd17-427d-be0c-3fd661ff3740 24336 0 2025-09-23 08:25:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-23 08:25:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:25:49.278203 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9274  513ed27e-cd17-427d-be0c-3fd661ff3740 24337 0 2025-09-23 08:25:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-23 08:25:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/23/25 08:25:49.278
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/23/25 08:25:49.283
  STEP: deleting the configmap @ 09/23/25 08:25:49.284
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/23/25 08:25:49.291
  I0923 08:25:49.291857 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9274  513ed27e-cd17-427d-be0c-3fd661ff3740 24338 0 2025-09-23 08:25:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-23 08:25:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:25:49.292125 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9274  513ed27e-cd17-427d-be0c-3fd661ff3740 24339 0 2025-09-23 08:25:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-23 08:25:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0923 08:25:49.292362 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9274" for this suite. @ 09/23/25 08:25:49.349
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/23/25 08:25:49.355
  I0923 08:25:49.355410 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename events @ 09/23/25 08:25:49.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:49.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:49.368
  STEP: Create set of events @ 09/23/25 08:25:49.37
  STEP: get a list of Events with a label in the current namespace @ 09/23/25 08:25:49.386
  STEP: delete a list of events @ 09/23/25 08:25:49.388
  I0923 08:25:49.388135 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/23/25 08:25:49.406
  I0923 08:25:49.408229 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8398" for this suite. @ 09/23/25 08:25:49.449
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/23/25 08:25:49.456
  I0923 08:25:49.456676 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 08:25:49.457
  E0923 08:25:49.472756      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:49.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:49.485
  STEP: creating a Deployment @ 09/23/25 08:25:49.489
  I0923 08:25:49.489754 22 deployment.go:507] Creating simple deployment test-deployment-vq9k4
  I0923 08:25:49.515220 22 deployment.go:223] deployment "test-deployment-vq9k4" doesn't have the required revision set
  E0923 08:25:50.472956      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:51.473106      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/23/25 08:25:51.524
  I0923 08:25:51.526502 22 deployment.go:532] Deployment test-deployment-vq9k4 has Conditions: [{Available True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vq9k4-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/23/25 08:25:51.526
  I0923 08:25:51.533368 22 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 25, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 25, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 25, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 25, 49, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vq9k4-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/23/25 08:25:51.533
  I0923 08:25:51.534839 22 deployment.go:579] Observed &Deployment event: ADDED
  I0923 08:25:51.534891 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vq9k4-6fb4c74686"}
  I0923 08:25:51.535026 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0923 08:25:51.535066 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vq9k4-6fb4c74686"}
  I0923 08:25:51.535088 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0923 08:25:51.535222 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0923 08:25:51.535519 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0923 08:25:51.535702 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vq9k4-6fb4c74686" is progressing.}
  I0923 08:25:51.535881 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0923 08:25:51.535915 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0923 08:25:51.535934 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vq9k4-6fb4c74686" has successfully progressed.}
  I0923 08:25:51.536060 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I0923 08:25:51.536092 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0923 08:25:51.536108 22 deployment.go:575] Observed Deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vq9k4-6fb4c74686" has successfully progressed.}
  I0923 08:25:51.536125 22 deployment.go:572] Found Deployment test-deployment-vq9k4 in namespace deployment-7456 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 08:25:51.536140 22 deployment.go:583] Deployment test-deployment-vq9k4 has an updated status
  STEP: patching the Statefulset Status @ 09/23/25 08:25:51.536
  I0923 08:25:51.536181 22 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0923 08:25:51.543363 22 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/23/25 08:25:51.543
  I0923 08:25:51.546366 22 deployment.go:616] Observed &Deployment event: ADDED
  I0923 08:25:51.546412 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vq9k4-6fb4c74686"}
  I0923 08:25:51.546531 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0923 08:25:51.546562 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vq9k4-6fb4c74686"}
  I0923 08:25:51.546579 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0923 08:25:51.546714 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0923 08:25:51.546813 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0923 08:25:51.547010 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:49 +0000 UTC 2025-09-23 08:25:49 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vq9k4-6fb4c74686" is progressing.}
  I0923 08:25:51.547298 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0923 08:25:51.547329 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0923 08:25:51.547349 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vq9k4-6fb4c74686" has successfully progressed.}
  I0923 08:25:51.547635 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0923 08:25:51.547688 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0923 08:25:51.547935 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-23 08:25:50 +0000 UTC 2025-09-23 08:25:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vq9k4-6fb4c74686" has successfully progressed.}
  I0923 08:25:51.548024 22 deployment.go:612] Observed deployment test-deployment-vq9k4 in namespace deployment-7456 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0923 08:25:51.548312 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I0923 08:25:51.548360 22 deployment.go:609] Found deployment test-deployment-vq9k4 in namespace deployment-7456 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0923 08:25:51.548380 22 deployment.go:620] Deployment test-deployment-vq9k4 has a patched status
  I0923 08:25:51.550320 22 deployment.go:633] Deployment "test-deployment-vq9k4":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vq9k4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5381de46-3ee8-42e2-b6bb-caf7f6032c1b",
      ResourceVersion: (string) (len=5) "24400",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894212749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-vq9k4-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 08:25:51.621713 22 deployment.go:40] New ReplicaSet "test-deployment-vq9k4-6fb4c74686" of Deployment "test-deployment-vq9k4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vq9k4-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa80b652-9299-4ce6-9fcb-baae8e3bff0e",
      ResourceVersion: (string) (len=5) "24390",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894212749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vq9k4",
          UID: (types.UID) (len=36) "5381de46-3ee8-42e2-b6bb-caf7f6032c1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 33 38  |k:{\"uid\":\"538|
              00000120  31 64 65 34 36 2d 33 65  65 38 2d 34 32 65 32 2d  |1de46-3ee8-42e2-|
              00000130  62 36 62 62 2d 63 61 66  37 66 36 30 33 32 63 31  |b6bb-caf7f6032c1|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:25:51.626708 22 deployment.go:68] Pod "test-deployment-vq9k4-6fb4c74686-mk4fl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vq9k4-6fb4c74686-mk4fl",
      GenerateName: (string) (len=33) "test-deployment-vq9k4-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bccd5767-7f21-4985-b62c-e6aaac436596",
      ResourceVersion: (string) (len=5) "24389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894212749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vq9k4-6fb4c74686",
          UID: (types.UID) (len=36) "fa80b652-9299-4ce6-9fcb-baae8e3bff0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 61 38 30 62 36 35  32 2d 39 32 39 39 2d 34  |"fa80b652-9299-4|
              000000a0  63 65 36 2d 39 66 63 62  2d 62 61 61 65 38 65 33  |ce6-9fcb-baae8e3|
              000000b0  62 66 66 30 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |bff0e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  31 36 5c 22 7d 22 3a 7b  |.244.2.216\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g8jhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g8jhf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212750,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894212749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.5"
        }
      },
      PodIP: (string) (len=12) "10.244.2.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894212749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894212750,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://46cdd9206b5aea33378d70976cbc7730e7fca3e7857778c00729b07be91ed27b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g8jhf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 08:25:51.629345 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7456" for this suite. @ 09/23/25 08:25:51.631
â€¢ [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/23/25 08:25:51.637
  I0923 08:25:51.638301 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 08:25:51.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:51.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:51.707
  E0923 08:25:52.473274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:53.473401      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:53.724513 22 delete.go:62] Deleting pod "var-expansion-fa816b95-f57b-424a-894a-e9d3c3081a15" in namespace "var-expansion-5914"
  I0923 08:25:53.731114 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-fa816b95-f57b-424a-894a-e9d3c3081a15" to be fully deleted
  E0923 08:25:54.473613      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:55.473775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:25:55.736425 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5914" for this suite. @ 09/23/25 08:25:55.739
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/23/25 08:25:55.745
  I0923 08:25:55.745228 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 08:25:55.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:55.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:55.808
  STEP: Creating a test headless service @ 09/23/25 08:25:55.809
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8099.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-8099.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/23/25 08:25:55.813
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8099.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8099.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/23/25 08:25:55.813
  STEP: creating a pod to probe DNS @ 09/23/25 08:25:55.813
  STEP: submitting the pod to kubernetes @ 09/23/25 08:25:55.813
  E0923 08:25:56.473858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:57.474887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/23/25 08:25:57.837
  STEP: looking for the results for each expected name from probers @ 09/23/25 08:25:57.838
  I0923 08:25:57.848051 22 dns_common.go:546] DNS probes using dns-8099/dns-test-58db636a-1434-401a-9a81-8ad85b577cd3 succeeded

  STEP: deleting the pod @ 09/23/25 08:25:57.848
  STEP: deleting the test headless service @ 09/23/25 08:25:57.864
  I0923 08:25:57.879451 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8099" for this suite. @ 09/23/25 08:25:57.883
â€¢ [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/23/25 08:25:57.888
  I0923 08:25:57.888919 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-runtime @ 09/23/25 08:25:57.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:25:57.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:25:57.903
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/23/25 08:25:57.912
  E0923 08:25:58.475007      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:25:59.475731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:00.476609      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:01.476866      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:02.477659      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:03.477815      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:04.478827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:05.479337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:06.480271      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:07.480418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:08.481196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:09.482099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:10.482864      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:11.483747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:12.484130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/23/25 08:26:12.965
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/23/25 08:26:12.967
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/23/25 08:26:12.97
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/23/25 08:26:12.97
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/23/25 08:26:12.989
  E0923 08:26:13.484379      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:14.484545      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/23/25 08:26:15.006
  E0923 08:26:15.485534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:16.485798      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/23/25 08:26:17.014
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/23/25 08:26:17.018
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/23/25 08:26:17.018
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/23/25 08:26:17.036
  E0923 08:26:17.486716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/23/25 08:26:18.041
  E0923 08:26:18.486827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:19.487023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/23/25 08:26:20.051
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/23/25 08:26:20.054
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/23/25 08:26:20.054
  I0923 08:26:20.074799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7974" for this suite. @ 09/23/25 08:26:20.077
â€¢ [22.194 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/23/25 08:26:20.083
  I0923 08:26:20.083242 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/25 08:26:20.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:20.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:20.095
  STEP: Deleting RuntimeClass runtimeclass-8980-delete-me @ 09/23/25 08:26:20.101
  STEP: Waiting for the RuntimeClass to disappear @ 09/23/25 08:26:20.105
  I0923 08:26:20.116663 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8980" for this suite. @ 09/23/25 08:26:20.177
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 09/23/25 08:26:20.186
  I0923 08:26:20.186142 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:26:20.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:20.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:20.198
  I0923 08:26:20.213816 22 service_accounts.go:647] created pod
  E0923 08:26:20.487742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:21.487936      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:26:22.219
  E0923 08:26:22.489032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:23.489173      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:24.489263      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:25.489437      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:26.489576      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:27.490066      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:28.490003      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:29.490189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:30.490356      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:31.490548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:32.490666      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:33.490867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:34.491966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:35.492095      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:36.492240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:37.492485      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:38.492726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:39.492934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:40.493172      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:41.493341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:42.493607      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:43.493820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:44.494050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:45.494851      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:46.495523      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:47.495718      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:48.495938      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:49.496146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:50.496806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:51.496957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:26:52.219815 22 service_accounts.go:653] polling logs
  I0923 08:26:52.224292 22 service_accounts.go:663] Pod logs: 
  I0923 08:26:20.836386       1 log.go:245] OK: Got token
  I0923 08:26:20.836501       1 log.go:245] validating with in-cluster discovery
  I0923 08:26:20.836848       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0923 08:26:20.836879       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4875:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001008f0), NotBefore:(*jwt.NumericDate)(0xc0001009e0), IssuedAt:(*jwt.NumericDate)(0xc000100900), ID:"8f24f20f-9bc5-432e-a023-a8fb60cb8cd3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4875", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"addb6e1f-247a-4f44-9097-d325278267ac"}}}
  I0923 08:26:20.853665       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0923 08:26:20.860432       1 log.go:245] OK: Validated signature on JWT
  I0923 08:26:20.860547       1 log.go:245] OK: Got valid claims from token!
  I0923 08:26:20.860582       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4875:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000101fa8), NotBefore:(*jwt.NumericDate)(0xc000101fd0), IssuedAt:(*jwt.NumericDate)(0xc000101fb0), ID:"8f24f20f-9bc5-432e-a023-a8fb60cb8cd3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4875", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"addb6e1f-247a-4f44-9097-d325278267ac"}}}

  I0923 08:26:52.224372 22 service_accounts.go:667] completed pod
  I0923 08:26:52.230095 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4875" for this suite. @ 09/23/25 08:26:52.232
â€¢ [32.055 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/23/25 08:26:52.241
  I0923 08:26:52.241777 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename apf @ 09/23/25 08:26:52.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:52.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:52.26
  STEP: getting /apis @ 09/23/25 08:26:52.262
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/23/25 08:26:52.264
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/23/25 08:26:52.265
  STEP: creating @ 09/23/25 08:26:52.266
  STEP: getting @ 09/23/25 08:26:52.28
  STEP: listing @ 09/23/25 08:26:52.282
  STEP: watching @ 09/23/25 08:26:52.284
  I0923 08:26:52.284334 22 flowcontrol.go:620] starting watch
  STEP: patching @ 09/23/25 08:26:52.285
  STEP: updating @ 09/23/25 08:26:52.289
  I0923 08:26:52.296040 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/23/25 08:26:52.296
  STEP: patching /status @ 09/23/25 08:26:52.297
  STEP: updating /status @ 09/23/25 08:26:52.306
  STEP: deleting @ 09/23/25 08:26:52.312
  STEP: deleting a collection @ 09/23/25 08:26:52.319
  I0923 08:26:52.331958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1673" for this suite. @ 09/23/25 08:26:52.334
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/23/25 08:26:52.342
  I0923 08:26:52.342857 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename apf @ 09/23/25 08:26:52.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:52.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:52.359
  STEP: getting /apis @ 09/23/25 08:26:52.362
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/23/25 08:26:52.365
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/23/25 08:26:52.366
  STEP: creating @ 09/23/25 08:26:52.367
  STEP: getting @ 09/23/25 08:26:52.393
  STEP: listing @ 09/23/25 08:26:52.395
  STEP: watching @ 09/23/25 08:26:52.398
  I0923 08:26:52.398352 22 flowcontrol.go:394] starting watch
  STEP: patching @ 09/23/25 08:26:52.399
  STEP: updating @ 09/23/25 08:26:52.403
  I0923 08:26:52.411401 22 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/23/25 08:26:52.411
  STEP: patching /status @ 09/23/25 08:26:52.413
  STEP: updating /status @ 09/23/25 08:26:52.417
  STEP: deleting @ 09/23/25 08:26:52.443
  STEP: deleting a collection @ 09/23/25 08:26:52.453
  I0923 08:26:52.470659 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1550" for this suite. @ 09/23/25 08:26:52.473
â€¢ [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/23/25 08:26:52.479
  I0923 08:26:52.479991 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:26:52.48
  E0923 08:26:52.497775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:52.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:52.543
  STEP: Creating a pod to test downward api env vars @ 09/23/25 08:26:52.546
  E0923 08:26:53.497950      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:54.498108      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:55.498838      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:56.498971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:26:56.563
  I0923 08:26:56.565762 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downward-api-433b9515-e72b-477e-9ee8-48d15db3e9af container dapi-container: <nil>
  STEP: delete the pod @ 09/23/25 08:26:56.57
  I0923 08:26:56.582575 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5120" for this suite. @ 09/23/25 08:26:56.584
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/23/25 08:26:56.589
  I0923 08:26:56.589522 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/23/25 08:26:56.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:56.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:56.604
  I0923 08:26:56.608805 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3184" for this suite. @ 09/23/25 08:26:56.685
â€¢ [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 09/23/25 08:26:56.691
  I0923 08:26:56.691732 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:26:56.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:26:56.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:26:56.703
  STEP: Creating a job @ 09/23/25 08:26:56.706
  STEP: Ensuring active pods == parallelism @ 09/23/25 08:26:56.71
  E0923 08:26:57.499202      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:26:58.499301      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/23/25 08:26:58.716
  STEP: deleting Job.batch foo in namespace job-1341, will wait for the garbage collector to delete the pods @ 09/23/25 08:26:58.716
  I0923 08:26:58.773694 22 resources.go:139] Deleting Job.batch foo took: 4.90474ms
  I0923 08:26:58.874105 22 resources.go:163] Terminating Job.batch foo pods took: 100.416029ms
  E0923 08:26:59.499713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/23/25 08:27:00.174
  I0923 08:27:00.177483 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1341" for this suite. @ 09/23/25 08:27:00.18
â€¢ [3.494 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/23/25 08:27:00.185
  I0923 08:27:00.185475 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 08:27:00.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:00.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:00.197
  I0923 08:27:00.201122 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:27:00.499774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:01.499974      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:02.500230      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0923 08:27:02.737146      22 warnings.go:70] unknown field "alpha"
  W0923 08:27:02.737173      22 warnings.go:70] unknown field "beta"
  W0923 08:27:02.737179      22 warnings.go:70] unknown field "delta"
  W0923 08:27:02.737185      22 warnings.go:70] unknown field "epsilon"
  W0923 08:27:02.737191      22 warnings.go:70] unknown field "gamma"
  I0923 08:27:03.279972 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3219" for this suite. @ 09/23/25 08:27:03.282
â€¢ [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/23/25 08:27:03.289
  I0923 08:27:03.289122 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/25 08:27:03.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:03.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:03.305
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/25 08:27:03.383
  E0923 08:27:03.500642      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:04.500736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/23/25 08:27:05.404
  E0923 08:27:05.501692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:06.501847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/23/25 08:27:07.418
  E0923 08:27:07.502852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:08.502957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/23/25 08:27:09.43
  I0923 08:27:09.443522 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5452" for this suite. @ 09/23/25 08:27:09.446
â€¢ [6.162 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/23/25 08:27:09.45
  I0923 08:27:09.450956 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:27:09.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:09.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:09.464
  STEP: Setting up server cert @ 09/23/25 08:27:09.484
  E0923 08:27:09.503530      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:27:10.351
  STEP: Deploying the webhook pod @ 09/23/25 08:27:10.361
  STEP: Wait for the deployment to be ready @ 09/23/25 08:27:10.372
  I0923 08:27:10.393190 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:27:10.504280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:11.504483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:27:12.399
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:27:12.409
  E0923 08:27:12.505505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:27:13.409406 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/23/25 08:27:13.414
  STEP: create a configmap that should be updated by the webhook @ 09/23/25 08:27:13.429
  I0923 08:27:13.499312 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-679" for this suite. @ 09/23/25 08:27:13.501
  E0923 08:27:13.506350      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-2045" for this suite. @ 09/23/25 08:27:13.506
â€¢ [4.061 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/23/25 08:27:13.511
  I0923 08:27:13.511713 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 08:27:13.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:13.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:13.523
  STEP: apply creating a deployment @ 09/23/25 08:27:13.526
  I0923 08:27:13.532396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4920" for this suite. @ 09/23/25 08:27:13.603
â€¢ [0.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/23/25 08:27:13.615
  I0923 08:27:13.615209 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:27:13.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:13.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:13.632
  STEP: Creating configMap configmap-6809/configmap-test-9421982b-86c4-4a48-a5cf-ce13ed9242ee @ 09/23/25 08:27:13.634
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:27:13.638
  E0923 08:27:14.506482      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:15.506549      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:16.507618      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:17.507821      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:27:17.656
  I0923 08:27:17.658647 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-fde531be-0873-4dc7-a8a2-d02e9aaa38b2 container env-test: <nil>
  STEP: delete the pod @ 09/23/25 08:27:17.662
  I0923 08:27:17.678031 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6809" for this suite. @ 09/23/25 08:27:17.68
â€¢ [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/23/25 08:27:17.685
  I0923 08:27:17.685357 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/25 08:27:17.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:17.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:17.699
  I0923 08:27:17.704857 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3580" for this suite. @ 09/23/25 08:27:17.781
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/23/25 08:27:17.789
  I0923 08:27:17.790004 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/25 08:27:17.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:17.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:17.804
  I0923 08:27:17.831185 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4103" for this suite. @ 09/23/25 08:27:17.882
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/23/25 08:27:17.89
  I0923 08:27:17.890242 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/25 08:27:17.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:17.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:17.904
  I0923 08:27:17.907173 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:27:18.508640      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:27:18.927736 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7082" for this suite. @ 09/23/25 08:27:18.93
â€¢ [1.046 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/23/25 08:27:18.936
  I0923 08:27:18.936732 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/23/25 08:27:18.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:18.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:18.95
  STEP: creating @ 09/23/25 08:27:18.951
  STEP: getting @ 09/23/25 08:27:18.971
  STEP: listing in namespace @ 09/23/25 08:27:18.978
  STEP: patching @ 09/23/25 08:27:18.98
  STEP: deleting @ 09/23/25 08:27:18.988
  I0923 08:27:18.995098 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6352" for this suite. @ 09/23/25 08:27:19.03
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/23/25 08:27:19.038
  I0923 08:27:19.038112 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:27:19.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:19.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:19.052
  I0923 08:27:19.086836 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3024" for this suite. @ 09/23/25 08:27:19.137
â€¢ [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/23/25 08:27:19.143
  I0923 08:27:19.143628 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename init-container @ 09/23/25 08:27:19.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:27:19.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:27:19.159
  STEP: creating the pod @ 09/23/25 08:27:19.161
  I0923 08:27:19.161535 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0923 08:27:19.509233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:20.509494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:21.509653      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:22.509810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:23.509902      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:24.510176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:25.510408      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:26.510683      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:27.510931      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:28.511189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:29.511406      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:30.511574      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:31.511800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:32.512062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:33.512245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:34.512409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:35.512547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:36.512834      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:37.513058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:38.513168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:39.513352      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:40.513479      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:41.513827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:42.514151      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:43.514269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:44.514471      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:45.514566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:46.514917      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:47.515048      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:48.515201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:49.515997      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:50.516227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:51.516386      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:52.516690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:53.517473      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:54.517715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:55.517971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:56.518982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:57.519274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:58.519426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:27:59.519657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:00.519906      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:01.520031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:02.520246      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:03.520472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:04.520712      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:05.520919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:06.522019      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:07.522240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:07.716264 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-a033818e-607c-4886-bdc8-bc804aa9f754", GenerateName:"", Namespace:"init-container-3314", SelfLink:"", UID:"a3dcecf4-f1ac-486e-9adc-9f44eebd1785", ResourceVersion:"25208", Generation:0, CreationTimestamp:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"161525250"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1ee10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 28, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1ee58), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-48s6g", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004e89420), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-48s6g", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-48s6g", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-48s6g", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003946e40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ckp-cncf-w2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00321db90), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003946ee0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003946f00)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003946f08), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003946f0c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000d67910), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 23, 8, 27, 20, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.19.1.5", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.19.1.5"}}, PodIP:"10.244.2.219", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.2.219"}}, StartTime:time.Date(2025, time.September, 23, 8, 27, 19, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00016b180)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00016b1f0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://677b47c2096a761ebfb6d20ea93a82d85d8b830567a0a1ecc665e94737ab0434", Started:(*bool)(0xc003946fca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-48s6g", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000d67930)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004e89480), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003946fdd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-48s6g", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000d67940)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004e89460), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003946f9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-48s6g", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000d67920)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0923 08:28:07.716438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3314" for this suite. @ 09/23/25 08:28:07.72
â€¢ [48.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/23/25 08:28:07.726
  I0923 08:28:07.726381 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:28:07.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:07.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:07.742
  STEP: Creating configMap that has name configmap-test-emptyKey-fd4cb5bd-ba09-4d09-92aa-4eb0aa504f7d @ 09/23/25 08:28:07.744
  I0923 08:28:07.745766 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2589" for this suite. @ 09/23/25 08:28:07.821
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/23/25 08:28:07.829
  I0923 08:28:07.829106 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/25 08:28:07.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:07.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:07.848
  E0923 08:28:08.522381      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:09.522625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:09.872477 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2031" for this suite. @ 09/23/25 08:28:09.875
â€¢ [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 09/23/25 08:28:09.88
  I0923 08:28:09.880694 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 08:28:09.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:09.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:09.898
  STEP: Creating service test in namespace statefulset-9777 @ 09/23/25 08:28:09.9
  STEP: Creating statefulset ss in namespace statefulset-9777 @ 09/23/25 08:28:09.906
  I0923 08:28:09.928192 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0923 08:28:10.522777      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:11.523067      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:12.523278      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:13.523565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:14.523670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:15.523926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:16.524037      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:17.524315      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:18.524438      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:19.524661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:19.919422 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/23/25 08:28:19.922
  STEP: updating a scale subresource @ 09/23/25 08:28:19.924
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/23/25 08:28:19.929
  STEP: Patch a scale subresource @ 09/23/25 08:28:19.931
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/23/25 08:28:19.948
  I0923 08:28:19.955277 22 statefulset.go:138] Deleting all statefulset in ns statefulset-9777
  I0923 08:28:19.961031 22 rest.go:152] Scaling statefulset ss to 0
  E0923 08:28:20.525412      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:21.525687      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:22.525939      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:23.526113      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:24.526328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:25.526434      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:26.526686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:27.526897      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:28.527043      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:29.527248      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:29.978295 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 08:28:29.980062 22 rest.go:90] Deleting statefulset ss
  I0923 08:28:29.993995 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9777" for this suite. @ 09/23/25 08:28:30
â€¢ [20.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/23/25 08:28:30.009
  I0923 08:28:30.009221 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/25 08:28:30.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:30.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:30.02
  I0923 08:28:30.025802 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:28:30.528315      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:30.559347 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4198" for this suite. @ 09/23/25 08:28:30.562
â€¢ [0.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 09/23/25 08:28:30.569
  I0923 08:28:30.569423 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:28:30.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:30.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:30.581
  STEP: Creating a pod to test service account token:  @ 09/23/25 08:28:30.583
  E0923 08:28:31.528722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:32.528858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:33.529024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:34.529235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:28:34.602
  I0923 08:28:34.603988 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod test-pod-3326534a-d98a-41c8-a20d-f795ad55b13f container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:28:34.609
  I0923 08:28:34.623416 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8139" for this suite. @ 09/23/25 08:28:34.625
â€¢ [4.061 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/23/25 08:28:34.63
  I0923 08:28:34.630348 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:28:34.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:34.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:34.642
  STEP: Discovering how many secrets are in namespace by default @ 09/23/25 08:28:34.644
  E0923 08:28:35.529440      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:36.529746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:37.529894      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:38.530742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:39.531844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/23/25 08:28:39.647
  E0923 08:28:40.532492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:41.532823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:42.532963      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:43.533813      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:44.533911      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 08:28:44.65
  STEP: Ensuring resource quota status is calculated @ 09/23/25 08:28:44.658
  E0923 08:28:45.534186      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:46.534415      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/23/25 08:28:46.662
  STEP: Ensuring resource quota status captures secret creation @ 09/23/25 08:28:46.674
  E0923 08:28:47.534908      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:48.535047      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/23/25 08:28:48.678
  STEP: Ensuring resource quota status released usage @ 09/23/25 08:28:48.683
  E0923 08:28:49.536055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:50.536251      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:50.686418 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5590" for this suite. @ 09/23/25 08:28:50.689
â€¢ [16.065 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/23/25 08:28:50.694
  I0923 08:28:50.695009 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-pred @ 09/23/25 08:28:50.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:50.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:50.708
  I0923 08:28:50.710646 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0923 08:28:50.792001 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 08:28:50.793944 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w1 before test
  I0923 08:28:50.796377 22 predicates.go:957] kube-flannel-ds-kpfn9 from kube-flannel started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:28:50.796413 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:28:50.796429 22 predicates.go:957] kube-proxy-wz57v from kube-system started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:28:50.796440 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:28:50.796452 22 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-23 07:17:18 +0000 UTC (1 container statuses recorded)
  I0923 08:28:50.796463 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0923 08:28:50.796476 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-trbn9 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:28:50.796486 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:28:50.796496 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0923 08:28:50.796508 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w2 before test
  I0923 08:28:50.798826 22 predicates.go:957] kube-flannel-ds-tbgsc from kube-flannel started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:28:50.798858 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:28:50.798872 22 predicates.go:957] kube-proxy-27mjl from kube-system started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:28:50.798883 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:28:50.798896 22 predicates.go:957] sonobuoy-e2e-job-a377c665aee74d41 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:28:50.798906 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0923 08:28:50.798918 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:28:50.798931 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-grznp from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:28:50.798951 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:28:50.798981 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/23/25 08:28:50.799
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1867dc0dad233a1a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/23/25 08:28:50.816
  E0923 08:28:51.536432      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:51.815186 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8100" for this suite. @ 09/23/25 08:28:51.817
â€¢ [1.130 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/23/25 08:28:51.824
  I0923 08:28:51.824898 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:28:51.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:51.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:51.838
  STEP: Setting up server cert @ 09/23/25 08:28:51.855
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:28:52.218
  STEP: Deploying the webhook pod @ 09/23/25 08:28:52.224
  STEP: Wait for the deployment to be ready @ 09/23/25 08:28:52.235
  I0923 08:28:52.246168 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:28:52.536629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:53.536805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:28:54.252
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:28:54.263
  E0923 08:28:54.537300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:28:55.264012 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/23/25 08:28:55.268
  STEP: verifying the validating webhook match conditions @ 09/23/25 08:28:55.275
  STEP: updating the validating webhook match conditions @ 09/23/25 08:28:55.277
  STEP: verifying the validating webhook match conditions @ 09/23/25 08:28:55.284
  I0923 08:28:55.343884 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4046" for this suite. @ 09/23/25 08:28:55.347
  STEP: Destroying namespace "webhook-markers-7464" for this suite. @ 09/23/25 08:28:55.352
â€¢ [3.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/23/25 08:28:55.359
  I0923 08:28:55.359816 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:28:55.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:55.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:55.371
  STEP: Creating secret with name secret-test-31e7dbfa-2dbb-4317-88de-ec19cc69df5b @ 09/23/25 08:28:55.373
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:28:55.376
  E0923 08:28:55.538188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:56.538474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:57.538654      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:28:58.538777      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:28:59.389
  I0923 08:28:59.390981 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-secrets-6894adc5-52cb-4174-b73e-cfce40012abf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:28:59.395
  I0923 08:28:59.412045 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6279" for this suite. @ 09/23/25 08:28:59.414
â€¢ [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/23/25 08:28:59.419
  I0923 08:28:59.419502 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:28:59.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:28:59.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:28:59.434
  STEP: Setting up server cert @ 09/23/25 08:28:59.454
  E0923 08:28:59.539560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:29:00.002
  STEP: Deploying the webhook pod @ 09/23/25 08:29:00.007
  STEP: Wait for the deployment to be ready @ 09/23/25 08:29:00.018
  I0923 08:29:00.025403 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:29:00.539811      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:01.539953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:02.033388 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:29:02.540046      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:03.540309      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:04.036511 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:29:04.541150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:05.541320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:06.036825 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:29:06.541401      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:07.541574      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:08.036861 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:29:08.542643      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:09.542876      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:10.036837 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 29, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:29:10.543408      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:11.543688      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:29:12.037
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:29:12.053
  E0923 08:29:12.544466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:13.054017 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/23/25 08:29:13.12
  STEP: Creating a configMap that should be mutated @ 09/23/25 08:29:13.13
  STEP: Deleting the collection of validation webhooks @ 09/23/25 08:29:13.153
  STEP: Creating a configMap that should not be mutated @ 09/23/25 08:29:13.191
  I0923 08:29:13.243844 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3545" for this suite. @ 09/23/25 08:29:13.255
  STEP: Destroying namespace "webhook-markers-3998" for this suite. @ 09/23/25 08:29:13.27
â€¢ [13.856 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/23/25 08:29:13.275
  I0923 08:29:13.275735 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 08:29:13.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:13.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:13.289
  I0923 08:29:13.323179 22 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"fa7317bc-577c-4c94-8e13-4f1de3b68d5b", Controller:(*bool)(0xc001b06ca6), BlockOwnerDeletion:(*bool)(0xc001b06ca7)}}
  I0923 08:29:13.332047 22 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ac6f100f-84d1-40c8-8db0-3b7526349af7", Controller:(*bool)(0xc001b06ece), BlockOwnerDeletion:(*bool)(0xc001b06ecf)}}
  I0923 08:29:13.339454 22 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"2a5d76cf-3b05-4231-9de6-0d317d3198f9", Controller:(*bool)(0xc001b070da), BlockOwnerDeletion:(*bool)(0xc001b070db)}}
  E0923 08:29:13.544611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:14.545040      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:15.544952      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:16.545066      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:17.545250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:18.398655 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8179" for this suite. @ 09/23/25 08:29:18.401
â€¢ [5.130 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/23/25 08:29:18.406
  I0923 08:29:18.406282 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename field-validation @ 09/23/25 08:29:18.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:18.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:18.422
  I0923 08:29:18.424730 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:29:18.545624      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:19.546337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:20.546474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0923 08:29:20.958449      22 warnings.go:70] unknown field "alpha"
  W0923 08:29:20.958480      22 warnings.go:70] unknown field "beta"
  W0923 08:29:20.958487      22 warnings.go:70] unknown field "delta"
  W0923 08:29:20.958493      22 warnings.go:70] unknown field "epsilon"
  W0923 08:29:20.958499      22 warnings.go:70] unknown field "gamma"
  I0923 08:29:21.483715 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3653" for this suite. @ 09/23/25 08:29:21.486
â€¢ [3.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/23/25 08:29:21.493
  I0923 08:29:21.493873 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 08:29:21.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:21.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:21.509
  STEP: create the rc @ 09/23/25 08:29:21.511
  W0923 08:29:21.522454      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0923 08:29:21.546746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:22.546903      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:23.547044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:24.547204      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:25.547355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/23/25 08:29:26.525
  STEP: wait for all pods to be garbage collected @ 09/23/25 08:29:26.532
  E0923 08:29:26.547795      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:27.547953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:28.548088      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:29.548269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:30.548402      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/23/25 08:29:31.537
  E0923 08:29:31.549054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:31.606178 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 08:29:31.606403 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7522" for this suite. @ 09/23/25 08:29:31.608
â€¢ [10.121 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/23/25 08:29:31.615
  I0923 08:29:31.615232 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename security-context @ 09/23/25 08:29:31.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:31.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:31.633
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/23/25 08:29:31.635
  E0923 08:29:32.549326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:33.549543      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:29:33.646
  I0923 08:29:33.648064 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod security-context-093255a7-48a8-4b08-8d31-f98284627d1b container test-container: <nil>
  STEP: delete the pod @ 09/23/25 08:29:33.652
  I0923 08:29:33.665741 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5324" for this suite. @ 09/23/25 08:29:33.668
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/23/25 08:29:33.674
  I0923 08:29:33.674497 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:29:33.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:33.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:33.708
  STEP: creating all guestbook components @ 09/23/25 08:29:33.71
  I0923 08:29:33.710397 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0923 08:29:33.710657 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:33.844207 22 builder.go:146] stderr: ""
  I0923 08:29:33.844255 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0923 08:29:33.844321 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0923 08:29:33.844413 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:34.009737 22 builder.go:146] stderr: ""
  I0923 08:29:34.009784 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0923 08:29:34.009834 22 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0923 08:29:34.009940 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:34.139901 22 builder.go:146] stderr: ""
  I0923 08:29:34.139950 22 builder.go:147] stdout: "service/frontend created\n"
  I0923 08:29:34.140014 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0923 08:29:34.140188 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:34.232329 22 builder.go:146] stderr: ""
  I0923 08:29:34.232377 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0923 08:29:34.232468 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0923 08:29:34.232629 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:34.340230 22 builder.go:146] stderr: ""
  I0923 08:29:34.340282 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0923 08:29:34.340338 22 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0923 08:29:34.340507 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 create -f -'
  I0923 08:29:34.443002 22 builder.go:146] stderr: ""
  I0923 08:29:34.443051 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/23/25 08:29:34.443
  I0923 08:29:34.443101 22 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0923 08:29:34.550148      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:35.550851      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:36.551654      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:37.551745      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:38.551923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:39.493861 22 kubectl.go:2283] Waiting for frontend to serve content.
  E0923 08:29:39.552407      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:40.552670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:41.552787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:42.553000      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:43.553138      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:44.553273      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:45.553505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:46.553568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:47.553725      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:48.553881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:49.554059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:50.554192      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:50.717973 22 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0923 08:29:50.728906 22 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/23/25 08:29:50.734
  I0923 08:29:50.734617 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:50.832488 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:50.832537 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/25 08:29:50.833
  I0923 08:29:50.833525 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:50.924477 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:50.924622 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/25 08:29:50.924
  I0923 08:29:50.924775 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:50.999606 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:50.999657 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/25 08:29:50.999
  I0923 08:29:50.999930 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:51.060940 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:51.060982 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/25 08:29:51.061
  I0923 08:29:51.061162 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:51.151445 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:51.151519 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/25 08:29:51.151
  I0923 08:29:51.151709 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-5156 delete --grace-period=0 --force -f -'
  I0923 08:29:51.312968 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:29:51.313283 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0923 08:29:51.314285 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5156" for this suite. @ 09/23/25 08:29:51.319
â€¢ [17.657 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 09/23/25 08:29:51.332
  I0923 08:29:51.332703 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:29:51.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:51.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:51.352
  STEP: creating Agnhost RC @ 09/23/25 08:29:51.355
  I0923 08:29:51.355233 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2656 create -f -'
  E0923 08:29:51.554396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:51.624692 22 builder.go:146] stderr: ""
  I0923 08:29:51.624743 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/25 08:29:51.624
  E0923 08:29:52.554466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:29:52.627966 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 08:29:52.628007 22 framework.go:733] Found 1 / 1
  I0923 08:29:52.628027 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/23/25 08:29:52.628
  I0923 08:29:52.629978 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 08:29:52.630012 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0923 08:29:52.630067 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2656 patch pod agnhost-primary-bgznd -p {"metadata":{"annotations":{"x":"y"}}}'
  I0923 08:29:52.700402 22 builder.go:146] stderr: ""
  I0923 08:29:52.700446 22 builder.go:147] stdout: "pod/agnhost-primary-bgznd patched\n"
  STEP: checking annotations @ 09/23/25 08:29:52.7
  I0923 08:29:52.702439 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0923 08:29:52.702478 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0923 08:29:52.702614 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2656" for this suite. @ 09/23/25 08:29:52.705
â€¢ [1.380 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 09/23/25 08:29:52.712
  I0923 08:29:52.712771 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:29:52.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:29:52.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:29:52.723
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/25 08:29:52.727
  I0923 08:29:52.727288 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2984 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0923 08:29:52.796670 22 builder.go:146] stderr: ""
  I0923 08:29:52.796717 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/23/25 08:29:52.796
  E0923 08:29:53.554658      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:54.555640      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:55.555883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:56.556022      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:57.556135      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/23/25 08:29:57.849
  I0923 08:29:57.849647 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2984 get pod e2e-test-httpd-pod -o json'
  I0923 08:29:57.916398 22 builder.go:146] stderr: ""
  I0923 08:29:57.916567 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-23T08:29:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2984\",\n        \"resourceVersion\": \"26066\",\n        \"uid\": \"67169447-cefa-4857-8ed1-fa0a877583a9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pnbqm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ckp-cncf-w2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-pnbqm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-23T08:29:53Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-23T08:29:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-23T08:29:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-23T08:29:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-23T08:29:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://2aec15293d9b2861f546d806a4257c5abc7e9c1b16b552ee436cd899c269963a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-23T08:29:53Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pnbqm\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.19.1.5\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.19.1.5\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.2.224\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.2.224\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-23T08:29:52Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/23/25 08:29:57.916
  I0923 08:29:57.916705 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2984 replace -f -'
  I0923 08:29:58.056908 22 builder.go:146] stderr: ""
  I0923 08:29:58.056962 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/23/25 08:29:58.056
  I0923 08:29:58.059823 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-2984 delete pods e2e-test-httpd-pod'
  E0923 08:29:58.556286      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:29:59.556493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:00.000153 22 builder.go:146] stderr: ""
  I0923 08:30:00.000209 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0923 08:30:00.000344 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2984" for this suite. @ 09/23/25 08:30:00.004
â€¢ [7.301 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/23/25 08:30:00.013
  I0923 08:30:00.013641 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:30:00.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:00.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:00.062
  STEP: Creating configMap with name configmap-test-volume-9008b114-811f-4915-a356-c51686cdadf8 @ 09/23/25 08:30:00.064
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:30:00.07
  E0923 08:30:00.556603      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:01.556835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:02.557005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:03.557093      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:30:04.085
  I0923 08:30:04.087211 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-f7dafd73-cf8b-4580-9af5-26d4ff88e875 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:30:04.092
  I0923 08:30:04.107067 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4563" for this suite. @ 09/23/25 08:30:04.109
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/23/25 08:30:04.114
  I0923 08:30:04.114554 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 08:30:04.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:04.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:04.125
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8659.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-8659.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/23/25 08:30:04.128
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8659.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8659.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/23/25 08:30:04.128
  STEP: creating a pod to probe /etc/hosts @ 09/23/25 08:30:04.128
  STEP: submitting the pod to kubernetes @ 09/23/25 08:30:04.128
  E0923 08:30:04.557796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:05.558086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/23/25 08:30:06.143
  STEP: looking for the results for each expected name from probers @ 09/23/25 08:30:06.145
  I0923 08:30:06.156302 22 dns_common.go:546] DNS probes using dns-8659/dns-test-ae848e3a-573d-412d-925f-babd4dc4ecbe succeeded

  STEP: deleting the pod @ 09/23/25 08:30:06.156
  I0923 08:30:06.167050 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8659" for this suite. @ 09/23/25 08:30:06.174
â€¢ [2.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/23/25 08:30:06.18
  I0923 08:30:06.180433 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-pred @ 09/23/25 08:30:06.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:06.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:06.193
  I0923 08:30:06.195309 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0923 08:30:06.282851 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 08:30:06.285092 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w1 before test
  I0923 08:30:06.287489 22 predicates.go:957] kube-flannel-ds-kpfn9 from kube-flannel started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:30:06.287518 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:30:06.287531 22 predicates.go:957] kube-proxy-wz57v from kube-system started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:30:06.287540 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:30:06.287553 22 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-23 07:17:18 +0000 UTC (1 container statuses recorded)
  I0923 08:30:06.287561 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0923 08:30:06.287571 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-trbn9 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:30:06.287599 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:30:06.287610 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0923 08:30:06.287621 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w2 before test
  I0923 08:30:06.289507 22 predicates.go:957] kube-flannel-ds-tbgsc from kube-flannel started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:30:06.289541 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:30:06.289554 22 predicates.go:957] kube-proxy-27mjl from kube-system started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:30:06.289565 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:30:06.289575 22 predicates.go:957] sonobuoy-e2e-job-a377c665aee74d41 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:30:06.289603 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0923 08:30:06.289612 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:30:06.289622 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-grznp from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:30:06.289632 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:30:06.289650 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/25 08:30:06.289
  E0923 08:30:06.558244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:07.558486      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/25 08:30:08.304
  STEP: Trying to apply a random label on the found node. @ 09/23/25 08:30:08.315
  STEP: verifying the node has the label kubernetes.io/e2e-c765e57e-eed6-48ad-bfc9-5d4db41f6243 42 @ 09/23/25 08:30:08.323
  STEP: Trying to relaunch the pod, now with labels. @ 09/23/25 08:30:08.326
  E0923 08:30:08.558718      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:09.558999      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c765e57e-eed6-48ad-bfc9-5d4db41f6243 off the node ckp-cncf-w1 @ 09/23/25 08:30:10.343
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c765e57e-eed6-48ad-bfc9-5d4db41f6243 @ 09/23/25 08:30:10.354
  I0923 08:30:10.357338 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3115" for this suite. @ 09/23/25 08:30:10.359
â€¢ [4.185 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/23/25 08:30:10.365
  I0923 08:30:10.365735 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-runtime @ 09/23/25 08:30:10.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:10.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:10.38
  STEP: create the container @ 09/23/25 08:30:10.382
  W0923 08:30:10.396813      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/25 08:30:10.396
  E0923 08:30:10.560115      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:11.560258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:12.560774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/23/25 08:30:13.408
  STEP: the container should be terminated @ 09/23/25 08:30:13.41
  STEP: the termination message should be set @ 09/23/25 08:30:13.41
  I0923 08:30:13.410454 22 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/23/25 08:30:13.41
  I0923 08:30:13.431343 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1806" for this suite. @ 09/23/25 08:30:13.433
â€¢ [3.073 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/23/25 08:30:13.438
  I0923 08:30:13.438742 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:30:13.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:13.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:13.453
  STEP: Setting up server cert @ 09/23/25 08:30:13.469
  E0923 08:30:13.561089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:30:13.789
  STEP: Deploying the webhook pod @ 09/23/25 08:30:13.795
  STEP: Wait for the deployment to be ready @ 09/23/25 08:30:13.808
  I0923 08:30:13.816000 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:30:14.561763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:15.561899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:30:15.823
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:30:15.835
  E0923 08:30:16.562940      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:16.836637 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/23/25 08:30:16.84
  STEP: create a namespace for the webhook @ 09/23/25 08:30:16.856
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/23/25 08:30:16.869
  I0923 08:30:16.959077 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2087" for this suite. @ 09/23/25 08:30:16.962
  STEP: Destroying namespace "webhook-markers-3669" for this suite. @ 09/23/25 08:30:16.966
  STEP: Destroying namespace "fail-closed-namespace-8003" for this suite. @ 09/23/25 08:30:16.974
â€¢ [3.541 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/23/25 08:30:16.979
  I0923 08:30:16.979552 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:30:16.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:16.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:16.998
  STEP: Creating secret with name secret-test-24cc6379-9ca4-400d-a497-9b6f2413f071 @ 09/23/25 08:30:17
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:30:17.005
  E0923 08:30:17.563678      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:18.563977      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:19.564119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:20.564241      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:30:21.047
  I0923 08:30:21.049453 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-secrets-2eb1abaa-7ce1-4947-8840-b1e88b865c19 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:30:21.053
  I0923 08:30:21.068354 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3256" for this suite. @ 09/23/25 08:30:21.07
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/23/25 08:30:21.077
  I0923 08:30:21.077452 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename hostport @ 09/23/25 08:30:21.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:21.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:21.088
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/23/25 08:30:21.171
  E0923 08:30:21.564320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:22.564409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.19.1.5 on the node which pod1 resides and expect scheduled @ 09/23/25 08:30:23.189
  E0923 08:30:23.564918      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:24.565152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:25.565316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:26.565686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:27.565858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:28.565974      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:29.566930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:30.567183      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:31.567969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:32.568097      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:33.569156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:34.569336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.19.1.5 but use UDP protocol on the node which pod2 resides @ 09/23/25 08:30:35.216
  E0923 08:30:35.570332      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:36.570457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:37.571239      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:38.571271      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/23/25 08:30:39.238
  I0923 08:30:39.238877 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.19.1.5 http://127.0.0.1:54323/hostname] Namespace:hostport-7591 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:30:39.238897 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:30:39.238945 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7591/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.19.1.5+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.19.1.5, port: 54323 @ 09/23/25 08:30:39.296
  I0923 08:30:39.296046 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.19.1.5:54323/hostname] Namespace:hostport-7591 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:30:39.296066 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:30:39.296140 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7591/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.19.1.5%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.19.1.5, port: 54323 UDP @ 09/23/25 08:30:39.344
  I0923 08:30:39.344415 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.19.1.5 54323] Namespace:hostport-7591 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:30:39.344436 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:30:39.344500 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-7591/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.19.1.5+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0923 08:30:39.571436      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:40.571670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:41.571891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:42.572039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:43.572180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:44.408013 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7591" for this suite. @ 09/23/25 08:30:44.411
â€¢ [23.339 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/23/25 08:30:44.416
  I0923 08:30:44.416315 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:30:44.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:30:44.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:30:44.429
  STEP: creating service in namespace services-5700 @ 09/23/25 08:30:44.431
  STEP: creating service affinity-clusterip-transition in namespace services-5700 @ 09/23/25 08:30:44.431
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5700 @ 09/23/25 08:30:44.442
  I0923 08:30:44.454484      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5700, replica count: 3
  E0923 08:30:44.573160      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:45.573414      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:46.574185      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:47.505546      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:30:47.509745 22 resource.go:361] Creating new exec pod
  E0923 08:30:47.575324      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:48.575493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:49.575755      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:50.519035 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-5700 exec execpod-affinityhspm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0923 08:30:50.576497      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:50.642214 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.105.201.191) 80 port [tcp/http] succeeded!\n"
  I0923 08:30:50.642261 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:30:50.642348 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-5700 exec execpod-affinityhspm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.201.191 80'
  I0923 08:30:50.750839 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.201.191 80\nConnection to 10.105.201.191 80 port [tcp/http] succeeded!\n"
  I0923 08:30:50.750899 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:30:50.757298 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-5700 exec execpod-affinityhspm2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.201.191:80/ ; done'
  E0923 08:30:51.576888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:52.577088      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:53.577225      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:54.577484      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:30:54.961230 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n"
  I0923 08:30:54.961292 22 builder.go:147] stdout: "\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\n\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\n\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk"
  I0923 08:30:54.961314 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:30:54.961328 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961339 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:30:54.961349 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961361 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961370 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:30:54.961383 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961393 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961403 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961413 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961425 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:30:54.961437 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:30:54.961458 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:30:54.961470 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  E0923 08:30:55.578050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:56.579110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:57.579289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:58.579542      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:30:59.579891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:00.579989      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:01.581079      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:02.581634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:03.581762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:04.581923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:05.582030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:06.582176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:07.582316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:08.582563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:09.582704      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:10.582892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:11.583025      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:12.583209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:13.583333      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:14.583520      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:15.583818      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:16.583966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:17.584173      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:18.584390      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:19.584527      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:20.584769      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:21.584895      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:22.585119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:23.585345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:24.585559      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:24.961739 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-5700 exec execpod-affinityhspm2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.201.191:80/ ; done'
  I0923 08:31:25.151293 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n"
  I0923 08:31:25.151356 22 builder.go:147] stdout: "\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-7h9gr\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-k94bs\naffinity-clusterip-transition-7h9gr"
  I0923 08:31:25.151377 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151389 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:31:25.151494 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151507 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151611 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151627 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151638 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151649 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151694 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151763 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151775 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151788 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:31:25.151820 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.151831 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151844 22 service.go:242] Received response from host: affinity-clusterip-transition-k94bs
  I0923 08:31:25.151859 22 service.go:242] Received response from host: affinity-clusterip-transition-7h9gr
  I0923 08:31:25.158958 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-5700 exec execpod-affinityhspm2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.105.201.191:80/ ; done'
  I0923 08:31:25.348117 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.105.201.191:80/\n"
  I0923 08:31:25.348176 22 builder.go:147] stdout: "\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk\naffinity-clusterip-transition-4wfkk"
  I0923 08:31:25.348196 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348207 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348218 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348230 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348239 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348248 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348260 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348272 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348290 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348299 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348309 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348318 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348327 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348336 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348345 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348354 22 service.go:242] Received response from host: affinity-clusterip-transition-4wfkk
  I0923 08:31:25.348417 22 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5700, will wait for the garbage collector to delete the pods @ 09/23/25 08:31:25.368
  I0923 08:31:25.427139 22 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 4.682914ms
  I0923 08:31:25.527832 22 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.688763ms
  E0923 08:31:25.586223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:26.586267      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:27.587225      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:28.370829 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5700" for this suite. @ 09/23/25 08:31:28.376
â€¢ [43.981 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/23/25 08:31:28.397
  I0923 08:31:28.397296 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:31:28.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:31:28.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:31:28.415
  STEP: Setting up server cert @ 09/23/25 08:31:28.44
  E0923 08:31:28.587287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:31:28.595
  STEP: Deploying the webhook pod @ 09/23/25 08:31:28.603
  STEP: Wait for the deployment to be ready @ 09/23/25 08:31:28.617
  I0923 08:31:28.625567 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:31:29.587433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:30.587705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:31:30.632
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:31:30.659
  E0923 08:31:31.587924      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:31.660176 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/23/25 08:31:31.665
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/25 08:31:31.665
  I0923 08:31:31.687651 22 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/23/25 08:31:31.798
  E0923 08:31:32.588027      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/23/25 08:31:32.806
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/25 08:31:32.806
  E0923 08:31:33.588171      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/23/25 08:31:33.831
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/25 08:31:33.831
  E0923 08:31:34.588329      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:35.588395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:36.588673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:37.588742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:38.588945      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/23/25 08:31:38.859
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/25 08:31:38.859
  E0923 08:31:39.589077      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:40.589307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:41.589475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:42.589596      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:43.589763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:43.967931 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1711" for this suite. @ 09/23/25 08:31:43.97
  STEP: Destroying namespace "webhook-markers-4297" for this suite. @ 09/23/25 08:31:43.975
â€¢ [15.585 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 09/23/25 08:31:43.981
  I0923 08:31:43.982014 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 08:31:43.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:31:43.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:31:43.994
  STEP: Creating service test in namespace statefulset-4777 @ 09/23/25 08:31:43.996
  STEP: Looking for a node to schedule stateful set and pod @ 09/23/25 08:31:44.005
  STEP: Creating pod with conflicting port in namespace statefulset-4777 @ 09/23/25 08:31:44.071
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4777 @ 09/23/25 08:31:44.078
  E0923 08:31:44.589826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:45.590110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4777 @ 09/23/25 08:31:46.084
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4777 @ 09/23/25 08:31:46.09
  I0923 08:31:46.104418 22 statefulset.go:872] Observed stateful pod in namespace: statefulset-4777, name: ss-0, uid: 43b9ddbb-6832-472c-b5f1-fed2aa1bbf9f, status phase: Pending. Waiting for statefulset controller to delete.
  I0923 08:31:46.123834 22 statefulset.go:872] Observed stateful pod in namespace: statefulset-4777, name: ss-0, uid: 43b9ddbb-6832-472c-b5f1-fed2aa1bbf9f, status phase: Failed. Waiting for statefulset controller to delete.
  I0923 08:31:46.130488 22 statefulset.go:872] Observed stateful pod in namespace: statefulset-4777, name: ss-0, uid: 43b9ddbb-6832-472c-b5f1-fed2aa1bbf9f, status phase: Failed. Waiting for statefulset controller to delete.
  I0923 08:31:46.136234 22 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-4777
  STEP: Removing pod with conflicting port in namespace statefulset-4777 @ 09/23/25 08:31:46.136
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4777 and will be in running state @ 09/23/25 08:31:46.15
  E0923 08:31:46.590814      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:47.591014      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:48.163441 22 statefulset.go:138] Deleting all statefulset in ns statefulset-4777
  I0923 08:31:48.165783 22 rest.go:152] Scaling statefulset ss to 0
  E0923 08:31:48.591241      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:49.591337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:50.591551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:51.591708      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:52.591932      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:53.592080      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:54.592245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:55.592312      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:56.592541      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:57.592709      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:31:58.175160 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0923 08:31:58.177025 22 rest.go:90] Deleting statefulset ss
  I0923 08:31:58.189257 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4777" for this suite. @ 09/23/25 08:31:58.191
â€¢ [14.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/23/25 08:31:58.196
  I0923 08:31:58.196315 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subpath @ 09/23/25 08:31:58.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:31:58.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:31:58.212
  STEP: Setting up data @ 09/23/25 08:31:58.214
  STEP: Creating pod pod-subpath-test-secret-g5r4 @ 09/23/25 08:31:58.221
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/25 08:31:58.221
  E0923 08:31:58.592879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:31:59.593084      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:00.594158      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:01.594460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:02.595418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:03.595727      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:04.596280      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:05.596415      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:06.597001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:07.597385      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:08.598319      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:09.598644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:10.598768      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:11.598957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:12.599579      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:13.599731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:14.600531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:15.600699      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:16.600741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:17.600847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:18.601806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:19.601960      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:20.602277      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:21.602630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:32:22.29
  I0923 08:32:22.292363 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-subpath-test-secret-g5r4 container test-container-subpath-secret-g5r4: <nil>
  STEP: delete the pod @ 09/23/25 08:32:22.304
  STEP: Deleting pod pod-subpath-test-secret-g5r4 @ 09/23/25 08:32:22.318
  I0923 08:32:22.318709 22 delete.go:62] Deleting pod "pod-subpath-test-secret-g5r4" in namespace "subpath-3974"
  I0923 08:32:22.320406 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3974" for this suite. @ 09/23/25 08:32:22.322
â€¢ [24.131 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/23/25 08:32:22.327
  I0923 08:32:22.327234 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename containers @ 09/23/25 08:32:22.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:22.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:22.337
  STEP: Creating a pod to test override arguments @ 09/23/25 08:32:22.34
  E0923 08:32:22.602911      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:23.603162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:24.603751      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:25.603998      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:32:26.355
  I0923 08:32:26.357133 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod client-containers-6ccb4140-1b75-4525-896e-52613311af1d container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:32:26.36
  I0923 08:32:26.371152 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3181" for this suite. @ 09/23/25 08:32:26.373
â€¢ [4.056 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/23/25 08:32:26.382
  I0923 08:32:26.383017 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename limitrange @ 09/23/25 08:32:26.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:26.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:26.394
  STEP: Creating LimitRange "e2e-limitrange-chp96" in namespace "limitrange-302" @ 09/23/25 08:32:26.396
  STEP: Creating another limitRange in another namespace @ 09/23/25 08:32:26.401
  I0923 08:32:26.411806 22 limit_range.go:299] Namespace "e2e-limitrange-chp96-1098" created
  I0923 08:32:26.411846 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-chp96" in namespace "e2e-limitrange-chp96-1098"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-chp96" @ 09/23/25 08:32:26.417
  I0923 08:32:26.418765 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-chp96" in "limitrange-302" namespace @ 09/23/25 08:32:26.418
  I0923 08:32:26.425533 22 limit_range.go:335] LimitRange "e2e-limitrange-chp96" has been patched
  STEP: Delete LimitRange "e2e-limitrange-chp96" by Collection with labelSelector: "e2e-limitrange-chp96=patched" @ 09/23/25 08:32:26.425
  STEP: Confirm that the limitRange "e2e-limitrange-chp96" has been deleted @ 09/23/25 08:32:26.43
  I0923 08:32:26.430603 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0923 08:32:26.432116 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-chp96=patched"
  I0923 08:32:26.432154 22 limit_range.go:344] LimitRange "e2e-limitrange-chp96" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-chp96" @ 09/23/25 08:32:26.432
  I0923 08:32:26.433804 22 limit_range.go:350] Found 1 limitRange
  I0923 08:32:26.433950 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-302" for this suite. @ 09/23/25 08:32:26.474
  STEP: Destroying namespace "e2e-limitrange-chp96-1098" for this suite. @ 09/23/25 08:32:26.478
â€¢ [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/23/25 08:32:26.487
  I0923 08:32:26.487026 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename proxy @ 09/23/25 08:32:26.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:26.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:26.5
  I0923 08:32:26.502286 22 proxy.go:387] Creating pod...
  E0923 08:32:26.604299      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:27.604394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:32:28.512915 22 proxy.go:411] Creating service...
  I0923 08:32:28.526358 22 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=DELETE
  I0923 08:32:28.531818 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0923 08:32:28.531869 22 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=OPTIONS
  I0923 08:32:28.539753 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0923 08:32:28.539814 22 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=PATCH
  I0923 08:32:28.541716 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0923 08:32:28.541758 22 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=POST
  I0923 08:32:28.544240 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0923 08:32:28.544485 22 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=PUT
  I0923 08:32:28.546923 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0923 08:32:28.546957 22 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=DELETE
  I0923 08:32:28.549413 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0923 08:32:28.549442 22 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0923 08:32:28.551789 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0923 08:32:28.551814 22 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=PATCH
  I0923 08:32:28.554230 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0923 08:32:28.554261 22 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=POST
  I0923 08:32:28.557055 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0923 08:32:28.557079 22 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=PUT
  I0923 08:32:28.559411 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0923 08:32:28.559441 22 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=GET
  I0923 08:32:28.560892 22 proxy.go:487] http.Client request:GET StatusCode:301
  I0923 08:32:28.560920 22 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=GET
  I0923 08:32:28.563106 22 proxy.go:487] http.Client request:GET StatusCode:301
  I0923 08:32:28.563132 22 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/pods/agnhost/proxy?method=HEAD
  I0923 08:32:28.564914 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0923 08:32:28.564944 22 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2955/services/e2e-proxy-test-service/proxy?method=HEAD
  I0923 08:32:28.566782 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0923 08:32:28.566933 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2955" for this suite. @ 09/23/25 08:32:28.569
â€¢ [2.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 09/23/25 08:32:28.579
  I0923 08:32:28.579123 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:32:28.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:28.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:28.594
  STEP: creating a ServiceAccount @ 09/23/25 08:32:28.596
  STEP: watching for the ServiceAccount to be added @ 09/23/25 08:32:28.602
  STEP: patching the ServiceAccount @ 09/23/25 08:32:28.603
  E0923 08:32:28.604652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/23/25 08:32:28.609
  STEP: deleting the ServiceAccount @ 09/23/25 08:32:28.61
  I0923 08:32:28.623047 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6634" for this suite. @ 09/23/25 08:32:28.67
â€¢ [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/23/25 08:32:28.675
  I0923 08:32:28.675916 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:32:28.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:28.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:28.686
  STEP: Setting up server cert @ 09/23/25 08:32:28.702
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:32:29.026
  STEP: Deploying the webhook pod @ 09/23/25 08:32:29.031
  STEP: Wait for the deployment to be ready @ 09/23/25 08:32:29.042
  I0923 08:32:29.051962 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:32:29.605642      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:30.605787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:32:31.059
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:32:31.072
  E0923 08:32:31.605926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:32:32.073117 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/23/25 08:32:32.077
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/25 08:32:32.091
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/23/25 08:32:32.099
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/25 08:32:32.107
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/23/25 08:32:32.114
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/25 08:32:32.121
  I0923 08:32:32.175004 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1950" for this suite. @ 09/23/25 08:32:32.177
  STEP: Destroying namespace "webhook-markers-3545" for this suite. @ 09/23/25 08:32:32.186
â€¢ [3.519 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/23/25 08:32:32.194
  I0923 08:32:32.194553 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename chunking @ 09/23/25 08:32:32.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:32.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:32.204
  STEP: creating a large number of resources @ 09/23/25 08:32:32.207
  E0923 08:32:32.606166      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:33.606476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:34.606823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:35.607380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:36.608127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:37.608245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:38.608852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:39.609229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:40.610162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:41.610574      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:42.611546      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:43.611806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:44.612311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:45.613031      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:46.613474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:47.614372      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:48.614412      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:49.615240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/23/25 08:32:49.9
  I0923 08:32:49.948949 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0923 08:32:49.999034 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0923 08:32:50.049557 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0923 08:32:50.098875 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0923 08:32:50.149207 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0923 08:32:50.198578 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0923 08:32:50.248711 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0923 08:32:50.298968 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0923 08:32:50.349330 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0923 08:32:50.398406 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0923 08:32:50.448631 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0923 08:32:50.498869 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0923 08:32:50.549119 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0923 08:32:50.599447 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0923 08:32:50.615649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:32:50.648453 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0923 08:32:50.698517 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0923 08:32:50.748618 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0923 08:32:50.798458 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0923 08:32:50.848767 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0923 08:32:50.898671 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0923 08:32:50.948894 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0923 08:32:50.998372 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0923 08:32:51.048530 22 chunking.go:98] Retrieved 17/17 results with rv 27552 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0923 08:32:51.098750 22 chunking.go:98] Retrieved 9/17 results with rv 27552 and continue 
  I0923 08:32:51.149116 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0923 08:32:51.199412 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0923 08:32:51.248720 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0923 08:32:51.299144 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0923 08:32:51.349264 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0923 08:32:51.399095 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0923 08:32:51.449429 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0923 08:32:51.498553 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0923 08:32:51.548501 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0923 08:32:51.598521 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  E0923 08:32:51.616686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:32:51.648833 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0923 08:32:51.698936 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0923 08:32:51.749209 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0923 08:32:51.799364 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0923 08:32:51.848517 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0923 08:32:51.899017 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0923 08:32:51.949267 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0923 08:32:51.999463 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0923 08:32:52.048772 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0923 08:32:52.099048 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0923 08:32:52.153080 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0923 08:32:52.199893 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0923 08:32:52.249006 22 chunking.go:98] Retrieved 17/17 results with rv 27553 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0923 08:32:52.299439 22 chunking.go:98] Retrieved 9/17 results with rv 27553 and continue 
  I0923 08:32:52.349160 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0923 08:32:52.399525 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0923 08:32:52.449093 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0923 08:32:52.499403 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0923 08:32:52.548942 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0923 08:32:52.599049 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E0923 08:32:52.617161      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:32:52.648833 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0923 08:32:52.699145 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0923 08:32:52.750936 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0923 08:32:52.799813 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0923 08:32:52.849042 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0923 08:32:52.898928 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0923 08:32:52.949173 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0923 08:32:52.999478 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0923 08:32:53.048705 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0923 08:32:53.098620 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0923 08:32:53.148762 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0923 08:32:53.199113 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0923 08:32:53.249324 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0923 08:32:53.298640 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0923 08:32:53.348942 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0923 08:32:53.399220 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0923 08:32:53.449513 22 chunking.go:98] Retrieved 17/17 results with rv 27556 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc1NTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0923 08:32:53.498143 22 chunking.go:98] Retrieved 9/17 results with rv 27556 and continue 
  STEP: retrieving those results all at once @ 09/23/25 08:32:53.498
  I0923 08:32:53.555420 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8531" for this suite. @ 09/23/25 08:32:53.599
  E0923 08:32:53.617997      22 retrywatcher.go:160] "Watch failed" err="context canceled"
â€¢ [21.460 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/23/25 08:32:53.654
  I0923 08:32:53.654298 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:32:53.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:53.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:53.668
  I0923 08:32:53.698331 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5796" for this suite. @ 09/23/25 08:32:53.7
â€¢ [0.051 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 09/23/25 08:32:53.705
  I0923 08:32:53.705454 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:32:53.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:32:53.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:32:53.718
  STEP: Creating a job @ 09/23/25 08:32:53.72
  STEP: Ensuring job reaches completions @ 09/23/25 08:32:53.726
  E0923 08:32:54.618180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:55.618500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:56.619473      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:57.619770      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:58.619900      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:32:59.620013      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:00.620229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:01.620480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:02.620741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:03.620875      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:03.747574 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8408" for this suite. @ 09/23/25 08:33:03.75
â€¢ [10.050 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/23/25 08:33:03.755
  I0923 08:33:03.755128 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename ingressclass @ 09/23/25 08:33:03.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:03.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:03.775
  STEP: getting /apis @ 09/23/25 08:33:03.777
  STEP: getting /apis/networking.k8s.io @ 09/23/25 08:33:03.78
  STEP: getting /apis/networking.k8s.iov1 @ 09/23/25 08:33:03.781
  STEP: creating @ 09/23/25 08:33:03.782
  STEP: getting @ 09/23/25 08:33:03.794
  STEP: listing @ 09/23/25 08:33:03.796
  STEP: watching @ 09/23/25 08:33:03.797
  I0923 08:33:03.797743 22 ingressclass.go:348] starting watch
  STEP: patching @ 09/23/25 08:33:03.798
  STEP: updating @ 09/23/25 08:33:03.802
  I0923 08:33:03.807096 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0923 08:33:03.807151 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/23/25 08:33:03.807
  STEP: deleting a collection @ 09/23/25 08:33:03.814
  I0923 08:33:03.824859 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4309" for this suite. @ 09/23/25 08:33:03.851
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/23/25 08:33:03.856
  I0923 08:33:03.856870 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 08:33:03.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:03.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:03.868
  STEP: Creating ReplicationController "e2e-rc-2pzn7" @ 09/23/25 08:33:03.872
  I0923 08:33:03.875962 22 rc.go:792] Get Replication Controller "e2e-rc-2pzn7" to confirm replicas
  E0923 08:33:04.621130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:04.876258 22 rc.go:792] Get Replication Controller "e2e-rc-2pzn7" to confirm replicas
  I0923 08:33:04.878647 22 rc.go:801] Found 1 replicas for "e2e-rc-2pzn7" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2pzn7" @ 09/23/25 08:33:04.878
  STEP: Updating a scale subresource @ 09/23/25 08:33:04.88
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2pzn7" @ 09/23/25 08:33:04.887
  I0923 08:33:04.887605 22 rc.go:792] Get Replication Controller "e2e-rc-2pzn7" to confirm replicas
  E0923 08:33:05.621223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:05.888556 22 rc.go:792] Get Replication Controller "e2e-rc-2pzn7" to confirm replicas
  I0923 08:33:05.890875 22 rc.go:801] Found 2 replicas for "e2e-rc-2pzn7" replication controller
  I0923 08:33:05.891044 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9574" for this suite. @ 09/23/25 08:33:05.893
â€¢ [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/23/25 08:33:05.899
  I0923 08:33:05.899360 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 08:33:05.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:05.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:05.926
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/23/25 08:33:05.928
  I0923 08:33:05.929488 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:33:06.622109      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:07.250775 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:33:07.622969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:08.623923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:09.624737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:10.625667      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:11.626575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:12.491034 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8413" for this suite. @ 09/23/25 08:33:12.497
â€¢ [6.603 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/23/25 08:33:12.502
  I0923 08:33:12.502754 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename dns @ 09/23/25 08:33:12.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:12.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:12.515
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/23/25 08:33:12.517
  I0923 08:33:12.525037 22 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5745  0ce2e639-a051-48b7-b0ed-13b850c982db 28202 0 2025-09-23 08:33:12 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-23 08:33:12 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h4rkg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h4rkg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0923 08:33:12.627290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:13.627416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/23/25 08:33:14.532
  I0923 08:33:14.532931 22 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5745 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:33:14.532946 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:33:14.532985 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5745/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/23/25 08:33:14.592
  I0923 08:33:14.592359 22 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5745 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:33:14.592380 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:33:14.592444 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5745/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  E0923 08:33:14.628089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:14.652622 22 dns.go:450] Deleting pod test-dns-nameservers...
  I0923 08:33:14.664858 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5745" for this suite. @ 09/23/25 08:33:14.667
â€¢ [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/23/25 08:33:14.675
  I0923 08:33:14.675195 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:33:14.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:14.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:14.686
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4393 @ 09/23/25 08:33:14.689
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/23/25 08:33:14.706
  STEP: creating service externalsvc in namespace services-4393 @ 09/23/25 08:33:14.706
  STEP: creating replication controller externalsvc in namespace services-4393 @ 09/23/25 08:33:14.723
  I0923 08:33:14.736706      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4393, replica count: 2
  E0923 08:33:15.628418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:16.628647      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:17.628747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:17.787929      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/23/25 08:33:17.79
  I0923 08:33:17.808396 22 resource.go:361] Creating new exec pod
  E0923 08:33:18.628847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:19.629076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:19.822909 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-4393 exec execpodcnmrf -- /bin/sh -x -c nslookup nodeport-service.services-4393.svc.cluster.local'
  I0923 08:33:19.972186 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-4393.svc.cluster.local\n"
  I0923 08:33:19.972240 22 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-4393.svc.cluster.local\tcanonical name = externalsvc.services-4393.svc.cluster.local.\nName:\texternalsvc.services-4393.svc.cluster.local\nAddress: 10.109.139.219\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4393, will wait for the garbage collector to delete the pods @ 09/23/25 08:33:19.972
  I0923 08:33:20.031157 22 resources.go:139] Deleting ReplicationController externalsvc took: 5.787716ms
  I0923 08:33:20.131373 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.213671ms
  E0923 08:33:20.629949      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:21.630879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:22.631873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:23.147393 22 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0923 08:33:23.156464 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4393" for this suite. @ 09/23/25 08:33:23.159
â€¢ [8.491 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/23/25 08:33:23.166
  I0923 08:33:23.166111 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl-logs @ 09/23/25 08:33:23.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:23.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:23.178
  STEP: creating a pod @ 09/23/25 08:33:23.18
  I0923 08:33:23.180720 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0923 08:33:23.249318 22 builder.go:146] stderr: ""
  I0923 08:33:23.249381 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/23/25 08:33:23.249
  I0923 08:33:23.249494 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0923 08:33:23.632618      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:24.632854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:25.256699 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/23/25 08:33:25.256
  I0923 08:33:25.256824 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator'
  I0923 08:33:25.324395 22 builder.go:146] stderr: ""
  I0923 08:33:25.324452 22 builder.go:147] stdout: "I0923 08:33:23.857585       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/m2s 538\nI0923 08:33:24.057937       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/88k5 428\nI0923 08:33:24.258349       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/gbwz 495\nI0923 08:33:24.457739       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/vbts 301\nI0923 08:33:24.658180       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/f56 400\nI0923 08:33:24.858518       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/56t 253\nI0923 08:33:25.057913       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/s2xw 416\nI0923 08:33:25.258218       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/2wn 276\n"
  STEP: limiting log lines @ 09/23/25 08:33:25.324
  I0923 08:33:25.324564 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator --tail=1'
  I0923 08:33:25.392539 22 builder.go:146] stderr: ""
  I0923 08:33:25.392726 22 builder.go:147] stdout: "I0923 08:33:25.258218       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/2wn 276\n"
  I0923 08:33:25.392757 22 logs.go:180] got output "I0923 08:33:25.258218       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/2wn 276\n"
  STEP: limiting log bytes @ 09/23/25 08:33:25.392
  I0923 08:33:25.392996 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator --limit-bytes=1'
  I0923 08:33:25.460457 22 builder.go:146] stderr: ""
  I0923 08:33:25.460504 22 builder.go:147] stdout: "I"
  I0923 08:33:25.460518 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/23/25 08:33:25.46
  I0923 08:33:25.460654 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator --tail=1 --timestamps'
  I0923 08:33:25.529628 22 builder.go:146] stderr: ""
  I0923 08:33:25.529690 22 builder.go:147] stdout: "2025-09-23T08:33:25.458865306Z I0923 08:33:25.458652       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/5tsh 585\n"
  I0923 08:33:25.529748 22 logs.go:192] got output "2025-09-23T08:33:25.458865306Z I0923 08:33:25.458652       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/5tsh 585\n"
  STEP: restricting to a time range @ 09/23/25 08:33:25.529
  E0923 08:33:25.633918      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:26.634044      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:27.634226      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:28.030763 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator --since=1s'
  I0923 08:33:28.097141 22 builder.go:146] stderr: ""
  I0923 08:33:28.097194 22 builder.go:147] stdout: "I0923 08:33:27.258491       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/dxlq 233\nI0923 08:33:27.457835       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/bqn5 251\nI0923 08:33:27.658215       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qqx 433\nI0923 08:33:27.858649       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/lpj 355\nI0923 08:33:28.058079       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/xbz 201\n"
  I0923 08:33:28.097352 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 logs logs-generator logs-generator --since=24h'
  I0923 08:33:28.165777 22 builder.go:146] stderr: ""
  I0923 08:33:28.165878 22 builder.go:147] stdout: "I0923 08:33:23.857585       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/m2s 538\nI0923 08:33:24.057937       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/88k5 428\nI0923 08:33:24.258349       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/gbwz 495\nI0923 08:33:24.457739       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/vbts 301\nI0923 08:33:24.658180       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/f56 400\nI0923 08:33:24.858518       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/56t 253\nI0923 08:33:25.057913       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/s2xw 416\nI0923 08:33:25.258218       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/2wn 276\nI0923 08:33:25.458652       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/5tsh 585\nI0923 08:33:25.658246       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/c6bx 370\nI0923 08:33:25.857689       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/c2l4 540\nI0923 08:33:26.058231       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/fzt 503\nI0923 08:33:26.258658       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/cc4w 225\nI0923 08:33:26.458008       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/j64t 454\nI0923 08:33:26.658340       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/qjwb 383\nI0923 08:33:26.858677       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/qtvq 361\nI0923 08:33:27.058101       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/27vh 576\nI0923 08:33:27.258491       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/dxlq 233\nI0923 08:33:27.457835       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/bqn5 251\nI0923 08:33:27.658215       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qqx 433\nI0923 08:33:27.858649       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/lpj 355\nI0923 08:33:28.058079       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/xbz 201\n"
  I0923 08:33:28.166013 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-logs-7871 delete pod logs-generator'
  E0923 08:33:28.634397      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:29.137427 22 builder.go:146] stderr: ""
  I0923 08:33:29.137468 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0923 08:33:29.137616 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7871" for this suite. @ 09/23/25 08:33:29.14
â€¢ [5.982 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/23/25 08:33:29.148
  I0923 08:33:29.148786 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption @ 09/23/25 08:33:29.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:29.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:29.162
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/23/25 08:33:29.164
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:33:29.168
  E0923 08:33:29.634447      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:30.634552      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/23/25 08:33:31.175
  STEP: Waiting for all pods to be running @ 09/23/25 08:33:31.175
  I0923 08:33:31.178368 22 disruption.go:680] pods: 0 < 3
  E0923 08:33:31.634778      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:32.635076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/23/25 08:33:33.178
  STEP: Updating the pdb to allow a pod to be evicted @ 09/23/25 08:33:33.183
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:33:33.189
  E0923 08:33:33.635200      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:34.635460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/23/25 08:33:35.192
  STEP: Waiting for all pods to be running @ 09/23/25 08:33:35.192
  STEP: Waiting for the pdb to observed all healthy pods @ 09/23/25 08:33:35.195
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/23/25 08:33:35.219
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:33:35.242
  E0923 08:33:35.635632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:36.635904      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/23/25 08:33:37.245
  STEP: locating a running pod @ 09/23/25 08:33:37.247
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/23/25 08:33:37.252
  STEP: Waiting for the pdb to be deleted @ 09/23/25 08:33:37.256
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/23/25 08:33:37.258
  STEP: Waiting for all pods to be running @ 09/23/25 08:33:37.258
  I0923 08:33:37.290459 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6562" for this suite. @ 09/23/25 08:33:37.301
â€¢ [8.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/23/25 08:33:37.317
  I0923 08:33:37.317028 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:33:37.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:37.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:37.338
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:33:37.34
  E0923 08:33:37.636131      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:38.636212      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:39.636285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:40.636401      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:33:41.364
  I0923 08:33:41.365946 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod downwardapi-volume-1115adeb-8cbf-4c3b-9d4f-dca2a156fc93 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:33:41.378
  I0923 08:33:41.395770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1214" for this suite. @ 09/23/25 08:33:41.398
â€¢ [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/23/25 08:33:41.404
  I0923 08:33:41.404763 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pv @ 09/23/25 08:33:41.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:41.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:41.42
  STEP: Creating initial PV and PVC @ 09/23/25 08:33:41.422
  I0923 08:33:41.422794 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4556" @ 09/23/25 08:33:41.437
  STEP: Listing PVCs in namespace "pv-4556" @ 09/23/25 08:33:41.44
  STEP: Reading "pvc-rn6wp" Status @ 09/23/25 08:33:41.442
  STEP: Reading "pv-4556-j7jhh" Status @ 09/23/25 08:33:41.445
  STEP: Patching "pvc-rn6wp" Status @ 09/23/25 08:33:41.451
  STEP: Patching "pv-4556-j7jhh" Status @ 09/23/25 08:33:41.455
  STEP: Updating "pvc-rn6wp" Status @ 09/23/25 08:33:41.473
  STEP: Updating "pv-4556-j7jhh" Status @ 09/23/25 08:33:41.481
  I0923 08:33:41.490036 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0923 08:33:41.490073 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-rn6wp"
  I0923 08:33:41.495977 22 pv.go:193] Deleting PersistentVolume "pv-4556-j7jhh"
  I0923 08:33:41.504727 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4556" for this suite. @ 09/23/25 08:33:41.51
â€¢ [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/23/25 08:33:41.515
  I0923 08:33:41.515997 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:33:41.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:41.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:41.537
  STEP: Setting up server cert @ 09/23/25 08:33:41.553
  E0923 08:33:41.636459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:33:42.033
  STEP: Deploying the webhook pod @ 09/23/25 08:33:42.038
  STEP: Wait for the deployment to be ready @ 09/23/25 08:33:42.048
  I0923 08:33:42.056570 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:33:42.637899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:43.637707      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:33:44.063
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:33:44.073
  E0923 08:33:44.638513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:45.074966 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0923 08:33:45.080061 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7747-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/25 08:33:45.589
  STEP: Creating a custom resource while v1 is storage version @ 09/23/25 08:33:45.604
  E0923 08:33:45.639195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:46.639490      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/23/25 08:33:47.637
  E0923 08:33:47.639861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching the custom resource while v2 is storage version @ 09/23/25 08:33:47.687
  I0923 08:33:48.356175 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3287" for this suite. @ 09/23/25 08:33:48.358
  STEP: Destroying namespace "webhook-markers-4939" for this suite. @ 09/23/25 08:33:48.363
â€¢ [6.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/23/25 08:33:48.368
  I0923 08:33:48.368122 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/25 08:33:48.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:48.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:48.383
  E0923 08:33:48.640059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:49.640202      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:50.640457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:51.640717      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:52.401791 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9789" for this suite. @ 09/23/25 08:33:52.404
â€¢ [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/23/25 08:33:52.409
  I0923 08:33:52.409569 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:33:52.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:52.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:52.424
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:33:52.426
  E0923 08:33:52.641404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:53.641565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:33:54.441
  I0923 08:33:54.443415 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-3df19be3-ba2b-4033-8b84-bfc0806c6e1e container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:33:54.448
  I0923 08:33:54.460071 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7371" for this suite. @ 09/23/25 08:33:54.462
â€¢ [2.058 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/23/25 08:33:54.467
  I0923 08:33:54.467873 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename watch @ 09/23/25 08:33:54.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:54.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:54.48
  STEP: getting a starting resourceVersion @ 09/23/25 08:33:54.483
  STEP: starting a background goroutine to produce watch events @ 09/23/25 08:33:54.485
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/23/25 08:33:54.485
  E0923 08:33:54.641612      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:55.641738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:56.642258      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:33:57.273993 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2721" for this suite. @ 09/23/25 08:33:57.322
â€¢ [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/23/25 08:33:57.376
  I0923 08:33:57.376942 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:33:57.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:33:57.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:33:57.393
  STEP: Creating resourceQuota "e2e-rq-status-nblfj" @ 09/23/25 08:33:57.397
  I0923 08:33:57.408435 22 resource_quota.go:1102] Resource quota "e2e-rq-status-nblfj" reports spec: hard cpu limit of 500m
  I0923 08:33:57.408476 22 resource_quota.go:1104] Resource quota "e2e-rq-status-nblfj" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-nblfj" /status @ 09/23/25 08:33:57.408
  STEP: Confirm /status for "e2e-rq-status-nblfj" resourceQuota via watch @ 09/23/25 08:33:57.414
  I0923 08:33:57.415656 22 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-nblfj" in namespace "resourcequota-8617" with hard status: v1.ResourceList(nil)
  I0923 08:33:57.415717 22 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-nblfj" in namespace "resourcequota-8617" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0923 08:33:57.415732 22 resource_quota.go:1141] ResourceQuota "e2e-rq-status-nblfj" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/23/25 08:33:57.417
  I0923 08:33:57.424086 22 resource_quota.go:1152] Resource quota "e2e-rq-status-nblfj" reports spec: hard cpu limit of 1
  I0923 08:33:57.424116 22 resource_quota.go:1153] Resource quota "e2e-rq-status-nblfj" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-nblfj" /status @ 09/23/25 08:33:57.424
  STEP: Confirm /status for "e2e-rq-status-nblfj" resourceQuota via watch @ 09/23/25 08:33:57.434
  I0923 08:33:57.435451 22 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-nblfj" in namespace "resourcequota-8617" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0923 08:33:57.435500 22 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-nblfj" in namespace "resourcequota-8617" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0923 08:33:57.435515 22 resource_quota.go:1185] ResourceQuota "e2e-rq-status-nblfj" /status was patched
  STEP: Get "e2e-rq-status-nblfj" /status @ 09/23/25 08:33:57.435
  I0923 08:33:57.437929 22 resource_quota.go:1196] Resourcequota "e2e-rq-status-nblfj" reports status: hard cpu of 1
  I0923 08:33:57.437962 22 resource_quota.go:1198] Resourcequota "e2e-rq-status-nblfj" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-nblfj" /status before checking Spec is unchanged @ 09/23/25 08:33:57.439
  I0923 08:33:57.445441 22 resource_quota.go:1218] Resourcequota "e2e-rq-status-nblfj" reports status: hard cpu of 2
  I0923 08:33:57.445486 22 resource_quota.go:1220] Resourcequota "e2e-rq-status-nblfj" reports status: hard memory of 2Gi
  I0923 08:33:57.446897 22 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-nblfj" in namespace "resourcequota-8617" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0923 08:33:57.448942 22 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nblfj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nblfj", GenerateName:"", Namespace:"resourcequota-8617", SelfLink:"", UID:"edb0c685-9522-4376-a27f-c8502ef9ecaf", ResourceVersion:"28810", Generation:0, CreationTimestamp:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nblfj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046a67b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046a67e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046a6810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0923 08:33:57.643273      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:58.643536      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:33:59.643684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:00.643968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:01.644087      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:34:02.451012 22 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nblfj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nblfj", GenerateName:"", Namespace:"resourcequota-8617", SelfLink:"", UID:"edb0c685-9522-4376-a27f-c8502ef9ecaf", ResourceVersion:"28810", Generation:0, CreationTimestamp:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nblfj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045e8048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045e8078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 23, 8, 33, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045e80a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0923 08:34:02.644307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:03.644416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:04.644703      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:05.644979      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:06.645242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:34:07.449561 22 resource_quota.go:1260] ResourceQuota "e2e-rq-status-nblfj" Spec was unchanged and /status reset
  I0923 08:34:07.449750 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8617" for this suite. @ 09/23/25 08:34:07.452
â€¢ [10.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/23/25 08:34:07.458
  I0923 08:34:07.458091 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename gc @ 09/23/25 08:34:07.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:34:07.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:34:07.472
  STEP: create the rc @ 09/23/25 08:34:07.553
  W0923 08:34:07.558815      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0923 08:34:07.646135      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:08.646269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:09.646998      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:10.647135      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/23/25 08:34:11.567
  STEP: wait for the rc to be deleted @ 09/23/25 08:34:11.573
  E0923 08:34:11.647951      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:12.649731      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:13.649851      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:14.650740      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:15.651548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/23/25 08:34:16.577
  E0923 08:34:16.651844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:17.652714      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:18.654567      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:19.653537      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:20.653747      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:21.653936      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:22.654098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:23.654914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:24.655114      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:25.655240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:26.655515      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:27.656244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:28.656797      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:29.657011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:30.657107      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:31.657354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:32.657485      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:33.657714      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:34.657967      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:35.658125      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:36.658429      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:37.658660      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:38.658881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:39.659786      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:40.660015      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:41.661092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:42.661298      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:43.661517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:44.661741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:45.662796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/23/25 08:34:46.585
  I0923 08:34:46.655280 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0923 08:34:46.655389 22 delete.go:95] Deleting pod "simpletest.rc-252qh" in namespace "gc-6571"
  E0923 08:34:46.663272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:34:46.670426 22 delete.go:95] Deleting pod "simpletest.rc-2ksqt" in namespace "gc-6571"
  I0923 08:34:46.681858 22 delete.go:95] Deleting pod "simpletest.rc-2nsrt" in namespace "gc-6571"
  I0923 08:34:46.695378 22 delete.go:95] Deleting pod "simpletest.rc-45wr4" in namespace "gc-6571"
  I0923 08:34:46.711669 22 delete.go:95] Deleting pod "simpletest.rc-4dbsz" in namespace "gc-6571"
  I0923 08:34:46.724985 22 delete.go:95] Deleting pod "simpletest.rc-4rgrb" in namespace "gc-6571"
  I0923 08:34:46.734896 22 delete.go:95] Deleting pod "simpletest.rc-5874c" in namespace "gc-6571"
  I0923 08:34:46.745717 22 delete.go:95] Deleting pod "simpletest.rc-624ft" in namespace "gc-6571"
  I0923 08:34:46.757942 22 delete.go:95] Deleting pod "simpletest.rc-62k7k" in namespace "gc-6571"
  I0923 08:34:46.769880 22 delete.go:95] Deleting pod "simpletest.rc-65zdd" in namespace "gc-6571"
  I0923 08:34:46.785450 22 delete.go:95] Deleting pod "simpletest.rc-688kz" in namespace "gc-6571"
  I0923 08:34:46.798527 22 delete.go:95] Deleting pod "simpletest.rc-68bx9" in namespace "gc-6571"
  I0923 08:34:46.813008 22 delete.go:95] Deleting pod "simpletest.rc-69vw2" in namespace "gc-6571"
  I0923 08:34:46.824448 22 delete.go:95] Deleting pod "simpletest.rc-6bng9" in namespace "gc-6571"
  I0923 08:34:46.849185 22 delete.go:95] Deleting pod "simpletest.rc-6f899" in namespace "gc-6571"
  I0923 08:34:46.858337 22 delete.go:95] Deleting pod "simpletest.rc-6l685" in namespace "gc-6571"
  I0923 08:34:46.875340 22 delete.go:95] Deleting pod "simpletest.rc-79kj8" in namespace "gc-6571"
  I0923 08:34:46.889501 22 delete.go:95] Deleting pod "simpletest.rc-7mjzg" in namespace "gc-6571"
  I0923 08:34:46.901856 22 delete.go:95] Deleting pod "simpletest.rc-7ns4r" in namespace "gc-6571"
  I0923 08:34:46.916470 22 delete.go:95] Deleting pod "simpletest.rc-7tv4t" in namespace "gc-6571"
  I0923 08:34:46.925346 22 delete.go:95] Deleting pod "simpletest.rc-82s2b" in namespace "gc-6571"
  I0923 08:34:46.940181 22 delete.go:95] Deleting pod "simpletest.rc-8c4mx" in namespace "gc-6571"
  I0923 08:34:46.949297 22 delete.go:95] Deleting pod "simpletest.rc-92jnq" in namespace "gc-6571"
  I0923 08:34:46.961092 22 delete.go:95] Deleting pod "simpletest.rc-9bzrr" in namespace "gc-6571"
  I0923 08:34:46.980305 22 delete.go:95] Deleting pod "simpletest.rc-9j22p" in namespace "gc-6571"
  I0923 08:34:46.991921 22 delete.go:95] Deleting pod "simpletest.rc-9rrtl" in namespace "gc-6571"
  I0923 08:34:47.009364 22 delete.go:95] Deleting pod "simpletest.rc-b297m" in namespace "gc-6571"
  I0923 08:34:47.019812 22 delete.go:95] Deleting pod "simpletest.rc-bg6cr" in namespace "gc-6571"
  I0923 08:34:47.034394 22 delete.go:95] Deleting pod "simpletest.rc-c85pv" in namespace "gc-6571"
  I0923 08:34:47.048898 22 delete.go:95] Deleting pod "simpletest.rc-cgfmc" in namespace "gc-6571"
  I0923 08:34:47.062850 22 delete.go:95] Deleting pod "simpletest.rc-cvwnc" in namespace "gc-6571"
  I0923 08:34:47.096233 22 delete.go:95] Deleting pod "simpletest.rc-d2gcs" in namespace "gc-6571"
  I0923 08:34:47.108722 22 delete.go:95] Deleting pod "simpletest.rc-d7rgg" in namespace "gc-6571"
  I0923 08:34:47.120521 22 delete.go:95] Deleting pod "simpletest.rc-dmh6p" in namespace "gc-6571"
  I0923 08:34:47.137688 22 delete.go:95] Deleting pod "simpletest.rc-drwvl" in namespace "gc-6571"
  I0923 08:34:47.147104 22 delete.go:95] Deleting pod "simpletest.rc-dz9tq" in namespace "gc-6571"
  I0923 08:34:47.160328 22 delete.go:95] Deleting pod "simpletest.rc-f7bq4" in namespace "gc-6571"
  I0923 08:34:47.174225 22 delete.go:95] Deleting pod "simpletest.rc-g6dx6" in namespace "gc-6571"
  I0923 08:34:47.188686 22 delete.go:95] Deleting pod "simpletest.rc-gk79w" in namespace "gc-6571"
  I0923 08:34:47.217013 22 delete.go:95] Deleting pod "simpletest.rc-gsgss" in namespace "gc-6571"
  I0923 08:34:47.233957 22 delete.go:95] Deleting pod "simpletest.rc-hj9hs" in namespace "gc-6571"
  I0923 08:34:47.249041 22 delete.go:95] Deleting pod "simpletest.rc-hlgc2" in namespace "gc-6571"
  I0923 08:34:47.260225 22 delete.go:95] Deleting pod "simpletest.rc-j5hlm" in namespace "gc-6571"
  I0923 08:34:47.273575 22 delete.go:95] Deleting pod "simpletest.rc-j5wxl" in namespace "gc-6571"
  I0923 08:34:47.287482 22 delete.go:95] Deleting pod "simpletest.rc-jhz42" in namespace "gc-6571"
  I0923 08:34:47.297838 22 delete.go:95] Deleting pod "simpletest.rc-jnkxh" in namespace "gc-6571"
  I0923 08:34:47.312570 22 delete.go:95] Deleting pod "simpletest.rc-jplg7" in namespace "gc-6571"
  I0923 08:34:47.332959 22 delete.go:95] Deleting pod "simpletest.rc-jtl2w" in namespace "gc-6571"
  I0923 08:34:47.343040 22 delete.go:95] Deleting pod "simpletest.rc-k24vq" in namespace "gc-6571"
  I0923 08:34:47.356246 22 delete.go:95] Deleting pod "simpletest.rc-kk6sv" in namespace "gc-6571"
  I0923 08:34:47.370709 22 delete.go:95] Deleting pod "simpletest.rc-kv7mq" in namespace "gc-6571"
  I0923 08:34:47.381037 22 delete.go:95] Deleting pod "simpletest.rc-lc9rz" in namespace "gc-6571"
  I0923 08:34:47.390909 22 delete.go:95] Deleting pod "simpletest.rc-lddjp" in namespace "gc-6571"
  I0923 08:34:47.402985 22 delete.go:95] Deleting pod "simpletest.rc-lldpt" in namespace "gc-6571"
  I0923 08:34:47.416080 22 delete.go:95] Deleting pod "simpletest.rc-lprql" in namespace "gc-6571"
  I0923 08:34:47.432839 22 delete.go:95] Deleting pod "simpletest.rc-lrtmj" in namespace "gc-6571"
  I0923 08:34:47.445950 22 delete.go:95] Deleting pod "simpletest.rc-m8h9s" in namespace "gc-6571"
  I0923 08:34:47.459975 22 delete.go:95] Deleting pod "simpletest.rc-m8n4d" in namespace "gc-6571"
  I0923 08:34:47.471442 22 delete.go:95] Deleting pod "simpletest.rc-mbg78" in namespace "gc-6571"
  I0923 08:34:47.482084 22 delete.go:95] Deleting pod "simpletest.rc-mflnf" in namespace "gc-6571"
  I0923 08:34:47.493316 22 delete.go:95] Deleting pod "simpletest.rc-mkljl" in namespace "gc-6571"
  I0923 08:34:47.507899 22 delete.go:95] Deleting pod "simpletest.rc-mtm4l" in namespace "gc-6571"
  I0923 08:34:47.525100 22 delete.go:95] Deleting pod "simpletest.rc-n5dhq" in namespace "gc-6571"
  I0923 08:34:47.547963 22 delete.go:95] Deleting pod "simpletest.rc-n9fng" in namespace "gc-6571"
  I0923 08:34:47.560134 22 delete.go:95] Deleting pod "simpletest.rc-nksvm" in namespace "gc-6571"
  I0923 08:34:47.585626 22 delete.go:95] Deleting pod "simpletest.rc-nqlrn" in namespace "gc-6571"
  I0923 08:34:47.599970 22 delete.go:95] Deleting pod "simpletest.rc-ntj2z" in namespace "gc-6571"
  I0923 08:34:47.639244 22 delete.go:95] Deleting pod "simpletest.rc-nxpq7" in namespace "gc-6571"
  E0923 08:34:47.663392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:34:47.690652 22 delete.go:95] Deleting pod "simpletest.rc-nxvgh" in namespace "gc-6571"
  I0923 08:34:47.740005 22 delete.go:95] Deleting pod "simpletest.rc-p2ds6" in namespace "gc-6571"
  I0923 08:34:47.794004 22 delete.go:95] Deleting pod "simpletest.rc-q92vf" in namespace "gc-6571"
  I0923 08:34:47.842251 22 delete.go:95] Deleting pod "simpletest.rc-q9bq2" in namespace "gc-6571"
  I0923 08:34:47.896905 22 delete.go:95] Deleting pod "simpletest.rc-qbcrz" in namespace "gc-6571"
  I0923 08:34:47.969117 22 delete.go:95] Deleting pod "simpletest.rc-qkxst" in namespace "gc-6571"
  I0923 08:34:47.988208 22 delete.go:95] Deleting pod "simpletest.rc-qq9wq" in namespace "gc-6571"
  I0923 08:34:48.047440 22 delete.go:95] Deleting pod "simpletest.rc-qtfsn" in namespace "gc-6571"
  I0923 08:34:48.089701 22 delete.go:95] Deleting pod "simpletest.rc-rppvn" in namespace "gc-6571"
  I0923 08:34:48.140446 22 delete.go:95] Deleting pod "simpletest.rc-rrfsx" in namespace "gc-6571"
  I0923 08:34:48.197260 22 delete.go:95] Deleting pod "simpletest.rc-spr76" in namespace "gc-6571"
  I0923 08:34:48.239497 22 delete.go:95] Deleting pod "simpletest.rc-t2pcd" in namespace "gc-6571"
  I0923 08:34:48.292893 22 delete.go:95] Deleting pod "simpletest.rc-t8qgb" in namespace "gc-6571"
  I0923 08:34:48.340412 22 delete.go:95] Deleting pod "simpletest.rc-tdndn" in namespace "gc-6571"
  I0923 08:34:48.395116 22 delete.go:95] Deleting pod "simpletest.rc-tfhgp" in namespace "gc-6571"
  I0923 08:34:48.450746 22 delete.go:95] Deleting pod "simpletest.rc-tgfmx" in namespace "gc-6571"
  I0923 08:34:48.493378 22 delete.go:95] Deleting pod "simpletest.rc-twbq4" in namespace "gc-6571"
  I0923 08:34:48.541170 22 delete.go:95] Deleting pod "simpletest.rc-v4lc7" in namespace "gc-6571"
  I0923 08:34:48.590742 22 delete.go:95] Deleting pod "simpletest.rc-v7bm5" in namespace "gc-6571"
  I0923 08:34:48.639376 22 delete.go:95] Deleting pod "simpletest.rc-v7vsr" in namespace "gc-6571"
  E0923 08:34:48.663857      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:34:48.693979 22 delete.go:95] Deleting pod "simpletest.rc-vrmh5" in namespace "gc-6571"
  I0923 08:34:48.741060 22 delete.go:95] Deleting pod "simpletest.rc-whhdh" in namespace "gc-6571"
  I0923 08:34:48.790845 22 delete.go:95] Deleting pod "simpletest.rc-wkbmr" in namespace "gc-6571"
  I0923 08:34:48.845948 22 delete.go:95] Deleting pod "simpletest.rc-x4h95" in namespace "gc-6571"
  I0923 08:34:48.893080 22 delete.go:95] Deleting pod "simpletest.rc-xbqf4" in namespace "gc-6571"
  I0923 08:34:48.948953 22 delete.go:95] Deleting pod "simpletest.rc-xq64f" in namespace "gc-6571"
  I0923 08:34:48.988314 22 delete.go:95] Deleting pod "simpletest.rc-z5trv" in namespace "gc-6571"
  I0923 08:34:49.043171 22 delete.go:95] Deleting pod "simpletest.rc-z6nxb" in namespace "gc-6571"
  I0923 08:34:49.091074 22 delete.go:95] Deleting pod "simpletest.rc-zgtm7" in namespace "gc-6571"
  I0923 08:34:49.140136 22 delete.go:95] Deleting pod "simpletest.rc-zm49k" in namespace "gc-6571"
  I0923 08:34:49.194552 22 delete.go:95] Deleting pod "simpletest.rc-znppk" in namespace "gc-6571"
  I0923 08:34:49.238328 22 delete.go:95] Deleting pod "simpletest.rc-znzq7" in namespace "gc-6571"
  I0923 08:34:49.290027 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6571" for this suite. @ 09/23/25 08:34:49.332
â€¢ [41.928 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/23/25 08:34:49.388
  I0923 08:34:49.388658 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/25 08:34:49.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:34:49.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:34:49.407
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/25 08:34:49.433
  E0923 08:34:49.664351      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:50.665086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:51.665496      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:52.666183      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:53.666887      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:54.667062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/23/25 08:34:55.457
  E0923 08:34:55.667958      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:56.668403      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/23/25 08:34:57.47
  E0923 08:34:57.669476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:58.669702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:34:59.670686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:00.670783      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:01.671533      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:02.671692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:03.671763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:04.671933      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:05.672679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:06.673235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:07.673972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:08.674207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/23/25 08:35:09.499
  I0923 08:35:09.503878 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2327" for this suite. @ 09/23/25 08:35:09.506
â€¢ [20.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/23/25 08:35:09.511
  I0923 08:35:09.511738 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:35:09.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:09.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:09.53
  STEP: Setting up server cert @ 09/23/25 08:35:09.546
  E0923 08:35:09.681573      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:35:09.864
  STEP: Deploying the webhook pod @ 09/23/25 08:35:09.869
  STEP: Wait for the deployment to be ready @ 09/23/25 08:35:09.88
  I0923 08:35:09.886753 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:35:10.682650      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:11.682953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:35:11.894
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:35:11.911
  E0923 08:35:12.683065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:35:12.911306 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/23/25 08:35:12.915
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/23/25 08:35:12.931
  STEP: Creating a dummy validating-webhook-configuration object @ 09/23/25 08:35:12.944
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/23/25 08:35:12.951
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/23/25 08:35:12.955
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/23/25 08:35:12.964
  I0923 08:35:13.031308 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9701" for this suite. @ 09/23/25 08:35:13.035
  STEP: Destroying namespace "webhook-markers-4689" for this suite. @ 09/23/25 08:35:13.039
â€¢ [3.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/23/25 08:35:13.044
  I0923 08:35:13.044127 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 08:35:13.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:13.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:13.057
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/23/25 08:35:13.073
  E0923 08:35:13.683195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:14.683832      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:15.684842      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:16.684889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:35:17.092
  I0923 08:35:17.094149 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-4b567da5-09c3-46de-b161-dabd07f30b78 container test-container: <nil>
  STEP: delete the pod @ 09/23/25 08:35:17.098
  I0923 08:35:17.112969 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8333" for this suite. @ 09/23/25 08:35:17.115
â€¢ [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/23/25 08:35:17.125
  I0923 08:35:17.125028 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:35:17.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:17.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:17.138
  STEP: Setting up server cert @ 09/23/25 08:35:17.156
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:35:17.454
  STEP: Deploying the webhook pod @ 09/23/25 08:35:17.46
  STEP: Wait for the deployment to be ready @ 09/23/25 08:35:17.47
  I0923 08:35:17.478617 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:35:17.685926      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:18.686063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:35:19.486
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:35:19.509
  E0923 08:35:19.686163      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:35:20.509973 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/23/25 08:35:20.575
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/25 08:35:20.616
  E0923 08:35:20.686865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 09/23/25 08:35:20.732
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/25 08:35:20.777
  I0923 08:35:20.832017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3344" for this suite. @ 09/23/25 08:35:20.835
  STEP: Destroying namespace "webhook-markers-9305" for this suite. @ 09/23/25 08:35:20.844
â€¢ [3.725 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/23/25 08:35:20.85
  I0923 08:35:20.850426 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 08:35:20.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:20.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:20.861
  STEP: Given a ReplicationController is created @ 09/23/25 08:35:20.864
  STEP: When the matched label of one of its pods change @ 09/23/25 08:35:20.868
  I0923 08:35:20.872810 22 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0923 08:35:21.687874      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:22.688145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:23.688400      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:24.688551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:25.688672      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:35:25.877510 22 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/23/25 08:35:25.886
  E0923 08:35:26.688753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:35:26.891475 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2481" for this suite. @ 09/23/25 08:35:26.899
â€¢ [6.054 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/23/25 08:35:26.904
  I0923 08:35:26.904630 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:35:26.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:26.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:26.916
  STEP: Setting up server cert @ 09/23/25 08:35:26.931
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:35:27.195
  STEP: Deploying the webhook pod @ 09/23/25 08:35:27.2
  STEP: Wait for the deployment to be ready @ 09/23/25 08:35:27.211
  I0923 08:35:27.218072 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:35:27.689004      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:28.689257      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:35:29.225
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:35:29.243
  E0923 08:35:29.690127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:35:30.244707 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/23/25 08:35:30.25
  STEP: create a pod that should be denied by the webhook @ 09/23/25 08:35:30.266
  STEP: create a pod that causes the webhook to hang @ 09/23/25 08:35:30.278
  E0923 08:35:30.691115      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:31.691274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:32.691470      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:33.691722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:34.691966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:35.692177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:36.692444      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:37.692710      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:38.692962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:39.693230      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/23/25 08:35:40.284
  STEP: create a configmap that should be admitted by the webhook @ 09/23/25 08:35:40.297
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/23/25 08:35:40.308
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/23/25 08:35:40.313
  STEP: create a namespace that bypass the webhook @ 09/23/25 08:35:40.317
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/23/25 08:35:40.325
  I0923 08:35:40.405258 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2704" for this suite. @ 09/23/25 08:35:40.411
  STEP: Destroying namespace "webhook-markers-4718" for this suite. @ 09/23/25 08:35:40.42
  STEP: Destroying namespace "exempted-namespace-2236" for this suite. @ 09/23/25 08:35:40.425
â€¢ [13.526 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/23/25 08:35:40.431
  I0923 08:35:40.431104 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:35:40.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:35:40.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:35:40.445
  E0923 08:35:40.694297      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:41.694661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:42.694644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:43.694723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:44.695015      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:45.695294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:46.695853      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:47.696057      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:48.696568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:49.696852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:50.697888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:51.698935      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:52.699776      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:53.699937      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:54.700463      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:55.700919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:56.701830      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:57.702288      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:58.702742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:35:59.702980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:00.703513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:01.704362      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:36:02.489813 22 container_probe.go:92] Container started at 2025-09-23 08:35:41 +0000 UTC, pod became ready at 2025-09-23 08:36:02 +0000 UTC
  I0923 08:36:02.490034 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3396" for this suite. @ 09/23/25 08:36:02.492
â€¢ [22.066 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/23/25 08:36:02.497
  I0923 08:36:02.497236 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:36:02.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:02.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:02.514
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:36:02.516
  E0923 08:36:02.704983      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:03.705096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:04.705930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:05.706077      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:36:06.536
  I0923 08:36:06.538570 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod downwardapi-volume-13dec5f7-980c-452b-bbd5-598e5e86c05f container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:36:06.542
  I0923 08:36:06.555242 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7568" for this suite. @ 09/23/25 08:36:06.557
â€¢ [4.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/23/25 08:36:06.562
  I0923 08:36:06.562747 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:36:06.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:06.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:06.578
  STEP: Setting up server cert @ 09/23/25 08:36:06.595
  E0923 08:36:06.706182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:36:07.217
  STEP: Deploying the webhook pod @ 09/23/25 08:36:07.223
  STEP: Wait for the deployment to be ready @ 09/23/25 08:36:07.235
  I0923 08:36:07.240912 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:36:07.706987      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:08.707298      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:36:09.248
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:36:09.262
  E0923 08:36:09.707391      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:36:10.262608 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/23/25 08:36:10.267
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/23/25 08:36:10.284
  STEP: Creating a configMap that should not be mutated @ 09/23/25 08:36:10.291
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/23/25 08:36:10.303
  STEP: Creating a configMap that should be mutated @ 09/23/25 08:36:10.31
  I0923 08:36:10.393170 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1825" for this suite. @ 09/23/25 08:36:10.396
  STEP: Destroying namespace "webhook-markers-3739" for this suite. @ 09/23/25 08:36:10.405
â€¢ [3.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/23/25 08:36:10.412
  I0923 08:36:10.412269 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:36:10.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:10.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:10.426
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:36:10.428
  E0923 08:36:10.707562      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:11.707685      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:12.707808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:13.708020      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:36:14.446
  I0923 08:36:14.448067 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-f14b06a8-ae37-487f-b13c-cb53db95303e container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:36:14.452
  I0923 08:36:14.465307 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-276" for this suite. @ 09/23/25 08:36:14.467
â€¢ [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 09/23/25 08:36:14.474
  I0923 08:36:14.474867 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename statefulset @ 09/23/25 08:36:14.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:14.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:14.496
  STEP: Creating service test in namespace statefulset-4684 @ 09/23/25 08:36:14.498
  I0923 08:36:14.532540 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E0923 08:36:14.708979      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:15.709235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:16.710053      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:17.710242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:18.710475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:19.710559      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:20.710748      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:21.710953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:22.711089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:23.711305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:36:24.531453 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/23/25 08:36:24.534
  I0923 08:36:24.553985 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:36:24.554030 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0923 08:36:24.712275      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:25.712419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:26.712690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:27.712805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:28.712983      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:29.713119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:30.713297      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:31.713562      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:32.713903      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:33.713987      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:36:34.547828 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0923 08:36:34.547875 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/23/25 08:36:34.551
  STEP: Delete all of the StatefulSets @ 09/23/25 08:36:34.553
  STEP: Verify that StatefulSets have been deleted @ 09/23/25 08:36:34.558
  I0923 08:36:34.560045 22 statefulset.go:138] Deleting all statefulset in ns statefulset-4684
  I0923 08:36:34.570190 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4684" for this suite. @ 09/23/25 08:36:34.583
â€¢ [20.126 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/23/25 08:36:34.6
  I0923 08:36:34.600889 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:36:34.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:34.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:34.624
  I0923 08:36:34.628600 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1068" for this suite. @ 09/23/25 08:36:34.686
â€¢ [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 09/23/25 08:36:34.692
  I0923 08:36:34.692575 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:36:34.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:34.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:34.71
  E0923 08:36:34.714374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating an Endpoint @ 09/23/25 08:36:34.714
  STEP: waiting for available Endpoint @ 09/23/25 08:36:34.719
  STEP: listing all Endpoints @ 09/23/25 08:36:34.72
  STEP: updating the Endpoint @ 09/23/25 08:36:34.721
  STEP: fetching the Endpoint @ 09/23/25 08:36:34.741
  STEP: patching the Endpoint @ 09/23/25 08:36:34.744
  STEP: fetching the Endpoint @ 09/23/25 08:36:34.754
  STEP: deleting the Endpoint by Collection @ 09/23/25 08:36:34.756
  STEP: waiting for Endpoint deletion @ 09/23/25 08:36:34.761
  STEP: fetching the Endpoint @ 09/23/25 08:36:34.762
  I0923 08:36:34.765033 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7808" for this suite. @ 09/23/25 08:36:34.783
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/23/25 08:36:34.793
  I0923 08:36:34.793060 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:36:34.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:36:34.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:36:34.805
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a2f27cc0-1505-404f-8c86-b12b2dc70ec4 @ 09/23/25 08:36:34.883
  STEP: Creating the pod @ 09/23/25 08:36:34.888
  E0923 08:36:35.714632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:36.714791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a2f27cc0-1505-404f-8c86-b12b2dc70ec4 @ 09/23/25 08:36:36.912
  STEP: waiting to observe update in volume @ 09/23/25 08:36:36.916
  E0923 08:36:37.715116      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:38.715237      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:39.715860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:40.715989      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:41.716519      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:42.716733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:43.716924      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:44.717140      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:45.717870      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:46.718145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:47.718392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:48.718513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:49.719547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:50.719827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:51.720084      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:52.720229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:53.720418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:54.720644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:55.720810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:56.721050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:57.721163      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:58.721354      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:36:59.721561      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:00.721859      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:01.722011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:02.722150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:03.722336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:04.722475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:05.722706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:06.722875      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:07.723050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:08.723247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:09.723738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:10.723619      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:11.723733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:12.723950      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:13.724170      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:14.724414      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:15.724721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:16.724879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:17.725029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:18.725243      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:19.725359      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:20.725628      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:21.726247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:22.726460      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:23.726727      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:24.726955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:25.727111      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:26.727276      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:27.727912      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:28.728154      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:29.728279      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:30.728488      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:31.728729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:32.728934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:33.729191      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:34.729388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:35.729547      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:36.729715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:37.730284      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:38.730479      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:39.730737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:40.731174      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:41.731493      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:42.731837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:43.732789      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:44.733020      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:45.733083      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:46.733347      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:47.733405      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:48.733638      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:49.733787      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:50.734006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:37:51.134045 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9657" for this suite. @ 09/23/25 08:37:51.138
â€¢ [76.354 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/23/25 08:37:51.147
  I0923 08:37:51.147181 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:37:51.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:37:51.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:37:51.162
  STEP: Creating pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010 @ 09/23/25 08:37:51.164
  E0923 08:37:51.734168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:52.734324      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 08:37:53.176
  I0923 08:37:53.178834 22 container_probe.go:1749] Initial restart count of pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 is 0
  I0923 08:37:53.180389 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:37:53.735175      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:54.735431      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:37:55.183657 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:37:55.735831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:56.736076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:37:57.187208 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:37:57.736959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:37:58.737219      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:37:59.190192 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:37:59.737808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:00.738069      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:01.192865 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:01.738517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:02.738661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:03.195578 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:03.738827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:04.739099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:05.199406 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:05.740132      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:06.740312      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:07.202209 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:07.740492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:08.740670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:09.205850 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:09.741630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:10.741763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:11.208871 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:11.742614      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:12.742893      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:13.211956 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:13.743608      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:14.743871      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:15.215148 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:15.744750      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:16.744993      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:17.217823 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:17.745416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:18.745559      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:19.220344 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:19.745958      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:20.746189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:21.223242 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:21.746983      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:22.747233      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:23.226334 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:23.748116      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:24.748243      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:25.229626 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:25.749214      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:26.749466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:27.232487 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:27.750065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:28.750313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:29.235326 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:29.750995      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:30.751121      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:31.238289 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:31.752236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:32.752503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:33.241506 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:33.753103      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:34.753370      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:35.244414 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:35.754093      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:36.754994      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:37.247993 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:37.755513      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:38.755667      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:39.250736 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:39.756337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:40.756566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:41.253848 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:41.757841      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:42.757921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:43.256902 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:43.758480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:44.758667      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:45.259852 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:45.759443      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:46.759686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:47.262630 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:47.760168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:48.760387      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:49.265774 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:49.761445      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:50.761676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:51.269784 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:51.762313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:52.762551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:53.272669 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:53.763329      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:54.763550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:55.275827 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:55.764470      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:56.764657      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:57.278645 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:57.765110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:38:58.765328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:38:59.281296 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:38:59.765480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:00.766534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:01.285196 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:01.766711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:02.766959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:03.290617 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:03.767161      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:04.767410      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:05.293653 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:05.768248      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:06.768459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:07.296447 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:07.768943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:08.769196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:09.299382 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:09.769545      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:10.769673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:11.302948 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:11.770565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:12.770782      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:13.305751 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:13.771222      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:14.771411      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:15.308519 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:15.771886      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:16.772081      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:17.311184 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:17.772378      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:18.773285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:19.314527 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:19.774109      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:20.774335      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:21.317732 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:21.775238      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:22.775450      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:23.320371 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:23.775868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:24.776099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:25.323461 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:25.777051      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:26.777176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:27.326562 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:27.778117      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:28.778260      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:29.329297 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:29.779008      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:30.779264      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:31.332889 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:31.779472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:32.779746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:33.335669 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:33.779912      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:34.780173      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:35.338820 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:35.780320      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:36.780531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:37.341668 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:37.781238      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:38.781476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:39.344200 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:39.781730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:40.781956      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:41.348894 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:41.782430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:42.783709      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:43.351566 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:43.783831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:44.784065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:45.356226 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:45.784797      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:46.785024      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:47.358741 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:47.785189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:48.785392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:49.361268 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:49.785501      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:50.785667      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:51.364231 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:51.785758      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:52.786059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:53.366907 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:53.786386      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:54.786619      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:55.369950 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:55.787510      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:56.787817      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:57.372789 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:57.788292      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:39:58.788548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:39:59.375535 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:39:59.789310      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:00.789556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:01.378576 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:01.789735      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:02.789862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:03.382258 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:03.790833      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:04.791249      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:05.385890 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:05.791397      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:06.792480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:07.388751 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:07.793273      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:08.793679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:09.391947 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:09.794469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:10.794703      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:11.395105 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:11.795695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:12.795792      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:13.398023 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:13.796613      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:14.796882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:15.401113 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:15.797627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:16.797964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:17.403693 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:17.798130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:18.798247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:19.406139 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:19.798400      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:20.798698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:21.409148 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:21.799788      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:22.800051      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:23.412154 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:23.800684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:24.800800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:25.415110 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:25.801719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:26.801879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:27.417994 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:27.802629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:28.802763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:29.420562 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:29.803068      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:30.803175      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:31.422865 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:31.803319      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:32.803454      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:33.425797 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:33.804314      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:34.804577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:35.428979 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:35.805664      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:36.805919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:37.431960 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:37.806424      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:38.806742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:39.434673 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:39.807122      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:40.807368      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:41.437540 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:41.808101      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:42.808393      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:43.440480 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:43.809064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:44.809227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:45.443795 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:45.809376      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:46.809634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:47.446764 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:47.810255      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:48.810387      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:49.449734 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:49.811242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:50.811328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:51.452020 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:51.811409      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:52.811686      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:53.454925 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:53.812450      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:54.812729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:55.458187 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:55.813706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:56.814854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:57.461922 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:57.815457      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:40:58.815719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:40:59.464547 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:40:59.816026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:00.816183      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:01.467192 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:01.816705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:02.816897      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:03.470145 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:03.817535      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:04.817773      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:05.473206 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:05.818769      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:06.819006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:07.476333 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:07.819733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:08.819811      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:09.479211 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:09.820229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:10.820265      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:11.481880 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:11.820303      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:12.820537      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:13.484725 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:13.821242      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:14.821534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:15.487905 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:15.822343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:16.822675      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:17.490530 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:17.822812      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:18.823013      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:19.493316 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:19.823795      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:20.823965      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:21.496316 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:21.824976      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:22.825318      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:23.499108 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:23.825490      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:24.825774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:25.502346 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:25.826834      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:26.826995      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:27.505120 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:27.827516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:28.827729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:29.507827 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:29.828365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:30.828628      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:31.512680 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:31.829015      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:32.829262      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:33.515685 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:33.830090      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:34.830260      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:35.518870 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:35.831340      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:36.831627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:37.521553 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:37.831948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:38.832209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:39.524768 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:39.833231      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:40.833380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:41.527338 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:41.833744      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:42.833955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:43.530305 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:43.834757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:44.834964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:45.533434 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:45.835873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:46.835991      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:47.536374 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:47.836888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:48.837174      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:49.539253 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:49.837706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:50.837799      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:41:51.542512 22 container_probe.go:1759] Get pod busybox-e0933640-47e0-4f3c-b04a-4fb53bc39eb0 in namespace container-probe-9010
  E0923 08:41:51.837892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:52.838123      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/23/25 08:41:53.542
  I0923 08:41:53.558404 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9010" for this suite. @ 09/23/25 08:41:53.562
â€¢ [242.419 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/23/25 08:41:53.566
  I0923 08:41:53.566706 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 08:41:53.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:41:53.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:41:53.587
  STEP: Creating a test namespace @ 09/23/25 08:41:53.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:41:53.598
  STEP: Creating a pod in the namespace @ 09/23/25 08:41:53.599
  STEP: Waiting for the pod to have running status @ 09/23/25 08:41:53.607
  E0923 08:41:53.838934      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:54.839058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/23/25 08:41:55.612
  STEP: Waiting for the namespace to be removed. @ 09/23/25 08:41:55.617
  E0923 08:41:55.840136      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:56.840892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:57.841862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:58.842711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:41:59.843313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:00.844269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:01.844844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:02.845778      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:03.846016      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:04.846522      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:05.847232      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/23/25 08:42:06.62
  STEP: Verifying there are no pods in the namespace @ 09/23/25 08:42:06.648
  I0923 08:42:06.651198 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7512" for this suite. @ 09/23/25 08:42:06.654
  STEP: Destroying namespace "nsdeletetest-1868" for this suite. @ 09/23/25 08:42:06.661
  I0923 08:42:06.663513 22 framework.go:370] Namespace nsdeletetest-1868 was already deleted
  STEP: Destroying namespace "nsdeletetest-4053" for this suite. @ 09/23/25 08:42:06.663
â€¢ [13.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/23/25 08:42:06.674
  I0923 08:42:06.674967 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:42:06.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:06.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:06.694
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:42:06.696
  E0923 08:42:06.847722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:07.847985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:08.848630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:09.848877      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:42:10.711
  I0923 08:42:10.713481 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-590a7b11-09e8-4d73-9581-b060f00c2a8a container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:42:10.726
  I0923 08:42:10.739335 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8438" for this suite. @ 09/23/25 08:42:10.741
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/23/25 08:42:10.75
  I0923 08:42:10.750407 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:42:10.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:10.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:10.762
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:42:10.764
  E0923 08:42:10.849847      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:11.850001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:12.850757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:13.850891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:42:14.786
  I0923 08:42:14.787852 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-31fd5504-4129-4430-bbf0-894bd5d09811 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:42:14.791
  I0923 08:42:14.804935 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3828" for this suite. @ 09/23/25 08:42:14.807
â€¢ [4.061 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/23/25 08:42:14.811
  I0923 08:42:14.812028 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename init-container @ 09/23/25 08:42:14.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:14.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:14.827
  STEP: creating the pod @ 09/23/25 08:42:14.829
  I0923 08:42:14.829118 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0923 08:42:14.851716      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:15.851860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:16.852893      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:17.853865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:18.405553 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5323" for this suite. @ 09/23/25 08:42:18.408
â€¢ [3.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/23/25 08:42:18.415
  I0923 08:42:18.415725 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:42:18.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:18.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:18.427
  STEP: Creating pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759 @ 09/23/25 08:42:18.429
  E0923 08:42:18.854632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:19.854763      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 08:42:20.448
  I0923 08:42:20.450375 22 container_probe.go:1749] Initial restart count of pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c is 0
  I0923 08:42:20.451988 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:20.855570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:21.856055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:22.454561 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:22.856839      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:23.857006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:24.457949 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:24.859289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:25.859532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:26.460882 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:26.860437      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:27.860712      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:28.463572 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:28.860791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:29.860982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:30.467159 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:30.861774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:31.862064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:32.470263 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:32.862873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:33.862955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:34.475291 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:34.863771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:35.863826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:36.478941 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:36.864404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:37.864498      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:38.481986 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  E0923 08:42:38.865603      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:39.865752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:40.484949 22 container_probe.go:1759] Get pod liveness-323fd071-5858-419a-b492-6f3de2e6a45c in namespace container-probe-7759
  I0923 08:42:40.484992 22 container_probe.go:1763] Restart count of pod container-probe-7759/liveness-323fd071-5858-419a-b492-6f3de2e6a45c is now 1 (20.034580895s elapsed)
  STEP: deleting the pod @ 09/23/25 08:42:40.485
  I0923 08:42:40.500276 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7759" for this suite. @ 09/23/25 08:42:40.502
â€¢ [22.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/23/25 08:42:40.511
  I0923 08:42:40.511534 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/25 08:42:40.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:40.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:40.525
  STEP: Performing setup for networking test in namespace pod-network-test-2119 @ 09/23/25 08:42:40.527
  STEP: creating a selector @ 09/23/25 08:42:40.527
  STEP: Creating the service pods in kubernetes @ 09/23/25 08:42:40.527
  I0923 08:42:40.527859 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0923 08:42:40.865892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:41.866131      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:42.866849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:43.867130      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:44.867927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:45.868204      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:46.868886      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:47.869138      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:48.870259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:49.869892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:50.870454      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:51.870715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/23/25 08:42:52.651
  E0923 08:42:52.871661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:53.871858      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:42:54.665673 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0923 08:42:54.665713 22 networking.go:42] Breadth first check of 10.244.1.188 on host 172.19.1.4...
  I0923 08:42:54.667402 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.189:9080/dial?request=hostname&protocol=http&host=10.244.1.188&port=8083&tries=1'] Namespace:pod-network-test-2119 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:42:54.667448 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:42:54.667508 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2119/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.188%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0923 08:42:54.719224 22 utils.go:356] Waiting for responses: map[]
  I0923 08:42:54.719288 22 utils.go:360] reached 10.244.1.188 after 0/1 tries
  I0923 08:42:54.719304 22 networking.go:42] Breadth first check of 10.244.2.41 on host 172.19.1.5...
  I0923 08:42:54.721170 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.189:9080/dial?request=hostname&protocol=http&host=10.244.2.41&port=8083&tries=1'] Namespace:pod-network-test-2119 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:42:54.721212 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:42:54.721274 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2119/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.41%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0923 08:42:54.773430 22 utils.go:356] Waiting for responses: map[]
  I0923 08:42:54.773476 22 utils.go:360] reached 10.244.2.41 after 0/1 tries
  I0923 08:42:54.773492 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0923 08:42:54.773635 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2119" for this suite. @ 09/23/25 08:42:54.778
â€¢ [14.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/23/25 08:42:54.784
  I0923 08:42:54.784116 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption @ 09/23/25 08:42:54.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:54.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:54.796
  STEP: creating the pdb @ 09/23/25 08:42:54.802
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:42:54.806
  E0923 08:42:54.872287      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:55.872419      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/23/25 08:42:56.809
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:42:56.816
  STEP: patching the pdb @ 09/23/25 08:42:56.82
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:42:56.829
  E0923 08:42:56.872996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:57.873219      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/23/25 08:42:58.837
  I0923 08:42:58.839095 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3794" for this suite. @ 09/23/25 08:42:58.841
â€¢ [4.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/23/25 08:42:58.846
  I0923 08:42:58.846997 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:42:58.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:42:58.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:42:58.861
  STEP: Creating configMap with name configmap-test-volume-map-22b835be-19c0-4018-8c1b-9f691d0b6cae @ 09/23/25 08:42:58.863
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:42:58.867
  E0923 08:42:58.873461      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:42:59.873677      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:00.873773      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:01.874576      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:02.874752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:43:02.883
  I0923 08:43:02.885896 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-configmaps-58b6f95a-f6f9-4c53-93af-00ec4ab67a8e container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:43:02.897
  I0923 08:43:02.912053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9401" for this suite. @ 09/23/25 08:43:02.914
â€¢ [4.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/23/25 08:43:02.919
  I0923 08:43:02.919054 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename emptydir @ 09/23/25 08:43:02.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:02.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:02.932
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/23/25 08:43:02.934
  E0923 08:43:03.874988      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:04.875261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:05.875789      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:06.876023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:43:06.95
  I0923 08:43:06.952451 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-b482651a-8277-487d-9e78-405eb26f0daa container test-container: <nil>
  STEP: delete the pod @ 09/23/25 08:43:06.957
  I0923 08:43:06.990174 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8420" for this suite. @ 09/23/25 08:43:06.992
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 09/23/25 08:43:06.997
  I0923 08:43:06.997456 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:43:06.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:07.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:07.011
  I0923 08:43:07.027054 22 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0923 08:43:07.027092 22 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0923 08:43:07.033487 22 service_accounts.go:282] created pod pod-service-account-mountsa
  I0923 08:43:07.033529 22 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0923 08:43:07.038841 22 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0923 08:43:07.038877 22 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0923 08:43:07.048538 22 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0923 08:43:07.048614 22 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0923 08:43:07.057959 22 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0923 08:43:07.057996 22 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0923 08:43:07.069158 22 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0923 08:43:07.069193 22 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0923 08:43:07.076171 22 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0923 08:43:07.076220 22 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0923 08:43:07.089552 22 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0923 08:43:07.089616 22 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0923 08:43:07.106043 22 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0923 08:43:07.106179 22 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0923 08:43:07.106967 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6540" for this suite. @ 09/23/25 08:43:07.123
â€¢ [0.138 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/23/25 08:43:07.135
  I0923 08:43:07.135533 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/23/25 08:43:07.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:07.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:07.154
  I0923 08:43:07.163764 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7902" for this suite. @ 09/23/25 08:43:07.227
â€¢ [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/23/25 08:43:07.236
  I0923 08:43:07.236553 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/25 08:43:07.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:07.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:07.252
  I0923 08:43:07.284083 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-763" for this suite. @ 09/23/25 08:43:07.323
â€¢ [0.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/23/25 08:43:07.333
  I0923 08:43:07.333133 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:43:07.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:07.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:07.349
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:43:07.353
  E0923 08:43:07.876141      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:08.876357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:09.876785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:10.876980      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:43:11.382
  I0923 08:43:11.384065 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-3f829557-bb2b-45fa-b8aa-27f503e149ed container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:43:11.387
  I0923 08:43:11.412030 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3457" for this suite. @ 09/23/25 08:43:11.414
â€¢ [4.086 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/23/25 08:43:11.419
  I0923 08:43:11.419290 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename certificates @ 09/23/25 08:43:11.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:11.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:11.433
  E0923 08:43:11.877734      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/23/25 08:43:11.943
  STEP: getting /apis/certificates.k8s.io @ 09/23/25 08:43:11.946
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/23/25 08:43:11.947
  STEP: creating @ 09/23/25 08:43:11.947
  STEP: getting @ 09/23/25 08:43:11.963
  STEP: listing @ 09/23/25 08:43:11.965
  STEP: watching @ 09/23/25 08:43:11.967
  I0923 08:43:11.967084 22 certificates.go:316] starting watch
  STEP: patching @ 09/23/25 08:43:11.967
  STEP: updating @ 09/23/25 08:43:11.973
  I0923 08:43:11.981315 22 certificates.go:332] waiting for watch events with expected annotations
  I0923 08:43:11.981376 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/23/25 08:43:11.981
  STEP: patching /approval @ 09/23/25 08:43:11.984
  STEP: updating /approval @ 09/23/25 08:43:11.99
  STEP: getting /status @ 09/23/25 08:43:11.999
  STEP: patching /status @ 09/23/25 08:43:12.002
  STEP: updating /status @ 09/23/25 08:43:12.014
  STEP: deleting @ 09/23/25 08:43:12.021
  STEP: deleting a collection @ 09/23/25 08:43:12.032
  I0923 08:43:12.041741 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7574" for this suite. @ 09/23/25 08:43:12.044
â€¢ [0.630 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/23/25 08:43:12.049
  I0923 08:43:12.049996 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:43:12.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:12.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:12.067
  STEP: Creating projection with secret that has name projected-secret-test-9d3a4a90-9c94-40ef-92c8-224cc5e9fadf @ 09/23/25 08:43:12.069
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:43:12.073
  E0923 08:43:12.877854      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:13.878089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:14.878271      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:15.878882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:43:16.091
  I0923 08:43:16.093698 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-565ff318-27ab-4715-a006-c7b3b01727a1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:43:16.097
  I0923 08:43:16.111938 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4195" for this suite. @ 09/23/25 08:43:16.114
â€¢ [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 09/23/25 08:43:16.12
  I0923 08:43:16.120831 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/25 08:43:16.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:43:16.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:43:16.132
  I0923 08:43:16.145576 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0923 08:43:16.879096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:17.879346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:18.879465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:19.879628      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:20.879793      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:21.880028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:22.880201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:23.880315      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:24.880483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:25.880784      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:26.881774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:27.882051      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:28.883071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:29.883351      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:30.883484      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:31.883759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:32.884018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:33.884162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:34.884411      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:35.884682      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:36.884869      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:37.884971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:38.886038      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:39.886849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:40.887154      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:41.887395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:42.887471      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:43.887656      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:44.887888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:45.888035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:46.889123      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:47.889263      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:48.890204      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:49.890478      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:50.891502      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:51.891684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:52.892663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:53.892889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:54.893049      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:55.893187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:56.894244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:57.894490      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:58.894626      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:43:59.894769      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:00.895689      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:01.895906      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:02.896073      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:03.896207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:04.896685      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:05.896949      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:06.897150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:07.897265      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:08.897451      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:09.897607      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:10.897793      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:11.897923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:12.898065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:13.898302      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:14.898817      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:15.899027      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:44:16.152916 22 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/23/25 08:44:16.155
  STEP: Adding a custom resource @ 09/23/25 08:44:16.155
  I0923 08:44:16.174038 22 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0923 08:44:16.180523 22 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/23/25 08:44:16.18
  I0923 08:44:16.207602 22 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0923 08:44:16.221694 22 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/23/25 08:44:16.221
  E0923 08:44:16.899855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:17.900236      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/23/25 08:44:18.234
  E0923 08:44:18.900406      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:19.900725      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:20.901642      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:21.901843      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/23/25 08:44:22.296
  STEP: Removing a custom resource @ 09/23/25 08:44:22.309
  I0923 08:44:22.321526 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-615" for this suite. @ 09/23/25 08:44:22.324
â€¢ [66.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/23/25 08:44:22.328
  I0923 08:44:22.328919 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/25 08:44:22.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:22.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:22.341
  I0923 08:44:22.343964 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:44:22.901992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:23.902266      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:24.903326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:44:25.420187 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8858" for this suite. @ 09/23/25 08:44:25.424
â€¢ [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/23/25 08:44:25.432
  I0923 08:44:25.432474 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/25 08:44:25.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:25.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:25.449
  STEP: Performing setup for networking test in namespace pod-network-test-5884 @ 09/23/25 08:44:25.451
  STEP: creating a selector @ 09/23/25 08:44:25.451
  STEP: Creating the service pods in kubernetes @ 09/23/25 08:44:25.451
  I0923 08:44:25.451907 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0923 08:44:25.903863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:26.904152      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:27.904399      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:28.904518      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:29.904724      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:30.904994      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:31.905888      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:32.905999      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:33.906964      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:34.907208      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:35.908052      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:36.908227      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:37.908397      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:38.908525      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/23/25 08:44:39.59
  E0923 08:44:39.908622      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:40.908873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:44:41.623688 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0923 08:44:41.623729 22 utils.go:496] Going to poll 10.244.1.198 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0923 08:44:41.625214 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.198 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5884 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:44:41.625258 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:44:41.625318 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5884/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.198+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0923 08:44:41.909033      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:44:42.682914 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0923 08:44:42.682970 22 utils.go:496] Going to poll 10.244.2.47 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0923 08:44:42.685305 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.47 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5884 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:44:42.685340 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:44:42.685409 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5884/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.47+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0923 08:44:42.909523      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:44:43.729059 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0923 08:44:43.729213 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5884" for this suite. @ 09/23/25 08:44:43.732
â€¢ [18.307 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/23/25 08:44:43.739
  I0923 08:44:43.739359 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption @ 09/23/25 08:44:43.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:43.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:43.751
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:44:43.757
  E0923 08:44:43.910456      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:44.910644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/23/25 08:44:45.76
  STEP: Waiting for all pods to be running @ 09/23/25 08:44:45.769
  I0923 08:44:45.776193 22 disruption.go:691] running pods: 0 < 1
  E0923 08:44:45.911421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:46.911684      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/23/25 08:44:47.772
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:44:47.781
  STEP: Patching PodDisruptionBudget status @ 09/23/25 08:44:47.789
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:44:47.796
  I0923 08:44:47.800325 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6289" for this suite. @ 09/23/25 08:44:47.802
â€¢ [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/23/25 08:44:47.808
  I0923 08:44:47.808232 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:44:47.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:47.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:47.837
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:44:47.839
  E0923 08:44:47.912374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:48.913288      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:44:49.851
  I0923 08:44:49.853371 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-e722ab5b-d155-4150-9fcf-e4277139b30a container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:44:49.864
  I0923 08:44:49.876627 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1921" for this suite. @ 09/23/25 08:44:49.878
â€¢ [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/23/25 08:44:49.888
  I0923 08:44:49.888105 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 08:44:49.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:49.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:49.903
  STEP: Create a pod @ 09/23/25 08:44:49.905
  E0923 08:44:49.914050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:50.914289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:51.914502      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/23/25 08:44:51.92
  I0923 08:44:51.926616 22 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0923 08:44:51.926799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-507" for this suite. @ 09/23/25 08:44:51.929
â€¢ [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/23/25 08:44:51.936
  I0923 08:44:51.936630 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename job @ 09/23/25 08:44:51.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:44:51.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:44:51.95
  STEP: Creating Indexed job @ 09/23/25 08:44:51.951
  STEP: Ensuring job reaches completions @ 09/23/25 08:44:51.958
  E0923 08:44:52.914664      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:53.914757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:54.914972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:55.915055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:56.915245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:57.915366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:58.915503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:44:59.915652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:00.915838      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:01.916035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/23/25 08:45:01.986
  I0923 08:45:01.989305 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9174" for this suite. @ 09/23/25 08:45:01.991
â€¢ [10.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/23/25 08:45:01.997
  I0923 08:45:01.997441 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:45:01.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:02.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:02.013
  STEP: Creating projection with secret that has name projected-secret-test-e10cef45-d873-4804-8781-9a834187177d @ 09/23/25 08:45:02.015
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:45:02.019
  E0923 08:45:02.916239      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:03.916376      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:04.916555      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:05.916844      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:45:06.04
  I0923 08:45:06.042314 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-02f34d01-169a-455c-9848-ecd8a075716f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:45:06.046
  I0923 08:45:06.060494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7377" for this suite. @ 09/23/25 08:45:06.063
â€¢ [4.074 seconds]
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 09/23/25 08:45:06.071
  I0923 08:45:06.071745 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/25 08:45:06.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:06.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:06.087
  STEP: Creating a Serviceaccount "e2e-sa-ml8sw" in namespace "svcaccounts-3518" @ 09/23/25 08:45:06.089
  STEP: Creating a ServiceaccountToken "e2e-sa-ml8sw" in namespace "svcaccounts-3518" @ 09/23/25 08:45:06.092
  STEP: Creating a TokenReview for "e2e-sa-ml8sw" in namespace "svcaccounts-3518" @ 09/23/25 08:45:06.096
  I0923 08:45:06.098308 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3518" for this suite. @ 09/23/25 08:45:06.163
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/23/25 08:45:06.169
  I0923 08:45:06.169429 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:45:06.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:06.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:06.183
  STEP: Setting up server cert @ 09/23/25 08:45:06.198
  E0923 08:45:06.917785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:45:06.981
  STEP: Deploying the webhook pod @ 09/23/25 08:45:06.987
  STEP: Wait for the deployment to be ready @ 09/23/25 08:45:06.997
  I0923 08:45:07.004490 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0923 08:45:07.918570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:08.918750      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:45:09.011
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:45:09.023
  E0923 08:45:09.919061      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:10.024210 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/23/25 08:45:10.03
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/23/25 08:45:10.031
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/23/25 08:45:10.031
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/23/25 08:45:10.031
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/23/25 08:45:10.032
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/23/25 08:45:10.032
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/23/25 08:45:10.033
  I0923 08:45:10.079002 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7094" for this suite. @ 09/23/25 08:45:10.082
  STEP: Destroying namespace "webhook-markers-6388" for this suite. @ 09/23/25 08:45:10.089
â€¢ [3.926 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/23/25 08:45:10.095
  I0923 08:45:10.095949 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename cronjob @ 09/23/25 08:45:10.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:10.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:10.111
  STEP: Creating a cronjob @ 09/23/25 08:45:10.112
  STEP: creating @ 09/23/25 08:45:10.113
  STEP: getting @ 09/23/25 08:45:10.117
  STEP: listing @ 09/23/25 08:45:10.119
  STEP: watching @ 09/23/25 08:45:10.12
  I0923 08:45:10.120729 22 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/23/25 08:45:10.121
  STEP: cluster-wide watching @ 09/23/25 08:45:10.122
  I0923 08:45:10.122951 22 cronjob.go:407] starting watch
  STEP: patching @ 09/23/25 08:45:10.123
  STEP: updating @ 09/23/25 08:45:10.13
  I0923 08:45:10.136056 22 cronjob.go:431] waiting for watch events with expected annotations
  I0923 08:45:10.136112 22 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/23/25 08:45:10.136
  STEP: updating /status @ 09/23/25 08:45:10.142
  STEP: get /status @ 09/23/25 08:45:10.146
  STEP: deleting @ 09/23/25 08:45:10.148
  STEP: deleting a collection @ 09/23/25 08:45:10.158
  I0923 08:45:10.164194 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3847" for this suite. @ 09/23/25 08:45:10.183
â€¢ [0.093 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/23/25 08:45:10.188
  I0923 08:45:10.188533 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:45:10.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:10.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:10.201
  STEP: Creating a pod to test downward API volume plugin @ 09/23/25 08:45:10.221
  E0923 08:45:10.920150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:11.920384      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:12.920524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:13.920781      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:45:14.238
  I0923 08:45:14.240067 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod downwardapi-volume-49a499c6-1593-4679-960c-78fb6258a878 container client-container: <nil>
  STEP: delete the pod @ 09/23/25 08:45:14.244
  I0923 08:45:14.256275 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4883" for this suite. @ 09/23/25 08:45:14.258
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 09/23/25 08:45:14.265
  I0923 08:45:14.265753 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:45:14.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:14.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:14.278
  STEP: validating cluster-info @ 09/23/25 08:45:14.281
  I0923 08:45:14.281218 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-4395 cluster-info'
  I0923 08:45:14.348166 22 builder.go:146] stderr: ""
  I0923 08:45:14.348225 22 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0923 08:45:14.348498 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4395" for this suite. @ 09/23/25 08:45:14.358
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/23/25 08:45:14.365
  I0923 08:45:14.365674 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename conformance-tests @ 09/23/25 08:45:14.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:14.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:14.379
  STEP: Getting node addresses @ 09/23/25 08:45:14.395
  I0923 08:45:14.395318 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0923 08:45:14.459970 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-377" for this suite. @ 09/23/25 08:45:14.462
â€¢ [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/23/25 08:45:14.467
  I0923 08:45:14.467749 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption @ 09/23/25 08:45:14.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:14.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:14.482
  STEP: Creating a kubernetes client @ 09/23/25 08:45:14.484
  I0923 08:45:14.484805 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename disruption-2 @ 09/23/25 08:45:14.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:14.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:14.496
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:45:14.52
  E0923 08:45:14.921395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:15.921517      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:45:16.528
  E0923 08:45:16.921689      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:17.921946      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/23/25 08:45:18.535
  E0923 08:45:18.922499      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:19.922792      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/23/25 08:45:20.538
  STEP: listing a collection of PDBs in namespace disruption-9359 @ 09/23/25 08:45:20.541
  STEP: deleting a collection of PDBs @ 09/23/25 08:45:20.542
  STEP: Waiting for the PDB collection to be deleted @ 09/23/25 08:45:20.55
  I0923 08:45:20.552455 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1851" for this suite. @ 09/23/25 08:45:20.554
  I0923 08:45:20.558952 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9359" for this suite. @ 09/23/25 08:45:20.656
â€¢ [6.194 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/23/25 08:45:20.661
  I0923 08:45:20.661248 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:45:20.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:20.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:20.676
  STEP: Counting existing ResourceQuota @ 09/23/25 08:45:20.677
  E0923 08:45:20.923247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:21.924176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:22.924420      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:23.925145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:24.925645      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/25 08:45:25.68
  STEP: Ensuring resource quota status is calculated @ 09/23/25 08:45:25.686
  E0923 08:45:25.926012      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:26.926244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:27.689365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6617" for this suite. @ 09/23/25 08:45:27.691
â€¢ [7.036 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/23/25 08:45:27.697
  I0923 08:45:27.697750 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename ingress @ 09/23/25 08:45:27.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:27.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:27.709
  STEP: getting /apis @ 09/23/25 08:45:27.712
  STEP: getting /apis/networking.k8s.io @ 09/23/25 08:45:27.714
  STEP: getting /apis/networking.k8s.iov1 @ 09/23/25 08:45:27.715
  STEP: creating @ 09/23/25 08:45:27.716
  STEP: getting @ 09/23/25 08:45:27.728
  STEP: listing @ 09/23/25 08:45:27.729
  STEP: watching @ 09/23/25 08:45:27.731
  I0923 08:45:27.731434 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/23/25 08:45:27.732
  STEP: cluster-wide watching @ 09/23/25 08:45:27.733
  I0923 08:45:27.733730 22 ingress.go:198] starting watch
  STEP: patching @ 09/23/25 08:45:27.734
  STEP: updating @ 09/23/25 08:45:27.758
  I0923 08:45:27.767017 22 ingress.go:221] waiting for watch events with expected annotations
  I0923 08:45:27.767078 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/23/25 08:45:27.767
  STEP: updating /status @ 09/23/25 08:45:27.772
  STEP: get /status @ 09/23/25 08:45:27.782
  STEP: deleting @ 09/23/25 08:45:27.784
  STEP: deleting a collection @ 09/23/25 08:45:27.791
  I0923 08:45:27.800424 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7921" for this suite. @ 09/23/25 08:45:27.802
â€¢ [0.111 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/23/25 08:45:27.808
  I0923 08:45:27.808736 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:45:27.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:27.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:27.822
  STEP: Creating projection with secret that has name projected-secret-test-map-db9430db-7e1d-4e27-ae06-25e5e72991ac @ 09/23/25 08:45:27.824
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:45:27.83
  E0923 08:45:27.927059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:28.927221      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:29.927506      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:30.927661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:45:31.843
  I0923 08:45:31.845554 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-76469c16-f74e-4912-9233-8873fc80710a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:45:31.853
  I0923 08:45:31.868338 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2753" for this suite. @ 09/23/25 08:45:31.87
â€¢ [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/23/25 08:45:31.877
  I0923 08:45:31.877953 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename replication-controller @ 09/23/25 08:45:31.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:31.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:31.892
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/23/25 08:45:31.894
  E0923 08:45:31.927992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:32.928268      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/23/25 08:45:33.908
  STEP: Then the orphan pod is adopted @ 09/23/25 08:45:33.912
  E0923 08:45:33.929225      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:34.918893 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5576" for this suite. @ 09/23/25 08:45:34.921
â€¢ [3.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/23/25 08:45:34.926
  I0923 08:45:34.926477 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:45:34.927
  E0923 08:45:34.930098      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:34.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:34.937
  STEP: Creating secret with name secret-test-8e236052-c8af-4c76-9ba5-0f4ca0334420 @ 09/23/25 08:45:34.94
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:45:34.944
  E0923 08:45:35.930336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:36.930480      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:45:36.963
  I0923 08:45:36.965905 22 output.go:207] Trying to get logs from node ckp-cncf-w2 pod pod-secrets-be8f6110-d9d2-4b03-9e5f-858ebb5bd9eb container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:45:36.976
  I0923 08:45:36.990098 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8511" for this suite. @ 09/23/25 08:45:36.992
â€¢ [2.071 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/23/25 08:45:36.997
  I0923 08:45:36.997260 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename proxy @ 09/23/25 08:45:36.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:37.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:37.061
  STEP: starting an echo server on multiple ports @ 09/23/25 08:45:37.074
  STEP: creating replication controller proxy-service-xw9sj in namespace proxy-7976 @ 09/23/25 08:45:37.074
  I0923 08:45:37.085088      22 runners.go:193] Created replication controller with name: proxy-service-xw9sj, namespace: proxy-7976, replica count: 1
  E0923 08:45:37.931388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:38.136685      22 runners.go:193] proxy-service-xw9sj Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0923 08:45:38.931467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:39.137734      22 runners.go:193] proxy-service-xw9sj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:45:39.140264 22 proxy.go:230] setup took 2.076709827s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/23/25 08:45:39.14
  I0923 08:45:39.149870 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 8.916973ms)
  I0923 08:45:39.151806 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 11.439769ms)
  I0923 08:45:39.152294 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 11.767421ms)
  I0923 08:45:39.152298 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 11.5095ms)
  I0923 08:45:39.153108 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 12.187511ms)
  I0923 08:45:39.153108 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 12.349271ms)
  I0923 08:45:39.153983 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 12.920808ms)
  I0923 08:45:39.156120 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 15.111569ms)
  I0923 08:45:39.157331 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 16.779929ms)
  I0923 08:45:39.157369 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 16.478525ms)
  I0923 08:45:39.158477 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 17.832661ms)
  I0923 08:45:39.158486 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 17.806369ms)
  I0923 08:45:39.159218 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 18.354884ms)
  I0923 08:45:39.159507 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 18.672178ms)
  I0923 08:45:39.160502 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 19.529184ms)
  I0923 08:45:39.160502 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 19.471147ms)
  I0923 08:45:39.163401 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 2.824233ms)
  I0923 08:45:39.171725 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 10.561502ms)
  I0923 08:45:39.175230 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 13.7809ms)
  I0923 08:45:39.175295 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 14.451909ms)
  I0923 08:45:39.175294 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 14.040731ms)
  I0923 08:45:39.175319 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 14.013331ms)
  I0923 08:45:39.175328 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 14.428304ms)
  I0923 08:45:39.175344 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 13.995236ms)
  I0923 08:45:39.175349 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 13.948536ms)
  I0923 08:45:39.175362 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 14.652104ms)
  I0923 08:45:39.175384 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 14.436251ms)
  I0923 08:45:39.175384 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 14.601504ms)
  I0923 08:45:39.175407 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 14.400928ms)
  I0923 08:45:39.175416 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 14.209697ms)
  I0923 08:45:39.175444 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 14.382988ms)
  I0923 08:45:39.175521 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 14.417135ms)
  I0923 08:45:39.180975 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 5.410818ms)
  I0923 08:45:39.184752 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 8.792543ms)
  I0923 08:45:39.184937 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.920535ms)
  I0923 08:45:39.185363 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 9.208184ms)
  I0923 08:45:39.185404 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 9.419132ms)
  I0923 08:45:39.185444 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 9.401276ms)
  I0923 08:45:39.185449 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 9.524842ms)
  I0923 08:45:39.185461 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.236788ms)
  I0923 08:45:39.185474 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.616124ms)
  I0923 08:45:39.185483 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 9.367157ms)
  I0923 08:45:39.185800 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 9.5042ms)
  I0923 08:45:39.185813 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.56276ms)
  I0923 08:45:39.186133 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.941304ms)
  I0923 08:45:39.186140 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.814328ms)
  I0923 08:45:39.186443 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 10.36847ms)
  I0923 08:45:39.186449 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.618339ms)
  I0923 08:45:39.190838 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 4.336306ms)
  I0923 08:45:39.194540 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.654544ms)
  I0923 08:45:39.194548 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 7.635366ms)
  I0923 08:45:39.194602 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 7.891917ms)
  I0923 08:45:39.194720 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.017149ms)
  I0923 08:45:39.194896 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.907715ms)
  I0923 08:45:39.194962 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.144057ms)
  I0923 08:45:39.195028 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 8.08312ms)
  I0923 08:45:39.195936 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 9.323044ms)
  I0923 08:45:39.195944 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.099115ms)
  I0923 08:45:39.196037 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 9.475406ms)
  I0923 08:45:39.196302 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.516695ms)
  I0923 08:45:39.196335 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.692387ms)
  I0923 08:45:39.196327 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 9.590592ms)
  I0923 08:45:39.196365 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.347993ms)
  I0923 08:45:39.196496 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.993834ms)
  I0923 08:45:39.203289 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 6.513164ms)
  I0923 08:45:39.203289 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 6.486647ms)
  I0923 08:45:39.203485 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.50416ms)
  I0923 08:45:39.203513 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 6.937673ms)
  I0923 08:45:39.203735 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.099416ms)
  I0923 08:45:39.205115 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 8.443355ms)
  I0923 08:45:39.205170 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.631669ms)
  I0923 08:45:39.205806 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 8.708392ms)
  I0923 08:45:39.205824 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 8.892367ms)
  I0923 08:45:39.205849 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 8.725155ms)
  I0923 08:45:39.205848 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.142633ms)
  I0923 08:45:39.206191 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 9.156561ms)
  I0923 08:45:39.206195 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.131746ms)
  I0923 08:45:39.206461 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 9.462359ms)
  I0923 08:45:39.206807 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.930527ms)
  I0923 08:45:39.209680 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 12.940376ms)
  I0923 08:45:39.223495 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 13.352766ms)
  I0923 08:45:39.223526 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 13.258215ms)
  I0923 08:45:39.223921 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 13.512519ms)
  I0923 08:45:39.224477 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 14.526494ms)
  I0923 08:45:39.224476 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 14.578408ms)
  I0923 08:45:39.225010 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 15.274178ms)
  I0923 08:45:39.225142 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 14.803779ms)
  I0923 08:45:39.225086 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 15.100572ms)
  I0923 08:45:39.225686 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 15.45263ms)
  I0923 08:45:39.225694 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 15.612317ms)
  I0923 08:45:39.225743 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 15.715603ms)
  I0923 08:45:39.226071 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 15.699026ms)
  I0923 08:45:39.226071 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 15.866075ms)
  I0923 08:45:39.226094 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 16.206089ms)
  I0923 08:45:39.226109 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 15.941709ms)
  I0923 08:45:39.226354 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 16.04506ms)
  I0923 08:45:39.230395 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 3.956641ms)
  I0923 08:45:39.233277 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 6.39302ms)
  I0923 08:45:39.234062 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.421896ms)
  I0923 08:45:39.234062 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 7.558083ms)
  I0923 08:45:39.234419 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.744915ms)
  I0923 08:45:39.234473 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 7.907605ms)
  I0923 08:45:39.234496 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 7.654933ms)
  I0923 08:45:39.234518 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.799089ms)
  I0923 08:45:39.234534 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 7.784487ms)
  I0923 08:45:39.235341 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 8.537718ms)
  I0923 08:45:39.236479 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 9.477557ms)
  I0923 08:45:39.236469 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 9.496748ms)
  I0923 08:45:39.236538 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.626422ms)
  I0923 08:45:39.236670 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 9.609585ms)
  I0923 08:45:39.236700 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.760228ms)
  I0923 08:45:39.236763 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 9.732237ms)
  I0923 08:45:39.244814 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 7.926012ms)
  I0923 08:45:39.246455 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 9.545769ms)
  I0923 08:45:39.246475 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 9.209637ms)
  I0923 08:45:39.246494 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 9.535908ms)
  I0923 08:45:39.246515 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.131707ms)
  I0923 08:45:39.246998 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.868344ms)
  I0923 08:45:39.247017 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.720565ms)
  I0923 08:45:39.247198 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 10.197797ms)
  I0923 08:45:39.247240 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 10.18017ms)
  I0923 08:45:39.247266 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 10.093498ms)
  I0923 08:45:39.247814 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 10.607501ms)
  I0923 08:45:39.247878 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 10.781861ms)
  I0923 08:45:39.247900 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 10.666768ms)
  I0923 08:45:39.247962 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 10.935327ms)
  I0923 08:45:39.248050 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.696287ms)
  I0923 08:45:39.247818 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.493345ms)
  I0923 08:45:39.253459 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 4.750818ms)
  I0923 08:45:39.255578 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.180988ms)
  I0923 08:45:39.256555 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 7.70413ms)
  I0923 08:45:39.256956 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 8.134571ms)
  I0923 08:45:39.256975 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.435862ms)
  I0923 08:45:39.256997 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 8.764356ms)
  I0923 08:45:39.257300 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 8.513033ms)
  I0923 08:45:39.257294 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 9.114671ms)
  I0923 08:45:39.257463 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.994624ms)
  I0923 08:45:39.257495 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.071127ms)
  I0923 08:45:39.257474 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.570251ms)
  I0923 08:45:39.257628 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 9.312481ms)
  I0923 08:45:39.257655 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.078998ms)
  I0923 08:45:39.257676 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 8.944817ms)
  I0923 08:45:39.257834 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.335227ms)
  I0923 08:45:39.257849 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.49704ms)
  I0923 08:45:39.262903 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 4.686607ms)
  I0923 08:45:39.264614 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 6.002448ms)
  I0923 08:45:39.265191 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.848393ms)
  I0923 08:45:39.265487 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 7.323867ms)
  I0923 08:45:39.265691 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 6.859469ms)
  I0923 08:45:39.266411 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.597297ms)
  I0923 08:45:39.266768 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 8.458789ms)
  I0923 08:45:39.267311 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 8.092588ms)
  I0923 08:45:39.267313 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.154502ms)
  I0923 08:45:39.267557 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 8.429993ms)
  I0923 08:45:39.268381 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 9.5212ms)
  I0923 08:45:39.268392 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 9.745577ms)
  I0923 08:45:39.268419 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.384904ms)
  I0923 08:45:39.268431 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.354377ms)
  I0923 08:45:39.269232 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 10.522699ms)
  I0923 08:45:39.269230 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 10.041021ms)
  I0923 08:45:39.273872 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 4.52355ms)
  I0923 08:45:39.274957 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 5.320845ms)
  I0923 08:45:39.274964 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 5.51881ms)
  I0923 08:45:39.275369 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 5.863324ms)
  I0923 08:45:39.275369 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 5.893199ms)
  I0923 08:45:39.276903 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 7.514358ms)
  I0923 08:45:39.277014 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 7.716332ms)
  I0923 08:45:39.277068 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.191792ms)
  I0923 08:45:39.277177 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.335919ms)
  I0923 08:45:39.277184 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.419026ms)
  I0923 08:45:39.277203 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 7.501882ms)
  I0923 08:45:39.277208 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 7.53468ms)
  I0923 08:45:39.278181 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 8.642041ms)
  I0923 08:45:39.278528 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 8.794437ms)
  I0923 08:45:39.278529 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.112368ms)
  I0923 08:45:39.278987 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.058309ms)
  I0923 08:45:39.285335 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 5.807018ms)
  I0923 08:45:39.285350 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 5.742231ms)
  I0923 08:45:39.285466 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 6.03698ms)
  I0923 08:45:39.285519 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 6.059362ms)
  I0923 08:45:39.285786 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.735762ms)
  I0923 08:45:39.285802 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 6.127523ms)
  I0923 08:45:39.285821 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.626965ms)
  I0923 08:45:39.285842 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 6.601409ms)
  I0923 08:45:39.285849 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 6.208326ms)
  I0923 08:45:39.285868 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 6.747134ms)
  I0923 08:45:39.287445 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 7.953728ms)
  I0923 08:45:39.287494 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 8.186932ms)
  I0923 08:45:39.287513 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 8.11799ms)
  I0923 08:45:39.287630 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 8.353939ms)
  I0923 08:45:39.287636 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 8.086914ms)
  I0923 08:45:39.287659 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 8.300865ms)
  I0923 08:45:39.292572 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 4.585747ms)
  I0923 08:45:39.292623 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 4.596116ms)
  I0923 08:45:39.292572 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 4.628208ms)
  I0923 08:45:39.295192 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.865022ms)
  I0923 08:45:39.295196 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.475372ms)
  I0923 08:45:39.295237 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.067856ms)
  I0923 08:45:39.295264 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 6.842064ms)
  I0923 08:45:39.295306 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 7.006046ms)
  I0923 08:45:39.295348 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 7.271305ms)
  I0923 08:45:39.295354 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 6.999712ms)
  I0923 08:45:39.295369 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 7.494542ms)
  I0923 08:45:39.297016 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 8.75209ms)
  I0923 08:45:39.297063 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 8.872919ms)
  I0923 08:45:39.297083 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 8.852919ms)
  I0923 08:45:39.297086 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 8.696122ms)
  I0923 08:45:39.297103 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 8.996055ms)
  I0923 08:45:39.301986 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 4.840432ms)
  I0923 08:45:39.302417 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 5.064366ms)
  I0923 08:45:39.305757 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 8.023519ms)
  I0923 08:45:39.306278 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 8.693537ms)
  I0923 08:45:39.308142 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 10.71745ms)
  I0923 08:45:39.308181 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.545617ms)
  I0923 08:45:39.308193 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 10.52854ms)
  I0923 08:45:39.308402 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 11.128112ms)
  I0923 08:45:39.308898 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 11.508105ms)
  I0923 08:45:39.309361 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 11.820576ms)
  I0923 08:45:39.309631 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 12.178968ms)
  I0923 08:45:39.309653 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 12.145569ms)
  I0923 08:45:39.309674 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 12.193874ms)
  I0923 08:45:39.309863 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 12.099933ms)
  I0923 08:45:39.309901 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 12.201235ms)
  I0923 08:45:39.310033 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 12.238959ms)
  I0923 08:45:39.315543 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 5.257716ms)
  I0923 08:45:39.317767 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.684638ms)
  I0923 08:45:39.317767 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.426508ms)
  I0923 08:45:39.319119 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 8.593118ms)
  I0923 08:45:39.319694 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 8.787831ms)
  I0923 08:45:39.319895 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.67397ms)
  I0923 08:45:39.319925 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.104673ms)
  I0923 08:45:39.319952 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.090341ms)
  I0923 08:45:39.319974 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.409051ms)
  I0923 08:45:39.320350 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 9.950471ms)
  I0923 08:45:39.320386 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.727731ms)
  I0923 08:45:39.320405 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.627165ms)
  I0923 08:45:39.320431 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.470539ms)
  I0923 08:45:39.320448 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.002935ms)
  I0923 08:45:39.320601 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.114102ms)
  I0923 08:45:39.320641 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 9.918818ms)
  I0923 08:45:39.325106 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 3.982818ms)
  I0923 08:45:39.325100 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 4.300907ms)
  I0923 08:45:39.325442 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 4.59055ms)
  I0923 08:45:39.329131 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 8.102218ms)
  I0923 08:45:39.329135 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 8.461595ms)
  I0923 08:45:39.329167 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 7.891235ms)
  I0923 08:45:39.329188 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 8.297289ms)
  I0923 08:45:39.329191 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.835661ms)
  I0923 08:45:39.329971 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 8.57558ms)
  I0923 08:45:39.330015 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 8.698381ms)
  I0923 08:45:39.330622 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.650368ms)
  I0923 08:45:39.330754 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 9.530039ms)
  I0923 08:45:39.330827 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.652959ms)
  I0923 08:45:39.331396 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 10.326509ms)
  I0923 08:45:39.331411 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 10.477795ms)
  I0923 08:45:39.331629 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.196132ms)
  I0923 08:45:39.337942 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 6.241129ms)
  I0923 08:45:39.338977 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 6.77336ms)
  I0923 08:45:39.339189 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 7.326494ms)
  I0923 08:45:39.339212 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.318467ms)
  I0923 08:45:39.339358 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 7.668583ms)
  I0923 08:45:39.339378 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.238315ms)
  I0923 08:45:39.339404 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.348164ms)
  I0923 08:45:39.339421 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 7.310906ms)
  I0923 08:45:39.339439 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.2724ms)
  I0923 08:45:39.340369 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.384106ms)
  I0923 08:45:39.340980 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.029573ms)
  I0923 08:45:39.341050 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 9.231191ms)
  I0923 08:45:39.341900 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.882493ms)
  I0923 08:45:39.341931 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.14213ms)
  I0923 08:45:39.341933 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.17586ms)
  I0923 08:45:39.341957 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.879225ms)
  I0923 08:45:39.347394 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 5.339311ms)
  I0923 08:45:39.349216 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.019158ms)
  I0923 08:45:39.349723 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 7.274242ms)
  I0923 08:45:39.351367 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.130372ms)
  I0923 08:45:39.351907 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 9.737267ms)
  I0923 08:45:39.351465 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.811828ms)
  I0923 08:45:39.352136 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 9.400003ms)
  I0923 08:45:39.352182 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 9.653497ms)
  I0923 08:45:39.352563 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 10.453795ms)
  I0923 08:45:39.352648 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.509172ms)
  I0923 08:45:39.353489 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 9.997013ms)
  I0923 08:45:39.353797 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 10.085342ms)
  I0923 08:45:39.354201 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 12.157232ms)
  I0923 08:45:39.354242 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 10.893646ms)
  I0923 08:45:39.354278 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 11.716675ms)
  I0923 08:45:39.354330 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 11.640465ms)
  I0923 08:45:39.360222 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 5.83338ms)
  I0923 08:45:39.360642 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 5.400812ms)
  I0923 08:45:39.360657 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 6.126868ms)
  I0923 08:45:39.362445 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 6.940314ms)
  I0923 08:45:39.365008 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 10.171679ms)
  I0923 08:45:39.365016 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.691843ms)
  I0923 08:45:39.365346 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 10.159717ms)
  I0923 08:45:39.365385 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.811476ms)
  I0923 08:45:39.365414 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 10.376641ms)
  I0923 08:45:39.365430 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.69188ms)
  I0923 08:45:39.365437 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.808041ms)
  I0923 08:45:39.365460 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 9.803297ms)
  I0923 08:45:39.365482 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 10.513393ms)
  I0923 08:45:39.365578 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 9.747064ms)
  I0923 08:45:39.365775 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 10.831541ms)
  I0923 08:45:39.365992 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 11.096901ms)
  I0923 08:45:39.369955 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:162/proxy/: bar (200; 3.91748ms)
  I0923 08:45:39.373726 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:1080/proxy/rewriteme">... (200; 7.141759ms)
  I0923 08:45:39.373758 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:162/proxy/: bar (200; 7.371403ms)
  I0923 08:45:39.373949 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname1/proxy/: tls baz (200; 7.403565ms)
  I0923 08:45:39.375253 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname2/proxy/: bar (200; 8.961763ms)
  I0923 08:45:39.375271 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname1/proxy/: foo (200; 9.079582ms)
  I0923 08:45:39.375398 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:462/proxy/: tls qux (200; 8.960463ms)
  I0923 08:45:39.375428 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6/proxy/rewriteme">test</a> (200; 9.10891ms)
  I0923 08:45:39.375461 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/proxy-service-xw9sj:portname2/proxy/: bar (200; 9.05458ms)
  I0923 08:45:39.375763 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.255042ms)
  I0923 08:45:39.375768 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/https:proxy-service-xw9sj:tlsportname2/proxy/: tls qux (200; 9.571023ms)
  I0923 08:45:39.375785 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:443/proxy/tlsrewritem... (200; 9.405328ms)
  I0923 08:45:39.375810 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/http:proxy-service-xw9sj-266j6:160/proxy/: foo (200; 9.179811ms)
  I0923 08:45:39.375828 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/: <a href="/api/v1/namespaces/proxy-7976/pods/proxy-service-xw9sj-266j6:1080/proxy/rewriteme">test<... (200; 9.349595ms)
  I0923 08:45:39.375852 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/pods/https:proxy-service-xw9sj-266j6:460/proxy/: tls baz (200; 9.193071ms)
  I0923 08:45:39.375873 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7976/services/http:proxy-service-xw9sj:portname1/proxy/: foo (200; 9.618828ms)
  STEP: deleting ReplicationController proxy-service-xw9sj in namespace proxy-7976, will wait for the garbage collector to delete the pods @ 09/23/25 08:45:39.376
  I0923 08:45:39.434184 22 resources.go:139] Deleting ReplicationController proxy-service-xw9sj took: 5.545702ms
  I0923 08:45:39.534638 22 resources.go:163] Terminating ReplicationController proxy-service-xw9sj pods took: 100.453767ms
  E0923 08:45:39.931814      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:40.932841      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:41.933699      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:41.935878 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7976" for this suite. @ 09/23/25 08:45:41.938
â€¢ [4.946 seconds]
------------------------------
S
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/23/25 08:45:41.943
  I0923 08:45:41.943670 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename svc-latency @ 09/23/25 08:45:41.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:41.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:41.955
  I0923 08:45:41.957167 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3276 @ 09/23/25 08:45:41.957
  I0923 08:45:41.964180      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3276, replica count: 1
  E0923 08:45:42.934520      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:43.015697      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:45:43.128997 22 service_latency.go:356] Created: latency-svc-z98hg
  I0923 08:45:43.136408 22 service_latency.go:363] Got endpoints: latency-svc-z98hg [20.011716ms]
  I0923 08:45:43.164614 22 service_latency.go:356] Created: latency-svc-qmcx6
  I0923 08:45:43.168347 22 service_latency.go:363] Got endpoints: latency-svc-qmcx6 [31.679941ms]
  I0923 08:45:43.182528 22 service_latency.go:356] Created: latency-svc-2fhfn
  I0923 08:45:43.194956 22 service_latency.go:363] Got endpoints: latency-svc-2fhfn [57.943958ms]
  I0923 08:45:43.198434 22 service_latency.go:356] Created: latency-svc-khrp6
  I0923 08:45:43.218505 22 service_latency.go:363] Got endpoints: latency-svc-khrp6 [81.578235ms]
  I0923 08:45:43.222434 22 service_latency.go:356] Created: latency-svc-4zsnh
  I0923 08:45:43.230752 22 service_latency.go:363] Got endpoints: latency-svc-4zsnh [93.910197ms]
  I0923 08:45:43.235553 22 service_latency.go:356] Created: latency-svc-x2hwg
  I0923 08:45:43.242045 22 service_latency.go:363] Got endpoints: latency-svc-x2hwg [105.159347ms]
  I0923 08:45:43.245848 22 service_latency.go:356] Created: latency-svc-5r5q9
  I0923 08:45:43.259723 22 service_latency.go:363] Got endpoints: latency-svc-5r5q9 [122.661554ms]
  I0923 08:45:43.266705 22 service_latency.go:356] Created: latency-svc-6zlg7
  I0923 08:45:43.271572 22 service_latency.go:363] Got endpoints: latency-svc-6zlg7 [134.458908ms]
  I0923 08:45:43.275919 22 service_latency.go:356] Created: latency-svc-mpn9w
  I0923 08:45:43.283090 22 service_latency.go:363] Got endpoints: latency-svc-mpn9w [146.121451ms]
  I0923 08:45:43.288660 22 service_latency.go:356] Created: latency-svc-9th4f
  I0923 08:45:43.295244 22 service_latency.go:363] Got endpoints: latency-svc-9th4f [158.08867ms]
  I0923 08:45:43.298642 22 service_latency.go:356] Created: latency-svc-ngjg4
  I0923 08:45:43.307371 22 service_latency.go:363] Got endpoints: latency-svc-ngjg4 [170.163711ms]
  I0923 08:45:43.316974 22 service_latency.go:356] Created: latency-svc-d47b9
  I0923 08:45:43.323935 22 service_latency.go:363] Got endpoints: latency-svc-d47b9 [186.680081ms]
  I0923 08:45:43.339351 22 service_latency.go:356] Created: latency-svc-2qgz4
  I0923 08:45:43.352118 22 service_latency.go:363] Got endpoints: latency-svc-2qgz4 [214.797332ms]
  I0923 08:45:43.357314 22 service_latency.go:356] Created: latency-svc-fltpv
  I0923 08:45:43.367793 22 service_latency.go:363] Got endpoints: latency-svc-fltpv [230.511001ms]
  I0923 08:45:43.374623 22 service_latency.go:356] Created: latency-svc-dgllb
  I0923 08:45:43.382388 22 service_latency.go:356] Created: latency-svc-gtpwg
  I0923 08:45:43.383250 22 service_latency.go:363] Got endpoints: latency-svc-dgllb [246.586071ms]
  I0923 08:45:43.391093 22 service_latency.go:363] Got endpoints: latency-svc-gtpwg [254.300248ms]
  I0923 08:45:43.394611 22 service_latency.go:356] Created: latency-svc-gjclm
  I0923 08:45:43.404271 22 service_latency.go:363] Got endpoints: latency-svc-gjclm [235.877573ms]
  I0923 08:45:43.409482 22 service_latency.go:356] Created: latency-svc-xn9g4
  I0923 08:45:43.418021 22 service_latency.go:363] Got endpoints: latency-svc-xn9g4 [223.009031ms]
  I0923 08:45:43.421468 22 service_latency.go:356] Created: latency-svc-28kwp
  I0923 08:45:43.431855 22 service_latency.go:363] Got endpoints: latency-svc-28kwp [213.289696ms]
  I0923 08:45:43.435547 22 service_latency.go:356] Created: latency-svc-zlrtr
  I0923 08:45:43.442552 22 service_latency.go:363] Got endpoints: latency-svc-zlrtr [211.74533ms]
  I0923 08:45:43.458618 22 service_latency.go:356] Created: latency-svc-f2pwd
  I0923 08:45:43.465782 22 service_latency.go:363] Got endpoints: latency-svc-f2pwd [223.686376ms]
  I0923 08:45:43.476039 22 service_latency.go:356] Created: latency-svc-26czx
  I0923 08:45:43.491037 22 service_latency.go:363] Got endpoints: latency-svc-26czx [231.261555ms]
  I0923 08:45:43.494211 22 service_latency.go:356] Created: latency-svc-98mhq
  I0923 08:45:43.501567 22 service_latency.go:363] Got endpoints: latency-svc-98mhq [229.897995ms]
  I0923 08:45:43.504766 22 service_latency.go:356] Created: latency-svc-w6kwc
  I0923 08:45:43.519167 22 service_latency.go:363] Got endpoints: latency-svc-w6kwc [236.01904ms]
  I0923 08:45:43.522259 22 service_latency.go:356] Created: latency-svc-dcc2p
  I0923 08:45:43.531447 22 service_latency.go:363] Got endpoints: latency-svc-dcc2p [236.133601ms]
  I0923 08:45:43.534942 22 service_latency.go:356] Created: latency-svc-4mln9
  I0923 08:45:43.546876 22 service_latency.go:363] Got endpoints: latency-svc-4mln9 [239.44664ms]
  I0923 08:45:43.550063 22 service_latency.go:356] Created: latency-svc-csr5x
  I0923 08:45:43.560315 22 service_latency.go:363] Got endpoints: latency-svc-csr5x [236.324956ms]
  I0923 08:45:43.563758 22 service_latency.go:356] Created: latency-svc-2hs27
  I0923 08:45:43.589662 22 service_latency.go:363] Got endpoints: latency-svc-2hs27 [237.495777ms]
  I0923 08:45:43.597391 22 service_latency.go:356] Created: latency-svc-5zp86
  I0923 08:45:43.606986 22 service_latency.go:363] Got endpoints: latency-svc-5zp86 [239.130614ms]
  I0923 08:45:43.612071 22 service_latency.go:356] Created: latency-svc-5szhj
  I0923 08:45:43.622343 22 service_latency.go:363] Got endpoints: latency-svc-5szhj [239.052475ms]
  I0923 08:45:43.625523 22 service_latency.go:356] Created: latency-svc-6vcsg
  I0923 08:45:43.637186 22 service_latency.go:363] Got endpoints: latency-svc-6vcsg [246.037843ms]
  I0923 08:45:43.641044 22 service_latency.go:356] Created: latency-svc-zmlcd
  I0923 08:45:43.648840 22 service_latency.go:363] Got endpoints: latency-svc-zmlcd [244.503146ms]
  I0923 08:45:43.652924 22 service_latency.go:356] Created: latency-svc-t4952
  I0923 08:45:43.658120 22 service_latency.go:363] Got endpoints: latency-svc-t4952 [240.051512ms]
  I0923 08:45:43.669081 22 service_latency.go:356] Created: latency-svc-hs96d
  I0923 08:45:43.679555 22 service_latency.go:363] Got endpoints: latency-svc-hs96d [247.64149ms]
  I0923 08:45:43.680553 22 service_latency.go:356] Created: latency-svc-d7bts
  I0923 08:45:43.720927 22 service_latency.go:363] Got endpoints: latency-svc-d7bts [278.292414ms]
  I0923 08:45:43.729333 22 service_latency.go:356] Created: latency-svc-rcftd
  I0923 08:45:43.741631 22 service_latency.go:363] Got endpoints: latency-svc-rcftd [275.804146ms]
  I0923 08:45:43.744657 22 service_latency.go:356] Created: latency-svc-z6t8v
  I0923 08:45:43.763471 22 service_latency.go:363] Got endpoints: latency-svc-z6t8v [272.378341ms]
  I0923 08:45:43.768463 22 service_latency.go:356] Created: latency-svc-5ggcr
  I0923 08:45:43.779956 22 service_latency.go:363] Got endpoints: latency-svc-5ggcr [278.311193ms]
  I0923 08:45:43.784433 22 service_latency.go:356] Created: latency-svc-sdtvw
  I0923 08:45:43.790905 22 service_latency.go:363] Got endpoints: latency-svc-sdtvw [271.677177ms]
  I0923 08:45:43.800482 22 service_latency.go:356] Created: latency-svc-5n4cb
  I0923 08:45:43.836377 22 service_latency.go:363] Got endpoints: latency-svc-5n4cb [304.872628ms]
  I0923 08:45:43.842025 22 service_latency.go:356] Created: latency-svc-wjmw7
  I0923 08:45:43.849259 22 service_latency.go:363] Got endpoints: latency-svc-wjmw7 [302.334625ms]
  I0923 08:45:43.856570 22 service_latency.go:356] Created: latency-svc-fh8lv
  I0923 08:45:43.860716 22 service_latency.go:363] Got endpoints: latency-svc-fh8lv [300.351463ms]
  I0923 08:45:43.877074 22 service_latency.go:356] Created: latency-svc-t6sfq
  I0923 08:45:43.882648 22 service_latency.go:363] Got endpoints: latency-svc-t6sfq [292.925218ms]
  I0923 08:45:43.889340 22 service_latency.go:356] Created: latency-svc-r72qr
  I0923 08:45:43.895852 22 service_latency.go:363] Got endpoints: latency-svc-r72qr [288.793179ms]
  I0923 08:45:43.901919 22 service_latency.go:356] Created: latency-svc-4h8x5
  I0923 08:45:43.909901 22 service_latency.go:363] Got endpoints: latency-svc-4h8x5 [287.502543ms]
  I0923 08:45:43.915839 22 service_latency.go:356] Created: latency-svc-p9b87
  I0923 08:45:43.929097 22 service_latency.go:356] Created: latency-svc-czmfn
  E0923 08:45:43.935313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:43.961991 22 service_latency.go:363] Got endpoints: latency-svc-p9b87 [324.736441ms]
  I0923 08:45:43.965433 22 service_latency.go:356] Created: latency-svc-hmg77
  I0923 08:45:43.977883 22 service_latency.go:356] Created: latency-svc-75cxr
  I0923 08:45:43.983435 22 service_latency.go:356] Created: latency-svc-wdrn8
  I0923 08:45:43.988573 22 service_latency.go:363] Got endpoints: latency-svc-czmfn [339.674899ms]
  I0923 08:45:44.005954 22 service_latency.go:356] Created: latency-svc-9qqtq
  I0923 08:45:44.018564 22 service_latency.go:356] Created: latency-svc-967n8
  I0923 08:45:44.028146 22 service_latency.go:356] Created: latency-svc-6n28b
  I0923 08:45:44.038736 22 service_latency.go:363] Got endpoints: latency-svc-hmg77 [380.560276ms]
  I0923 08:45:44.052903 22 service_latency.go:356] Created: latency-svc-6gbzq
  I0923 08:45:44.075911 22 service_latency.go:356] Created: latency-svc-zkl9t
  I0923 08:45:44.086297 22 service_latency.go:356] Created: latency-svc-4kwhs
  I0923 08:45:44.090864 22 service_latency.go:363] Got endpoints: latency-svc-75cxr [411.2406ms]
  I0923 08:45:44.095862 22 service_latency.go:356] Created: latency-svc-fcvjq
  I0923 08:45:44.142450 22 service_latency.go:363] Got endpoints: latency-svc-wdrn8 [421.463163ms]
  I0923 08:45:44.157098 22 service_latency.go:356] Created: latency-svc-hsvqx
  I0923 08:45:44.202167 22 service_latency.go:363] Got endpoints: latency-svc-9qqtq [460.484192ms]
  I0923 08:45:44.233764 22 service_latency.go:356] Created: latency-svc-nvl8x
  I0923 08:45:44.238985 22 service_latency.go:363] Got endpoints: latency-svc-967n8 [475.454896ms]
  I0923 08:45:44.271074 22 service_latency.go:356] Created: latency-svc-494zz
  I0923 08:45:44.271946 22 service_latency.go:356] Created: latency-svc-vcnd6
  I0923 08:45:44.274860 22 service_latency.go:356] Created: latency-svc-7zvr7
  I0923 08:45:44.275955 22 service_latency.go:356] Created: latency-svc-xcdhv
  I0923 08:45:44.276547 22 service_latency.go:356] Created: latency-svc-xppkk
  I0923 08:45:44.277856 22 service_latency.go:356] Created: latency-svc-m49qx
  I0923 08:45:44.278310 22 service_latency.go:356] Created: latency-svc-kn6sg
  I0923 08:45:44.278310 22 service_latency.go:356] Created: latency-svc-xhp92
  I0923 08:45:44.288070 22 service_latency.go:363] Got endpoints: latency-svc-6n28b [508.049822ms]
  I0923 08:45:44.316401 22 service_latency.go:356] Created: latency-svc-gx2tp
  I0923 08:45:44.333923 22 service_latency.go:363] Got endpoints: latency-svc-6gbzq [497.481259ms]
  I0923 08:45:44.349115 22 service_latency.go:356] Created: latency-svc-rnq65
  I0923 08:45:44.385283 22 service_latency.go:363] Got endpoints: latency-svc-zkl9t [535.963287ms]
  I0923 08:45:44.401884 22 service_latency.go:356] Created: latency-svc-cvz9s
  I0923 08:45:44.434150 22 service_latency.go:363] Got endpoints: latency-svc-4kwhs [573.369306ms]
  I0923 08:45:44.463305 22 service_latency.go:356] Created: latency-svc-mmf6m
  I0923 08:45:44.486087 22 service_latency.go:363] Got endpoints: latency-svc-fcvjq [603.380194ms]
  I0923 08:45:44.501050 22 service_latency.go:356] Created: latency-svc-shknx
  I0923 08:45:44.537256 22 service_latency.go:363] Got endpoints: latency-svc-hsvqx [641.346259ms]
  I0923 08:45:44.549783 22 service_latency.go:356] Created: latency-svc-zlhxn
  I0923 08:45:44.585452 22 service_latency.go:363] Got endpoints: latency-svc-nvl8x [794.491814ms]
  I0923 08:45:44.600875 22 service_latency.go:356] Created: latency-svc-mps54
  I0923 08:45:44.635198 22 service_latency.go:363] Got endpoints: latency-svc-vcnd6 [646.556952ms]
  I0923 08:45:44.648272 22 service_latency.go:356] Created: latency-svc-ff6pt
  I0923 08:45:44.683633 22 service_latency.go:363] Got endpoints: latency-svc-494zz [541.128726ms]
  I0923 08:45:44.718940 22 service_latency.go:356] Created: latency-svc-9dcgs
  I0923 08:45:44.738408 22 service_latency.go:363] Got endpoints: latency-svc-xcdhv [499.368328ms]
  I0923 08:45:44.749816 22 service_latency.go:356] Created: latency-svc-btj27
  I0923 08:45:44.783809 22 service_latency.go:363] Got endpoints: latency-svc-7zvr7 [821.752531ms]
  I0923 08:45:44.795892 22 service_latency.go:356] Created: latency-svc-59k4h
  I0923 08:45:44.837217 22 service_latency.go:363] Got endpoints: latency-svc-xppkk [798.424531ms]
  I0923 08:45:44.855153 22 service_latency.go:356] Created: latency-svc-gthnw
  I0923 08:45:44.883319 22 service_latency.go:363] Got endpoints: latency-svc-m49qx [973.363016ms]
  I0923 08:45:44.895676 22 service_latency.go:356] Created: latency-svc-86wb5
  I0923 08:45:44.934922 22 service_latency.go:363] Got endpoints: latency-svc-xhp92 [843.997553ms]
  E0923 08:45:44.935345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:44.955104 22 service_latency.go:356] Created: latency-svc-zt7hk
  I0923 08:45:44.984071 22 service_latency.go:363] Got endpoints: latency-svc-kn6sg [781.849063ms]
  I0923 08:45:44.998291 22 service_latency.go:356] Created: latency-svc-h8c9p
  I0923 08:45:45.038788 22 service_latency.go:363] Got endpoints: latency-svc-gx2tp [750.665501ms]
  I0923 08:45:45.067141 22 service_latency.go:356] Created: latency-svc-dfq2p
  I0923 08:45:45.085380 22 service_latency.go:363] Got endpoints: latency-svc-rnq65 [751.390201ms]
  I0923 08:45:45.101359 22 service_latency.go:356] Created: latency-svc-zpc6t
  I0923 08:45:45.134345 22 service_latency.go:363] Got endpoints: latency-svc-cvz9s [749.007034ms]
  I0923 08:45:45.150089 22 service_latency.go:356] Created: latency-svc-xttwp
  I0923 08:45:45.192996 22 service_latency.go:363] Got endpoints: latency-svc-mmf6m [758.78986ms]
  I0923 08:45:45.210425 22 service_latency.go:356] Created: latency-svc-7lddr
  I0923 08:45:45.236644 22 service_latency.go:363] Got endpoints: latency-svc-shknx [750.497826ms]
  I0923 08:45:45.261945 22 service_latency.go:356] Created: latency-svc-mwjpp
  I0923 08:45:45.285426 22 service_latency.go:363] Got endpoints: latency-svc-zlhxn [748.12376ms]
  I0923 08:45:45.317048 22 service_latency.go:356] Created: latency-svc-hk6lg
  I0923 08:45:45.335730 22 service_latency.go:363] Got endpoints: latency-svc-mps54 [750.22397ms]
  I0923 08:45:45.346762 22 service_latency.go:356] Created: latency-svc-pmbgq
  I0923 08:45:45.385164 22 service_latency.go:363] Got endpoints: latency-svc-ff6pt [749.917887ms]
  I0923 08:45:45.401507 22 service_latency.go:356] Created: latency-svc-rc4rr
  I0923 08:45:45.441090 22 service_latency.go:363] Got endpoints: latency-svc-9dcgs [757.404992ms]
  I0923 08:45:45.454800 22 service_latency.go:356] Created: latency-svc-rwkwm
  I0923 08:45:45.489088 22 service_latency.go:363] Got endpoints: latency-svc-btj27 [750.628563ms]
  I0923 08:45:45.501968 22 service_latency.go:356] Created: latency-svc-gmmxv
  I0923 08:45:45.534700 22 service_latency.go:363] Got endpoints: latency-svc-59k4h [750.81546ms]
  I0923 08:45:45.568179 22 service_latency.go:356] Created: latency-svc-ckqbz
  I0923 08:45:45.586823 22 service_latency.go:363] Got endpoints: latency-svc-gthnw [749.549677ms]
  I0923 08:45:45.604864 22 service_latency.go:356] Created: latency-svc-l5kbg
  I0923 08:45:45.635677 22 service_latency.go:363] Got endpoints: latency-svc-86wb5 [752.301417ms]
  I0923 08:45:45.648787 22 service_latency.go:356] Created: latency-svc-wxdvv
  I0923 08:45:45.688476 22 service_latency.go:363] Got endpoints: latency-svc-zt7hk [753.502636ms]
  I0923 08:45:45.703280 22 service_latency.go:356] Created: latency-svc-j7dmg
  I0923 08:45:45.734457 22 service_latency.go:363] Got endpoints: latency-svc-h8c9p [750.332948ms]
  I0923 08:45:45.752430 22 service_latency.go:356] Created: latency-svc-5ndrh
  I0923 08:45:45.784416 22 service_latency.go:363] Got endpoints: latency-svc-dfq2p [745.582623ms]
  I0923 08:45:45.799872 22 service_latency.go:356] Created: latency-svc-g7g6r
  I0923 08:45:45.839468 22 service_latency.go:363] Got endpoints: latency-svc-zpc6t [754.029104ms]
  I0923 08:45:45.863449 22 service_latency.go:356] Created: latency-svc-hz5g7
  I0923 08:45:45.893464 22 service_latency.go:363] Got endpoints: latency-svc-xttwp [759.066373ms]
  I0923 08:45:45.906203 22 service_latency.go:356] Created: latency-svc-bfzwb
  E0923 08:45:45.936464      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:45.937262 22 service_latency.go:363] Got endpoints: latency-svc-7lddr [744.211754ms]
  I0923 08:45:45.949266 22 service_latency.go:356] Created: latency-svc-tlxx4
  I0923 08:45:45.985239 22 service_latency.go:363] Got endpoints: latency-svc-mwjpp [748.539037ms]
  I0923 08:45:46.012122 22 service_latency.go:356] Created: latency-svc-8f99z
  I0923 08:45:46.034626 22 service_latency.go:363] Got endpoints: latency-svc-hk6lg [749.141202ms]
  I0923 08:45:46.049454 22 service_latency.go:356] Created: latency-svc-c6tk9
  I0923 08:45:46.084908 22 service_latency.go:363] Got endpoints: latency-svc-pmbgq [749.126122ms]
  I0923 08:45:46.102288 22 service_latency.go:356] Created: latency-svc-v2n5x
  I0923 08:45:46.134884 22 service_latency.go:363] Got endpoints: latency-svc-rc4rr [749.667486ms]
  I0923 08:45:46.154849 22 service_latency.go:356] Created: latency-svc-ds5nx
  I0923 08:45:46.188150 22 service_latency.go:363] Got endpoints: latency-svc-rwkwm [747.00371ms]
  I0923 08:45:46.203003 22 service_latency.go:356] Created: latency-svc-wr2d4
  I0923 08:45:46.234365 22 service_latency.go:363] Got endpoints: latency-svc-gmmxv [745.218821ms]
  I0923 08:45:46.248679 22 service_latency.go:356] Created: latency-svc-65dqh
  I0923 08:45:46.290969 22 service_latency.go:363] Got endpoints: latency-svc-ckqbz [756.216461ms]
  I0923 08:45:46.310854 22 service_latency.go:356] Created: latency-svc-25w7m
  I0923 08:45:46.336829 22 service_latency.go:363] Got endpoints: latency-svc-l5kbg [749.95861ms]
  I0923 08:45:46.348760 22 service_latency.go:356] Created: latency-svc-wlxmt
  I0923 08:45:46.387910 22 service_latency.go:363] Got endpoints: latency-svc-wxdvv [752.175225ms]
  I0923 08:45:46.401822 22 service_latency.go:356] Created: latency-svc-7rpj8
  I0923 08:45:46.442515 22 service_latency.go:363] Got endpoints: latency-svc-j7dmg [753.981888ms]
  I0923 08:45:46.456416 22 service_latency.go:356] Created: latency-svc-44t9s
  I0923 08:45:46.484227 22 service_latency.go:363] Got endpoints: latency-svc-5ndrh [749.69633ms]
  I0923 08:45:46.497667 22 service_latency.go:356] Created: latency-svc-bp2kz
  I0923 08:45:46.540795 22 service_latency.go:363] Got endpoints: latency-svc-g7g6r [756.33056ms]
  I0923 08:45:46.578705 22 service_latency.go:356] Created: latency-svc-vntlb
  I0923 08:45:46.600703 22 service_latency.go:363] Got endpoints: latency-svc-hz5g7 [761.180179ms]
  I0923 08:45:46.622027 22 service_latency.go:356] Created: latency-svc-pvffp
  I0923 08:45:46.676091 22 service_latency.go:363] Got endpoints: latency-svc-bfzwb [782.57421ms]
  I0923 08:45:46.696686 22 service_latency.go:363] Got endpoints: latency-svc-tlxx4 [759.372284ms]
  I0923 08:45:46.701794 22 service_latency.go:356] Created: latency-svc-lpxbw
  I0923 08:45:46.711000 22 service_latency.go:356] Created: latency-svc-mxj7l
  I0923 08:45:46.734305 22 service_latency.go:363] Got endpoints: latency-svc-8f99z [748.9998ms]
  I0923 08:45:46.754489 22 service_latency.go:356] Created: latency-svc-hk2xk
  I0923 08:45:46.799187 22 service_latency.go:363] Got endpoints: latency-svc-c6tk9 [764.504736ms]
  I0923 08:45:46.813806 22 service_latency.go:356] Created: latency-svc-m8bff
  I0923 08:45:46.834681 22 service_latency.go:363] Got endpoints: latency-svc-v2n5x [749.596016ms]
  I0923 08:45:46.849803 22 service_latency.go:356] Created: latency-svc-mdmv9
  I0923 08:45:46.884053 22 service_latency.go:363] Got endpoints: latency-svc-ds5nx [749.100796ms]
  I0923 08:45:46.925162 22 service_latency.go:356] Created: latency-svc-k7z54
  I0923 08:45:46.934304 22 service_latency.go:363] Got endpoints: latency-svc-wr2d4 [746.075844ms]
  E0923 08:45:46.937524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:46.948062 22 service_latency.go:356] Created: latency-svc-z6vk8
  I0923 08:45:46.986805 22 service_latency.go:363] Got endpoints: latency-svc-65dqh [752.371557ms]
  I0923 08:45:46.999955 22 service_latency.go:356] Created: latency-svc-jjtlx
  I0923 08:45:47.038282 22 service_latency.go:363] Got endpoints: latency-svc-25w7m [747.257752ms]
  I0923 08:45:47.050870 22 service_latency.go:356] Created: latency-svc-sl9dz
  I0923 08:45:47.084231 22 service_latency.go:363] Got endpoints: latency-svc-wlxmt [747.342669ms]
  I0923 08:45:47.100019 22 service_latency.go:356] Created: latency-svc-jn2hv
  I0923 08:45:47.134451 22 service_latency.go:363] Got endpoints: latency-svc-7rpj8 [746.480178ms]
  I0923 08:45:47.172134 22 service_latency.go:356] Created: latency-svc-skg8g
  I0923 08:45:47.188902 22 service_latency.go:363] Got endpoints: latency-svc-44t9s [746.316827ms]
  I0923 08:45:47.203483 22 service_latency.go:356] Created: latency-svc-w58j8
  I0923 08:45:47.234613 22 service_latency.go:363] Got endpoints: latency-svc-bp2kz [750.330813ms]
  I0923 08:45:47.247252 22 service_latency.go:356] Created: latency-svc-h8bzw
  I0923 08:45:47.289281 22 service_latency.go:363] Got endpoints: latency-svc-vntlb [748.422378ms]
  I0923 08:45:47.326384 22 service_latency.go:356] Created: latency-svc-kmzvz
  I0923 08:45:47.338688 22 service_latency.go:363] Got endpoints: latency-svc-pvffp [737.922508ms]
  I0923 08:45:47.350334 22 service_latency.go:356] Created: latency-svc-mkjns
  I0923 08:45:47.404259 22 service_latency.go:363] Got endpoints: latency-svc-lpxbw [727.841935ms]
  I0923 08:45:47.417824 22 service_latency.go:356] Created: latency-svc-nfhbz
  I0923 08:45:47.434876 22 service_latency.go:363] Got endpoints: latency-svc-mxj7l [738.130668ms]
  I0923 08:45:47.454792 22 service_latency.go:356] Created: latency-svc-qftq7
  I0923 08:45:47.484778 22 service_latency.go:363] Got endpoints: latency-svc-hk2xk [750.420023ms]
  I0923 08:45:47.498665 22 service_latency.go:356] Created: latency-svc-wxns2
  I0923 08:45:47.535810 22 service_latency.go:363] Got endpoints: latency-svc-m8bff [736.567243ms]
  I0923 08:45:47.549198 22 service_latency.go:356] Created: latency-svc-nxc5h
  I0923 08:45:47.584623 22 service_latency.go:363] Got endpoints: latency-svc-mdmv9 [749.819748ms]
  I0923 08:45:47.608179 22 service_latency.go:356] Created: latency-svc-w9v69
  I0923 08:45:47.650558 22 service_latency.go:363] Got endpoints: latency-svc-k7z54 [766.444613ms]
  I0923 08:45:47.667081 22 service_latency.go:356] Created: latency-svc-s2887
  I0923 08:45:47.691208 22 service_latency.go:363] Got endpoints: latency-svc-z6vk8 [756.846011ms]
  I0923 08:45:47.705180 22 service_latency.go:356] Created: latency-svc-rjmsh
  I0923 08:45:47.738868 22 service_latency.go:363] Got endpoints: latency-svc-jjtlx [752.006402ms]
  I0923 08:45:47.761721 22 service_latency.go:356] Created: latency-svc-j562z
  I0923 08:45:47.784112 22 service_latency.go:363] Got endpoints: latency-svc-sl9dz [745.772629ms]
  I0923 08:45:47.799783 22 service_latency.go:356] Created: latency-svc-f5vvt
  I0923 08:45:47.834527 22 service_latency.go:363] Got endpoints: latency-svc-jn2hv [750.236241ms]
  I0923 08:45:47.874024 22 service_latency.go:356] Created: latency-svc-rrnx7
  I0923 08:45:47.886932 22 service_latency.go:363] Got endpoints: latency-svc-skg8g [752.432638ms]
  I0923 08:45:47.904131 22 service_latency.go:356] Created: latency-svc-8txkc
  I0923 08:45:47.937032 22 service_latency.go:363] Got endpoints: latency-svc-w58j8 [748.027625ms]
  E0923 08:45:47.938101      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:47.950935 22 service_latency.go:356] Created: latency-svc-bp6zg
  I0923 08:45:48.033372 22 service_latency.go:363] Got endpoints: latency-svc-h8bzw [798.710389ms]
  I0923 08:45:48.049933 22 service_latency.go:356] Created: latency-svc-dknqg
  I0923 08:45:48.084664 22 service_latency.go:363] Got endpoints: latency-svc-kmzvz [795.325137ms]
  I0923 08:45:48.107246 22 service_latency.go:356] Created: latency-svc-q7hsn
  I0923 08:45:48.133357 22 service_latency.go:363] Got endpoints: latency-svc-mkjns [794.608727ms]
  I0923 08:45:48.151852 22 service_latency.go:356] Created: latency-svc-k2rqv
  I0923 08:45:48.184783 22 service_latency.go:363] Got endpoints: latency-svc-nfhbz [780.468182ms]
  I0923 08:45:48.206751 22 service_latency.go:356] Created: latency-svc-xxmms
  I0923 08:45:48.240952 22 service_latency.go:363] Got endpoints: latency-svc-qftq7 [806.011882ms]
  I0923 08:45:48.255999 22 service_latency.go:356] Created: latency-svc-lbdjq
  I0923 08:45:48.285825 22 service_latency.go:363] Got endpoints: latency-svc-wxns2 [800.999915ms]
  I0923 08:45:48.298657 22 service_latency.go:356] Created: latency-svc-wgzl5
  I0923 08:45:48.333680 22 service_latency.go:363] Got endpoints: latency-svc-nxc5h [797.819821ms]
  I0923 08:45:48.347127 22 service_latency.go:356] Created: latency-svc-9r6kf
  I0923 08:45:48.388093 22 service_latency.go:363] Got endpoints: latency-svc-w9v69 [803.408902ms]
  I0923 08:45:48.398809 22 service_latency.go:356] Created: latency-svc-pf7vx
  I0923 08:45:48.433805 22 service_latency.go:363] Got endpoints: latency-svc-s2887 [783.166419ms]
  I0923 08:45:48.448447 22 service_latency.go:356] Created: latency-svc-wbsb4
  I0923 08:45:48.500038 22 service_latency.go:363] Got endpoints: latency-svc-rjmsh [808.770627ms]
  I0923 08:45:48.513829 22 service_latency.go:356] Created: latency-svc-h5cqd
  I0923 08:45:48.537388 22 service_latency.go:363] Got endpoints: latency-svc-j562z [798.462981ms]
  I0923 08:45:48.550173 22 service_latency.go:356] Created: latency-svc-lsclx
  I0923 08:45:48.583831 22 service_latency.go:363] Got endpoints: latency-svc-f5vvt [799.663972ms]
  I0923 08:45:48.598083 22 service_latency.go:356] Created: latency-svc-msjhm
  I0923 08:45:48.635022 22 service_latency.go:363] Got endpoints: latency-svc-rrnx7 [800.398737ms]
  I0923 08:45:48.660668 22 service_latency.go:356] Created: latency-svc-dgc9x
  I0923 08:45:48.683855 22 service_latency.go:363] Got endpoints: latency-svc-8txkc [796.86713ms]
  I0923 08:45:48.698323 22 service_latency.go:356] Created: latency-svc-n2qn5
  I0923 08:45:48.763716 22 service_latency.go:363] Got endpoints: latency-svc-bp6zg [826.629721ms]
  I0923 08:45:48.778149 22 service_latency.go:356] Created: latency-svc-z8xtv
  I0923 08:45:48.784468 22 service_latency.go:363] Got endpoints: latency-svc-dknqg [751.028078ms]
  I0923 08:45:48.799447 22 service_latency.go:356] Created: latency-svc-g72hj
  I0923 08:45:48.837913 22 service_latency.go:363] Got endpoints: latency-svc-q7hsn [753.202817ms]
  I0923 08:45:48.852765 22 service_latency.go:356] Created: latency-svc-868nw
  I0923 08:45:48.884149 22 service_latency.go:363] Got endpoints: latency-svc-k2rqv [750.741691ms]
  I0923 08:45:48.898449 22 service_latency.go:356] Created: latency-svc-f2k9r
  I0923 08:45:48.934918 22 service_latency.go:363] Got endpoints: latency-svc-xxmms [750.082661ms]
  E0923 08:45:48.939042      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:48.950376 22 service_latency.go:356] Created: latency-svc-tm7g6
  I0923 08:45:49.007846 22 service_latency.go:363] Got endpoints: latency-svc-lbdjq [766.849001ms]
  I0923 08:45:49.021887 22 service_latency.go:356] Created: latency-svc-rntt2
  I0923 08:45:49.034728 22 service_latency.go:363] Got endpoints: latency-svc-wgzl5 [748.843505ms]
  I0923 08:45:49.047834 22 service_latency.go:356] Created: latency-svc-r6tjf
  I0923 08:45:49.086102 22 service_latency.go:363] Got endpoints: latency-svc-9r6kf [752.364758ms]
  I0923 08:45:49.132760 22 service_latency.go:356] Created: latency-svc-7gz2d
  I0923 08:45:49.139744 22 service_latency.go:363] Got endpoints: latency-svc-pf7vx [751.600914ms]
  I0923 08:45:49.153092 22 service_latency.go:356] Created: latency-svc-l4wvc
  I0923 08:45:49.183708 22 service_latency.go:363] Got endpoints: latency-svc-wbsb4 [749.852333ms]
  I0923 08:45:49.281663 22 service_latency.go:356] Created: latency-svc-xclhj
  I0923 08:45:49.282318 22 service_latency.go:363] Got endpoints: latency-svc-h5cqd [782.216676ms]
  I0923 08:45:49.289117 22 service_latency.go:363] Got endpoints: latency-svc-lsclx [751.667584ms]
  I0923 08:45:49.302871 22 service_latency.go:356] Created: latency-svc-k6qqv
  I0923 08:45:49.310363 22 service_latency.go:356] Created: latency-svc-g9fl6
  I0923 08:45:49.336436 22 service_latency.go:363] Got endpoints: latency-svc-msjhm [752.545843ms]
  I0923 08:45:49.349104 22 service_latency.go:356] Created: latency-svc-xfqz4
  I0923 08:45:49.396519 22 service_latency.go:363] Got endpoints: latency-svc-dgc9x [761.337047ms]
  I0923 08:45:49.413308 22 service_latency.go:356] Created: latency-svc-nmwmr
  I0923 08:45:49.432934 22 service_latency.go:363] Got endpoints: latency-svc-n2qn5 [749.022741ms]
  I0923 08:45:49.445840 22 service_latency.go:356] Created: latency-svc-4wj2h
  I0923 08:45:49.487284 22 service_latency.go:363] Got endpoints: latency-svc-z8xtv [723.477481ms]
  I0923 08:45:49.509263 22 service_latency.go:356] Created: latency-svc-bfq8n
  I0923 08:45:49.534035 22 service_latency.go:363] Got endpoints: latency-svc-g72hj [749.514108ms]
  I0923 08:45:49.550637 22 service_latency.go:356] Created: latency-svc-x6fpz
  I0923 08:45:49.584750 22 service_latency.go:363] Got endpoints: latency-svc-868nw [746.75224ms]
  I0923 08:45:49.598605 22 service_latency.go:356] Created: latency-svc-bnjhp
  I0923 08:45:49.635964 22 service_latency.go:363] Got endpoints: latency-svc-f2k9r [751.762008ms]
  I0923 08:45:49.649940 22 service_latency.go:356] Created: latency-svc-dwnmf
  I0923 08:45:49.683816 22 service_latency.go:363] Got endpoints: latency-svc-tm7g6 [748.83826ms]
  I0923 08:45:49.698867 22 service_latency.go:356] Created: latency-svc-pqwn2
  I0923 08:45:49.743973 22 service_latency.go:363] Got endpoints: latency-svc-rntt2 [736.062114ms]
  I0923 08:45:49.759876 22 service_latency.go:356] Created: latency-svc-bdnnr
  I0923 08:45:49.784448 22 service_latency.go:363] Got endpoints: latency-svc-r6tjf [749.660039ms]
  I0923 08:45:49.802332 22 service_latency.go:356] Created: latency-svc-j279r
  I0923 08:45:49.838403 22 service_latency.go:363] Got endpoints: latency-svc-7gz2d [752.241045ms]
  I0923 08:45:49.862279 22 service_latency.go:356] Created: latency-svc-fwhn2
  I0923 08:45:49.888002 22 service_latency.go:363] Got endpoints: latency-svc-l4wvc [748.199757ms]
  I0923 08:45:49.901219 22 service_latency.go:356] Created: latency-svc-6wppt
  I0923 08:45:49.933434 22 service_latency.go:363] Got endpoints: latency-svc-xclhj [749.668292ms]
  E0923 08:45:49.939720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:49.948338 22 service_latency.go:356] Created: latency-svc-l26tq
  I0923 08:45:49.984576 22 service_latency.go:363] Got endpoints: latency-svc-k6qqv [702.209645ms]
  I0923 08:45:50.000579 22 service_latency.go:356] Created: latency-svc-l9qsl
  I0923 08:45:50.039031 22 service_latency.go:363] Got endpoints: latency-svc-g9fl6 [749.859354ms]
  I0923 08:45:50.050911 22 service_latency.go:356] Created: latency-svc-6wnwl
  I0923 08:45:50.084390 22 service_latency.go:363] Got endpoints: latency-svc-xfqz4 [747.899482ms]
  I0923 08:45:50.099184 22 service_latency.go:356] Created: latency-svc-t976t
  I0923 08:45:50.133928 22 service_latency.go:363] Got endpoints: latency-svc-nmwmr [737.308968ms]
  I0923 08:45:50.150867 22 service_latency.go:356] Created: latency-svc-6l279
  I0923 08:45:50.189541 22 service_latency.go:363] Got endpoints: latency-svc-4wj2h [756.550889ms]
  I0923 08:45:50.201957 22 service_latency.go:356] Created: latency-svc-kmckd
  I0923 08:45:50.235454 22 service_latency.go:363] Got endpoints: latency-svc-bfq8n [748.099843ms]
  I0923 08:45:50.250374 22 service_latency.go:356] Created: latency-svc-nrg8s
  I0923 08:45:50.287128 22 service_latency.go:363] Got endpoints: latency-svc-x6fpz [753.037025ms]
  I0923 08:45:50.309185 22 service_latency.go:356] Created: latency-svc-6jj92
  I0923 08:45:50.336064 22 service_latency.go:363] Got endpoints: latency-svc-bnjhp [750.787597ms]
  I0923 08:45:50.366991 22 service_latency.go:356] Created: latency-svc-9dlt4
  I0923 08:45:50.384366 22 service_latency.go:363] Got endpoints: latency-svc-dwnmf [748.355799ms]
  I0923 08:45:50.399033 22 service_latency.go:356] Created: latency-svc-dgjvw
  I0923 08:45:50.433692 22 service_latency.go:363] Got endpoints: latency-svc-pqwn2 [749.819212ms]
  I0923 08:45:50.446977 22 service_latency.go:356] Created: latency-svc-b7q2n
  I0923 08:45:50.489430 22 service_latency.go:363] Got endpoints: latency-svc-bdnnr [745.396467ms]
  I0923 08:45:50.502835 22 service_latency.go:356] Created: latency-svc-k7j97
  I0923 08:45:50.534677 22 service_latency.go:363] Got endpoints: latency-svc-j279r [750.175776ms]
  I0923 08:45:50.549834 22 service_latency.go:356] Created: latency-svc-glhvn
  I0923 08:45:50.586794 22 service_latency.go:363] Got endpoints: latency-svc-fwhn2 [748.338331ms]
  I0923 08:45:50.601456 22 service_latency.go:356] Created: latency-svc-fk9w4
  I0923 08:45:50.636718 22 service_latency.go:363] Got endpoints: latency-svc-6wppt [748.669844ms]
  I0923 08:45:50.650976 22 service_latency.go:356] Created: latency-svc-98c6d
  I0923 08:45:50.683971 22 service_latency.go:363] Got endpoints: latency-svc-l26tq [750.480182ms]
  I0923 08:45:50.699786 22 service_latency.go:356] Created: latency-svc-94xhh
  I0923 08:45:50.741816 22 service_latency.go:363] Got endpoints: latency-svc-l9qsl [757.156324ms]
  I0923 08:45:50.754136 22 service_latency.go:356] Created: latency-svc-9qpmp
  I0923 08:45:50.785039 22 service_latency.go:363] Got endpoints: latency-svc-6wnwl [745.951115ms]
  I0923 08:45:50.799563 22 service_latency.go:356] Created: latency-svc-7tb62
  I0923 08:45:50.841254 22 service_latency.go:363] Got endpoints: latency-svc-t976t [756.809026ms]
  I0923 08:45:50.862930 22 service_latency.go:356] Created: latency-svc-8zfqq
  I0923 08:45:50.884150 22 service_latency.go:363] Got endpoints: latency-svc-6l279 [750.163828ms]
  I0923 08:45:50.897938 22 service_latency.go:356] Created: latency-svc-ldlss
  I0923 08:45:50.934651 22 service_latency.go:363] Got endpoints: latency-svc-kmckd [745.039907ms]
  E0923 08:45:50.940808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:50.980350 22 service_latency.go:356] Created: latency-svc-vmm88
  I0923 08:45:50.985048 22 service_latency.go:363] Got endpoints: latency-svc-nrg8s [749.545489ms]
  I0923 08:45:50.999719 22 service_latency.go:356] Created: latency-svc-r6b8m
  I0923 08:45:51.035637 22 service_latency.go:363] Got endpoints: latency-svc-6jj92 [748.440386ms]
  I0923 08:45:51.095729 22 service_latency.go:363] Got endpoints: latency-svc-9dlt4 [759.491048ms]
  I0923 08:45:51.134004 22 service_latency.go:363] Got endpoints: latency-svc-dgjvw [749.580528ms]
  I0923 08:45:51.186142 22 service_latency.go:363] Got endpoints: latency-svc-b7q2n [752.395676ms]
  I0923 08:45:51.234830 22 service_latency.go:363] Got endpoints: latency-svc-k7j97 [745.337791ms]
  I0923 08:45:51.286235 22 service_latency.go:363] Got endpoints: latency-svc-glhvn [751.493804ms]
  I0923 08:45:51.333880 22 service_latency.go:363] Got endpoints: latency-svc-fk9w4 [747.038982ms]
  I0923 08:45:51.386194 22 service_latency.go:363] Got endpoints: latency-svc-98c6d [749.417462ms]
  I0923 08:45:51.435837 22 service_latency.go:363] Got endpoints: latency-svc-94xhh [751.817437ms]
  I0923 08:45:51.484730 22 service_latency.go:363] Got endpoints: latency-svc-9qpmp [742.851703ms]
  I0923 08:45:51.533822 22 service_latency.go:363] Got endpoints: latency-svc-7tb62 [748.73753ms]
  I0923 08:45:51.585978 22 service_latency.go:363] Got endpoints: latency-svc-8zfqq [744.663766ms]
  I0923 08:45:51.634067 22 service_latency.go:363] Got endpoints: latency-svc-ldlss [749.854133ms]
  I0923 08:45:51.683712 22 service_latency.go:363] Got endpoints: latency-svc-vmm88 [749.016736ms]
  I0923 08:45:51.734234 22 service_latency.go:363] Got endpoints: latency-svc-r6b8m [749.132546ms]
  I0923 08:45:51.734361 22 service_latency.go:114] Latencies: [31.679941ms 57.943958ms 81.578235ms 93.910197ms 105.159347ms 122.661554ms 134.458908ms 146.121451ms 158.08867ms 170.163711ms 186.680081ms 211.74533ms 213.289696ms 214.797332ms 223.009031ms 223.686376ms 229.897995ms 230.511001ms 231.261555ms 235.877573ms 236.01904ms 236.133601ms 236.324956ms 237.495777ms 239.052475ms 239.130614ms 239.44664ms 240.051512ms 244.503146ms 246.037843ms 246.586071ms 247.64149ms 254.300248ms 271.677177ms 272.378341ms 275.804146ms 278.292414ms 278.311193ms 287.502543ms 288.793179ms 292.925218ms 300.351463ms 302.334625ms 304.872628ms 324.736441ms 339.674899ms 380.560276ms 411.2406ms 421.463163ms 460.484192ms 475.454896ms 497.481259ms 499.368328ms 508.049822ms 535.963287ms 541.128726ms 573.369306ms 603.380194ms 641.346259ms 646.556952ms 702.209645ms 723.477481ms 727.841935ms 736.062114ms 736.567243ms 737.308968ms 737.922508ms 738.130668ms 742.851703ms 744.211754ms 744.663766ms 745.039907ms 745.218821ms 745.337791ms 745.396467ms 745.582623ms 745.772629ms 745.951115ms 746.075844ms 746.316827ms 746.480178ms 746.75224ms 747.00371ms 747.038982ms 747.257752ms 747.342669ms 747.899482ms 748.027625ms 748.099843ms 748.12376ms 748.199757ms 748.338331ms 748.355799ms 748.422378ms 748.440386ms 748.539037ms 748.669844ms 748.73753ms 748.83826ms 748.843505ms 748.9998ms 749.007034ms 749.016736ms 749.022741ms 749.100796ms 749.126122ms 749.132546ms 749.141202ms 749.417462ms 749.514108ms 749.545489ms 749.549677ms 749.580528ms 749.596016ms 749.660039ms 749.667486ms 749.668292ms 749.69633ms 749.819212ms 749.819748ms 749.852333ms 749.854133ms 749.859354ms 749.917887ms 749.95861ms 750.082661ms 750.163828ms 750.175776ms 750.22397ms 750.236241ms 750.330813ms 750.332948ms 750.420023ms 750.480182ms 750.497826ms 750.628563ms 750.665501ms 750.741691ms 750.787597ms 750.81546ms 751.028078ms 751.390201ms 751.493804ms 751.600914ms 751.667584ms 751.762008ms 751.817437ms 752.006402ms 752.175225ms 752.241045ms 752.301417ms 752.364758ms 752.371557ms 752.395676ms 752.432638ms 752.545843ms 753.037025ms 753.202817ms 753.502636ms 753.981888ms 754.029104ms 756.216461ms 756.33056ms 756.550889ms 756.809026ms 756.846011ms 757.156324ms 757.404992ms 758.78986ms 759.066373ms 759.372284ms 759.491048ms 761.180179ms 761.337047ms 764.504736ms 766.444613ms 766.849001ms 780.468182ms 781.849063ms 782.216676ms 782.57421ms 783.166419ms 794.491814ms 794.608727ms 795.325137ms 796.86713ms 797.819821ms 798.424531ms 798.462981ms 798.710389ms 799.663972ms 800.398737ms 800.999915ms 803.408902ms 806.011882ms 808.770627ms 821.752531ms 826.629721ms 843.997553ms 973.363016ms]
  I0923 08:45:51.734385 22 service_latency.go:118] 50 %ile: 748.9998ms
  I0923 08:45:51.734397 22 service_latency.go:119] 90 %ile: 782.57421ms
  I0923 08:45:51.734406 22 service_latency.go:120] 99 %ile: 843.997553ms
  I0923 08:45:51.734414 22 service_latency.go:121] Total sample count: 200
  I0923 08:45:51.734524 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3276" for this suite. @ 09/23/25 08:45:51.737
â€¢ [9.800 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/23/25 08:45:51.744
  I0923 08:45:51.744047 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename downward-api @ 09/23/25 08:45:51.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:51.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:51.757
  STEP: Creating the pod @ 09/23/25 08:45:51.759
  E0923 08:45:51.941346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:52.941577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:53.942516      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:54.293554 22 pod_client.go:173] Successfully updated pod "annotationupdated52c1b99-cfbf-4df2-981c-a28c712ff66d"
  E0923 08:45:54.942701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:55.942953      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:45:56.303118 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9119" for this suite. @ 09/23/25 08:45:56.305
â€¢ [4.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/23/25 08:45:56.311
  I0923 08:45:56.311767 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 08:45:56.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:45:56.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:45:56.325
  STEP: set up a multi version CRD @ 09/23/25 08:45:56.328
  I0923 08:45:56.329274 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:45:56.943064      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:57.943231      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:45:58.943466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/23/25 08:45:59.757
  STEP: check the unserved version gets removed @ 09/23/25 08:45:59.778
  E0923 08:45:59.943959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/23/25 08:46:00.651
  E0923 08:46:00.944707      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:01.945286      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:02.946160      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:46:03.408169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6822" for this suite. @ 09/23/25 08:46:03.415
â€¢ [7.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/23/25 08:46:03.42
  I0923 08:46:03.420771 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/23/25 08:46:03.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:03.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:03.435
  I0923 08:46:03.437126 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:46:03.946261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:04.946848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:05.947102      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:46:06.478617 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1878" for this suite. @ 09/23/25 08:46:06.481
â€¢ [3.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/23/25 08:46:06.486
  I0923 08:46:06.486703 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:46:06.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:06.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:06.518
  STEP: Creating configMap with name projected-configmap-test-volume-map-d1497b43-18af-4583-aecb-e16069b09953 @ 09/23/25 08:46:06.52
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:46:06.524
  E0923 08:46:06.947259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:07.947470      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:08.948180      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:09.948392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:46:10.539
  I0923 08:46:10.541523 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-870502e1-19ef-41f2-8e22-2c43b6f04376 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:46:10.545
  I0923 08:46:10.558699 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-413" for this suite. @ 09/23/25 08:46:10.561
â€¢ [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/23/25 08:46:10.567
  I0923 08:46:10.567432 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename lease-test @ 09/23/25 08:46:10.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:10.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:10.581
  I0923 08:46:10.645075 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4812" for this suite. @ 09/23/25 08:46:10.661
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/23/25 08:46:10.667
  I0923 08:46:10.667861 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/25 08:46:10.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:10.684
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/25 08:46:10.762
  E0923 08:46:10.949101      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:11.949324      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/23/25 08:46:12.786
  E0923 08:46:12.949791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:13.950032      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:14.950629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:15.950762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:16.951751      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:17.951840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:18.952683      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:19.952946      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:20.953655      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:21.953775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:22.953840      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:23.954054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:24.954729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:25.955011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/23/25 08:46:26.843
  STEP: delete the pod with lifecycle hook @ 09/23/25 08:46:26.847
  E0923 08:46:26.955663      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:27.955921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:46:28.860688 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2210" for this suite. @ 09/23/25 08:46:28.863
â€¢ [18.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/23/25 08:46:28.869
  I0923 08:46:28.869319 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename resourcequota @ 09/23/25 08:46:28.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:28.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:28.885
  STEP: Creating a ResourceQuota @ 09/23/25 08:46:28.887
  STEP: Getting a ResourceQuota @ 09/23/25 08:46:28.892
  STEP: Updating a ResourceQuota @ 09/23/25 08:46:28.899
  STEP: Verifying a ResourceQuota was modified @ 09/23/25 08:46:28.912
  STEP: Deleting a ResourceQuota @ 09/23/25 08:46:28.914
  STEP: Verifying the deleted ResourceQuota @ 09/23/25 08:46:28.922
  I0923 08:46:28.923694 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0923 08:46:28.956001      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-9697" for this suite. @ 09/23/25 08:46:28.964
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/23/25 08:46:28.97
  I0923 08:46:28.970579 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 08:46:28.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:28.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:28.985
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/23/25 08:46:28.987
  I0923 08:46:28.987737 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:46:29.956692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:46:30.348820 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:46:30.957519      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:31.958212      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:32.959018      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:33.959687      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:34.960715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:46:35.544880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1272" for this suite. @ 09/23/25 08:46:35.551
â€¢ [6.587 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/23/25 08:46:35.557
  I0923 08:46:35.557347 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:46:35.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:35.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:35.573
  STEP: Creating configMap configmap-2777/configmap-test-e204955c-afe9-48b3-9f62-30001b1acf0d @ 09/23/25 08:46:35.575
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:46:35.579
  E0923 08:46:35.961184      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:36.961421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:37.961623      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:38.961853      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:46:39.594
  I0923 08:46:39.596288 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-127aa8b6-55a6-4c5e-90e8-21e9293bcd49 container env-test: <nil>
  STEP: delete the pod @ 09/23/25 08:46:39.6
  I0923 08:46:39.617595 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2777" for this suite. @ 09/23/25 08:46:39.62
â€¢ [4.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/23/25 08:46:39.625
  I0923 08:46:39.625962 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sched-pred @ 09/23/25 08:46:39.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:46:39.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:46:39.641
  I0923 08:46:39.643177 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0923 08:46:39.723431 22 util.go:396] Waiting for terminating namespaces to be deleted...
  I0923 08:46:39.725352 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w1 before test
  I0923 08:46:39.727911 22 predicates.go:957] kube-flannel-ds-kpfn9 from kube-flannel started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:46:39.727945 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:46:39.727959 22 predicates.go:957] kube-proxy-wz57v from kube-system started at 2025-09-23 07:12:29 +0000 UTC (1 container statuses recorded)
  I0923 08:46:39.727970 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:46:39.727982 22 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-23 07:17:18 +0000 UTC (1 container statuses recorded)
  I0923 08:46:39.727992 22 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0923 08:46:39.728002 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-trbn9 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:46:39.728011 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:46:39.728021 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0923 08:46:39.728032 22 predicates.go:119] 
  Logging pods the apiserver thinks is on node ckp-cncf-w2 before test
  I0923 08:46:39.730116 22 predicates.go:957] kube-flannel-ds-tbgsc from kube-flannel started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:46:39.730144 22 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0923 08:46:39.730158 22 predicates.go:957] kube-proxy-27mjl from kube-system started at 2025-09-23 07:14:58 +0000 UTC (1 container statuses recorded)
  I0923 08:46:39.730167 22 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0923 08:46:39.730225 22 predicates.go:957] sonobuoy-e2e-job-a377c665aee74d41 from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:46:39.730236 22 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0923 08:46:39.730245 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:46:39.730255 22 predicates.go:957] sonobuoy-systemd-logs-daemon-set-0418a1295b1e451a-grznp from sonobuoy started at 2025-09-23 07:17:30 +0000 UTC (2 container statuses recorded)
  I0923 08:46:39.730265 22 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0923 08:46:39.730274 22 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/25 08:46:39.73
  E0923 08:46:39.962083      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:40.962481      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/25 08:46:41.748
  STEP: Trying to apply a random label on the found node. @ 09/23/25 08:46:41.761
  STEP: verifying the node has the label kubernetes.io/e2e-9c85a5b5-2937-49df-a563-b37dc332f2f3 95 @ 09/23/25 08:46:41.771
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/23/25 08:46:41.775
  E0923 08:46:41.963355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:42.963645      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.19.1.4 on the node which pod4 resides and expect not scheduled @ 09/23/25 08:46:43.786
  E0923 08:46:43.964054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:44.964178      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:45.965081      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:46.965326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:47.965504      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:48.965767      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:49.966442      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:50.966772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:51.967333      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:52.967515      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:53.968243      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:54.968495      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:55.968891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:56.969189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:57.970234      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:58.970491      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:46:59.971177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:00.971488      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:01.971850      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:02.972096      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:03.973035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:04.973986      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:05.974458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:06.974711      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:07.975089      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:08.975240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:09.975799      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:10.976472      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:11.977255      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:12.977505      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:13.977717      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:14.978156      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:15.978820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:16.979062      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:17.979529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:18.979759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:19.980530      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:20.980881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:21.981196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:22.981356      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:23.981872      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:24.982090      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:25.982988      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:26.983223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:27.983969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:28.984035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:29.984835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:30.985047      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:31.985441      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:32.985550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:33.986571      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:34.986848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:35.987810      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:36.988058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:37.988715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:38.988867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:39.989486      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:40.990551      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:41.991476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:42.991653      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:43.992046      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:44.992299      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:45.993305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:46.993476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:47.994230      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:48.994441      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:49.995127      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:50.995487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:51.996145      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:52.996306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:53.996884      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:54.997112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:55.997676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:56.997892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:57.998869      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:58.999110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:47:59.999649      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:00.999835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:02.000455      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:03.000691      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:04.000859      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:05.001118      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:06.001565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:07.001802      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:08.002506      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:09.002737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:10.003066      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:11.003534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:12.003830      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:13.004056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:14.004214      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:15.004374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:16.005458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:17.005721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:18.006209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:19.006646      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:20.007313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:21.007530      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:22.008155      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:23.008328      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:24.009200      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:25.009338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:26.009681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:27.009923      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:28.010749      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:29.010874      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:30.011540      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:31.011827      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:32.012892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:33.013122      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:34.013722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:35.013941      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:36.014375      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:37.014832      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:38.014883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:39.015047      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:40.015793      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:41.016085      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:42.016681      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:43.016931      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:44.017575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:45.017837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:46.018140      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:47.018365      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:48.019022      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:49.019188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:50.020011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:51.020288      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:52.020890      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:53.021123      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:54.021720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:55.021880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:56.021933      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:57.022162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:58.023148      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:48:59.023259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:00.023824      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:01.024081      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:02.024535      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:03.024803      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:04.026843      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:05.025617      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:06.026284      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:07.026545      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:08.027017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:09.027187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:10.028051      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:11.028316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:12.029016      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:13.029155      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:14.029697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:15.029825      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:16.030475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:17.030695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:18.031278      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:19.031512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:20.031566      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:21.032477      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:22.033557      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:23.033736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:24.034168      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:25.034421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:26.034670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:27.034859      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:28.035005      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:29.035764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:30.036235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:31.037035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:32.037270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:33.037805      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:34.038029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:35.038673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:36.039483      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:37.039719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:38.039945      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:39.040118      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:40.040355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:41.040504      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:42.040676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:43.040924      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:44.041054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:45.041231      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:46.041501      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:47.041721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:48.041978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:49.043014      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:50.043294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:51.043432      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:52.043721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:53.043891      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:54.044030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:55.044201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:56.044543      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:57.044764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:58.044883      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:49:59.045071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:00.045296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:01.045629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:02.045768      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:03.045904      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:04.046056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:05.046230      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:06.046515      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:07.046759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:08.046868      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:09.047043      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:10.047129      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:11.047811      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:12.048059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:13.048229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:14.048372      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:15.048556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:16.048722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:17.048968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:18.049209      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:19.049401      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:20.049525      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:21.050575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:22.050855      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:23.051705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:24.051948      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:25.052126      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:26.052448      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:27.052631      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:28.052873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:29.052999      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:30.053187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:31.053521      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:32.053767      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:33.053927      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:34.054056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:35.054715      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:36.055034      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:37.055206      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:38.055429      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:39.056353      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:40.056579      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:41.057438      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:42.057563      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:43.057808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:44.057968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:45.058839      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:46.059575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:47.059732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:48.059881      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:49.059978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:50.060228      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:51.060376      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:52.060622      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:53.061177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:54.061809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:55.062736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:56.063015      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:57.063137      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:58.063380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:50:59.063523      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:00.063764      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:01.064651      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:02.064867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:03.065741      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:04.065969      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:05.066149      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:06.066343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:07.066492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:08.066721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:09.066832      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:10.067069      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:11.067250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:12.067512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:13.068080      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:14.068301      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:15.068440      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:16.068570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:17.068722      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:18.068941      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:19.069023      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:20.069307      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:21.069416      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:22.069683      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:23.070244      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:24.070503      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:25.070746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:26.070909      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:27.071815      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:28.072036      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:29.072882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:30.073133      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:31.073899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:32.074053      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:33.074163      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:34.074392      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:35.074476      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:36.074512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:37.074645      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:38.074852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:39.075006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:40.075800      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:41.076777      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:42.076998      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:43.077729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-9c85a5b5-2937-49df-a563-b37dc332f2f3 off the node ckp-cncf-w1 @ 09/23/25 08:51:43.793
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9c85a5b5-2937-49df-a563-b37dc332f2f3 @ 09/23/25 08:51:43.805
  I0923 08:51:43.808682 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4308" for this suite. @ 09/23/25 08:51:43.81
â€¢ [304.192 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/23/25 08:51:43.817
  I0923 08:51:43.817159 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename pods @ 09/23/25 08:51:43.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:51:43.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:51:43.829
  STEP: Create set of pods @ 09/23/25 08:51:43.831
  I0923 08:51:43.840376 22 pods.go:871] created test-pod-1
  I0923 08:51:43.844989 22 pods.go:871] created test-pod-2
  I0923 08:51:43.855791 22 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/23/25 08:51:43.855
  E0923 08:51:44.078395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:45.078638      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/23/25 08:51:45.892
  I0923 08:51:45.894431 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0923 08:51:46.078809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:46.895471 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0923 08:51:47.079752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:47.896704 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0923 08:51:48.079921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:48.895370 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3784" for this suite. @ 09/23/25 08:51:48.898
â€¢ [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/23/25 08:51:48.904
  I0923 08:51:48.904356 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename volumeattachment @ 09/23/25 08:51:48.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:51:48.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:51:48.941
  STEP: Create VolumeAttachment "va-e2e-gs9mf" on node "ckp-cncf-m1" @ 09/23/25 08:51:48.999
  STEP: Patch VolumeAttachment "va-e2e-gs9mf" on node "ckp-cncf-m1" @ 09/23/25 08:51:49.006
  STEP: Reading "va-e2e-gs9mf" Status @ 09/23/25 08:51:49.013
  STEP: Patching "va-e2e-gs9mf" Status @ 09/23/25 08:51:49.019
  I0923 08:51:49.024560 22 volume_attachment.go:224] "va-e2e-gs9mf" Status.Attached: true
  STEP: Updating "va-e2e-gs9mf" Status @ 09/23/25 08:51:49.024
  I0923 08:51:49.033308 22 volume_attachment.go:240] "va-e2e-gs9mf" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-gs9mf" on node "ckp-cncf-m1" @ 09/23/25 08:51:49.033
  STEP: Confirm deletion of VolumeAttachment "va-e2e-gs9mf" on node "ckp-cncf-m1" @ 09/23/25 08:51:49.039
  I0923 08:51:49.065789 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0923 08:51:49.080959      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "volumeattachment-9158" for this suite. @ 09/23/25 08:51:49.099
â€¢ [0.202 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/23/25 08:51:49.106
  I0923 08:51:49.106861 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:51:49.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:51:49.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:51:49.119
  STEP: Creating pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110 @ 09/23/25 08:51:49.121
  E0923 08:51:50.081119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:51.081620      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 08:51:51.135
  I0923 08:51:51.137571 22 container_probe.go:1749] Initial restart count of pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b is 0
  I0923 08:51:51.139254 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:51:52.082294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:53.082824      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:53.142656 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:51:54.082975      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:55.083075      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:55.145943 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:51:56.084121      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:57.084378      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:57.148802 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:51:58.084880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:51:59.085119      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:51:59.151769 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:00.085821      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:01.086698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:01.155279 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:02.087311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:03.087481      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:03.158002 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:04.087670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:05.087783      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:05.161474 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:06.088737      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:07.088862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:07.164611 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:08.089039      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:09.089296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:09.168120 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:10.089465      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:11.089631      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:11.171508 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:12.089779      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:13.089895      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:13.174718 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:14.090739      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:15.090880      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:15.177189 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:16.091496      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:17.091733      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:17.180557 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:18.092500      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:19.092735      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:19.183644 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:20.092920      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:21.093076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:21.186550 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:22.093329      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:23.093673      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:23.188831 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:24.093848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:25.094101      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:25.193517 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:26.094796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:27.095063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:27.196527 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:28.095492      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:29.095738      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:29.199075 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:30.096017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:31.096836      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:31.202674 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:32.097007      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:33.097272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:33.206015 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:34.097449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:35.097537      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:35.209813 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:36.097989      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:37.097828      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:37.213457 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:38.097978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:39.098196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:39.217500 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  E0923 08:52:40.098428      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:41.098531      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:52:41.220059 22 container_probe.go:1759] Get pod busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b in namespace container-probe-1110
  I0923 08:52:41.220104 22 container_probe.go:1763] Restart count of pod container-probe-1110/busybox-57520e3b-d53f-4caf-b27f-770bbbaa7f9b is now 1 (50.082476382s elapsed)
  STEP: deleting the pod @ 09/23/25 08:52:41.22
  I0923 08:52:41.233844 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1110" for this suite. @ 09/23/25 08:52:41.236
â€¢ [52.134 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/23/25 08:52:41.24
  I0923 08:52:41.240793 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename var-expansion @ 09/23/25 08:52:41.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:52:41.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:52:41.256
  STEP: creating the pod @ 09/23/25 08:52:41.257
  STEP: waiting for pod running @ 09/23/25 08:52:41.265
  E0923 08:52:42.098767      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:43.099028      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/23/25 08:52:43.271
  I0923 08:52:43.273698 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4944 PodName:var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:52:43.273736 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:52:43.273795 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4944/pods/var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/23/25 08:52:43.32
  I0923 08:52:43.322947 22 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4944 PodName:var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0923 08:52:43.322985 22 exec_util.go:64] ExecWithOptions: Clientset creation
  I0923 08:52:43.323043 22 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4944/pods/var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/23/25 08:52:43.363
  I0923 08:52:43.873828 22 pod_client.go:173] Successfully updated pod "var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e"
  STEP: waiting for annotated pod running @ 09/23/25 08:52:43.873
  STEP: deleting the pod gracefully @ 09/23/25 08:52:43.875
  I0923 08:52:43.875996 22 delete.go:62] Deleting pod "var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e" in namespace "var-expansion-4944"
  I0923 08:52:43.882570 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-40c2e23d-5ffd-4f1f-b765-86933701fa7e" to be fully deleted
  E0923 08:52:44.099832      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:45.099978      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:46.100154      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:47.100234      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:48.101285      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:49.101532      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:50.102576      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:51.102728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:52.103432      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:53.103698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:54.103822      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:55.103864      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:56.104753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:57.104839      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:58.105884      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:52:59.106146      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:00.107196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:01.107676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:02.108196      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:03.108467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:04.109310      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:05.109453      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:06.110536      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:07.110739      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:08.111610      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:09.111845      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:10.112026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:11.112186      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:12.113270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:13.113380      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:14.114270      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:15.114546      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:16.114852      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:17.115085      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:17.937025 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4944" for this suite. @ 09/23/25 08:53:17.94
â€¢ [36.704 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/23/25 08:53:17.944
  I0923 08:53:17.944889 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename services @ 09/23/25 08:53:17.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:17.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:17.959
  STEP: creating service in namespace services-338 @ 09/23/25 08:53:17.97
  STEP: creating service affinity-nodeport in namespace services-338 @ 09/23/25 08:53:17.97
  STEP: creating replication controller affinity-nodeport in namespace services-338 @ 09/23/25 08:53:17.982
  I0923 08:53:17.990594      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-338, replica count: 3
  E0923 08:53:18.115739      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:19.116226      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:20.116357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:21.041439      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 08:53:21.048129 22 resource.go:361] Creating new exec pod
  E0923 08:53:21.117118      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:22.117388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:23.118446      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:24.071341 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0923 08:53:24.118469      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:24.199714 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.98.47.55) 80 port [tcp/http] succeeded!\n"
  I0923 08:53:24.199767 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:53:24.199920 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.47.55 80'
  I0923 08:53:24.306342 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.47.55 80\nConnection to 10.98.47.55 80 port [tcp/http] succeeded!\n"
  I0923 08:53:24.306401 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:53:24.306574 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.4 32717'
  I0923 08:53:24.418015 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.4 32717\nConnection to 172.19.1.4 32717 port [tcp/*] succeeded!\n"
  I0923 08:53:24.418068 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:53:24.418163 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717'
  E0923 08:53:25.118509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:26.118670      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:26.527258 22 builder.go:135] rc: 1
  I0923 08:53:26.527327 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.19.1.5 32717
  nc: connect to 172.19.1.5 port 32717 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:53:26.527420 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717'
  E0923 08:53:27.119147      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:28.119418      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:28.638809 22 builder.go:135] rc: 1
  I0923 08:53:28.638875 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.19.1.5 32717
  nc: connect to 172.19.1.5 port 32717 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:53:28.638973 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717'
  E0923 08:53:29.119638      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:30.119896      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:30.745607 22 builder.go:135] rc: 1
  I0923 08:53:30.745674 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.19.1.5 32717
  nc: connect to 172.19.1.5 port 32717 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:53:30.745772 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717'
  E0923 08:53:31.120400      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:32.120548      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:32.854925 22 builder.go:135] rc: 1
  I0923 08:53:32.854993 22 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 172.19.1.5 32717
  nc: connect to 172.19.1.5 port 32717 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0923 08:53:32.855083 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.19.1.5 32717'
  I0923 08:53:32.978789 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.19.1.5 32717\nConnection to 172.19.1.5 32717 port [tcp/*] succeeded!\n"
  I0923 08:53:32.978871 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0923 08:53:32.979077 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=services-338 exec execpod-affinitylm7bd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.19.1.4:32717/ ; done'
  E0923 08:53:33.121232      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:33.177157 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.19.1.4:32717/\n"
  I0923 08:53:33.177213 22 builder.go:147] stdout: "\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n\naffinity-nodeport-rn78n"
  I0923 08:53:33.177232 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177246 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177258 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177269 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177283 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177303 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177313 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177351 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177365 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177376 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177385 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177415 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177428 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177440 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177451 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177490 22 service.go:242] Received response from host: affinity-nodeport-rn78n
  I0923 08:53:33.177683 22 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-338, will wait for the garbage collector to delete the pods @ 09/23/25 08:53:33.19
  I0923 08:53:33.248831 22 resources.go:139] Deleting ReplicationController affinity-nodeport took: 4.578889ms
  I0923 08:53:33.348982 22 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.145669ms
  E0923 08:53:34.122330      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:35.122425      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:35.972226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-338" for this suite. @ 09/23/25 08:53:35.974
â€¢ [18.037 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 09/23/25 08:53:35.981
  I0923 08:53:35.981578 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:53:35.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:35.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:35.993
  STEP: validating api versions @ 09/23/25 08:53:35.994
  I0923 08:53:35.995011 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-1889 api-versions'
  I0923 08:53:36.054742 22 builder.go:146] stderr: ""
  I0923 08:53:36.054796 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0923 08:53:36.054933 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1889" for this suite. @ 09/23/25 08:53:36.075
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/23/25 08:53:36.083
  I0923 08:53:36.083054 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/25 08:53:36.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:36.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:36.096
  STEP: Waiting for pod completion @ 09/23/25 08:53:36.106
  E0923 08:53:36.123006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:37.123388      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:38.124357      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:38.124439 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1420" for this suite. @ 09/23/25 08:53:38.127
â€¢ [2.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/23/25 08:53:38.132
  I0923 08:53:38.132847 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:53:38.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:38.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:38.148
  STEP: Creating configMap with name configmap-projected-all-test-volume-5188b139-8411-4c3c-b463-72620fce7572 @ 09/23/25 08:53:38.15
  STEP: Creating secret with name secret-projected-all-test-volume-5a2141be-0086-4f3b-a681-593437c0a69e @ 09/23/25 08:53:38.154
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/23/25 08:53:38.158
  W0923 08:53:38.169144      22 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0923 08:53:39.124556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:40.124701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:53:40.176
  I0923 08:53:40.178141 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod projected-volume-ee663ae4-0d32-4ad7-ba38-f431cf9129ca container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:53:40.182
  I0923 08:53:40.196548 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3820" for this suite. @ 09/23/25 08:53:40.198
â€¢ [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/23/25 08:53:40.204
  I0923 08:53:40.204112 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:53:40.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:40.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:40.221
  STEP: Setting up server cert @ 09/23/25 08:53:40.249
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:53:40.759
  STEP: Deploying the webhook pod @ 09/23/25 08:53:40.764
  STEP: Wait for the deployment to be ready @ 09/23/25 08:53:40.777
  I0923 08:53:40.789732 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:53:41.125312      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:42.125509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:53:42.798
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:53:42.812
  E0923 08:53:43.125735      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:53:43.812364 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/23/25 08:53:43.817
  STEP: create a pod @ 09/23/25 08:53:43.838
  E0923 08:53:44.126313      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:45.126560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/23/25 08:53:45.85
  I0923 08:53:45.850749 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=webhook-3837 attach --namespace=webhook-3837 to-be-attached-pod -i -c=container1'
  I0923 08:53:45.935065 22 builder.go:135] rc: 1
  I0923 08:53:45.989970 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3837" for this suite. @ 09/23/25 08:53:45.996
  STEP: Destroying namespace "webhook-markers-5711" for this suite. @ 09/23/25 08:53:46.01
â€¢ [5.812 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/23/25 08:53:46.015
  I0923 08:53:46.015972 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename subpath @ 09/23/25 08:53:46.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:53:46.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:53:46.032
  STEP: Setting up data @ 09/23/25 08:53:46.034
  STEP: Creating pod pod-subpath-test-configmap-4pw6 @ 09/23/25 08:53:46.053
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/25 08:53:46.053
  E0923 08:53:46.127294      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:47.127449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:48.128300      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:49.128488      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:50.129326      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:51.129526      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:52.130639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:53.130889      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:54.130976      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:55.131058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:56.131756      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:57.131997      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:58.132633      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:53:59.132894      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:00.133946      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:01.134076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:02.134235      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:03.134346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:04.135057      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:05.135182      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:06.136058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:07.136387      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:08.137189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:09.137345      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:54:10.1
  I0923 08:54:10.103021 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-subpath-test-configmap-4pw6 container test-container-subpath-configmap-4pw6: <nil>
  STEP: delete the pod @ 09/23/25 08:54:10.107
  STEP: Deleting pod pod-subpath-test-configmap-4pw6 @ 09/23/25 08:54:10.119
  I0923 08:54:10.119087 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-4pw6" in namespace "subpath-76"
  I0923 08:54:10.120865 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-76" for this suite. @ 09/23/25 08:54:10.123
â€¢ [24.114 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/23/25 08:54:10.129
  I0923 08:54:10.129838 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename deployment @ 09/23/25 08:54:10.131
  E0923 08:54:10.137606      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:10.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:10.141
  I0923 08:54:10.143233 22 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0923 08:54:10.167759 22 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0923 08:54:10.172800 22 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0923 08:54:11.137825      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:12.138050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:12.178295 22 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0923 08:54:12.180192 22 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0923 08:54:12.188739 22 deployment.go:314] Updating deployment test-recreate-deployment
  I0923 08:54:12.188792 22 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0923 08:54:12.286201 22 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8777",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4049a58c-3eb5-4a8d-bf75-72c061fa0d00",
      ResourceVersion: (string) (len=5) "36677",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894214450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0923 08:54:12.290161 22 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8777",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8db6154-3d53-4aa7-aff0-096ecfb0f4b7",
      ResourceVersion: (string) (len=5) "36674",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894214452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4049a58c-3eb5-4a8d-bf75-72c061fa0d00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 34 39 61 35  38 63 2d 33 65 62 35 2d  |\"4049a58c-3eb5-|
              00000120  34 61 38 64 2d 62 66 37  35 2d 37 32 63 30 36 31  |4a8d-bf75-72c061|
              00000130  66 61 30 64 30 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fa0d00\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:54:12.291228 22 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0923 08:54:12.291667 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8777",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc29d73f-87cc-439f-b539-05dbffe1407a",
      ResourceVersion: (string) (len=5) "36666",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894214450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4049a58c-3eb5-4a8d-bf75-72c061fa0d00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 34 39 61 35  38 63 2d 33 65 62 35 2d  |\"4049a58c-3eb5-|
              00000120  34 61 38 64 2d 62 66 37  35 2d 37 32 63 30 36 31  |4a8d-bf75-72c061|
              00000130  66 61 30 64 30 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fa0d00\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0923 08:54:12.295021 22 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-t7wxd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-t7wxd",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-8777",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d83c012b-9010-48f4-b690-816c54dfe2fb",
      ResourceVersion: (string) (len=5) "36678",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894214452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "f8db6154-3d53-4aa7-aff0-096ecfb0f4b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  64 62 36 31 35 34 2d 33  |d\":\"f8db6154-3|
              00000090  64 35 33 2d 34 61 61 37  2d 61 66 66 30 2d 30 39  |d53-4aa7-aff0-09|
              000000a0  36 65 63 66 62 30 66 34  62 37 5c 22 7d 22 3a 7b  |6ecfb0f4b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jt4tb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jt4tb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=11) "ckp-cncf-w1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894214452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "172.19.1.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "172.19.1.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894214452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jt4tb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0923 08:54:12.298692 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8777" for this suite. @ 09/23/25 08:54:12.301
â€¢ [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/23/25 08:54:12.306
  I0923 08:54:12.306470 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename webhook @ 09/23/25 08:54:12.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:12.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:12.319
  STEP: Setting up server cert @ 09/23/25 08:54:12.335
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/25 08:54:12.925
  STEP: Deploying the webhook pod @ 09/23/25 08:54:12.931
  STEP: Wait for the deployment to be ready @ 09/23/25 08:54:12.945
  I0923 08:54:12.951904 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 08:54:13.138201      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:14.138296      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:14.958574 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:54:15.138966      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:16.139075      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:16.961387 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:54:17.139696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:18.139940      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:18.961305 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:54:19.140692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:20.140826      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:20.961381 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 23, 8, 54, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0923 08:54:21.141790      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:22.142073      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/25 08:54:22.961
  STEP: Verifying the service has paired with the endpoint @ 09/23/25 08:54:22.974
  E0923 08:54:23.142459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:23.974783 22 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/23/25 08:54:23.979
  STEP: verifying the mutating webhook match conditions @ 09/23/25 08:54:23.986
  STEP: updating the mutating webhook match conditions @ 09/23/25 08:54:23.988
  STEP: verifying the mutating webhook match conditions @ 09/23/25 08:54:23.996
  I0923 08:54:24.054214 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5321" for this suite. @ 09/23/25 08:54:24.061
  STEP: Destroying namespace "webhook-markers-2610" for this suite. @ 09/23/25 08:54:24.072
â€¢ [11.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/23/25 08:54:24.079
  I0923 08:54:24.079092 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename tables @ 09/23/25 08:54:24.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:24.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:24.09
  I0923 08:54:24.095162 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0923 08:54:24.142555      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "tables-9957" for this suite. @ 09/23/25 08:54:24.16
â€¢ [0.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 09/23/25 08:54:24.166
  I0923 08:54:24.166741 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename kubectl @ 09/23/25 08:54:24.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:24.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:24.183
  STEP: creating the pod @ 09/23/25 08:54:24.185
  I0923 08:54:24.185864 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 create -f -'
  I0923 08:54:24.360917 22 builder.go:146] stderr: ""
  I0923 08:54:24.360971 22 builder.go:147] stdout: "pod/pause created\n"
  E0923 08:54:25.142726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:26.142885      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/23/25 08:54:26.368
  I0923 08:54:26.369021 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 label pods pause testing-label=testing-label-value'
  I0923 08:54:26.439900 22 builder.go:146] stderr: ""
  I0923 08:54:26.439949 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/23/25 08:54:26.439
  I0923 08:54:26.440041 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 get pod pause -L testing-label'
  I0923 08:54:26.500505 22 builder.go:146] stderr: ""
  I0923 08:54:26.500548 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/23/25 08:54:26.5
  I0923 08:54:26.500737 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 label pods pause testing-label-'
  I0923 08:54:26.569064 22 builder.go:146] stderr: ""
  I0923 08:54:26.569269 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/23/25 08:54:26.569
  I0923 08:54:26.569502 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 get pod pause -L testing-label'
  I0923 08:54:26.633198 22 builder.go:146] stderr: ""
  I0923 08:54:26.633241 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/23/25 08:54:26.633
  I0923 08:54:26.633652 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 delete --grace-period=0 --force -f -'
  I0923 08:54:26.700895 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0923 08:54:26.700940 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0923 08:54:26.701117 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 get rc,svc -l name=pause --no-headers'
  I0923 08:54:26.772269 22 builder.go:146] stderr: "No resources found in kubectl-748 namespace.\n"
  I0923 08:54:26.772319 22 builder.go:147] stdout: ""
  I0923 08:54:26.772382 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=kubectl-748 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0923 08:54:26.832343 22 builder.go:146] stderr: ""
  I0923 08:54:26.832392 22 builder.go:147] stdout: ""
  I0923 08:54:26.832639 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-748" for this suite. @ 09/23/25 08:54:26.835
â€¢ [2.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/23/25 08:54:26.843
  I0923 08:54:26.843238 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename configmap @ 09/23/25 08:54:26.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:26.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:26.864
  STEP: Creating configMap with name configmap-test-volume-7c860c3e-fdc7-4d28-8d83-22ba84f5a48d @ 09/23/25 08:54:26.867
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:54:26.871
  E0923 08:54:27.143011      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:28.143163      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:29.143361      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:30.143475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:54:30.884
  I0923 08:54:30.886830 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-configmaps-8834fb24-61b5-439d-bafd-0646bb367aa7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:54:30.89
  I0923 08:54:30.902012 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5417" for this suite. @ 09/23/25 08:54:30.904
â€¢ [4.067 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/23/25 08:54:30.909
  I0923 08:54:30.909813 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename sysctl @ 09/23/25 08:54:30.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:30.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:30.925
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/23/25 08:54:30.927
  I0923 08:54:30.930747 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4493" for this suite. @ 09/23/25 08:54:31.005
â€¢ [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/23/25 08:54:31.011
  I0923 08:54:31.011732 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:54:31.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:31.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:31.075
  STEP: Creating secret with name projected-secret-test-7ad26ac0-92c0-4557-8287-df2785922ac9 @ 09/23/25 08:54:31.077
  STEP: Creating a pod to test consume secrets @ 09/23/25 08:54:31.083
  E0923 08:54:31.144250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:32.144382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:33.145394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:34.145573      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:54:35.099
  I0923 08:54:35.100966 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-secrets-5cea36f3-dd66-4473-819b-79d63cedb0d0 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/25 08:54:35.105
  I0923 08:54:35.118085 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-338" for this suite. @ 09/23/25 08:54:35.12
â€¢ [4.113 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/23/25 08:54:35.124
  I0923 08:54:35.124789 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:54:35.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:54:35.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:54:35.137
  STEP: Creating pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113 @ 09/23/25 08:54:35.14
  E0923 08:54:35.145611      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:36.146004      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:37.146063      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 08:54:37.151
  I0923 08:54:37.153199 22 container_probe.go:1749] Initial restart count of pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 is 0
  I0923 08:54:37.154869 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:38.146195      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:39.146415      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:39.158263 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:40.146630      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:41.147648      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:41.161118 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:42.148110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:43.148356      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:43.164369 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:44.148537      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:45.148697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:45.167172 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:46.149423      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:47.149719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:47.170391 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:48.150474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:49.150676      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:49.173549 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:50.151565      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:51.152679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:51.176295 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:52.153272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:53.153528      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:53.179640 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:54.153668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:55.153760      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:55.182680 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:56.153921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:57.154008      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:57.185761 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:54:58.154789      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:54:59.155046      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:54:59.188903 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:00.155925      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:01.156677      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:01.192301 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:02.156806      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:03.156992      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:03.195689 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:04.157165      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:05.157306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:05.198995 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:06.158158      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:07.158261      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:07.201963 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:08.159058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:09.159314      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:09.205007 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:10.160065      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:11.160690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:11.208520 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:12.161085      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:13.161264      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:13.212236 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:14.161421      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:15.161568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:15.215333 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:16.162552      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:17.162750      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:17.218724 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:18.163495      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:19.163771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:19.221815 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:20.163860      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:21.164757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:21.225377 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:22.164919      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:23.165068      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:23.229704 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:24.165625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:25.165758      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:25.232611 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:26.166703      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:27.166982      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:27.235689 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:28.167139      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:29.167269      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:29.239167 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:30.168214      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:31.168647      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:31.242223 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:32.168771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:33.168900      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:33.245446 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:34.169374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:35.169570      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:35.250069 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:36.170259      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:37.170399      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:37.253064 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:38.171113      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:39.171374      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:39.256053 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:40.171546      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:41.171772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:41.259475 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:42.171885      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:43.172076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:43.262645 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:44.172218      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:45.172362      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:45.266175 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:46.173449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:47.173721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:47.269535 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:48.174475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:49.174744      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:49.272454 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:50.175655      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:51.176690      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:51.275448 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:52.177433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:53.177694      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:53.278575 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:54.178467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:55.178650      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:55.281534 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:56.179132      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:57.179336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:57.285824 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:55:58.179759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:55:59.180015      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:55:59.288560 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:00.180150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:01.180407      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:01.293623 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:02.180692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:03.180729      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:03.296440 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:04.180930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:05.181223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:05.300445 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:06.181669      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:07.181920      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:07.303646 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:08.182668      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:09.182803      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:09.306748 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:10.183692      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:11.184746      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:11.309318 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:12.185189      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:13.185430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:13.312038 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:14.185625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:15.185863      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:15.316030 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:16.186085      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:17.186331      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:17.318985 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:18.186762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:19.186893      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:19.322550 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:20.187508      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:21.187652      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:21.325198 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:22.187775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:23.187893      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:23.328731 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:24.189019      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:25.189314      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:25.332384 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:26.189635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:27.189757      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:27.335519 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:28.190475      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:29.190623      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:29.338290 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:30.191274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:31.191425      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:31.341319 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:32.191577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:33.191843      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:33.344464 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:34.192350      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:35.192629      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:35.347475 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:36.192930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:37.193861      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:37.351548 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:38.193973      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:39.194187      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:39.354971 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:40.194339      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:41.194458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:41.358523 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:42.195538      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:43.195798      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:43.361525 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:44.196430      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:45.196705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:45.364725 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:46.197708      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:47.197935      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:47.367668 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:48.198102      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:49.198318      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:49.370894 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:50.198487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:51.198576      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:51.374658 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:52.199458      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:53.199702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:53.377717 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:54.199857      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:55.200079      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:55.381193 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:56.200276      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:57.200501      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:57.384483 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:56:58.200688      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:56:59.200916      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:56:59.387770 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:00.201081      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:01.201743      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:01.390370 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:02.201867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:03.202088      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:03.393909 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:04.202721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:05.202962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:05.396897 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:06.203726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:07.203931      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:07.399498 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:08.204105      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:09.204335      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:09.404127 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:10.204957      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:11.205696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:11.407629 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:12.205867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:13.206171      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:13.410768 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:14.206394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:15.206679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:15.413343 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:16.207529      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:17.207719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:17.416489 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:18.208272      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:19.208512      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:19.418755 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:20.208638      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:21.209662      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:21.421269 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:22.210050      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:23.210290      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:23.424021 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:24.210793      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:25.211040      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:25.426755 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:26.211726      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:27.211935      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:27.429761 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:28.212092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:29.212305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:29.433112 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:30.212459      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:31.212723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:31.436233 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:32.212862      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:33.213071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:33.438856 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:34.213338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:35.213627      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:35.442875 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:36.214680      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:37.214914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:37.445723 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:38.215078      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:39.215308      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:39.449207 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:40.215427      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:41.215615      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:41.452279 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:42.215742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:43.215941      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:43.455715 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:44.216487      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:45.216723      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:45.458455 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:46.217550      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:47.217721      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:47.461627 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:48.218366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:49.218578      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:49.464612 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:50.219444      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:51.219704      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:51.467174 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:52.219903      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:53.220055      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:53.469876 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:54.220632      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:55.220849      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:55.472928 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:56.221705      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:57.221928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:57.476194 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:57:58.221971      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:57:59.222184      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:57:59.478574 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:00.222389      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:01.222577      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:01.481170 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:02.222865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:03.223129      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:03.483736 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:04.223441      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:05.223671      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:05.488607 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:06.224682      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:07.224774      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:07.491753 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:08.225027      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:09.225247      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:09.495470 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:10.226341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:11.226579      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:11.501093 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:12.226823      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:13.227086      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:13.503674 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:14.227479      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:15.227730      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:15.506466 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:16.228556      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:17.228732      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:17.509520 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:18.229306      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:19.229534      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:19.512400 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:20.230162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:21.230348      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:21.514877 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:22.230679      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:23.230873      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:23.517654 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:24.231311      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:25.231549      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:25.520749 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:26.232634      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:27.232791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:27.523757 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:28.233549      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:29.233801      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:29.526649 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:30.234379      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:31.234575      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:31.529369 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:32.235102      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:33.235337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:33.532200 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:34.235892      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:35.236162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:35.535237 22 container_probe.go:1759] Get pod liveness-b3862472-7d1d-44d3-ade5-a43b595c6250 in namespace container-probe-9113
  E0923 08:58:36.236653      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:37.236564      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/23/25 08:58:37.535
  I0923 08:58:37.552365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9113" for this suite. @ 09/23/25 08:58:37.555
â€¢ [242.435 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/23/25 08:58:37.56
  I0923 08:58:37.560292 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename projected @ 09/23/25 08:58:37.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:58:37.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:58:37.575
  STEP: Creating configMap with name projected-configmap-test-volume-82a4c0ba-315e-4371-bbba-d73c2badbace @ 09/23/25 08:58:37.577
  STEP: Creating a pod to test consume configMaps @ 09/23/25 08:58:37.581
  E0923 08:58:38.236846      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:39.236973      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:40.237069      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:41.237404      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/25 08:58:41.596
  I0923 08:58:41.597972 22 output.go:207] Trying to get logs from node ckp-cncf-w1 pod pod-projected-configmaps-f19b92be-4fcb-412b-845b-0288cba1561a container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/25 08:58:41.61
  I0923 08:58:41.622737 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7284" for this suite. @ 09/23/25 08:58:41.625
â€¢ [4.072 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/23/25 08:58:41.632
  I0923 08:58:41.632175 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename secrets @ 09/23/25 08:58:41.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:58:41.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:58:41.696
  STEP: creating a secret @ 09/23/25 08:58:41.699
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/23/25 08:58:41.703
  STEP: patching the secret @ 09/23/25 08:58:41.705
  STEP: deleting the secret using a LabelSelector @ 09/23/25 08:58:41.713
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/23/25 08:58:41.719
  I0923 08:58:41.721704 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1516" for this suite. @ 09/23/25 08:58:41.725
â€¢ [0.116 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/23/25 08:58:41.748
  I0923 08:58:41.748256 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/25 08:58:41.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:58:41.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:58:41.762
  I0923 08:58:41.764173 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  E0923 08:58:42.237555      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/25 08:58:43.046
  I0923 08:58:43.046662 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4093 --namespace=crd-publish-openapi-4093 create -f -'
  I0923 08:58:43.123610 22 builder.go:146] stderr: ""
  I0923 08:58:43.123658 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5848-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0923 08:58:43.123716 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4093 --namespace=crd-publish-openapi-4093 delete e2e-test-crd-publish-openapi-5848-crds test-cr'
  I0923 08:58:43.191268 22 builder.go:146] stderr: ""
  I0923 08:58:43.191310 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5848-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0923 08:58:43.191361 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4093 --namespace=crd-publish-openapi-4093 apply -f -'
  E0923 08:58:43.237955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:43.268242 22 builder.go:146] stderr: ""
  I0923 08:58:43.268392 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5848-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0923 08:58:43.268608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4093 --namespace=crd-publish-openapi-4093 delete e2e-test-crd-publish-openapi-5848-crds test-cr'
  I0923 08:58:43.336824 22 builder.go:146] stderr: ""
  I0923 08:58:43.336875 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5848-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/23/25 08:58:43.336
  I0923 08:58:43.336971 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1987904613 --namespace=crd-publish-openapi-4093 explain e2e-test-crd-publish-openapi-5848-crds'
  I0923 08:58:43.398060 22 builder.go:146] stderr: ""
  I0923 08:58:43.398122 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5848-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0923 08:58:44.238099      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:44.622281 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4093" for this suite. @ 09/23/25 08:58:44.628
â€¢ [2.887 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/23/25 08:58:44.635
  I0923 08:58:44.636026 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename namespaces @ 09/23/25 08:58:44.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:58:44.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:58:44.653
  STEP: Creating namespace "e2e-ns-26r5b" @ 09/23/25 08:58:44.655
  I0923 08:58:44.663627 22 namespace.go:412] Namespace "e2e-ns-26r5b-2078" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-26r5b-2078" @ 09/23/25 08:58:44.663
  I0923 08:58:44.692636 22 namespace.go:435] Namespace "e2e-ns-26r5b-2078" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-26r5b-2078" @ 09/23/25 08:58:44.692
  I0923 08:58:44.698373 22 namespace.go:464] Namespace "e2e-ns-26r5b-2078" has []v1.FinalizerName{"kubernetes"}
  I0923 08:58:44.698519 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5229" for this suite. @ 09/23/25 08:58:44.701
  STEP: Destroying namespace "e2e-ns-26r5b-2078" for this suite. @ 09/23/25 08:58:44.705
â€¢ [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/23/25 08:58:44.71
  I0923 08:58:44.710604 22 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1987904613
  STEP: Building a namespace api object, basename container-probe @ 09/23/25 08:58:44.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/25 08:58:44.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/25 08:58:44.724
  STEP: Creating pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158 @ 09/23/25 08:58:44.726
  E0923 08:58:45.238305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:46.238466      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/25 08:58:46.744
  I0923 08:58:46.747181 22 container_probe.go:1749] Initial restart count of pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 is 0
  I0923 08:58:46.748917 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:47.238509      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:48.238759      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:48.752414 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:49.238900      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:50.239030      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:50.754871 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:51.239682      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:52.239917      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:52.757638 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:53.240110      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:54.240223      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:54.760244 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:55.240796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:56.240985      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:56.763216 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:57.242026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:58:58.242177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:58:58.769001 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:58:59.242341      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:00.242554      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:00.771706 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:01.243524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:02.243719      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:02.775259 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:03.243796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:04.244045      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:04.778744 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:05.244185      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:06.244449      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:06.781873 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:07.245541      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:08.245702      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:08.784266 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:09.245801      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:10.245899      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:10.786385 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:11.246040      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:12.246163      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:12.788851 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:13.246753      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:14.246878      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:14.794527 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:15.247093      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:16.247333      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:16.797702 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:17.248362      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:18.248574      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:18.800106 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:19.249695      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:20.249930      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:20.802858 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:21.250615      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:22.250820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:22.805618 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:23.251048      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:24.251305      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:24.808364 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:25.251996      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:26.252701      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:26.811994 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:27.253608      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:28.253696      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:28.814565 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:29.254138      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:30.254424      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:30.817160 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:31.254928      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:32.255071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:32.819872 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:33.255219      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:34.255355      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:34.823878 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:35.256274      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:36.256395      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:36.826968 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:37.256433      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:38.257054      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:38.830054 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:39.257162      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:40.257396      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:40.833343 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:41.258102      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:42.258215      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:42.835665 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:43.259200      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:44.259426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:44.838571 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:45.260139      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:46.261143      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:46.841523 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:47.262002      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:48.262217      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:48.844073 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:49.262612      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:50.262828      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:50.846818 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:51.263653      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:52.263762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:52.849684 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:53.263886      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:54.264112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:54.853168 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:55.264736      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:56.265809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:56.856170 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:57.266890      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 08:59:58.267176      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 08:59:58.858829 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 08:59:59.267289      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:00.267507      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:00.861510 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:01.268382      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:02.268537      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:02.864252 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:03.268713      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:04.268835      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:04.866924 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:05.269420      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:06.270502      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:06.870008 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:07.271206      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:08.271321      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:08.873505 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:09.271698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:10.271785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:10.877089 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:11.272697      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:12.272914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:12.880254 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:13.273745      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:14.273939      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:14.882661 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:15.274141      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:16.274352      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:16.885675 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:17.275092      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:18.275250      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:18.888257 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:19.275728      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:20.275975      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:20.891065 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:21.276760      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:22.276914      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:22.893884 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:23.277268      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:24.277494      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:24.896699 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:25.278229      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:26.278366      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:26.899623 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:27.279165      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:28.279338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:28.902145 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:29.279578      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:30.279809      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:30.904882 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:31.280674      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:32.280771      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:32.907832 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:33.281343      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:34.281481      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:34.910570 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:35.282040      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:36.282197      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:36.913756 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:37.282245      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:38.282477      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:38.916243 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:39.282620      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:40.282831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:40.919055 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:41.283698      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:42.283831      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:42.921864 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:43.284207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:44.284405      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:44.924564 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:45.285026      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:46.285216      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:46.927955 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:47.285338      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:48.285568      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:48.930714 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:49.286177      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:50.286337      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:50.933411 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:51.288087      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:52.288317      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:52.936422 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:53.288952      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:54.289083      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:54.939268 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:55.289837      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:56.290752      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:56.942433 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:57.291820      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:00:58.291972      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:00:58.945255 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:00:59.292848      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:00.293091      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:00.948135 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:01.293635      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:02.293833      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:02.951006 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:03.294403      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:04.295346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:04.954644 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:05.296029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:06.296239      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:06.957778 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:07.297284      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:08.297542      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:08.960418 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:09.297748      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:10.297962      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:10.963747 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:11.298150      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:12.298319      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:12.966503 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:13.299017      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:14.299268      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:14.969648 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:15.300112      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:16.300333      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:16.972878 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:17.301346      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:18.301648      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:18.975493 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:19.301772      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:20.302006      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:20.978646 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:21.302087      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:22.302358      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:22.981390 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:23.302791      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:24.303073      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:24.984159 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:25.303754      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:26.303900      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:26.988261 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:27.304808      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:28.305058      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:28.991238 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:29.305775      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:30.305929      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:30.994213 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:31.306742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:32.306882      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:32.997231 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:33.307671      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:34.307796      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:34.999707 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:35.308059      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:36.308240      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:37.002572 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:37.309076      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:38.309205      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:39.006035 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:39.309441      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:40.309467      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:41.008669 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:41.310188      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:42.310318      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:43.013518 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:43.311035      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:44.311268      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:45.017050 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:45.311474      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:46.312316      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:47.020550 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:47.312955      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:48.313211      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:49.023424 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:49.313872      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:50.314117      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:51.026520 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:51.314867      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:52.315029      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:53.029487 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:53.315968      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:54.316207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:55.032068 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:55.316422      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:56.316740      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:57.035398 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:57.316804      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:01:58.316921      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:01:59.038248 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:01:59.317661      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:00.317776      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:01.040801 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:01.318394      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:02.318524      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:03.043860 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:03.319426      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:04.319573      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:05.046748 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:05.320207      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:06.321056      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:07.050321 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:07.321762      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:08.321917      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:09.053075 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:09.322554      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:10.322865      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:11.056126 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:11.323489      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:12.323788      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:13.058910 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:13.324498      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:14.324742      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:15.061615 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:15.324943      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:16.325128      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:17.065709 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:17.326079      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:18.326898      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:19.069163 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:19.327641      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:20.327776      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:21.072093 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:21.328553      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:22.328720      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:23.075151 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:23.329639      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:24.329785      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:25.077990 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:25.330393      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:26.330712      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:27.080983 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:27.331379      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:28.331625      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:29.084296 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:29.332644      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:30.332879      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:31.086943 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:31.333427      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:32.333706      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:33.089991 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:33.334434      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:34.334555      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:35.092905 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:35.335292      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:36.336336      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:37.096039 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:37.336389      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:38.336674      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:39.098837 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:39.337172      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:40.337424      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:41.102074 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:41.338420      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:42.338560      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:43.105231 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:43.338876      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:44.339744      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0923 09:02:45.108713 22 container_probe.go:1759] Get pod test-grpc-f919b9b2-5319-4725-99b8-62cac0e8d362 in namespace container-probe-4158
  E0923 09:02:45.340071      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0923 09:02:46.340368      22 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/23/25 09:02:47.109
  I0923 09:02:47.131758 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4158" for this suite. @ 09/23/25 09:02:47.14
â€¢ [242.439 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0923 09:02:47.149905 22 suites.go:34] Running AfterSuite actions on node 1
  I0923 09:02:47.149935 22 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 411 of 6624 Specs in 6295.981 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6213 Skipped
PASS

Ginkgo ran 1 suite in 1h44m56.960000087s
Test Suite Passed
